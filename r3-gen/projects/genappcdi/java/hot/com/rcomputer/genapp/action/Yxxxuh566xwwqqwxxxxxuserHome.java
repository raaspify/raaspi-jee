


/** Generated By EntityHome.java.ftl on 26-May-2024 9:52:17 PM
*Entity Home
*parameters passed: action.package and model.package
*/

package com.rcomputer.genapp.action;
import com.rcomputer.genapp.model.*;
import org.apache.deltaspike.data.api.AbstractEntityRepository;
import org.apache.deltaspike.data.api.Repository;
import org.picketlink.Identity;
import org.picketlink.credential.DefaultLoginCredentials;
import org.picketlink.idm.IdentityManagementException;
import org.picketlink.authentication.AuthenticationException;
import org.picketlink.common.exceptions.PicketLinkException;

import java.math.BigDecimal;
import java.math.RoundingMode;
import java.util.Date;
import java.util.Calendar;
import java.util.Locale;
import java.util.Currency;
import java.util.Collection;
import java.lang.String;
import java.lang.StringBuilder;
import java.text.SimpleDateFormat;
import java.text.NumberFormat;
import javax.faces.application.FacesMessage;
import javax.faces.event.ValueChangeEvent;
import javax.faces.model.SelectItem;
import javax.faces.model.SelectItemGroup;
import javax.annotation.PostConstruct;
import javax.faces.view.ViewScoped;
import javax.inject.Inject;
import javax.transaction.Transactional;
import javax.faces.event.ActionEvent;
import javax.inject.Named;
import javax.enterprise.inject.Instance;
import javax.faces.event.AjaxBehaviorEvent;
import java.util.Iterator;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import javax.persistence.*;
import javax.faces.context.ExternalContext;
import javax.faces.context.FacesContext;
import javax.faces.component.UIComponent;
import javax.faces.validator.ValidatorException;
import java.io.IOException;
import java.io.OutputStream;
 import java.io.StringReader;
 import java.io.InputStreamReader;

import java.io.FileWriter;
import java.io.BufferedWriter;
import java.io.Serializable;
import java.io.Writer;

import java.nio.charset.StandardCharsets;
import java.nio.file.Paths;
import java.nio.file.Files;
import java.nio.file.Path;


import java.util.logging.Logger;
import java.util.ResourceBundle;



//move these under genCandidate
//import java.io.File; model already has File class, use qualified java.io.File instead of import
import java.io.StringWriter;
import org.apache.tools.ant.Project;
import org.apache.commons.beanutils.BeanUtils;
import org.apache.commons.text.StringEscapeUtils;
import org.apache.tools.ant.ProjectHelper;
import javax.servlet.Servlet;
import javax.servlet.ServletContext;
import javax.servlet.ServletException;
import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import java.util.HashMap;
import java.util.Map;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.servlet.http.Part;




 import java.security.MessageDigest;
 import   org.apache.commons.codec.binary.Hex;
import com.sendgrid.smtpapi.SMTPAPI;
import javax.mail.BodyPart;
import javax.mail.MessagingException;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;
import javax.mail.internet.MimeUtility;
import com.outjected.email.api.ContentDisposition;
import com.outjected.email.api.EmailMessage;
import com.outjected.email.api.MailMessage;
import com.rcomputer.genapp.action.SessionConfig;
import com.outjected.email.api.MessagePriority;
import com.outjected.email.api.SendFailedException;
import com.rcomputer.genapp.action.MailMessageImpl;
import com.rcomputer.genapp.action.SimpleMailConfig;
import com.outjected.email.impl.attachments.URLAttachment;
import com.outjected.email.impl.templating.freemarker.FreeMarkerTemplate;
import com.outjected.email.impl.util.EmailAttachmentUtil;
import com.outjected.email.impl.util.MailTestUtil;
import com.outjected.email.impl.util.MessageConverter;
import com.google.common.io.Resources;



 import java.awt.image.BufferedImage;
 import java.awt.Graphics2D;
 import java.io.ByteArrayInputStream;
 import java.io.ByteArrayOutputStream;
 import javax.imageio.ImageIO;
 import net.coobird.thumbnailator.*;
 import org.jsoup.Jsoup;
 //put conditional import
 import org.jsoup.nodes.Document;
 import org.jsoup.nodes.Element;
 import org.jsoup.select.Elements;
 import org.jsoup.safety.Whitelist;
 import org.jsoup.nodes.TextNode;
 import org.jsoup.nodes.Attributes; 
 import org.jsoup.nodes.Attribute; 
 import java.net.URL;
 import java.io.InputStream;
 import java.io.OutputStream;



//assign is used to be able to add import dynamically
import com.rcomputer.genapp.model.*;


/* The following may not be needed, use generic fiedname from above like deliveryField
*/
//jay0 z3xxeqxxbvnxxxxxxxxxqtyordrd


  //jay2 zqxxbvnxxxxxxxxxqtyordrd
/*
 pojo ie entity has component properties for all composite key fields and entity proprties for all other fields.
 If an entity property is a foreign key then the property name will show the foreign entity not the actual field name.
 Use a filter like c2h.isManyToOne(property) and  column = property.columnIterator.next() to get the actual column name.
 or use parentPojo.identifierProperty.name to get the key field property name or use
 jay5 if !c2h.isCollection(property) && !isToOne(property)
  if c2j.isComponent(property)
   foreach componentProperty in property.value.propertyIterator in list.java.ftl
 
 If a persistence class has a foreign key more than once then the property name has the foreign entity plus Byxxxx to qualify
 The component properties have the identifierProperty iterator holding each key. 
 In case the key is non composite ie a single field then it will not be part of any component and will be part of properties
 Component properties seem to be tied to xxxId.java whereas non component properties are tied to xxx.java
 composite key fields declared via  Primary Key columns will appear only in component/xxId/java. If key field is a foreign 
 field then it is also declared via Foreign Key and will appear in entity properties/xxx.java. However in xxx.java
 the column name will not be shown, instead foreign Pojo class will be shown. Column iterator can be used to get
 the column name. If there are more than one fields pointing to same pojo then it will show as xxxByzz
 For those key fields which are foreign fields we need to generate validateandselect method. Currently generation 
 is hard coded by checking function of the pojo, it can be automated by xchecking component property columnname against entity ptoperty column name
 and if match the entity property name will be the pojo which needs to be validated and selected.
 The same logic can be used in editproperty.ftl to automate puting validateandSelect method call  
*/
/* 
in case of composite keys
*/ 
  /*
  In case of composite keys and key auto generated

  */

/**
* This is Action Home class 
* @author 3r Computer Systems  
* @version 2.0
*/

@Named("yxxxuh566xwwqqwxxxxxuserHome")
@ViewScoped
@Transactional
public  class Yxxxuh566xwwqqwxxxxxuserHome implements Serializable
{
   @Inject File file;
   @Inject R3RestClient r3RestClient;

   @Inject SqlAdminSupport sqlAdminSupport;
   @Inject SkinBean skinBean;
    @Inject CustomIdentity customIdentity; 
        @Inject
        private Identity identity;
	@Inject
	Xxxxch82bxhhhhhxxxxxeditlogHome xxxxch82bxhhhhhxxxxxeditlogHome;
	private Xxxxch82bxhhhhhxxxxxeditlog xxxxch82bxhhhhhxxxxxeditlog;


   


   @Inject 
   DefaultLoginCredentials credentials;
   //@Inject Authenticator authenticator; not sure what problem injecting may be due to @picketlink
   private boolean nextShow = false;
   boolean mailRelayOff=true; 
   Boolean smtpError=false;
    private FacesContext facesContext=null;
    private ServletContext context=null;
    private HttpServletRequest req=null;
    private HttpServletResponse resp=null;
    private String userAgentStrO=null;
    private String userAgentStr=null;
    private String userIP=null;
    private String urlName=null;
    private int urlPort=0;
    private ExternalContext externalContext=null;
    private HttpSession session=null;
    private String skinCode=null;
    private String replyToMatCode = null;
    private String replyToMatSidS = null;
    private String descriptionValue =null;
    private String startValue = null;
    private ResourceBundle bundle=null;
    int count = 0;
    int countD=0;
    int countB=0;
    private int excpCount=0;
    Boolean currConv=false;
    int importdone=0;
    String linesA[]=null;
	private final int limit_max_size = 10240000;
	private final String limit_type_file = "gif|jpg|png|jpeg|txt|csv|jpeg";
	private String path_to = "resources" + java.io.File.separator + "uploads";

    private int uploadsAvailable = 3;
    private int uploadsDoneCount = 0;
    private boolean autoUpload = false;
    private boolean useFlash = false;
    private Boolean show;
    private Part fileU;





    @PostConstruct
    public void initialize() {
    try{
      facesContext = FacesContext.getCurrentInstance(); 
      // bypass if came from servlet
     if(facesContext !=null){
      bundle = facesContext.getApplication().getResourceBundle(facesContext, "messages");
      ///SEVERITY_INFO, "any string in quotes"+e.getMessage+bundle.getString("id_password_not_matching")
      externalContext = facesContext.getExternalContext(); 

      context = (ServletContext)FacesContext.getCurrentInstance().getExternalContext().getContext(); 
       hostingAt=externalContext.getInitParameter("hostingAt");
       if(hostingAt==null || hostingAt.isEmpty()){
        log.severe("Error hostingAt from web.xml context: "+ hostingAt);
        hostingAt="lo";
       }
      req = (HttpServletRequest) externalContext.getRequest(); 
      session = req.getSession();
      urlName=((javax.servlet.http.HttpServletRequest) externalContext.getRequest()).getServerName();
      urlPort=((javax.servlet.http.HttpServletRequest) externalContext.getRequest()).getServerPort();
      resp = (HttpServletResponse) externalContext.getResponse(); 
      userAgentStrO = req.getHeader("user-agent");  
      userAgentStr = userAgentStrO;  
      userIP = req.getHeader("X-FORWARDED-FOR");  //get from req header
      if (userIP == null) {  
       userIP = req.getRemoteAddr();  //get from socket connection
      }
          urlIndex=urlName.lastIndexOf(".");
          if (urlIndex == -1){
            urlIndex=urlName.length();
          }       
          if (urlName.contains("www.")){
           owner2Code=urlName.substring(4,urlIndex);
          }else{
           owner2Code=urlName.substring(0,urlIndex);
          }
          //extract subdomain if used. if subdomain, masterSiteCode will have a value
         if(!customIdentity.getMasterSiteCode().isEmpty()){
          owner2Code=owner2Code.replace("."+customIdentity.getMasterSiteCode(),"");
         }
      if (userIP == null) {  
       userIP = req.getRemoteAddr();  
       if (userIP == null) {  
        userIP = "noIP";  
       }      
      }
      masterSiteCode=customIdentity.getMasterSiteCode();
      masterSiteUrl=customIdentity.getMasterSiteUrl();

      Arrays.fill(checkMapI, Boolean.FALSE);
      Arrays.fill(checkMapT, Boolean.FALSE);
     
     }
      ownerCode=customIdentity.getOwner();
      ownerCddCode=ownerCode.substring(ownerCode.length()-3,ownerCode.length() );
      productCode=customIdentity.getProduct();
      subProductCode=customIdentity.getSubProduct();

      if (customIdentity.getMobileView().length() > 0){
       userAgentStr=customIdentity.getMobileView();
      }
     }catch(Exception e){
      //log error
      excpCount=excpCount+1;
      FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
       FacesMessage.SEVERITY_ERROR,e.getMessage(),""));
    }


    }
   private Logger log = Logger.getLogger(Yxxxuh566xwwqqwxxxxxuser.class.getCanonicalName());
   //facesMessages being injected so  //FacesMessages.add can be used instead of  //FacesMessages.instance().add
   // using seam facesmessages allow using el expressions , java facesmessage does not allow EL expression
   @PersistenceContext(unitName = "genappcdi")
   private EntityManager entityManager;
   private Integer id=null;
   private String cartPoStatus="x";
   String timeStamp="";
   private boolean changeDone=false;
   private boolean skipValidation=false;
     private Boolean[] checkMapI=new Boolean[6];
     private Boolean[] checkMapT=new Boolean[6];
      private byte[] mailingBytes1 = null;
      private byte[] mailingBytes2 = null;
      private byte[] mailingBytes3 = null;
      private byte[] mailingBytes4 = null;
      private byte[] mailingBytes5 = null;
      private byte[] mailingBytes = null;
      private String mailingText = null;
      private String mailingText1 = null;
      private String mailingText2 = null;
      private String mailingText3 = null;
      private String mailingText4 = null;
      private String mailingText5 = null;
      private String mailingBytes1TypeMime = null;
      private String mailingBytes2TypeMime = null;
      private String mailingBytes3TypeMime = null;
      private String mailingBytes4TypeMime = null;
      private String mailingBytes5TypeMime = null;
      private String ownerCode="sss";
      private String subProductCode="";
      private String ownerCddCode="";
      private String productCode="";
      FacesMessage msg =new FacesMessage("");





   // cartpostatus =e comes from method extended_persist ie copynsave
   // cartPostatus also comes from cposts in method cartpersist
     // cartPostatus=cposts is o if add and currentCount holds last line #, u if remove, c if change for existing and for both c & u 
     // currentCount holds first time call or not to decide on initializing order totals to zeroes if first time
     // currentDetailline will be used to hold the value to pass to showrun()

	@Inject
	Yxxxuh566xwwqqwxxxxxuserList yxxxuh566xwwqqwxxxxxuserList;
        private Yxxxuh566xwwqqwxxxxxuser yxxxuh566xwwqqwxxxxxuserli;
	@Inject
	Yxxxuq591xwwqqhxxxxxrate1fHome yxxxuq591xwwqqhxxxxxrate1fHome;
	private Yxxxuq591xwwqqhxxxxxrate1f yxxxuq591xwwqqhxxxxxrate1f;
	@Inject
	Yxxxch575xwwqqhxxxxxuserproflHome yxxxch575xwwqqhxxxxxuserproflHome;
	private Yxxxch575xwwqqhxxxxxuserprofl yxxxch575xwwqqhxxxxxuserprofl;





	@Inject
	Trexuq244xwwqqhxxxxxcuordersHome trexuq244xwwqqhxxxxxcuordersHome;
	private Trexuq244xwwqqhxxxxxcuorders trexuq244xwwqqhxxxxxcuorders;
	@Inject
	Xoxxuq2b4xwwqqhxxxxxcuodetailsHome xoxxuq2b4xwwqqhxxxxxcuodetailsHome;
	@Inject
	Fpxxfq1a5xwwqqhxxxxxitemList fpxxfq1a5xwwqqhxxxxxitemList;
	private Fpxxfq1a5xwwqqhxxxxxitem fpxxfq1a5xwwqqhxxxxxitem;
	@Inject
	Yxxxuq1l1xwwqqhxxxxxresource_bundleHome yxxxuq1l1xwwqqhxxxxxresource_bundleHome;
	private Yxxxuq1l1xwwqqhxxxxxresource_bundle yxxxuq1l1xwwqqhxxxxxresource_bundle;
	@Inject
	Yxxxuq1r1xwwqqhxxxxxresourceHome yxxxuq1r1xwwqqhxxxxxresourceHome;
	private Yxxxuq1r1xwwqqhxxxxxresource yxxxuq1r1xwwqqhxxxxxresourceli;
	@Inject
	Yxxxch522xhhxxhxxxxxclientList yxxxch522xhhxxhxxxxxclientList;
	@Inject
	Yxxxuq591xwwqqhxxxxxrate1fList yxxxuq591xwwqqhxxxxxrate1fList;

	@Inject
	Fpxxfq1a5xwwqqhxxxxxitemHome fpxxfq1a5xwwqqhxxxxxitemHome;
	@Inject
	Fxxxuq111xwwqqhxxxxxaddressList fxxxuq111xwwqqhxxxxxaddressList;
	@Inject
	Jxxxbh400xwwqqhxxxxxemployeeList jxxxbh400xwwqqhxxxxxemployeeList;
	@Inject
	Jxxxuq201xwwqqhxxxxxcustomerList jxxxuq201xwwqqhxxxxxcustomerList;





    //@Inject
    //private StatusMessages statusMessages;
	//@Inject
	//private Renderer renderer;
        ///debug@Inject Authenticator authenticator;
	@Inject
	Yxxxuh566xwwqqwxxxxxuserHome yxxxuh566xwwqqwxxxxxuserHome;
	private Yxxxuh566xwwqqwxxxxxuser user;
	@Inject
	Yxxxch601xwwqqhxxxxxaccountHome yxxxch601xwwqqhxxxxxaccountHome;
	private Yxxxch601xwwqqhxxxxxaccount yxxxch601xwwqqhxxxxxaccount;
	@Inject
	Yrxxch511xhhxxhxxxxxoptionsHome yrxxch511xhhxxhxxxxxoptionsHome;
	private Yrxxch511xhhxxhxxxxxoptions yrxxch511xhhxxhxxxxxoptions;
	@Inject
	Yxxxch621xwwqqhxxxxxacperiodHome yxxxch621xwwqqhxxxxxacperiodHome;
	private Yxxxch621xwwqqhxxxxxacperiod yxxxch621xwwqqhxxxxxacperiod;
	@Inject
	Yxxxuq632xwwqqhxxxxxperioddatesHome yxxxuq632xwwqqhxxxxxperioddatesHome;
	private Yxxxuq632xwwqqhxxxxxperioddates yxxxuq632xwwqqhxxxxxperioddates;
	@Inject
	Yxxxch643xwwqqhxxxxxacintegrHome yxxxch643xwwqqhxxxxxacintegrHome;
	private Yxxxch643xwwqqhxxxxxacintegr yxxxch643xwwqqhxxxxxacintegr;
	@Inject
	Fxxxuq111xwwqqhxxxxxaddressHome fxxxuq111xwwqqhxxxxxaddressHome;
	private Fxxxuq111xwwqqhxxxxxaddress fxxxuq111xwwqqhxxxxxaddress;
	@Inject
	Yxxxch5a1xhhxxhxxxxxtruefalseHome yxxxch5a1xhhxxhxxxxxtruefalseHome;
	private Yxxxch5a1xhhxxhxxxxxtruefalse yxxxch5a1xhhxxhxxxxxtruefalse;
	@Inject
	Fxxxuq1bhxwwqqhxxxxxusagebyperiodsHome fxxxuq1bhxwwqqhxxxxxusagebyperiodsHome;
	private Fxxxuq1bhxwwqqhxxxxxusagebyperiods fxxxuq1bhxwwqqhxxxxxusagebyperiods;


    private String lostPasswordUserId;
    private String lostPasswordEmail;
    private String loginUserId;
    private String recoveredPasswordEmail;
    private String resetPassword;
    private boolean agreedToTermsOfUse = false;
    private String a0xxukuxbvxxxxxxxxxxid2;
    private boolean agreedToTermsOfUsefb = false;
    private String c4xxuxupivxxxxxxxxxxcurrpw2;
    private String signupas ="C";

    private String registrationScreenName;
    private String clientEmail;
    private String clientName;
    private String companyName;
    private String clientApplicationFunction;
    private String clientApplicationSubFunction="";
    private String clientApplicationSize;
    private String clientApplicationName="";
    private String clientUrlName=".raaspi.com";
    private String clientFullUrlName="";
    private String clientSerialNum;
    private Integer clientExpiryDays;
    private String  newUserLink;
    private String  newUserLink2;
    private boolean inRegistrationAndCreateUser=false;
    private boolean inSignupAndCreateUser=false;
    private boolean inDemoSignupAndCreateUser=false;
    private boolean inChangePassword=false;
    private boolean inRecoverPassword=false;
    private boolean inCreateUser=true;
    private String verify;

    private boolean changed;
    private Integer sid=0;
    private String enterprisecompcode="";
    private SimpleDateFormat s = new SimpleDateFormat("yyyy-MM-dd");

     private String headers ="";







       String product="";//make it public to share among methods
       int trialPeriod=14;//days
       String themeName="";
       String stepN=""; //appsumo


      //CustomIdentity customIdentity = (CustomIdentity)Component.getInstance(CustomIdentity.class); 
      //SkinBean skinBean = (SkinBean)Component.getInstance(SkinBean.class); 
      //ShoppingCartBean r3Cart = (ShoppingCartBean)Component.getInstance(ShoppingCartBean.class); 
      private boolean doRollUp=true;
      private String owner2Code="";
      private String masterSiteCode="";
      private String masterSiteUrl="";
      private String owner2CodeS="";
      private int urlIndex=0;
      int duplDropped=0;
      int importAdded=0;

     private BigDecimal keyedQuantity = new BigDecimal("1.0");
     private BigDecimal detailbaseamt = new BigDecimal("0.0");
     private BigDecimal detailbaseamtO = new BigDecimal("0.0");
     private BigDecimal totalbaseamt = new BigDecimal("0.0");
     private BigDecimal totaloutstanding = new BigDecimal("0.0");
     private BigDecimal totalamountin = new BigDecimal("0.0");
     private BigDecimal postingAmount = new BigDecimal("0.0");
     private BigDecimal chqAmount = new BigDecimal("0.0");
     private BigDecimal amountIn = new BigDecimal("0.0");
     private String chqVerbose="";
     private String tax1Cert="";
     private String tax2Cert="";
     private String tax3Cert="";
                BigDecimal cdisc=BigDecimal.ZERO;
                BigDecimal cselp=BigDecimal.ZERO;
                BigDecimal newOrdPrice=BigDecimal.ZERO;
        private BigDecimal change=BigDecimal.ZERO;//nov29 2919
	private BigDecimal totalmis = BigDecimal.ZERO;
	private BigDecimal totaldel = BigDecimal.ZERO;
	private BigDecimal totalqty = BigDecimal.ZERO;//totalxxxx,amountTotal means parent and includes all details
	private BigDecimal totaltax1 = BigDecimal.ZERO;
	private BigDecimal totaltax2 = BigDecimal.ZERO;
	private BigDecimal totaltax3 = BigDecimal.ZERO;
	private BigDecimal qtyOrdPrev = BigDecimal.ZERO;//
	private BigDecimal amountTotal = BigDecimal.ZERO;//amountTotal is sum of detaillt 
	private BigDecimal qtyTotal = BigDecimal.ZERO;//same as qtytotal or detailqty  then get rid of it
	private BigDecimal qtyTotalNew = BigDecimal.ZERO;
        private BigDecimal tax1RateValue=new BigDecimal("0.0");
        private BigDecimal tax2RateValue=new BigDecimal("0.0");
        private BigDecimal tax3RateValue=new BigDecimal("0.0");
        private BigDecimal tax1RateValueS=new BigDecimal("0.0");
        private BigDecimal tax2RateValueS=new BigDecimal("0.0");
        private BigDecimal tax3RateValueS=new BigDecimal("0.0");
        private BigDecimal tax1RateValueH=new BigDecimal("0.0");
        private BigDecimal tax2RateValueH=new BigDecimal("0.0");
        private BigDecimal tax3RateValueH=new BigDecimal("0.0");
        private BigDecimal detailLt = new BigDecimal("0.0");//is it same as amountTotal
        private BigDecimal detailLtO = new BigDecimal("0.0");
	private BigDecimal detailMis = BigDecimal.ZERO;
	private BigDecimal detailDel = BigDecimal.ZERO;
	private BigDecimal detailQty = BigDecimal.ZERO;
	private BigDecimal detailTax1 = BigDecimal.ZERO;
	private BigDecimal detailTax2 = BigDecimal.ZERO;
	private BigDecimal detailTax3 = BigDecimal.ZERO;
	private BigDecimal detailMisO = BigDecimal.ZERO;
	private BigDecimal detailDelO = BigDecimal.ZERO;
	private BigDecimal detailTax1O = BigDecimal.ZERO;
	private BigDecimal detailTax2O = BigDecimal.ZERO;
	private BigDecimal detailTax3O = BigDecimal.ZERO;
        BigDecimal qtyOrdO=BigDecimal.ZERO;
        String iShipCode="";//size of item
        String tShipCode="";//shipment mode for item


     	private boolean applyTax1 = false;
	private boolean applyTax2 = false;
	private boolean applyTax3 = false;

      String integrationAccountSet="";
      private BigDecimal temp = new BigDecimal("0.0");
      private String key="";
      private String subKey="";
      private String subKeyFirst="";
      private String slobkeyhash="";
      private String keysv="";
      // make it session variable later
      private int currentPeriod=1;
      private String divcode="";
      private String depcode="";
      private String accountn="";
      private String companycode="";
      private Calendar calendar = Calendar.getInstance();
      private Calendar calendare = Calendar.getInstance();
      private Calendar calendarly = Calendar.getInstance();
      private Date currbusdate = calendar.getTime();
      private Date dobSave = calendar.getTime();
      private int mnsorder=0;
      private int arSeqn=0;
      private int apSeqn=0;
      private int icSeqn=0;
      private int paSeqn=0;
      private int joSeqn=0;
      private int glSeqn=0;
     private int subarSeqn = 0;
      private int subapSeqn=0;
      private int subicSeqn=0;
      private int subpaSeqn=0;
      private int subjoSeqn=0;
      private int subglSeqn=0;

      private int mprinted=512;
      private int mdel=256;
      private int mmark=128;
      private int munmark=1023;
      private int mconsign=64;
      private int minvoiced=64;
      private int mnoMail=64;
      //  can be used for other status, use it for 1st entry in group,account or to mark a row as editable etc 
      //               where line field is not there 
      // mconsign should apply to item type not status ?? also means order invoiced
      private int mpartial=32;
      private int mshipped=32;
      private int mreceived=32;
      private int mpaid=16;
      // in case of venartha vpayment goes 16(paid)->8(closed by chq) but venartha itself becomes 16(paid by chq)
      private int mclosed=8;
      private int mreturn=4;//return,investigation,dispute,  
      private int mcopy=2;//copied or Picked from PicklList not customer picked
      private int mtoPay=2;//online order toPay status but items can be added at backOffice
      // copy means record was copied from another 
      //open becomes active ie some activity happened against the open record , mutually exclusive

      private int mactive=1;
      private int mordered=1;
      private int mopen=0;
      private int mquoted=0;
      // open means record created
      // use setXx(getXx()| mcopy)) to set copy flag leaving other bits as is 
      // use setXx(getXx()& _mcopy)) to clear copy flag leaving other bits as is 
      // the following shows which bit counting 0 as the right most bit 
      // used as if bitset(status,_matcive)
      // or as iif(bitset(status,_mmark),.t.,.f.)
      //_mactive=0  && 0th bit from right starting at 0 bit, value 1
      /***
      *transaction flow and status (in brackets) changes
      *Ecommerce:sales checkout by customer 
      *customer: checkout to order active(1)to and paypal payment/authorize toinvoice(64) and system changes order invoiced(64)
      *system:created order and invoice, got order shipment information from paypal and puts a hold payment or takes payment and creates payment record
      *agent:  convert invoice to shipping notclosed(8) invoiceto to shipment active(1) to Add B/O and and inform invoice dept and wait or set as shipped(32)
      *agent: if needed, process invoicing:invoice (64) and shipment B/O? investigate. Add B/O to invoice, inform shipment, wait. 
      *agent: convert invoice to payment:invoice (64) and its ordertoshipment ahipped(32) invoicetopayment(16?). Capture or capture with credit.
      *system: paymenttoorder,shipment,invoice,payment itself closed(8)  
      * 
      *Ecommerce:invoice payment by customer
      * order,invoices created by agent on phone order etc
      * option of payment online given to customer
      *customer: enters email,invoice amount and invoice number. If matches   
      *system: process the payment and creates payment record or puts a hold payment but no payment record?
      *agent: rest ie shipping, payment same as manual or Ecommerce sales check out
      *
      *Ecommerce:POS checkout by agent for customer (item entries can be by customer)
      *
      *Manual: Done by agent request over phone/email/case request folder
      *sales:  create quote active(1)
      *sales:  create order(1) from quote or manually create order active(1) 
      *shipping: notclosed(8) orderto to shipment active(1) to Add B/O and inform order and wait or shipped(32)
      *invoicing: invoice (64) and shipment B/O? investigate. Add B/O to invoice, inform shipment, wait. 
      *Payment:invoice (64) and its order to shipment shipped(32) invoice to payment(16?).Take payment and with credit.
      *payment: make order,shipment,invoice,payment itself closed(8)   

      *Ecommerce invoice payment
      *invoice can be from ecommerce or manually done 
      *customer: invoice (64) and invoice number and amount matches, then system creates payment(16?)
      *payment: make order,shipment,invoice,payment itself closed(8) ???  
      */


      private int _mopen=0;
      //0th bit ,numeric value 0
      private int _mactive=0;
      // && 0th bit ,numeric value 1
      private int _mcopy=1;
      //   && 1th bit ,numeric value 2
      private int _mreturn=2;
      // && 2nd bit                4 
      private int _mclosed=3;
      // && 3rd                    8 
      private int _mpaid=4;
      //   && 4th                   16
      private int _mpartial=5;
      private int _mshipped=5;
      // && 5th                   32 
      private int _mconsign=6;
      private int _minvoiced=6;
      private int _mnoMail=6;
      // && 6th                   64
      private int _mmark=7;
      //    && 7th                   128
      private int _mdel=8;
      //     && 8th                    256 
      private int _mprinted=9;
      // && 9th                   512 
     private boolean fromJsf =true;

     private boolean buttonPressed =false;
     private String buttonPressedLabel ="+ Upload";
     private String upLoadPurpose ="ad";
     private String discountType ="pe";
     private int useSeq=-1;

     private boolean hideChosen =false;
     private String lobDataType=" ";
     private String temps=" ";
     private Integer sidValue=0;
     private boolean entityUpdated =false;
     private boolean entityDeleted =false;
     private String eMailingAddress="";
     private String targetVendor="";
     private boolean mergedPayment=false;
     private String position="";
     private String overRideValue="";
     private String overRideValueS="";
     private String notesToPass="";
     private BigDecimal priceOverRide = new BigDecimal("0.0");
     private String yxxxuh566xwwqqwxxxxxuserFrom="";
     private String prefix=" ";
     private Integer tempCount=0;
     SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
     private boolean importChosen =false;
     private Yxxxuh566xwwqqwxxxxxuser instance=null;
     private String hostingAt = "lo";//op for openshift, aw for amazon aws, hero for heroku, lo for Local 
     //web.xml context param to define hosting env and use getServletContext().getInitParameter(hostingAt) 
     //
     

/*
 If same field from a foreign table is used more than once, it can cause duplicate entries for @Inject
 By is used to supress the duplicate
*/
     @Inject
    Jxxxbh400xwwqqhxxxxxemployeeHome jxxxbh400xwwqqhxxxxxemployeeHome;
    private Jxxxbh400xwwqqhxxxxxemployee jxxxbh400xwwqqhxxxxxemployee;
     @Inject
    Jxxxuq201xwwqqhxxxxxcustomerHome jxxxuq201xwwqqhxxxxxcustomerHome;
    private Jxxxuq201xwwqqhxxxxxcustomer jxxxuq201xwwqqhxxxxxcustomer;
     @Inject
    Jxxxuq300xwwqqhxxxxxvendorHome jxxxuq300xwwqqhxxxxxvendorHome;
    private Jxxxuq300xwwqqhxxxxxvendor jxxxuq300xwwqqhxxxxxvendor;
     @Inject
    Yxxxch522xhhxxhxxxxxclientHome yxxxch522xhhxxhxxxxxclientHome;
    private Yxxxch522xhhxxhxxxxxclient yxxxch522xhhxxhxxxxxclient;
//page parameters start here from not used, existing xxxxFrom used, delete below later -->
        private String from="";
	public void setFrom(String from) {
		this.from = from;
	}

	public String getFrom() {
           
		return from;
	}

//rest goes here
    public void setYxxxuh566xwwqqwxxxxxuserA0xxuobxbxxxxxxxxxxxsid(Integer id)
    {
      // setId will fetch the record and Instance will point to it
      setId(id);
      if(getInstance() !=null && !getInstance().getZzxxu2oxxhxxxxxxxxxxowner2().equals("SYSTEM") && !getInstance().getZzxxu2oxxhxxxxxxxxxxowner2().equals(owner2Code)){
       try{
        //different owner other than SYSTEM, dont let it go through, to do why exception not caught
        setId(0);
       } catch (Exception e) {
        log.severe("Error passing bad sid "+ e.getMessage());
        FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
          FacesMessage.SEVERITY_ERROR,bundle.getString("cannot")+" "+ bundle.getString("get")+" "+bundle.getString("record")+" "+e.getMessage(),""));


       }
      }
    }

    public Integer getYxxxuh566xwwqqwxxxxxuserA0xxuobxbxxxxxxxxxxxsid()
    {

        return (Integer) getId();
    }

   /**
    * Returns true if the id of the object managed is known.
    */
   public boolean isIdDefined()
   {
      return getId()!=null && !"".equals( getId() );
   }
     public boolean isFromJsf() {
         return fromJsf;//default true
     }

     public void setFromJsf(boolean fromJsf){
      this.fromJsf=fromJsf;
     }


    public boolean isChangeDone(){
     return changeDone;
    } 

    public void setChangeDone(boolean changeDone){
      this.changeDone=changeDone;
    } 


  protected Yxxxuh566xwwqqwxxxxxuser createInstance()

  {
      // jay add logic to check client flag for debug mode and bypass below if debug
      //setCreatedMessage(createValueExpression(""));
      //setDeletedMessage(createValueExpression(""));
      //setUpdatedMessage(createValueExpression(""));

       //Yxxxuh566xwwqqwxxxxxuser yxxxuh566xwwqqwxxxxxuser = new Yxxxuh566xwwqqwxxxxxuser();
       //scope for this method only
       Yxxxuh566xwwqqwxxxxxuser yxxxuh566xwwqqwxxxxxuser=null;
       if (instance == null) {
            try {
                instance = new Yxxxuh566xwwqqwxxxxxuser();
                yxxxuh566xwwqqwxxxxxuser=instance;

            }
            catch (Exception e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
                return null;
            }
       }else{
       //came to createInstance, but it may exists for some existing error conditions, so ignore and continue
            try {
                instance = new Yxxxuh566xwwqqwxxxxxuser();
                yxxxuh566xwwqqwxxxxxuser=instance;

            }
            catch (Exception e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
                return null;
            }
       

       }


   /*
   This is the place to preinitialize the entity variables to display in jsf pages
   */



  

  

  

  

  

  
          yxxxuh566xwwqqwxxxxxuser.setC4xxuxupivxxxxxxxxxxcurrpw("xxxx");

  
		yxxxuh566xwwqqwxxxxxuser.setC5xxcxxxbvxxxxxxxxxxexpiry(calendar.getTime());

  

  
		yxxxuh566xwwqqwxxxxxuser.setC7xxfxxxivxxxxxxxxxxtemporarypassword(false);

  

  

  




  

  

  

  

  

  

  

  

  

  



  
		yxxxuh566xwwqqwxxxxxuser.setZ1xxzzfxhhxxxxxxxxxxstatusfl(0);

  
		yxxxuh566xwwqqwxxxxxuser.setZ2xxcztxlxxxxxxxxxxxstatusfldt(calendar.getTime());

  
		yxxxuh566xwwqqwxxxxxuser.setZ3xxcxxxbvxxxxxxxxxxucurrcalda(calendar.getTime());

  
		yxxxuh566xwwqqwxxxxxuser.setZ4xxfxxxbvxxxxxxxxxxpreprocess(false);

  
		yxxxuh566xwwqqwxxxxxuser.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);

  
		yxxxuh566xwwqqwxxxxxuser.setZzxxu2oxxhxxxxxxxxxxowner2(owner2Code);
   return yxxxuh566xwwqqwxxxxxuser;
  }

	@Inject
	Yxxxuq1m1xwwqqqxxxxxclobdataHome yxxxuq1m1xwwqqqxxxxxclobdataHome;
	private Yxxxuq1m1xwwqqqxxxxxclobdata yxxxuq1m1xwwqqqxxxxxclobdata;
	private Yxxxuq1m1xwwqqqxxxxxclobdata yxxxuq1m1xwwqqqxxxxxclobdata2;
	@Inject
	Yxxxuq1m1xwwqqqxxxxxclobdataList yxxxuq1m1xwwqqqxxxxxclobdataList;


	@Inject
	Yxxxuq1n1xwwqqqxxxxxblobdataHome yxxxuq1n1xwwqqqxxxxxblobdataHome;
	private Yxxxuq1n1xwwqqqxxxxxblobdata yxxxuq1n1xwwqqqxxxxxblobdata;
	@Inject
	Yxxxuq1n1xwwqqqxxxxxblobdataList yxxxuq1n1xwwqqqxxxxxblobdataList;



      String msgb = "";
      byte[] bmsg = null;
      byte[] bmsgb = null;
     private String  startk1  = "";
     private String  endk1  = "";
     private String  startk2  = "";
     private String  endk2  = "";
     private String  startk3  = "";
     private String  endk3  = "";
	private Boolean dataIsClob = false;
	private Boolean dataIsBlob = false;




/**
* method pre-initializes entities and gets invoked via jsf f:viewAction  
*/    
    public void wire()
    {
// ManyToOne will capture the Foreign Key Fields and the foreign Entity Name
// 
   // if keyfield then populate lastxxxentity so that dropdown will show it if coming from list for update 
   //Jxxxbh400xwwqqhxxxxxemployee jxxxbh400xwwqqhxxxxxemployee=jxxxbh400xwwqqhxxxxxemployeeHome.getDefinedInstance(); use private variable
    if (this.instance != null && this.instance.getJxxxbh400xwwqqhxxxxxemployee() !=null){
     jxxxbh400xwwqqhxxxxxemployeeHome.setLastjxxxbh400xwwqqhxxxxxemployeeP(this.instance.getJxxxbh400xwwqqhxxxxxemployee().getA0xxuktxbvxxxxxxxxxxemployee());
    }

   // logic changed to get parent instance not instance itself if entity is item because parent and entity is same
     jxxxbh400xwwqqhxxxxxemployee=jxxxbh400xwwqqhxxxxxemployeeHome.getDefinedInstance();
     if ( jxxxbh400xwwqqhxxxxxemployee!=null ){
      getInstance().setJxxxbh400xwwqqhxxxxxemployee(jxxxbh400xwwqqhxxxxxemployee);
     }
   // if keyfield then populate lastxxxentity so that dropdown will show it if coming from list for update 
   //Jxxxuq201xwwqqhxxxxxcustomer jxxxuq201xwwqqhxxxxxcustomer=jxxxuq201xwwqqhxxxxxcustomerHome.getDefinedInstance(); use private variable
    if (this.instance != null && this.instance.getJxxxuq201xwwqqhxxxxxcustomer() !=null){
     jxxxuq201xwwqqhxxxxxcustomerHome.setLastjxxxuq201xwwqqhxxxxxcustomerP(this.instance.getJxxxuq201xwwqqhxxxxxcustomer().getA0xxukxxbvxxxxxxxxxxcustomer());
    }

   // logic changed to get parent instance not instance itself if entity is item because parent and entity is same
     jxxxuq201xwwqqhxxxxxcustomer=jxxxuq201xwwqqhxxxxxcustomerHome.getDefinedInstance();
     if ( jxxxuq201xwwqqhxxxxxcustomer!=null ){
      getInstance().setJxxxuq201xwwqqhxxxxxcustomer(jxxxuq201xwwqqhxxxxxcustomer);
     }
   // if keyfield then populate lastxxxentity so that dropdown will show it if coming from list for update 
   //Jxxxuq300xwwqqhxxxxxvendor jxxxuq300xwwqqhxxxxxvendor=jxxxuq300xwwqqhxxxxxvendorHome.getDefinedInstance(); use private variable
    if (this.instance != null && this.instance.getJxxxuq300xwwqqhxxxxxvendor() !=null){
     jxxxuq300xwwqqhxxxxxvendorHome.setLastjxxxuq300xwwqqhxxxxxvendorP(this.instance.getJxxxuq300xwwqqhxxxxxvendor().getA0xxukxxbvxxxxxxxxxxvendor());
    }

   // logic changed to get parent instance not instance itself if entity is item because parent and entity is same
     jxxxuq300xwwqqhxxxxxvendor=jxxxuq300xwwqqhxxxxxvendorHome.getDefinedInstance();
     if ( jxxxuq300xwwqqhxxxxxvendor!=null ){
      getInstance().setJxxxuq300xwwqqhxxxxxvendor(jxxxuq300xwwqqhxxxxxvendor);
     }
   // if keyfield then populate lastxxxentity so that dropdown will show it if coming from list for update 
   //Yxxxch522xhhxxhxxxxxclient yxxxch522xhhxxhxxxxxclient=yxxxch522xhhxxhxxxxxclientHome.getDefinedInstance(); use private variable
    if (this.instance != null && this.instance.getYxxxch522xhhxxhxxxxxclient() !=null){
     yxxxch522xhhxxhxxxxxclientHome.setLastyxxxch522xhhxxhxxxxxclientP(this.instance.getYxxxch522xhhxxhxxxxxclient().getA0xxukxxbvxxxxxxxxxxclientversion());
    }

   // logic changed to get parent instance not instance itself if entity is item because parent and entity is same
     yxxxch522xhhxxhxxxxxclient=yxxxch522xhhxxhxxxxxclientHome.getDefinedInstance();
     if ( yxxxch522xhhxxhxxxxxclient!=null ){
      getInstance().setYxxxch522xhhxxhxxxxxclient(yxxxch522xhhxxhxxxxxclient);
     }


    }
    
    public boolean isWired()
    {
     return true;
}

    
    public Yxxxuh566xwwqqwxxxxxuser getDefinedInstance()
    {
        if(isIdDefined()){
         if(getInstance() == null || getInstance().getA0xxuobxbxxxxxxxxxxxsid()==null){
          return null;///need to check when this happens, it seems can happen if the entity already exists and again calls getdefine
         }
         if(getInstance().getA0xxuobxbxxxxxxxxxxxsid().equals(getId())){
          return getInstance();
         }else{
          return yxxxuh566xwwqqwxxxxxuserList.getSidToEntity(getId());
         }
        }else{
         return null;
        }
    }

       private Map<Integer, Boolean> checked = new HashMap<Integer, Boolean>();

public Map<Integer, Boolean> getChecked() {  
return checked;  
}  

/**
* method is used to check the numeric status field value and return a descriptive value
* @param status
* int value
* @return a String value 
*/    

    public String describeStatus(int status){
    if (status==0){
     return "open";
    }
    
    if (status==1){
     return "active";
    }
    if (status==32){
     return "shipped";
    }
    if (status==64){
     return "invoiced";
    }
    if (status==8){
     return "closed";
    }
    if (status==16){
     return "paid";
    }



    return ""+status; 
   }

    public String markCompleted() {
           this.instance.setZ2xxcztxlxxxxxxxxxxxstatusfldt(Calendar.getInstance().getTime());
           // add logic to check elligble to close
           this.instance.setZ1xxzzfxhhxxxxxxxxxxstatusfl( mclosed );
     return "completed";
    }
    public String markCompletedAll() {
           // add logic put a series of query to get related records and mark them closed
           this.instance.setZ2xxcztxlxxxxxxxxxxxstatusfldt(Calendar.getInstance().getTime());
           // add logic to check elligble to close
           this.instance.setZ1xxzzfxhhxxxxxxxxxxstatusfl(mclosed );
     return "completedAll";
    }


	public String getEMailingAddress() {
              if (eMailingAddress ==null || eMailingAddress.isEmpty()){  
                //prefill if empty
              }
		return eMailingAddress;
	}
     
	public void setEMailingAddress(String eMailingAddress) {
		this.eMailingAddress = eMailingAddress;
	}

	public String getShowPosition() {
	  return position;
	}
     
	public void setShowPosition(String position) {
		this.position = position;
	}


	public String getValueOverRide() {
	  return overRideValue;
	}
     
	public void setValueOverRide(String overRideValue) {
		this.overRideValue = overRideValue;
	}


	public String getValueOverRideS() {
	  return overRideValueS;
	}
     
	public void setValueOverRideS(String overRideValueS) {
		this.overRideValueS = overRideValueS;
	}


	public BigDecimal getPriceOverRide() {
	  return priceOverRide;
	}
	public void setPriceOverRide(BigDecimal priceOverRide) {
		this.priceOverRide = priceOverRide;
	}

     

	public String getNotesToPass() {
		return notesToPass;
	}
     
	public void setNotesToPass(String notesToPass) {
		this.notesToPass = notesToPass;
	}



	public String getYxxxuh566xwwqqwxxxxxuserFrom() {
		return yxxxuh566xwwqqwxxxxxuserFrom;
	}
     
	public void setYxxxuh566xwwqqwxxxxxuserFrom(String entityFrom) {
		this.yxxxuh566xwwqqwxxxxxuserFrom = entityFrom;
	}



     public String getPrefix() {
      return prefix;
    }

   public void setPrefix(String prefix) {
     this.prefix=prefix;
   }
   public Boolean[] getCheckMapI() {
    return this.checkMapI;
   }
   public void setCheckMapI(Boolean[] checkMapI){
                this.checkMapI=checkMapI;
   }
   public Boolean[] getCheckMapT() {
    return this.checkMapT;
   }
        public void setCheckMapT(Boolean[] checkMapT){
                this.checkMapT=checkMapT;
        }
	public void setMailingImage1(byte[] mailingBytes) {
		this.mailingBytes1 = mailingBytes;
	}

	public byte[] getMailingImage2() {
           
		return mailingBytes2;
	}

	public void setMailingImage2(byte[] mailingBytes) {
		this.mailingBytes2 = mailingBytes;
	}
	public byte[] getMailingImage3() {
           
		return mailingBytes3;
	}

	public void setMailingImage3(byte[] mailingBytes) {
		this.mailingBytes3 = mailingBytes;
	}
	public byte[] getMailingImage4() {
           
		return mailingBytes4;
	}

	public void setMailingImage4(byte[] mailingBytes) {
		this.mailingBytes4 = mailingBytes;
	}

	public byte[] getMailingImage5() {
           
		return mailingBytes5;
	}

	public void setMailingImage5(byte[] mailingBytes) {
		this.mailingBytes5 = mailingBytes;
	}

	public void setMailingText(String mailingText) {
		this.mailingText = mailingText;
	}

	public String getMailingText1() {
           
		return mailingText1;
	}

	public void setMailingText1(String mailingText) {
		this.mailingText1 = mailingText;
	}

	public String getMailingText2() {
           
		return mailingText2;
	}

	public void setMailingText2(String mailingText) {
		this.mailingText2 = mailingText;
	}
	public String getMailingText3() {
           
		return mailingText3;
	}

	public void setMailingText3(String mailingText) {
		this.mailingText3 = mailingText;
	}
	public String getMailingText4() {
           
		return mailingText4;
	}
	public void setMailingText4(String mailingText) {
		this.mailingText4 = mailingText;
	}



	public String getMailingText5() {
           
		return mailingText5;
	}
	public void setMailingText5(String mailingText) {
		this.mailingText5 = mailingText;
	}

	public String getMailingImage1TypeMime() {
           
		return mailingBytes1TypeMime;
	}

	public void setMailingImage1TypeMime(String mailingTypeMime ) {
		this.mailingBytes1TypeMime = mailingTypeMime;
	}

	public String getMailingImage2TypeMime() {
           
		return mailingBytes2TypeMime;
	}

	public void setMailingImage2TypeMime(String mailingTypeMime ) {
		this.mailingBytes2TypeMime = mailingTypeMime;
	}
	public String getMailingImage3TypeMime() {
           
		return mailingBytes3TypeMime;
	}

	public void setMailingImage3TypeMime(String mailingTypeMime ) {
		this.mailingBytes3TypeMime = mailingTypeMime;
	}

	public String getMailingImage4TypeMime() {
           
		return mailingBytes4TypeMime;
	}

	public void setMailingImage4TypeMime(String mailingTypeMime ) {
		this.mailingBytes4TypeMime = mailingTypeMime;
	}

	public String getMailingImage5TypeMime() {
           
		return mailingBytes5TypeMime;
	}

	public void setMailingImage5TypeMime(String mailingTypeMime ) {
		this.mailingBytes5TypeMime = mailingTypeMime;
	}


    /**
    * The following method is proxy for file.fileUpload to allow using 
    * requestScoped for raaspi file class
    * @see "file class"
    * 
    */

    public String callFileUpload(String purpose){
     file.fileUpload(purpose);
     return "";
    }



    /**
    * The following method used r3restclient.xhtml to ???
    * @param args none bur flag restentity is set to true
    * @return String set by persist
    * @exception None 
    * @see "persist()"
    * 
    */

    public String persistRest() {
     restEntity=true;
     return persist();
    }



    public String persist(String owner2Code) {
     // override owner2Code temporarily and will get reset in next invocation of the bean
     owner2CodeS = this.owner2Code;
     this.owner2Code=owner2Code;
     // no need to rollup because all values are zero also avoids owner2Code issue for SYSTEM records
     doRollUp=false;
     return persist();
    }

/***
* creates key unless already exists as in from rest like shopify, or order created via cart or skip key validation
* key could be created from subkeys or auto generated based on reveng.xml
* based on entity needs fill up with entered values. Item will have type, taxable or not. 
* if txn then call showrunt > createcdetails and showrunt (updates parent instance values)
* persistrunt (puts values to totals for persist) , updatecustomer or vendor,
* common part begins
* set clob/blob pointer to the instance
* if child item then superupdate parent
* persist any new clob/blob, update existing clob/blob
* persist current instance and then details 
* seq starts from 0 and xxList.getNextSeqAvailable is used for next one. 
* seq -1 used  for storing removed image to allow undo
* or in case 3R-TOP-BKGR -1 means use color instead of any image
* qualifier 1 if shopping items. Non shopping or not related to items can have qualifier PIC etc.
*@param none, values passed through variables
*@see "extended_persist"
*/
    public String persist() {


      


       // we need to check whether validation has set bcontinue has false, if so clear it and return
       if (!bcontinue){
             bcontinue=true;
             return null;
       }



       if(!owner2Code.equals("SYSTEM") && !owner2Code.equals(masterSiteCode) && !getInstance().getZzxxu2oxxhxxxxxxxxxxowner2().equals(owner2Code)){
        FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
         FacesMessage.SEVERITY_ERROR,bundle.getString("If")+" "+bundle.getString("non")+" "+bundle.getString("owned")+" "+bundle.getString("record")+", "+bundle.getString("edit")+" "+ bundle.getString("not")+" "+bundle.getString("allowed"),""));
         log.severe("persist_error_owner "+owner2Code +" / "+ getInstance().getZzxxu2oxxhxxxxxxxxxxowner2());
         bcontinue=false;
         return null;
       }
       //instance already exists with site owner2, so change it now
       if(owner2Code.equals("SYSTEM")){
        this.instance.setZzxxu2oxxhxxxxxxxxxxowner2("SYSTEM");
       }

      slobkeyhash=" ";

          /* If AutoGen is yes all natural keys will get caught here.
           The following comment if not autogen
           non composite key , composite keys will not get detected here because the property name will show as id 
           The logic further below this will probe  the pojo.identifier to dig out the column values for flag k,n 
           this.instance.getA0xxukuxbvxxxxxxxxxxid()  this.instance.setA0xxukuxbvxxxxxxxxxxid
           org.hibernate.mapping.Column(id)
           2
          */
            if (this.instance.getA0xxukuxbvxxxxxxxxxxid()!=null){
             // check and disallow or warn if duplicate keyed key via validate, no need to check here again
             // except special cases where validation was not done like csv data
             this.instance.setA0xxukuxbvxxxxxxxxxxid(this.instance.getA0xxukuxbvxxxxxxxxxxid());
            }
          // commponentName -> yxxxuh566xwwqqwxxxxxuser
          // columnnamekey -> yxxxuh566xwwqqwxxxxxuserEmployeeOne
           //   +" jay 1"
          // commponentName -> yxxxuh566xwwqqwxxxxxuser
          // columnnamekey -> yxxxuh566xwwqqwxxxxxuserCustomerOne
           //   +" jay 1"
          // commponentName -> yxxxuh566xwwqqwxxxxxuser
          // columnnamekey -> yxxxuh566xwwqqwxxxxxuserVendorOne
           //   +" jay 1"
          // commponentName -> yxxxuh566xwwqqwxxxxxuser
          // columnnamekey -> yxxxuh566xwwqqwxxxxxuserClientOne
           //   +" jay 1"


        if (inSignupAndCreateUser){
          if(signupas.equals("C")){
           createCustomerAddressSignup();
           this.instance.setJxxxuq201xwwqqhxxxxxcustomer(jxxxuq201xwwqqhxxxxxcustomer);
          }else{
           if(signupas.equals("V")){
            createVendorAddressSignup();
            this.instance.setJxxxuq300xwwqqhxxxxxvendor(jxxxuq300xwwqqhxxxxxvendor);
           }else{
            FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
             FacesMessage.SEVERITY_ERROR,signupas+" "+bundle.getString("signup")+" "+bundle.getString("as")+" "+bundle.getString("invalid"),""));
                  bcontinue=false;
                 return null;
           }
          } 
        }
        else{
         if (inRegistrationAndCreateUser){
           // add logic to create (copy default) acperiod, divisiondates tables etc which are part of initializeall
           //copy default account,acintegr,acperiod,divisondates,options,artha?,control? values under owner=sss owner2=owner2 
           if(subKey.equals("admin")){
            //copyDefaultsToOwner2(); causing connection timeout, so moved to emailreadytoactivate method which is later called by SqlAdmin
            // be careful about owner2code since doregister invoked persist(owner2code) not persist()
           } 
            createClientRegister();
         }
         else{
          if (inDemoSignupAndCreateUser){
           createEmployeeCustomerAddressSignup("demo","","","",owner2Code,"");
           //requestType (Demo,eedeem,coupon,..) ,company name/ fname,lname, email, owner2,userId  
           //fname,lname,userId gets ignored only scrambled email is used in its place

           this.instance.setJxxxbh400xwwqqhxxxxxemployee(jxxxbh400xwwqqhxxxxxemployee);
           this.instance.setJxxxuq201xwwqqhxxxxxcustomer(jxxxuq201xwwqqhxxxxxcustomer);
          }
          else{          
          /** setup encrypted password when creating new user similar to reset password or register or signup   not sure where used
          */    
            if (inCreateUser){   
             setupPassword();
            }
          } 
         }
        }
                if (this.instance.getJxxxuq201xwwqqhxxxxxcustomer() == null && this.instance.getJxxxuq300xwwqqhxxxxxvendor() == null 
                     && this.instance.getJxxxbh400xwwqqhxxxxxemployee() == null){
                      FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                       FacesMessage.SEVERITY_WARN,bundle.getString("customer")+" "+bundle.getString("or")+" "+bundle.getString("vendor")+" "+bundle.getString("or")+" "+bundle.getString("employee")+" "+bundle.getString("link")+" "+bundle.getString("missing")+" "+bundle.getString("for")+" "+bundle.getString("user")+" "+this.instance.getA0xxukuxbvxxxxxxxxxxid(),""));

                      FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                       FacesMessage.SEVERITY_WARN,bundle.getString("can")+" "+bundle.getString("be")+" "+bundle.getString("added")+" "+bundle.getString("later")+" "+bundle.getString("by")+" "+bundle.getString("edit"),""));
			 bcontinue = true;
                      //return null;
                }

       if (!bcontinue){
             return null;
       }
// if calling method has try then calling method try will catch the exception
       try {
        // a0xxuobxbxxxxxxxxxxxsid
        // last in the loop centityName ->   centityKeyFieldName ->  entityKeyFieldName -> a0xxukuxbvxxxxxxxxxxid
        if (!restEntity && !cartPoPicked){
             // subkey so far is companyName (!empty)+lastName||ss+firstname||ss+ss(companyName empty)+phone #s ||ss etc ss means 
             // time stamp seconds
             // first 16 characters need to be broken into parts if name involved otherwise long last name makes it hard to distinguish key values
             // because ss is used same lastname and firstname will still produce different 16 characters if any phone #s etc are missing 
             // entityKeyFieldName -> a0xxukuxbvxxxxxxxxxxid
             // key set but return if the natural key already exists except for clob and blob where duplicates ok because
             // of non key seq is used to differentiate. So check if same seq
             // also apply initCap inside keyExists since we have access to the instance there
             //if (key.length() > 7 && keyExists(key.substring(0,8))){
             if (key.length() > 7 && keyExists(key)){
              if(importChosen){
               FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                FacesMessage.SEVERITY_WARN,bundle.getString("dropped")+" "+bundle.getString("duplicate")+" "+bundle.getString("key")+" "+key,""));
               return null;
              }else{
               if(customIdentity.getClientMsgLevel().contains("D")){
                FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                 FacesMessage.SEVERITY_WARN,bundle.getString("possible")+" "+bundle.getString("duplicate")+" "+bundle.getString("key")+" "+key,""));
                //return null;
               } 
              }
             }
             //jay subkey  kfrcl N kk this.instance.getA0xxukuxbvxxxxxxxxxxid() 
              // Set keyed in value(s) to uppercase
               
          } 
               //Below is common to all type of keys coming from above ie Item etc except clob/blob
                byte[] bytes = null;
                Iterator<File> itr =null;
                String clobImgUrl=yxxxuq1m1xwwqqqxxxxxclobdataHome.getInstance().getB1xxuzaxbvxxxxxxxxxxdata();
                if(clobImgUrl == null || clobImgUrl.isEmpty() || (clobImgUrl.indexOf("table=") == -1)){
                 clobImgUrl="";
                } 
                if(!clobImgUrl.isEmpty()){
                 // clobimg url as byte data. Need to extract and convert back img url to String as needed
                 dataIsBlob = true;// feature is used for blob only
                 bytes = null;
                 String imgUrl=null;
                 try{
                  yxxxuq1n1xwwqqqxxxxxblobdataHome.clearInstance();
                  yxxxuq1n1xwwqqqxxxxxblobdata = yxxxuq1n1xwwqqqxxxxxblobdataHome.getInstance();
                  yxxxuq1n1xwwqqqxxxxxblobdataHome.setInstance(yxxxuq1n1xwwqqqxxxxxblobdata);
                  yxxxuq1n1xwwqqqxxxxxblobdata.setA4xxexxxbvxxxxxxxxxxtype("url");
                  bytes=yxxxuq1m1xwwqqqxxxxxclobdataHome.getInstance().getB1xxuzaxbvxxxxxxxxxxdata().getBytes("UTF-8");
                  yxxxuq1n1xwwqqqxxxxxblobdata.setB1xxuzbxbvxxxxxxxxxxdata(bytes);//other fields like key follow same as file load logic
                  imgUrl=new String(bytes, StandardCharsets.UTF_8);
                 } catch ( Exception e){
                  FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                   FacesMessage.SEVERITY_INFO,bundle.getString("clobImgUrl")+" "+ bundle.getString("error")+" "+e.getMessage(),""));
                   return null;
                 }
                }else{
                  //iterate through files to check each file mime. Needed to set master entity field docmnt for its superdotPersist()
                 // another iterator further down and needed for related clob/blob entity persist
                  itr = yxxxuq1n1xwwqqqxxxxxblobdataHome.getFiles().iterator();
                 while (itr.hasNext()) {
                  slobkeyhash=Integer.toString((this.instance.getA0xxukuxbvxxxxxxxxxxid()).hashCode());
                  file = itr.next();
                      if (file.getMime().equals("text/plain") || file.getMime().equals("text/xml")
                       || file.getMime().equals("text/html")) {
                        dataIsClob = true;
                      } else {
                       dataIsBlob = true;
                      }
                 }
                 if (dataIsClob && dataIsBlob) {
                  this.instance.setY8xxuzdrbvxxxxxxxxxxdocmnt("D"+slobkeyhash);
                 }
                 else {
                  if (dataIsBlob) {
                   this.instance.setY8xxuzdrbvxxxxxxxxxxdocmnt("B"+slobkeyhash);
                  }
                  else {
                   this.instance.setY8xxuzdrbvxxxxxxxxxxdocmnt("C"+slobkeyhash);
                  } 
                 }
                } 

               // give persist message w key and time, but bypass non key ones like details
               if(!cartPoPicked && !skipValidation){
                try{
                    superdotpersist();//master entity
                } catch ( Exception e){
                   FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                   FacesMessage.SEVERITY_ERROR,key+" "+"save"+" "+" "+bundle.getString("failed")+",  "+e.getMessage(),""));
                   return null;
                }
                if(key != null && !key.trim().isEmpty()){
                 if(importdone <6){ 
                  if (customIdentity.isDebug()){
                   timeStamp = new SimpleDateFormat("yyyy.MM.dd.HH.mm.ss z").format(new Date());
                   FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                    FacesMessage.SEVERITY_INFO,bundle.getString("saved")+" "+bundle.getString("User")+" "+bundle.getString("reference")+" "+bundle.getString("as")+" ("+key+") "+"at"+" "+timeStamp,""));
                  }
                 }
                 if(importdone == 7){ 
                  FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                   FacesMessage.SEVERITY_INFO,bundle.getString("continuing")+" "+bundle.getString("User")+" "+bundle.getString("import"),""));
                 }
                }
               }else{
                superdotupdate();
                if (customIdentity.isDebug()){
                 timeStamp = new SimpleDateFormat("yyyy.MM.dd.HH.mm.ss z").format(new Date());
                 FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                  FacesMessage.SEVERITY_INFO,bundle.getString("updated")+" "+bundle.getString("User")+" "+bundle.getString("reference")+" "+bundle.getString("as")+" ("+key+") "+"at"+" "+timeStamp,""));
                }
               }
               picked=true;
              if (this.getLastItemLine() > 0)
                  multipicked=true;
                int i=0;
                // master entity iterator to call clob/blob persist but they have their own iterator for uploaded files, so call once only
                //previous uploaded files iterator was used to set the value of the master entity xxxdocmnt field
                Integer attachment=0;
                int callClobPersist=0;
                int callBlobPersist=0;
                itr = yxxxuq1n1xwwqqqxxxxxblobdataHome.getFiles().iterator();
                while (itr.hasNext()) {
                 file = itr.next();
                 dataIsClob=false;
                 dataIsBlob=false;
                 temps=file.getMime();
			 if ("image/bmp".equals(temps)) {
				lobDataType = "bmp";
			 } else if ("image/jpeg".equals(temps)) {
				lobDataType = "jpg";
			 } else if ("image/gif".equals(temps)) {
				lobDataType = "gif";
			 } else if ("image/png".equals(temps)) {
				lobDataType = "png";
			 } else if ("text/xml".equals(temps)) {
				lobDataType = "xml";
			 } else if ("application/msword".equals(temps)) {
				lobDataType = "doc";
			 } else if ("text/plain".equals(temps)) {
				lobDataType = "txt";
			  } else if ("text/html".equals(temps)) {
				lobDataType = "html";
			 } else if ("application/pdf".equals(temps)) {
				lobDataType = "pdf";
			 } else if ("application/vnd.ms-excel".equals(temps)) {
				lobDataType = "xls";
			 } else if ("application/vnd.ms-powerpoint".equals(temps)) {
				lobDataType = "ppt";
			 } else if ("audio/mpeg".equals(temps)) {
				lobDataType = "mp3";
			 } else if ("video/mp4".equals(temps)) {
				lobDataType = "mp4";
			 } else {
				lobDataType = "unkn";
			 }
		      if (lobDataType.equals("txt") || lobDataType.equals("xml") 
                                            || lobDataType.equals("html")) {
                                            dataIsClob = true;
		      } else {
                                            dataIsBlob = true;
		      }
                       //jay itr loop here based on number of file objects in files arraylist ie arraylist size
                       attachment++;
                  if (dataIsClob) {
                   yxxxuq1m1xwwqqqxxxxxclobdataHome.clearInstance();
                   yxxxuq1m1xwwqqqxxxxxclobdata = yxxxuq1m1xwwqqqxxxxxclobdataHome.getInstance();
                   yxxxuq1m1xwwqqqxxxxxclobdataHome.setInstance(yxxxuq1m1xwwqqqxxxxxclobdata);
                   yxxxuq1m1xwwqqqxxxxxclobdata.setA0xxukcdlvxxxxxxxxxxfromtable("YXXXUH566XWWQQWXXXXXUSER");
                   yxxxuq1m1xwwqqqxxxxxclobdata.setA1xxuxxxbv49xxxxxxxxfromkey(slobkeyhash);
                   yxxxuq1m1xwwqqqxxxxxclobdata.setA2xxuxxxbv50xxxxxxxxqualifier(Integer.toString(1));
                   yxxxuq1m1xwwqqqxxxxxclobdata.setA3xxexnsbvxxxxxxxxxxsequence(attachment-1);
                   yxxxuq1m1xwwqqqxxxxxclobdata.setY3xxuxznbvxxxxxxxxxxnotes(file.getName());
                   String uploadedText=file.getText();
                   String jay=uploadedText;
                   try{
                    uploadedText=this.sanitize(uploadedText);
                    uploadedText=jay;
                   } catch ( Exception e){
                    FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                    FacesMessage.SEVERITY_ERROR," "+"invalid"+" "+" "+bundle.getString("content")+",  "+e.getMessage(),""));
                    return null;
                   }
                   yxxxuq1m1xwwqqqxxxxxclobdata.setB1xxuzaxbvxxxxxxxxxxdata(uploadedText);
                   yxxxuq1m1xwwqqqxxxxxclobdata.setA4xxexxxbvxxxxxxxxxxtype(lobDataType);
                   yxxxuq1m1xwwqqqxxxxxclobdataHome.persist();//the clob instance gets passed but gets overwritten again depending on origin
                   callClobPersist=1;
                   FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                      FacesMessage.SEVERITY_INFO,bundle.getString("saved")+" "+file.getLength()+" "+bundle.getString("characters")+" "+bundle.getString("text")+" "+bundle.getString("data"),""));
                 }
                 else {
                  if(clobImgUrl.isEmpty()){
                   yxxxuq1n1xwwqqqxxxxxblobdataHome.clearInstance();
                   yxxxuq1n1xwwqqqxxxxxblobdata = yxxxuq1n1xwwqqqxxxxxblobdataHome.getInstance();
                  yxxxuq1n1xwwqqqxxxxxblobdataHome.setInstance(yxxxuq1n1xwwqqqxxxxxblobdata);
                   yxxxuq1n1xwwqqqxxxxxblobdata.setB1xxuzbxbvxxxxxxxxxxdata(file.getData());
                   yxxxuq1n1xwwqqqxxxxxblobdata.setY3xxuxznbvxxxxxxxxxxnotes(file.getName());
                   if(yxxxuq1n1xwwqqqxxxxxblobdata.getA4xxexxxbvxxxxxxxxxxtype() !=null && !yxxxuq1n1xwwqqqxxxxxblobdata.getA4xxexxxbvxxxxxxxxxxtype().toLowerCase().contains("asis")){   
                    yxxxuq1n1xwwqqqxxxxxblobdata.setA4xxexxxbvxxxxxxxxxxtype(lobDataType);
                   }
                   if(yxxxuq1n1xwwqqqxxxxxblobdata.getA4xxexxxbvxxxxxxxxxxtype() !=null && yxxxuq1n1xwwqqqxxxxxblobdata.getA4xxexxxbvxxxxxxxxxxtype().toLowerCase().contains("asis")){   
                    //replace beyond asis with new type if any
                    yxxxuq1n1xwwqqqxxxxxblobdata.setA4xxexxxbvxxxxxxxxxxtype("asis"+lobDataType);
                   }
                   if(yxxxuq1n1xwwqqqxxxxxblobdata.getA4xxexxxbvxxxxxxxxxxtype() ==null ){   
                    yxxxuq1n1xwwqqqxxxxxblobdata.setA4xxexxxbvxxxxxxxxxxtype(lobDataType);
                   }
                  }
                  yxxxuq1n1xwwqqqxxxxxblobdata.setA0xxukbdlvxxxxxxxxxxfromtable("YXXXUH566XWWQQWXXXXXUSER");
                  yxxxuq1n1xwwqqqxxxxxblobdata.setA1xxuxxxbv49xxxxxxxxfromkey(slobkeyhash);
                  yxxxuq1n1xwwqqqxxxxxblobdata.setA2xxuxxxbv50xxxxxxxxqualifier(Integer.toString(1));
                  yxxxuq1n1xwwqqqxxxxxblobdata.setA3xxexnsbvxxxxxxxxxxsequence(attachment-1);
                  yxxxuq1n1xwwqqqxxxxxblobdataHome.persist();//the blob instance gets passed but gets overwritten again depending on origin
                  callBlobPersist=1;
                  i++; 
                   FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                      FacesMessage.SEVERITY_INFO,bundle.getString("saved")+" "+file.getLength()+" "+bundle.getString("bytes")+" "+bundle.getString("binary")+" "+bundle.getString("data"),""));
                 } 
                }//itr while 
                // to prevent same image being saved again in same request
                clearUploadData(); 
            // if manual entry was done instead of using options then capture it in userprofile
 	    Yxxxuh566xwwqqwxxxxxuser user = null;




             setChangeDone(true);
             importAdded=importAdded+1;
             return "persisted";
       } catch ( Exception e){
         String context="key="+key+",subKey="+subKey;
         FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
           FacesMessage.SEVERITY_ERROR," "+"User"+" "+context+" "+ bundle.getString("error")+" "+bundle.getString("cause")+"- "+e.getMessage(),""));
               bcontinue=false;
               return null;
       }

    }

    public String superUpdate() {
        //this is used to update statusfldate before calling superdotupdate which is the jpa merge
        //flow is (allowupdate() if needed)-update()-(sperupdate() if statusdt needs change-superdotupdate())
        // or -superdotupdate()
        //setUpdatedMessage(createValueExpression(""));
      // allow raaspi to delete SYSTEM records
      if((getInstance().getZzxxu2oxxhxxxxxxxxxxowner2().equals("SYSTEM") && !owner2Code.equals(masterSiteCode)) || (!getInstance().getZzxxu2oxxhxxxxxxxxxxowner2().equals("SYSTEM") && !getInstance().getZzxxu2oxxhxxxxxxxxxxowner2().equals(owner2Code))){
      FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
         FacesMessage.SEVERITY_ERROR,bundle.getString("If")+" "+bundle.getString("non")+" "+bundle.getString("owned")+", "+bundle.getString("update")+" "+ bundle.getString("not")+" "+bundle.getString("allowed"),""));

                 bcontinue=false;
                 return null;
      }


       if (!bcontinue){
        FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
         FacesMessage.SEVERITY_ERROR,bundle.getString("error")+", "+ bundle.getString("not")+" "+bundle.getString("continue"),""));



             return null;
       }
           this.instance.setZ2xxcztxlxxxxxxxxxxxstatusfldt(Calendar.getInstance().getTime());
           superdotupdate(); 
           setChangeDone(true);
           timeStamp = new SimpleDateFormat("yyyy.MM.dd.HH.mm.ss z").format(new Date());
          /* too much info
           FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
            FacesMessage.SEVERITY_INFO,bundle.getString("updated")+" "+bundle.getString("selected")+" "+"User"+" "+"at"+" "+timeStamp,""));
           */

           return "superUpdated"; 

    }

    public String updateRest(String descript) {
           superdotupdate();//superdotupdate does not change any date field
           setChangeDone(true);
           timeStamp = new SimpleDateFormat("yyyy.MM.dd.HH.mm.ss z").format(new Date());
           FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
            FacesMessage.SEVERITY_INFO,bundle.getString("updated")+" "+"User"+" "+descript+" "+bundle.getString("record")+" "+bundle.getString("at")+" "+timeStamp,""));
            return "updated"; 
       }


    public String allowUpdate() {
       ////setUpdatedMessage(createValueExpression(""));
     // allowupdate is used by method calls only and not directly by jsf 
     // there are cases like item stat or customer order we need to allow non owned records to be updated
     // for this to work, make sure entityHome is cleared,use instance itself or setinstance is done with the variable holding instance values and then this is called
            superdotupdate();
            setChangeDone(true);
        /* use customIdentity.getClientMsgLev 
           timeStamp = new SimpleDateFormat("yyyy.MM.dd.HH.mm.ss z").format(new Date());
           FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
            FacesMessage.SEVERITY_INFO,bundle.getString("updated")+" "+bundle.getString("selected")+" "+"User"+" "+"at"+" "+timeStamp,""));
        */
            return "updated"; 
       }




    /**
    * used by xxEdit.xhtml for updating multiple items for master entities which have details, example order,invoice,glentries
    * mimics ItemHome updateProductsToOrder method (used for shopping cart) logic to handle multiItems
    *@see "addWithDetails used by xxEdit to add new, or update or add detail"
    *@see "updateProductsToOrder used by shopping cart add"
    *add logic to adjust invoice, payment details and paypal etc payment due ie either credit or adjust hold
    */
    public String updateDetailsAll() {
     // before this method is called, very 1st item (common use case) was already saved as detail via addWithDetails method 
     // and flag more was set
     // flow for more items via this method, is as follows
     // first update the current detail ie 2nd or later item and persist it, initialise lastitemline back to 0 and
     // set more to false. The details now has multiple items and user may have flagged one or more to be removed
     // or qty may have changed, so rechecks by looping through details ie lineitems,
     // if checked for remove then subtract qty from item and remove from order details. 
     // call cartpersist with param u for undo or remove which
     //  since no detail value for this will stay, dont call updatecdetails but call
     //  (1) showrunt 
     //  (2) persistrunt
     //  (3) remove() detail and make it null to avoid keet as dirty 
     //  (4) update order itself 
     // if not ckecked , then call ordersHome cartpersist with currentCartedPO detail sid,c as change option 
     // and tempCount (1 means first call)
     // cartPersist for c will get the detail  and call
     //  (1) update() parent which in turn updates details 
     //  (1.1) updatecdetails which updates the order detail qty based on itemTempQty (itemDetailsBrowse view has this)
     //  (1.2) showrunt which recalculates both details and order itself based on quantity or say tax value( a cart can be idle for days)
     //  (1.3) persistrunt which resets all the values for the order itself (detail values done in showrunt) using values calculated in showrunt
     //     each showrunt for a detail will recalculate both its own value and its master but persistrunt simply copies the variable values into properties
     //  (1.4) update() detail instance  
     //  (1.5) update order
     //  (1.6) extra logic added to avoid totals getting wrong
     //   updateParentFromDetails() which loops through all details and recalculates totals and updates parent instance
     //   not sure why the detail was superupdated again     
     // coming back from cartperist
     //  (6) adjust posting if invoice/payment by calling posting with net changes for baseamount etc
     // increment tempcount and go to top of loop
     //tempCount=this.getLastItemLine()-1; 
     Integer tempRemoveCount=0;
     String  currentCartedPO="";
     Integer currentCartedPOSID;

       return "update";
    }










   
    /***
    * update is used by ui like xxxEdit and xxxEditEasy and has logic to prevent cross user updates 
    * update normally updates the entity for which the update was issued, but sometimes related updates are done like
    * 1. for transactions the details,item,customer/vendor are updated before calling entity updated
    *  like order,shipment etc are updated.
    *  If different owner then allowupdate() is used
    * 2. for usagebyperiods, rollupgroup is also updated but same owner  
    * 3. for entities like item,customer which has docmnt fileld for clob/blob data
    *  clob/blob has docmnt field but holds actual data wheres other entities like Item,Customer has 
    *  their hashed key field value in docmnt field. The sid key value not available until item gets created.
    *  There is logic to allow VW (visitor)or DH (Demo User) to change only own user records.
    *  verify posting not needed here because invoice/payment updates are done via updatedetailsall
    *  do not allow user to delete own user record or update own role/level/restrict/allow settings to prevent no one
    *  be left with enough rights , prevent via jsf rendered do not show if owner same as logon id
    * 
    * @param none but values come via variables
    * @return String null or some string value 
    * @exception various

    * Add logic to handle key value change > new hash code > update item as well as clob/blob fromKey
    * Change logic for clob/blob all over to not use seq 0, reserve it store removed value. Seq starts from 1
    * if more than 1 img why both add and replace not shown. If add put the new one with ++seq
    */
    public String update() {
     if(customIdentity.hasRole("VH") || customIdentity.hasRole("PH")) {
     } 
      //check for restrict own if el readonly does not work


      boolean dataReplaced=false;
      byte[] bytes = null;
      //setUpdatedMessage(createValueExpression(""));
      // allow raaspi to delete SYSTEM records
      if((getInstance().getZzxxu2oxxhxxxxxxxxxxowner2().equals("SYSTEM") && !customIdentity.isMasterSite()) || (!getInstance().getZzxxu2oxxhxxxxxxxxxxowner2().equals("SYSTEM") && !getInstance().getZzxxu2oxxhxxxxxxxxxxowner2().equals(owner2Code))){
       FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
        FacesMessage.SEVERITY_INFO,bundle.getString("Gallery")+"/ "+bundle.getString("non")+" "+bundle.getString("owned")+" "+bundle.getString("records")+" "+bundle.getString("update")+" "+ bundle.getString("not")+" "+bundle.getString("allowed"),""));
        //bcontinue=false;
        return null;
      }
      // allow user to change its own doc (image) if product is forum
      // in user edit make only doc property as editable all others read only
      // similarly allow users to change their own customer info like address, name etc , but send an email to original value to inform
      if (((customIdentity.getRestrict1() != null && customIdentity.getRestrict1().equals("D")) || customIdentity.hasRole("VW")) && (!getInstance().getZ5xxutoxlhxxxxxxxxxxowner().equals(ownerCode) && getInstance().getA0xxuobxbxxxxxxxxxxxsid() != customIdentity.getUserSid() )  ){ 
       FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
        FacesMessage.SEVERITY_INFO,bundle.getString("If")+" "+bundle.getString("non")+" "+bundle.getString("owned")+", "+bundle.getString("update")+" "+ bundle.getString("not")+" "+bundle.getString("allowed"),""));
        //bcontinue=false;
        return null;
      }
        entityUpdated =false;
        String fromTable="";
        String qualifier="";
       if (!bcontinue){
        FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
         FacesMessage.SEVERITY_ERROR,bundle.getString("error")+", "+ bundle.getString("not")+" "+bundle.getString("continue"),""));
         return null;
       }
         this.instance.setZ2xxcztxlxxxxxxxxxxxstatusfldt(Calendar.getInstance().getTime());
       if(file !=null){
        //this.clearUploadData();// to allow new upload , jay remove this since it ctears any uploaded file. clear using button if needed
       }
             //Below is common to all type of keys coming from above y8xxuzdrbvxxxxxxxxxxdocmnt  
            //jay add logic to delete existing docs, below will add new ones -done

           /* not all entities have document ie clob/blob */
             /* non clob/blob container like item,customer whose data has pointer to actual data */ 
             //docmntOriginalValue is used to hold the clob/blob current data value, new value is under file object via fileUpLoad
              // jay blob dont have docmn so why check  in case of clob it is actual data, for other entities it is string pointer value and may point to string(clob) or binary(blob) data
              String docmntOriginalValue=this.instance.getY8xxuzdrbvxxxxxxxxxxdocmnt();
                // clobdata entity iterator used by  master entity update()
                  Iterator<File> itr = yxxxuq1n1xwwqqqxxxxxblobdataHome.getFiles().iterator();
                dataReplaced=true;
                slobkeyhash=Integer.toString((this.instance.getA0xxukuxbvxxxxxxxxxxid()).hashCode());
                fromTable="YXXXUH566XWWQQWXXXXXUSER";
                qualifier=Integer.toString(1);

                String clobImgUrl=yxxxuq1m1xwwqqqxxxxxclobdataHome.getInstance().getB1xxuzaxbvxxxxxxxxxxdata();
                if(clobImgUrl == null || clobImgUrl.isEmpty() || (clobImgUrl.indexOf("table=") == -1)){
                 clobImgUrl="";
                } 
                if(!clobImgUrl.isEmpty()){
                 //If clobimg (clobdataInstance.data) we will assume to either add or replace any existing blobdata img
                 // with the clobimg url as byte data. Need to extract and convert back img url to String as needed
                 dataIsBlob = true;// feature is used for blob only
                 this.instance.setY8xxuzdrbvxxxxxxxxxxdocmnt("B"+slobkeyhash);
                 bytes = null;
                 String imgUrl=null;
                 try{
                  yxxxuq1n1xwwqqqxxxxxblobdataHome.clearInstance();
                  yxxxuq1n1xwwqqqxxxxxblobdata = yxxxuq1n1xwwqqqxxxxxblobdataHome.getInstance();
                  yxxxuq1n1xwwqqqxxxxxblobdataHome.setInstance(yxxxuq1n1xwwqqqxxxxxblobdata);
                  yxxxuq1n1xwwqqqxxxxxblobdata.setA4xxexxxbvxxxxxxxxxxtype("url");
                  bytes=yxxxuq1m1xwwqqqxxxxxclobdataHome.getInstance().getB1xxuzaxbvxxxxxxxxxxdata().getBytes("UTF-8");
                  yxxxuq1n1xwwqqqxxxxxblobdata.setB1xxuzbxbvxxxxxxxxxxdata(bytes);//other fields like key follow same as file load logic
                  imgUrl=new String(bytes, StandardCharsets.UTF_8);
                 } catch ( Exception e){
                  FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                   FacesMessage.SEVERITY_INFO,bundle.getString("clobImgUrl")+" "+ bundle.getString("error")+" "+e.getMessage(),""));
                   return null;
                 }
                }else{
                 //  iterate through files to check each file mime,also check variable upload count to decide skip
                 // there seems to be duplication and override of logic below re type of doc data
                 while (itr.hasNext()) {
                  file = itr.next();
                  dataIsClob=false;
                  dataIsBlob=false;
                  temps=file.getMime();
                  if ("image/bmp".equals(temps)) {
                   lobDataType = "bmp";
                  }else if ("image/jpeg".equals(temps)) {
                   lobDataType = "jpg";
                  } else if ("image/gif".equals(temps)) {
                   lobDataType = "gif";
                  } else if ("image/png".equals(temps)) {
                   lobDataType = "png";
                  } else if ("text/xml".equals(temps)) {
                   lobDataType = "xml";
                 } else if ("application/msword".equals(temps)) {
                  lobDataType = "doc";
                 } else if ("text/plain".equals(temps)) {
                  lobDataType = "txt";
                 } else if ("text/html".equals(temps)) {
                  lobDataType = "html";
			 } else if ("text/csv".equals(temps)) {
				lobDataType = "csv";
			 } else if ("application/pdf".equals(temps)) {
				lobDataType = "pdf";
			 } else if ("application/vnd.ms-excel".equals(temps)) {
				lobDataType = "xls";
			 } else if ("application/vnd.ms-powerpoint".equals(temps)) {
				lobDataType = "ppt";
			 } else if ("text/html".equals(temps)) {
				lobDataType = "txt";
			 } else if ("text/htm".equals(temps)) {
				lobDataType = "txt";
			 } else if ("audio/mpeg".equals(temps)) {
				lobDataType = "mp3";
			 } else if ("video/mp4".equals(temps)) {
				lobDataType = "mp4";
			 } else {
				lobDataType = "unkn";
			 }

                     if (lobDataType.equals("txt") || lobDataType.equals("xml") || lobDataType.equals("csv")
                       || lobDataType.equals("html") ) {
                         dataIsClob = true;
                         this.instance.setY8xxuzdrbvxxxxxxxxxxdocmnt("C"+slobkeyhash);
                    } else {
                         dataIsBlob = true;
                         this.instance.setY8xxuzdrbvxxxxxxxxxxdocmnt("B"+slobkeyhash);
                    }
                 }
                }
            /* continuing after file/clobImgUrl,following for items/customers etc , clob/blob does not have document */
                int i=0;
                Integer attachment=0;
                int jay=0;
                // currenly only one doc can be uploaded so iteration is for only 1 if any upload, it can be 0 as well
                // in case of clob data can come from file upload or from ckeditor
                 //jay itr loop here based on number of file objects in files arraylist ie arraylist size
                 // there could be 2 cases- one parent entity does not have any clob or blob or 2nd it has 
                 // we need to check column docmnt in parent 
                  if (docmntOriginalValue == null  || (docmntOriginalValue != null && docmntOriginalValue.trim().length() <= 1) ){
                   // no clob data exists , new data under file
                   if (dataIsClob) {
                    yxxxuq1m1xwwqqqxxxxxclobdata = yxxxuq1m1xwwqqqxxxxxclobdataHome.getInstance();
                    yxxxuq1m1xwwqqqxxxxxclobdataHome.setInstance(yxxxuq1m1xwwqqqxxxxxclobdata);
                    // instance already has values for natural keys fromtable,fromkey,qualifier and seq
                    // leave seq as is unless 0 or less
                    if (yxxxuq1m1xwwqqqxxxxxclobdata.getA3xxexnsbvxxxxxxxxxxsequence() < 1){
                     //yxxxuq1m1xwwqqqxxxxxclobdata.setA3xxexnsbvxxxxxxxxxxsequence(1);
                    }
                   }else{
                     yxxxuq1n1xwwqqqxxxxxblobdata = yxxxuq1n1xwwqqqxxxxxblobdataHome.getInstance();
                     yxxxuq1n1xwwqqqxxxxxblobdataHome.setInstance(yxxxuq1n1xwwqqqxxxxxblobdata);//why
                    // instance already has values for natural keys fromtable,fromkey,qualifier and seq
                    if (yxxxuq1n1xwwqqqxxxxxblobdata.getA3xxexnsbvxxxxxxxxxxsequence() < 1){
                     //yxxxuq1n1xwwqqqxxxxxblobdata.setA3xxexnsbvxxxxxxxxxxsequence(1);
                    }
                   }
                  }else{
                   //clob/blob already exists and being replaced or left alone and new one being appended
                   // if same session clob/blob entity already exists otherwise use entityquery
                   // added a checkbox for append or replace existing clob/blob entry, upLoadPurpose value is ad or re
                   //sequence gets incremented if more pictures are uploaded to add
                   // sequence is meant for viewing sequence and may be richfaces pick list can be used
                   // check and use max qualifier as there could be many already
                   if (dataIsClob) {
                    if (yxxxuq1m1xwwqqqxxxxxclobdata == null){
                     try {
                      List<Yxxxuq1m1xwwqqqxxxxxclobdata> results = entityManager
                      .createQuery(
                         "select cc from Yxxxuq1m1xwwqqqxxxxxclobdata cc where cc.a0xxukcdlvxxxxxxxxxxfromtable=:clobdatafromtable and cc.a1xxuxxxbv49xxxxxxxxfromkey=:clobdatafromkey and cc.zzxxu2oxxhxxxxxxxxxxowner2 = :owner2  order by cc.a0xxuobxbxxxxxxxxxxxsid asc")
                         .setParameter("clobdatafromtable", fromTable).setParameter(
                          "clobdatafromkey", slobkeyhash).setParameter("owner2", owner2Code).getResultList();
                      if(!results.isEmpty()){
                       attachment=results.size();
                       yxxxuq1m1xwwqqqxxxxxclobdata= results.get(attachment-1);
                       //yxxxuq1m1xwwqqqxxxxxclobdata.setB1xxuzaxbvxxxxxxxxxxdata(new String(file.getData()));
                       if(file.getData() !=null){// if not from ckeditor                   
                        String uploadedText=file.getText();
                        String jay2=uploadedText;
                        try{
                         uploadedText=this.sanitize(uploadedText);
                         uploadedText=jay2;
                        } catch ( Exception e){
                         FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                         FacesMessage.SEVERITY_INFO," "+"invalid"+" "+" "+bundle.getString("content")+",  "+e.getMessage(),""));
                         return null;
                        }
                        yxxxuq1m1xwwqqqxxxxxclobdata.setB1xxuzaxbvxxxxxxxxxxdata(uploadedText);
                       }
                       yxxxuq1m1xwwqqqxxxxxclobdataHome.getInstance();
                       yxxxuq1m1xwwqqqxxxxxclobdataHome.setInstance(yxxxuq1m1xwwqqqxxxxxclobdata);
                      }else{
                       FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                        FacesMessage.SEVERITY_INFO,"clob_result_empty",""));
                        // this means clob/blob to be replaced is gone or was never created, so why not log the error and continue as add
                        log.severe("Error retrieving clob");
                        return null;
                      }
                     } catch (NoResultException nre) {
                         FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                          FacesMessage.SEVERITY_INFO,"no_clob_record",""));
                       return null;
                     } catch (Exception e) {
                        log.severe("Error persisting clob"+ e);
                        FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                         FacesMessage.SEVERITY_INFO,"clob_persist_error" + e.getMessage(),""));
                      //return null;
                      upLoadPurpose="ad";
                     }
                    }
                   }
                   else{
                    if (yxxxuq1n1xwwqqqxxxxxblobdata == null){
                     try {
                            List<Yxxxuq1n1xwwqqqxxxxxblobdata> results = entityManager
                              .createQuery(
                               "select cc from Yxxxuq1n1xwwqqqxxxxxblobdata cc where cc.a0xxukbdlvxxxxxxxxxxfromtable=:blobdatafromtable and cc.a1xxuxxxbv49xxxxxxxxfromkey=:blobdatafromkey and cc.zzxxu2oxxhxxxxxxxxxxowner2 = :owner2 order by cc.a0xxuobxbxxxxxxxxxxxsid asc")
                                .setParameter("blobdatafromtable", fromTable).setParameter(
                                "blobdatafromkey", slobkeyhash).setParameter("owner2", owner2Code).getResultList();
		             if(!results.isEmpty()){
                              // results include the new instance to be persisted
                              attachment=results.size();
                              yxxxuq1n1xwwqqqxxxxxblobdata= results.get(attachment-1);
                              yxxxuq1n1xwwqqqxxxxxblobdata.setB1xxuzbxbvxxxxxxxxxxdata(file.getData());
                              yxxxuq1n1xwwqqqxxxxxblobdataHome.getInstance();
                              yxxxuq1n1xwwqqqxxxxxblobdataHome.setInstance(yxxxuq1n1xwwqqqxxxxxblobdata);
                             }else{
                              FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                                     FacesMessage.SEVERITY_INFO,"blob_result_empty",""));
                              // this means clob/blob to be replaced is gone or was never created, so why not log the error and continue as add
                              log.severe("Error retrieving blob");
                              //return null;
                              upLoadPurpose="ad";
                           }
                          } catch (NoResultException nre) {
                            FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                                     FacesMessage.SEVERITY_INFO,"no_blob_record",""));
                            return null;
                          } catch (Exception e) {
	 	            log.severe("Error persisting blob"+ e);
                            FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                                     FacesMessage.SEVERITY_INFO,"blob_persist_error" + e.getMessage(),""));

                            return null;
                          }
                    }
                   }

                   if (dataIsClob && "ad".equals(upLoadPurpose)) {
                    yxxxuq1m1xwwqqqxxxxxclobdataHome.clearInstance();
                    yxxxuq1m1xwwqqqxxxxxclobdata = yxxxuq1m1xwwqqqxxxxxclobdataHome.getInstance();
                    if (yxxxuq1m1xwwqqqxxxxxclobdata.getA3xxexnsbvxxxxxxxxxxsequence() > 0){
                      //non clob/blob added useSeq to avoid ambiguity
                      if(useSeq==-1){
                       jay=  yxxxuq1m1xwwqqqxxxxxclobdataList.getNextSeqAvailable("YXXXUH566XWWQQWXXXXXUSER","C"+slobkeyhash,qualifier,0);
                      }else{
                       jay=useSeq; 
                      }
                     yxxxuq1m1xwwqqqxxxxxclobdata.setA3xxexnsbvxxxxxxxxxxsequence(jay);
                    }
                   }   
                   if (dataIsBlob && "ad".equals(upLoadPurpose)) {
                    if(clobImgUrl.isEmpty()){
                     yxxxuq1n1xwwqqqxxxxxblobdataHome.clearInstance();
                     yxxxuq1n1xwwqqqxxxxxblobdata = yxxxuq1n1xwwqqqxxxxxblobdataHome.getInstance();
                    }
                    if (yxxxuq1n1xwwqqqxxxxxblobdata.getA3xxexnsbvxxxxxxxxxxsequence() > 0){
                      // added useSeq to avoid ambiguity
                      if(useSeq==-1){
                       jay=  yxxxuq1n1xwwqqqxxxxxblobdataList.getNextSeqAvailable("YXXXUH566XWWQQWXXXXXUSER","B"+slobkeyhash,qualifier,0);
                      }else{
                       jay=useSeq; 
                      }
                     yxxxuq1n1xwwqqqxxxxxblobdata.setA3xxexnsbvxxxxxxxxxxsequence(jay);
                    }
                   }
                  }
                  // common below ie for update for new docmnt or w existing doc

                  if (dataIsClob && "ad".equals(upLoadPurpose)) {
                     if(file.getData() !=null){// if not from ckeditor                   
                      String uploadedText=file.getText();
                      String jay2=uploadedText;
                      try{
                       uploadedText=this.sanitize(uploadedText);
                       uploadedText=jay2;
                      } catch ( Exception e){
                       FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                        FacesMessage.SEVERITY_INFO," "+"invalid"+" "+" "+bundle.getString("content")+",  "+e.getMessage(),""));
                       return null;
                      }
                      yxxxuq1m1xwwqqqxxxxxclobdata.setB1xxuzaxbvxxxxxxxxxxdata(uploadedText);
                     }

                   yxxxuq1m1xwwqqqxxxxxclobdata.setA4xxexxxbvxxxxxxxxxxtype(lobDataType);
                   yxxxuq1m1xwwqqqxxxxxclobdata.setA0xxukcdlvxxxxxxxxxxfromtable(fromTable);
                   yxxxuq1m1xwwqqqxxxxxclobdata.setA1xxuxxxbv49xxxxxxxxfromkey(slobkeyhash);
                   yxxxuq1m1xwwqqqxxxxxclobdata.setA2xxuxxxbv50xxxxxxxxqualifier(qualifier);
                   yxxxuq1m1xwwqqqxxxxxclobdata.setY3xxuxznbvxxxxxxxxxxnotes(file.getName());
                    yxxxuq1m1xwwqqqxxxxxclobdataHome.setInstance(yxxxuq1m1xwwqqqxxxxxclobdata);
                    yxxxuq1m1xwwqqqxxxxxclobdataHome.persist();
                    timeStamp = new SimpleDateFormat("yyyy.MM.dd.HH.mm.ss z").format(new Date());
                    FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                     FacesMessage.SEVERITY_INFO,bundle.getString("saved")+" "+bundle.getString("Blobdata")+" "+bundle.getString("reference")+" "+bundle.getString("as")+" ("+slobkeyhash+") "+"at"+" "+timeStamp,""));
                  }
                  if (dataIsClob && "re".equals(upLoadPurpose)) {
                     if(file.getData() !=null){// if not from ckeditor                   
                      String uploadedText=file.getText();
                      String jay2=uploadedText;
                      try{
                       uploadedText=this.sanitize(uploadedText);
                       uploadedText=jay2;
                      } catch ( Exception e){
                       FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                        FacesMessage.SEVERITY_INFO," "+"invalid"+" "+" "+bundle.getString("content")+",  "+e.getMessage(),""));
                       return null;
                      }
                      yxxxuq1m1xwwqqqxxxxxclobdata.setB1xxuzaxbvxxxxxxxxxxdata(uploadedText);
                     }

                    yxxxuq1m1xwwqqqxxxxxclobdata.setY3xxuxznbvxxxxxxxxxxnotes(file.getName());
                    yxxxuq1m1xwwqqqxxxxxclobdataHome.setInstance(yxxxuq1m1xwwqqqxxxxxclobdata);

                    yxxxuq1m1xwwqqqxxxxxclobdataHome.superUpdate(); 
                    timeStamp = new SimpleDateFormat("yyyy.MM.dd.HH.mm.ss z").format(new Date());
                    FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                     FacesMessage.SEVERITY_INFO,bundle.getString("updated")+" "+bundle.getString("Clobdata")+" "+bundle.getString("reference")+" "+bundle.getString("as")+" ("+slobkeyhash+") "+"at"+" "+timeStamp,""));

                  }
                  if (dataIsBlob && "ad".equals(upLoadPurpose)) {
                   if (clobImgUrl.isEmpty()){
                    if(file.getData() !=null){
                     yxxxuq1n1xwwqqqxxxxxblobdata.setB1xxuzbxbvxxxxxxxxxxdata(file.getData());// use only if uploaded
                    }
                    if(yxxxuq1n1xwwqqqxxxxxblobdata.getA4xxexxxbvxxxxxxxxxxtype() !=null && !yxxxuq1n1xwwqqqxxxxxblobdata.getA4xxexxxbvxxxxxxxxxxtype().toLowerCase().contains("asis")){   
                     yxxxuq1n1xwwqqqxxxxxblobdata.setA4xxexxxbvxxxxxxxxxxtype(lobDataType);
                    }
                    if(yxxxuq1n1xwwqqqxxxxxblobdata.getA4xxexxxbvxxxxxxxxxxtype() !=null && yxxxuq1n1xwwqqqxxxxxblobdata.getA4xxexxxbvxxxxxxxxxxtype().toLowerCase().contains("asis")){   
                     yxxxuq1n1xwwqqqxxxxxblobdata.setA4xxexxxbvxxxxxxxxxxtype("asis"+lobDataType);
                    }
                    if(yxxxuq1n1xwwqqqxxxxxblobdata.getA4xxexxxbvxxxxxxxxxxtype() ==null ){   
                     yxxxuq1n1xwwqqqxxxxxblobdata.setA4xxexxxbvxxxxxxxxxxtype(lobDataType);
                    }
                   }
                  yxxxuq1n1xwwqqqxxxxxblobdata.setA0xxukbdlvxxxxxxxxxxfromtable(fromTable);
                  yxxxuq1n1xwwqqqxxxxxblobdata.setA1xxuxxxbv49xxxxxxxxfromkey(slobkeyhash);
                  yxxxuq1n1xwwqqqxxxxxblobdata.setA2xxuxxxbv50xxxxxxxxqualifier(qualifier);
                  yxxxuq1n1xwwqqqxxxxxblobdata.setY3xxuxznbvxxxxxxxxxxnotes(file.getName());
                   yxxxuq1n1xwwqqqxxxxxblobdataHome.setInstance(yxxxuq1n1xwwqqqxxxxxblobdata);
                   yxxxuq1n1xwwqqqxxxxxblobdataHome.persist();
                   timeStamp = new SimpleDateFormat("yyyy.MM.dd.HH.mm.ss z").format(new Date());
                   FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                    FacesMessage.SEVERITY_INFO,bundle.getString("saved")+" "+bundle.getString("Blobdata")+" "+bundle.getString("reference")+" "+bundle.getString("as")+" ("+slobkeyhash+") "+"at"+" "+timeStamp,""));

                  }
                  if (yxxxuq1n1xwwqqqxxxxxblobdata !=null && dataIsBlob && "re".equals(upLoadPurpose)) {
                   if (clobImgUrl.isEmpty()){
                    if(file.getData() !=null){
                     yxxxuq1n1xwwqqqxxxxxblobdata.setB1xxuzbxbvxxxxxxxxxxdata(file.getData());
                    }
                    if(yxxxuq1n1xwwqqqxxxxxblobdata.getA4xxexxxbvxxxxxxxxxxtype() !=null && !yxxxuq1n1xwwqqqxxxxxblobdata.getA4xxexxxbvxxxxxxxxxxtype().toLowerCase().contains("asis")){   
                    yxxxuq1n1xwwqqqxxxxxblobdata.setA4xxexxxbvxxxxxxxxxxtype(lobDataType);
                    }
                    if(yxxxuq1n1xwwqqqxxxxxblobdata.getA4xxexxxbvxxxxxxxxxxtype() !=null && yxxxuq1n1xwwqqqxxxxxblobdata.getA4xxexxxbvxxxxxxxxxxtype().toLowerCase().contains("asis")){   
                    yxxxuq1n1xwwqqqxxxxxblobdata.setA4xxexxxbvxxxxxxxxxxtype("asis"+lobDataType);
                    }
                    if(yxxxuq1n1xwwqqqxxxxxblobdata.getA4xxexxxbvxxxxxxxxxxtype() ==null ){   
                    yxxxuq1n1xwwqqqxxxxxblobdata.setA4xxexxxbvxxxxxxxxxxtype(lobDataType);
                    }
                   }
                   yxxxuq1n1xwwqqqxxxxxblobdata.setY3xxuxznbvxxxxxxxxxxnotes(file.getName());

                   // in case of clob/blob the superUpdate will repeat further dowm, add ftl logic to skip this
                   yxxxuq1n1xwwqqqxxxxxblobdataHome.setInstance(yxxxuq1n1xwwqqqxxxxxblobdata);
                   yxxxuq1n1xwwqqqxxxxxblobdataHome.superUpdate();
                   timeStamp = new SimpleDateFormat("yyyy.MM.dd.HH.mm.ss z").format(new Date());
                   FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                    FacesMessage.SEVERITY_INFO,bundle.getString("updated")+" "+bundle.getString("Blobdata")+" "+bundle.getString("reference")+" "+bundle.getString("as")+" ("+slobkeyhash+") "+"at"+" "+timeStamp,""));
                  }
                //}old while now pushed up as end of while loop
                // in case an update is done after this save, will allow fresh upload
                if(dataReplaced){
                 clearUploadData();
                }else{
                  if(fromTable.isEmpty() || !fromTable.equals("blobdata")){
                   //continue, allow other changes  
                  }else{
                    FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                     FacesMessage.SEVERITY_INFO,bundle.getString("update")+" "+bundle.getString("bypassed")+", "+bundle.getString("no")+" "+bundle.getString("file")+" "+bundle.getString("uploaded"),""));
                    FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                     FacesMessage.SEVERITY_INFO,bundle.getString("either")+" "+bundle.getString("upload")+" "+bundle.getString("new")+" "+bundle.getString("or")+" "+bundle.getString("re-upload")+" "+bundle.getString("existing"),""));
                    return null;
                  }
                } 
           //end of documentField != "" ie item/customer and non clob/blob 

            // in update key value is always changed to reflect any change in description etc but also uses
            // current time, so key will always change. Do not use key value instead use sid no as int or as string
            // if subkeys have changed then key value needs to be reestablished unless rest or import (how?)
            subKey="";
             // key set but return if the natural key already exists except for clob and blob where duplicates ok
             // in keyExists method, initCap will be applied and existing key always gets replaced
             if (key.length() > 7 && keyExists(key.substring(0,8))){
              FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
               FacesMessage.SEVERITY_INFO,bundle.getString("parent")+" "+ bundle.getString("corrected")+" "+bundle.getString("to")+" "+bundle.getString("null"),""));


              //return null;
             }

              // to allow system messages to be changed if raaspi,  show parent code in next edit
             if(owner2Code.equals(masterSiteCode)){
               allowUpdate();     
             }else{
               superdotupdate();
             }    

           entityUpdated =true;
           setChangeDone(true);
           // better to return and show msg not sure why the redirect was there 
           // changedone did not work either because it got reinitilized and no change msg was being shown
           //or look into using jsf flush msg
           return "updated"; 
           //String viewId = FacesContext.getCurrentInstance().getViewRoot().getViewId();
           //return viewId + "?faces-redirect=true";// refresh

    }



    public String remove() {
     //jay added logic to delete related entities ie if a demo user is deleted then created employee should be deleted and/or
     // add logic to use employee resultlist rather than singleresult
     // useful for debugging validation failure and also to remove child entities first automatically(logic to be added)
     // some reversing logic needed for transactions aw well
     // allow raaspi user UH to delete SYSTEM records , needed for bad resource and blob etc
       //setDeletedMessage(createValueExpression(""));
        entityDeleted =false;
      // whats about other details like itemjobdetails etc?? 
      // add logic to adjust posting if invoice/payment
       if(getInstance().getA0xxukuxbvxxxxxxxxxxid().equals(customIdentity.getUsername())){
        FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
          FacesMessage.SEVERITY_ERROR,bundle.getString("delete")+" "+ bundle.getString("not")+" "+bundle.getString("allowed")+", "+bundle.getString("own")+" "+ bundle.getString("record"),""));
         return null;
       }
      // allow raaspi to delete SYSTEM records
      if((getInstance().getZzxxu2oxxhxxxxxxxxxxowner2().equals("SYSTEM") && !owner2Code.equals("myflowp") && !owner2Code.equals(masterSiteCode)) || (!getInstance().getZzxxu2oxxhxxxxxxxxxxowner2().equals("SYSTEM") && !getInstance().getZzxxu2oxxhxxxxxxxxxxowner2().equals(owner2Code))){
        FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
         FacesMessage.SEVERITY_ERROR,bundle.getString("delete")+" "+ bundle.getString("not")+" "+bundle.getString("allowed"),""));

                 bcontinue=false;
                 return null;
      }
      if (((customIdentity.getRestrict1() != null && customIdentity.getRestrict1().equals("D")) || customIdentity.hasRole("VW")) && !getInstance().getZ5xxutoxlhxxxxxxxxxxowner().equals(ownerCode)  ){ 
        FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
         FacesMessage.SEVERITY_ERROR,bundle.getString("delete")+" "+ bundle.getString("not")+" "+bundle.getString("allowed"),""));

                 bcontinue=false;
                 return null;
      }

        // entities without details ,function ux
        try {
         superdotremove();
        } catch ( Exception e){
          FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
           FacesMessage.SEVERITY_INFO,bundle.getString("delete")+" "+ bundle.getString("error")+" "+e.getMessage(),""));

           return null;
        }

           entityDeleted =true;
           setChangeDone(true);
           timeStamp = new SimpleDateFormat("yyyy.MM.dd.HH.mm.ss").format(new Date());
           FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
          FacesMessage.SEVERITY_INFO,bundle.getString("deleted")+" "+bundle.getString("selected")+" "+"User"+" "+"at"+" "+timeStamp,""));
           return "removed"; 



    }


    /**
    * save in clobdata key being accounts,import,csv,1 note when calling clobdata needes extra character before import
    * The following methods supports import of csv data into entities.
    * A file containing csv data is uploaded in clob db under clob key kkkqqqseq where ttt is dollar{entityName}
    * kkk is "dollar{entityName} like accounts" and qqq is "csv" seq is 1
    * The csv data must have the first row containing name of target table columns corresponding to csv data
    * if there is data but no target column name then ,,
    * a template containing the matching column names can be downloaded using import wizard 
    * importCsvData method copies 
    * @param args -option one is to pass clob key  
    * @return none void type
    * @exception None.
    * @see " "
    * in the table called options, column called value will have filter value which will dictate whether it will be hidden,visible or 
    * to use the specified value rather than value in column called options
    * to hide a value in column called options for say activity entity put h=1a. to hide for both item and activity put value= h=1a,18
    * to show a value in column called options for say activity entity put s=1a. to show for both item and activity put value= s=1a,18
    * to show based on locale put in pupose ca=manual-cheque us=manual-check  in value put ca=m us=m
    * to use value rather than whats in options colimn, use v=xxx where xxx is the value.
    */



    /**
    * persist true means came from copynsave ie convert order to invoice etc , false comes from show outstanding and resets totals but no copy
    * called by xxEdit convertToxx button to copy existing entity say order date into new invoice along with the details
    * Similar function as AddWithDetails or AddProductsToOrder but they are interactive, this one loops through existing data
    * Flow:loops through each copy from item like quote,order or invoice
    *       persist -> showTempRunt -> createcDetails ->setParent sets parent totals (loops through as parent details created)
    *          -> PersistRunT prepares Totals for persist -> actual persist of parent and then detail instance
    *      loop back for each item to be copied
    *
    *@see "R3RestClient SyncData where series of order data comes as json values    "
    */




public boolean isBitSet(Integer a, Integer n){ 
 if (a == null){
  a=0;
 }
 return (a & (1 << n)) != 0; 
}





// set initCap via client, make it true now
        public boolean initCap() {
         //jay add logic to check client table if initCap is on or not
            return true;
        }



      /* parentProperty org.hibernate.mapping.Property(dxxxch1d3xwwqqhxxlxxcompany) parentParentPojo Entity: com.rcomputer.genapp.model.Dxxxch1d3xwwqqhxxlxxcompany */
      /* parentProperty org.hibernate.mapping.Property(dxxxiq155xwwqqhxxxxxresidency) parentParentPojo Entity: com.rcomputer.genapp.model.Dxxxiq155xwwqqhxxxxxresidency */
      /* parentProperty org.hibernate.mapping.Property(fxxxch122xhhxqhxxlxxdepartment) parentParentPojo Entity: com.rcomputer.genapp.model.Fxxxch122xhhxqhxxlxxdepartment */
      /* parentProperty org.hibernate.mapping.Property(fxxxch133xhhxqhxxlxxdivision) parentParentPojo Entity: com.rcomputer.genapp.model.Fxxxch133xhhxqhxxlxxdivision */
      /* parentProperty org.hibernate.mapping.Property(fxxxcq144xwwqqhxxxxxlocation) parentParentPojo Entity: com.rcomputer.genapp.model.Fxxxcq144xwwqqhxxxxxlocation */
      /* parentProperty org.hibernate.mapping.Property(fxxxuq111xwwqqhxxxxxaddressByMailtocode) parentParentPojo Entity: com.rcomputer.genapp.model.Fxxxuq111xwwqqhxxxxxaddress */
      /* parentProperty org.hibernate.mapping.Property(fxxxuq111xwwqqhxxxxxaddressByShiptocode) parentParentPojo Entity: com.rcomputer.genapp.model.Fxxxuq111xwwqqhxxxxxaddress */
      /* parentProperty org.hibernate.mapping.Property(yxxxch601xwwqqhxxxxxaccount) parentParentPojo Entity: com.rcomputer.genapp.model.Yxxxch601xwwqqhxxxxxaccount */
    // compositekeylist is 
      //generated for non composite foreign fields
         public void validateAndSelectXxxxxxxxemployee(FacesContext context,UIComponent toValidate,Object value) {
            if (skipValidation){
             //extended persist closes the copied from entity so validation will fail and we dont need validation at this point
             return;
            }
            // set bcontinue to true if set false by showrunt() at start of txn, because of property being null
            // jay not all showrunt() validate, vendor txn does not why??
            if(jxxxbh400xwwqqhxxxxxemployee == null && bcontinue == false){
             bcontinue=true;
            }
            jxxxbh400xwwqqhxxxxxemployee  = null;
            String enteredValue = (String) value;
            String jay = toValidate.getAttributes().get("required").toString();
            if (!jay.contains("true")  && (enteredValue ==null || enteredValue.trim().isEmpty())){ 
             return;
            }
            if (jay.contains("true")  && (enteredValue ==null || enteredValue.trim().isEmpty())){  
             FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
              FacesMessage.SEVERITY_WARN,bundle.getString("employee")+" "+ bundle.getString("no")+" "+ bundle.getString("value"),""));
             bcontinue=false;
             return;
            }
            urlIndex=urlName.indexOf(">>");
            if (urlIndex != -1){
             enteredValue=enteredValue.substring(0,urlIndex);
            }
            Jxxxbh400xwwqqhxxxxxemployee cc = jxxxbh400xwwqqhxxxxxemployeeHome.getInstance();
	      try {
			 List<Jxxxbh400xwwqqhxxxxxemployee> results =  entityManager.createQuery("select cc from Jxxxbh400xwwqqhxxxxxemployee cc where cc.a0xxuktxbvxxxxxxxxxxemployee = :keyOfEntity AND cc.zzxxu2oxxhxxxxxxxxxxowner2=:owner2 order by cc.a0xxuobxbxxxxxxxxxxxsid asc")
				.setParameter("keyOfEntity", enteredValue).setParameter("owner2", owner2Code).getResultList();                      
                        if(!results.isEmpty()){
                            jxxxbh400xwwqqhxxxxxemployee = results.get(0);
                            if (results.size()>1){
                             FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                                     FacesMessage.SEVERITY_WARN,bundle.getString("employee")+" "+ bundle.getString("multiple")+" "+ bundle.getString("results")+", "+ bundle.getString("one")+" "+ bundle.getString("selected"),""));
                        
                            }           
                        }
                        else{
                         FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                                     FacesMessage.SEVERITY_WARN,bundle.getString("employee")+" "+ enteredValue+" "+bundle.getString("not")+" "+ bundle.getString("found")+", "+ bundle.getString("create")+" "+ bundle.getString("first"),""));
                                     return;                           
                        } 
                        if (jxxxbh400xwwqqhxxxxxemployee != null ) {
                             // that's fine - It should exist.
                             // check if selfreferencing foreign field
                           if(this.instance == null){
                            getInstance();
                            if(this.instance == null){//
                             FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                              FacesMessage.SEVERITY_WARN,bundle.getString("User")+" "+bundle.getString("instance")+" "+ bundle.getString("empty")+", "+ bundle.getString("exit")+" "+ bundle.getString("and")+" "+ bundle.getString("try")+" "+ bundle.getString("again"),""));
                             return;
                            }
                           }
                           //jxxxbh400xwwqqhxxxxxemployee = jxxxbh400xwwqqhxxxxxemployeeHome.getDefinedInstance();
                          this.instance.setJxxxbh400xwwqqhxxxxxemployee(jxxxbh400xwwqqhxxxxxemployee);
                         /// check if atleast 1 detail persisted then assume a new item is being considered       
                         /// put a new flag to avoid query
                         ///if(trexuq233xwwqqhxxxxxcuquoteList.entityLessStatusDetailedList(trexuq233xwwqqhxxxxxcuquoteHome.instance.a0xxuobxbxxxxxxxxxxxsid,-1).size() ge 1 )
                         ///}                        
                           //if some other validation already failed, do not reset it 
                           if(bcontinue){
                            bcontinue=true;
                           }
                         }//end of shiptobill check
	      } catch (NoResultException nre) {
                 FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                   FacesMessage.SEVERITY_WARN,bundle.getString("Employee"),""));
                 throw new ValidatorException(msg);
              }
         }
         // check again if selfreferencing foreign field jxxxbh400xwwqqhxxxxxemployee yxxxuh566xwwqqwxxxxxuser jay may not be needed check edit.ftl
      /* parentProperty org.hibernate.mapping.Property(dxxxch1d3xwwqqhxxlxxcompany) parentParentPojo Entity: com.rcomputer.genapp.model.Dxxxch1d3xwwqqhxxlxxcompany */
      /* parentProperty org.hibernate.mapping.Property(fxxxcq144xwwqqhxxxxxlocation) parentParentPojo Entity: com.rcomputer.genapp.model.Fxxxcq144xwwqqhxxxxxlocation */
      /* parentProperty org.hibernate.mapping.Property(fxxxuq111xwwqqhxxxxxaddressByMailtocode) parentParentPojo Entity: com.rcomputer.genapp.model.Fxxxuq111xwwqqhxxxxxaddress */
      /* parentProperty org.hibernate.mapping.Property(fxxxuq111xwwqqhxxxxxaddressByShiptocode) parentParentPojo Entity: com.rcomputer.genapp.model.Fxxxuq111xwwqqhxxxxxaddress */
      /* parentProperty org.hibernate.mapping.Property(yxxxch601xwwqqhxxxxxaccount) parentParentPojo Entity: com.rcomputer.genapp.model.Yxxxch601xwwqqhxxxxxaccount */
    // compositekeylist is 
      //generated for non composite foreign fields
         public void validateAndSelectXxxxxxxxcustomer(FacesContext context,UIComponent toValidate,Object value) {
            if (skipValidation){
             //extended persist closes the copied from entity so validation will fail and we dont need validation at this point
             return;
            }
            // set bcontinue to true if set false by showrunt() at start of txn, because of property being null
            // jay not all showrunt() validate, vendor txn does not why??
            if(jxxxuq201xwwqqhxxxxxcustomer == null && bcontinue == false){
             bcontinue=true;
            }
            jxxxuq201xwwqqhxxxxxcustomer  = null;
            String enteredValue = (String) value;
            String jay = toValidate.getAttributes().get("required").toString();
            if (!jay.contains("true")  && (enteredValue ==null || enteredValue.trim().isEmpty())){ 
             return;
            }
            if (jay.contains("true")  && (enteredValue ==null || enteredValue.trim().isEmpty())){  
             FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
              FacesMessage.SEVERITY_WARN,bundle.getString("customer")+" "+ bundle.getString("no")+" "+ bundle.getString("value"),""));
             bcontinue=false;
             return;
            }
            urlIndex=urlName.indexOf(">>");
            if (urlIndex != -1){
             enteredValue=enteredValue.substring(0,urlIndex);
            }
            Jxxxuq201xwwqqhxxxxxcustomer cc = jxxxuq201xwwqqhxxxxxcustomerHome.getInstance();
	      try {
			 List<Jxxxuq201xwwqqhxxxxxcustomer> results =  entityManager.createQuery("select cc from Jxxxuq201xwwqqhxxxxxcustomer cc where cc.a0xxukxxbvxxxxxxxxxxcustomer = :keyOfEntity AND cc.zzxxu2oxxhxxxxxxxxxxowner2=:owner2 order by cc.a0xxuobxbxxxxxxxxxxxsid asc")
				.setParameter("keyOfEntity", enteredValue).setParameter("owner2", owner2Code).getResultList();                      
                        if(!results.isEmpty()){
                            jxxxuq201xwwqqhxxxxxcustomer = results.get(0);
                            if (results.size()>1){
                             FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                                     FacesMessage.SEVERITY_WARN,bundle.getString("customer")+" "+ bundle.getString("multiple")+" "+ bundle.getString("results")+", "+ bundle.getString("one")+" "+ bundle.getString("selected"),""));
                        
                            }           
                        }
                        else{
                         FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                                     FacesMessage.SEVERITY_WARN,bundle.getString("customer")+" "+ enteredValue+" "+bundle.getString("not")+" "+ bundle.getString("found")+", "+ bundle.getString("create")+" "+ bundle.getString("first"),""));
                                     return;                           
                        } 
                        if (jxxxuq201xwwqqhxxxxxcustomer != null ) {
                             // that's fine - It should exist.
                             // check if selfreferencing foreign field
                           if(this.instance == null){
                            getInstance();
                            if(this.instance == null){//
                             FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                              FacesMessage.SEVERITY_WARN,bundle.getString("User")+" "+bundle.getString("instance")+" "+ bundle.getString("empty")+", "+ bundle.getString("exit")+" "+ bundle.getString("and")+" "+ bundle.getString("try")+" "+ bundle.getString("again"),""));
                             return;
                            }
                           }
                           //jxxxuq201xwwqqhxxxxxcustomer = jxxxuq201xwwqqhxxxxxcustomerHome.getDefinedInstance();
                          this.instance.setJxxxuq201xwwqqhxxxxxcustomer(jxxxuq201xwwqqhxxxxxcustomer);
                         /// check if atleast 1 detail persisted then assume a new item is being considered       
                         /// put a new flag to avoid query
                         ///if(trexuq233xwwqqhxxxxxcuquoteList.entityLessStatusDetailedList(trexuq233xwwqqhxxxxxcuquoteHome.instance.a0xxuobxbxxxxxxxxxxxsid,-1).size() ge 1 )
                         ///}                        
                           //if some other validation already failed, do not reset it 
                           if(bcontinue){
                            bcontinue=true;
                           }
                         }//end of shiptobill check
	      } catch (NoResultException nre) {
                 FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                   FacesMessage.SEVERITY_WARN,bundle.getString("Customer"),""));
                 throw new ValidatorException(msg);
              }
         }
         // check again if selfreferencing foreign field jxxxuq201xwwqqhxxxxxcustomer yxxxuh566xwwqqwxxxxxuser jay may not be needed check edit.ftl
      /* parentProperty org.hibernate.mapping.Property(dxxxch1d3xwwqqhxxlxxcompany) parentParentPojo Entity: com.rcomputer.genapp.model.Dxxxch1d3xwwqqhxxlxxcompany */
      /* parentProperty org.hibernate.mapping.Property(fxxxcq144xwwqqhxxxxxlocation) parentParentPojo Entity: com.rcomputer.genapp.model.Fxxxcq144xwwqqhxxxxxlocation */
      /* parentProperty org.hibernate.mapping.Property(fxxxuq111xwwqqhxxxxxaddressByMailtocode) parentParentPojo Entity: com.rcomputer.genapp.model.Fxxxuq111xwwqqhxxxxxaddress */
      /* parentProperty org.hibernate.mapping.Property(fxxxuq111xwwqqhxxxxxaddressByShiptocode) parentParentPojo Entity: com.rcomputer.genapp.model.Fxxxuq111xwwqqhxxxxxaddress */
      /* parentProperty org.hibernate.mapping.Property(yxxxch601xwwqqhxxxxxaccount) parentParentPojo Entity: com.rcomputer.genapp.model.Yxxxch601xwwqqhxxxxxaccount */
    // compositekeylist is 
      //generated for non composite foreign fields
         public void validateAndSelectXxxxxxxxvendor(FacesContext context,UIComponent toValidate,Object value) {
            if (skipValidation){
             //extended persist closes the copied from entity so validation will fail and we dont need validation at this point
             return;
            }
            // set bcontinue to true if set false by showrunt() at start of txn, because of property being null
            // jay not all showrunt() validate, vendor txn does not why??
            if(jxxxuq300xwwqqhxxxxxvendor == null && bcontinue == false){
             bcontinue=true;
            }
            jxxxuq300xwwqqhxxxxxvendor  = null;
            String enteredValue = (String) value;
            String jay = toValidate.getAttributes().get("required").toString();
            if (!jay.contains("true")  && (enteredValue ==null || enteredValue.trim().isEmpty())){ 
             return;
            }
            if (jay.contains("true")  && (enteredValue ==null || enteredValue.trim().isEmpty())){  
             FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
              FacesMessage.SEVERITY_WARN,bundle.getString("vendor")+" "+ bundle.getString("no")+" "+ bundle.getString("value"),""));
             bcontinue=false;
             return;
            }
            urlIndex=urlName.indexOf(">>");
            if (urlIndex != -1){
             enteredValue=enteredValue.substring(0,urlIndex);
            }
            Jxxxuq300xwwqqhxxxxxvendor cc = jxxxuq300xwwqqhxxxxxvendorHome.getInstance();
	      try {
			 List<Jxxxuq300xwwqqhxxxxxvendor> results =  entityManager.createQuery("select cc from Jxxxuq300xwwqqhxxxxxvendor cc where cc.a0xxukxxbvxxxxxxxxxxvendor = :keyOfEntity AND cc.zzxxu2oxxhxxxxxxxxxxowner2=:owner2 order by cc.a0xxuobxbxxxxxxxxxxxsid asc")
				.setParameter("keyOfEntity", enteredValue).setParameter("owner2", owner2Code).getResultList();                      
                        if(!results.isEmpty()){
                            jxxxuq300xwwqqhxxxxxvendor = results.get(0);
                            if (results.size()>1){
                             FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                                     FacesMessage.SEVERITY_WARN,bundle.getString("vendor")+" "+ bundle.getString("multiple")+" "+ bundle.getString("results")+", "+ bundle.getString("one")+" "+ bundle.getString("selected"),""));
                        
                            }           
                        }
                        else{
                         FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                                     FacesMessage.SEVERITY_WARN,bundle.getString("vendor")+" "+ enteredValue+" "+bundle.getString("not")+" "+ bundle.getString("found")+", "+ bundle.getString("create")+" "+ bundle.getString("first"),""));
                                     return;                           
                        } 
                        if (jxxxuq300xwwqqhxxxxxvendor != null ) {
                             // that's fine - It should exist.
                             // check if selfreferencing foreign field
                           if(this.instance == null){
                            getInstance();
                            if(this.instance == null){//
                             FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                              FacesMessage.SEVERITY_WARN,bundle.getString("User")+" "+bundle.getString("instance")+" "+ bundle.getString("empty")+", "+ bundle.getString("exit")+" "+ bundle.getString("and")+" "+ bundle.getString("try")+" "+ bundle.getString("again"),""));
                             return;
                            }
                           }
                           //jxxxuq300xwwqqhxxxxxvendor = jxxxuq300xwwqqhxxxxxvendorHome.getDefinedInstance();
                          this.instance.setJxxxuq300xwwqqhxxxxxvendor(jxxxuq300xwwqqhxxxxxvendor);
                         /// check if atleast 1 detail persisted then assume a new item is being considered       
                         /// put a new flag to avoid query
                         ///if(trexuq233xwwqqhxxxxxcuquoteList.entityLessStatusDetailedList(trexuq233xwwqqhxxxxxcuquoteHome.instance.a0xxuobxbxxxxxxxxxxxsid,-1).size() ge 1 )
                         ///}                        
                           //if some other validation already failed, do not reset it 
                           if(bcontinue){
                            bcontinue=true;
                           }
                         }//end of shiptobill check
	      } catch (NoResultException nre) {
                 FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                   FacesMessage.SEVERITY_WARN,bundle.getString("Vendor"),""));
                 throw new ValidatorException(msg);
              }
         }
         // check again if selfreferencing foreign field jxxxuq300xwwqqhxxxxxvendor yxxxuh566xwwqqwxxxxxuser jay may not be needed check edit.ftl
    // compositekeylist is 
      //generated for non composite foreign fields
         public void validateAndSelectXxxxxxxxclientversion(FacesContext context,UIComponent toValidate,Object value) {
            if (skipValidation){
             //extended persist closes the copied from entity so validation will fail and we dont need validation at this point
             return;
            }
            // set bcontinue to true if set false by showrunt() at start of txn, because of property being null
            // jay not all showrunt() validate, vendor txn does not why??
            if(yxxxch522xhhxxhxxxxxclient == null && bcontinue == false){
             bcontinue=true;
            }
            yxxxch522xhhxxhxxxxxclient  = null;
            String enteredValue = (String) value;
            String jay = toValidate.getAttributes().get("required").toString();
            if (!jay.contains("true")  && (enteredValue ==null || enteredValue.trim().isEmpty())){ 
             return;
            }
            if (jay.contains("true")  && (enteredValue ==null || enteredValue.trim().isEmpty())){  
             FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
              FacesMessage.SEVERITY_WARN,bundle.getString("clientversion")+" "+ bundle.getString("no")+" "+ bundle.getString("value"),""));
             bcontinue=false;
             return;
            }
            urlIndex=urlName.indexOf(">>");
            if (urlIndex != -1){
             enteredValue=enteredValue.substring(0,urlIndex);
            }
            Yxxxch522xhhxxhxxxxxclient cc = yxxxch522xhhxxhxxxxxclientHome.getInstance();
	      try {
			 List<Yxxxch522xhhxxhxxxxxclient> results =  entityManager.createQuery("select cc from Yxxxch522xhhxxhxxxxxclient cc where cc.a0xxukxxbvxxxxxxxxxxclientversion = :keyOfEntity AND cc.zzxxu2oxxhxxxxxxxxxxowner2=:owner2 order by cc.a0xxuobxbxxxxxxxxxxxsid asc")
				.setParameter("keyOfEntity", enteredValue).setParameter("owner2", owner2Code).getResultList();                      
                        if(!results.isEmpty()){
                            yxxxch522xhhxxhxxxxxclient = results.get(0);
                            if (results.size()>1){
                             FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                                     FacesMessage.SEVERITY_WARN,bundle.getString("clientversion")+" "+ bundle.getString("multiple")+" "+ bundle.getString("results")+", "+ bundle.getString("one")+" "+ bundle.getString("selected"),""));
                        
                            }           
                        }
                        else{
                         FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                                     FacesMessage.SEVERITY_WARN,bundle.getString("clientversion")+" "+ enteredValue+" "+bundle.getString("not")+" "+ bundle.getString("found")+", "+ bundle.getString("create")+" "+ bundle.getString("first"),""));
                                     return;                           
                        } 
                        if (yxxxch522xhhxxhxxxxxclient != null ) {
                             // that's fine - It should exist.
                             // check if selfreferencing foreign field
                           if(this.instance == null){
                            getInstance();
                            if(this.instance == null){//
                             FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                              FacesMessage.SEVERITY_WARN,bundle.getString("User")+" "+bundle.getString("instance")+" "+ bundle.getString("empty")+", "+ bundle.getString("exit")+" "+ bundle.getString("and")+" "+ bundle.getString("try")+" "+ bundle.getString("again"),""));
                             return;
                            }
                           }
                           //yxxxch522xhhxxhxxxxxclient = yxxxch522xhhxxhxxxxxclientHome.getDefinedInstance();
                          this.instance.setYxxxch522xhhxxhxxxxxclient(yxxxch522xhhxxhxxxxxclient);
                         /// check if atleast 1 detail persisted then assume a new item is being considered       
                         /// put a new flag to avoid query
                         ///if(trexuq233xwwqqhxxxxxcuquoteList.entityLessStatusDetailedList(trexuq233xwwqqhxxxxxcuquoteHome.instance.a0xxuobxbxxxxxxxxxxxsid,-1).size() ge 1 )
                         ///}                        
                           //if some other validation already failed, do not reset it 
                           if(bcontinue){
                            bcontinue=true;
                           }
                         }//end of shiptobill check
	      } catch (NoResultException nre) {
                 FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                   FacesMessage.SEVERITY_WARN,bundle.getString("Clientversion"),""));
                 throw new ValidatorException(msg);
              }
         }
         // check again if selfreferencing foreign field yxxxch522xhhxxhxxxxxclient yxxxuh566xwwqqwxxxxxuser jay may not be needed check edit.ftl


public boolean keyExists(String key){
                //key has companyName or lastname+random or companyName or lastname+firstName+random, so if say first 8 chrs match to existing key then possible dupl
                // first 8 chosen rather than 16 to avoid short last and first names having random ss in key 
                // but need to check farther using email if present or phone # 
                // in case of import we need more checking
                String jay="";
                 key=key.substring(0,7).toLowerCase();
                 Yxxxuh566xwwqqwxxxxxuser cc = this.getInstance();
	try {
                        List<Yxxxuh566xwwqqwxxxxxuser> results= entityManager
                         .createQuery(
                          "select cc from Yxxxuh566xwwqqwxxxxxuser cc where lower(cc.a0xxukuxbvxxxxxxxxxxid) like :keyOfEntity AND cc.zzxxu2oxxhxxxxxxxxxxowner2=:owner2 order by cc.a0xxuobxbxxxxxxxxxxxsid asc")
                          .setParameter("keyOfEntity", key+"%").setParameter("owner2", owner2Code)
                          .getResultList();
                        if(!results.isEmpty()){
                         // loop through and pick most likely one ie check last name and first name
                         for (Yxxxuh566xwwqqwxxxxxuser yxxxuh566xwwqqwxxxxxuserk : results) {
                          if (yxxxuh566xwwqqwxxxxxuserk != null) {
                           // cannot be sure yet can add other phones later
                            return false;
                           }
                         }
			}
                       } catch (NoResultException nre) {
                         // that's fine - It should not exist.
                         // added extra logic to check other fields like say email exist 
                          
                } catch ( Exception e){
                  // error consider as dupilcate and skip   
                  FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                   FacesMessage.SEVERITY_WARN,bundle.getString("key")+" "+ key+" "+bundle.getString("error")+" "+bundle.getString("in")+" "+bundle.getString("key")+" "+bundle.getString("exists")+" "+bundle.getString("check")+", "+ bundle.getString("cause")+" "+ e.getMessage(),""));

                  return true;
                }
                return false;

}



//yxxxuh566xwwqqwxxxxxuser
	public void validateKeyDuplicateId(FacesContext context,UIComponent toValidate,Object value) {

            String enteredValue = (String) value;
            Yxxxuh566xwwqqwxxxxxuser cc = this.getInstance();
            if (this.isManaged()){
             return;
            }
            // if composite natural key like in resource we need multiple field check
            // rate table do not check via jsf
            // check for dup stepname, if dupl and step also dupl then reject in persist logic
            // jay to add
 
	      try {
			Yxxxuh566xwwqqwxxxxxuser cc1 = (Yxxxuh566xwwqqwxxxxxuser) entityManager.createQuery("select cc from Yxxxuh566xwwqqwxxxxxuser cc where cc.a0xxukuxbvxxxxxxxxxxid = :keyOfEntity AND cc.zzxxu2oxxhxxxxxxxxxxowner2=:owner2 order by cc.a0xxuobxbxxxxxxxxxxxsid asc")
				.setParameter("keyOfEntity", enteredValue).setParameter("owner2", owner2Code).getSingleResult();
			if (cc1 != null ) {
                         FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                            FacesMessage.SEVERITY_WARN,bundle.getString("entered")+" "+bundle.getString("key")+" "+ bundle.getString("already")+" "+ bundle.getString("exists"),""));

			 throw new ValidatorException(msg);

			     // that's bad - It should not exist if add ie not managed
			}
	      } catch (NoResultException nre) {
		// Ok		throw new ValidatorException(new FacesMessage("Does not exist"));
              } catch (Exception e) {
                  FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                    FacesMessage.SEVERITY_ERROR,bundle.getString("duplicate")+" "+bundle.getString("key")+" "+bundle.getString("check")+" "+bundle.getString("failed")+" " + e.getMessage(),""));
                throw new ValidatorException(msg);
              }

	}









    public String more() {
    
  // 56 now a new item may be selected, so clear the old item values

     totaldel=new BigDecimal("0.0");
     totalmis=new BigDecimal("0.0");
     // make a new method describeStatus(int status)
       if(!isBitSet(this.instance.getZ1xxzzfxhhxxxxxxxxxxstatusfl(),_mactive) && this.getLastItemLine() == 2){ 
        if (customIdentity.isDebug()){ 
         FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
          FacesMessage.SEVERITY_INFO,bundle.getString("Further")+ " "+bundle.getString("edit")+ " "+bundle.getString("not")+" "+bundle.getString("allowed")+ ", "+bundle.getString("current")+ " "+bundle.getString("status")+" "+describeStatus(this.instance.getZ1xxzzfxhhxxxxxxxxxxstatusfl()),""));
        }  
        return null;
       }
     totalbaseamt=new BigDecimal("0.0");
     moreActive=true;
     nextShow=true;
     if(!restEntity && !cartPoStatus.equals("e")){
      FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
       FacesMessage.SEVERITY_INFO,bundle.getString("Manual")+ " "+bundle.getString("adjustment")+ " "+bundle.getString("fields")+" "+bundle.getString("like")+ " "+bundle.getString("MiscCharges")+ " "+bundle.getString("under")+" "+bundle.getString("More")+" "+bundle.getString("Fields")+ " "+bundle.getString("can")+ " "+bundle.getString("be")+", "+bundle.getString("used")+" "+bundle.getString("now")+", "+bundle.getString("if")+ " "+bundle.getString("needed")+" "+bundle.getString("before"),""));
      FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
       FacesMessage.SEVERITY_INFO,bundle.getString("using")+ " "+bundle.getString("save")+ " "+bundle.getString("next")+" "+bundle.getString("line")+ " "+bundle.getString("button")+" "+bundle.getString("to")+" "+bundle.getString("add")+" "+bundle.getString("this")+" "+bundle.getString("item"),""));
     }
     return null;
    }




    





/*
currentClientClass 
*/
	public boolean getInRegistrationAndCreateUser() {
		return inRegistrationAndCreateUser;
	}

	public void setInRegistrationAndCreateUser(boolean inRegistrationAndCreateUser) {
		this.inRegistrationAndCreateUser = inRegistrationAndCreateUser;
	}
	public String getSubKey() {
		return subKey;
	}

	public void setSubKey(String subKey) {
		this.subKey = subKey;
	}


        String userSkin=null;
	public String getUserSkin() {
		return userSkin;
	}

	public void setUserSkin(String userSkin) {
		this.userSkin = userSkin;
	}

        public void setUserTheme(){
         // nullify temp skin skint so that new skin change take effect
         skinBean.setSkint(null);
         yxxxch575xwwqqhxxxxxuserprofl=yxxxuh566xwwqqwxxxxxuserList.getUserProfiles();
         if(yxxxch575xwwqqhxxxxxuserprofl==null){
           //create userprofl record
          try{          
           yxxxch575xwwqqhxxxxxuserprofl=yxxxch575xwwqqhxxxxxuserproflHome.getInstance();
           yxxxch575xwwqqhxxxxxuserprofl.setYxxxuh566xwwqqwxxxxxuser(this.getInstance());
           yxxxch575xwwqqhxxxxxuserprofl.setB1xxuxxrbvxxxxxxxxxxrow("00");
           yxxxch575xwwqqhxxxxxuserproflHome.setInstance(yxxxch575xwwqqhxxxxxuserprofl);
           yxxxch575xwwqqhxxxxxuserprofl.setB1xxuxxrbvxxxxxxxxxxscrcolor(userSkin);
           yxxxch575xwwqqhxxxxxuserproflHome.persist();
          } catch (Exception e) {
	    log.severe("Error accessing userprofl "+ e);
            FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                                     FacesMessage.SEVERITY_INFO,bundle.getString("user")+ " "+bundle.getString("profile")+ " "+bundle.getString("access")+ " "+bundle.getString("failed")+ " - "+e.getMessage(),""));
          }
         }else{
           yxxxch575xwwqqhxxxxxuserproflHome.setInstance(yxxxch575xwwqqhxxxxxuserprofl);
           yxxxch575xwwqqhxxxxxuserprofl.setB1xxuxxrbvxxxxxxxxxxscrcolor(userSkin);
           yxxxch575xwwqqhxxxxxuserproflHome.update();
         }
         
        }

        public String selfUpdateUser() {
         //userHome instance has values for user and pointer to customer and address which has data
        //setUpdatedMessage(createValueExpression(""));
         this.superUpdate();
         jxxxuq201xwwqqhxxxxxcustomerHome.clearInstance();
         jxxxuq201xwwqqhxxxxxcustomerHome.setInstance(this.instance.getJxxxuq201xwwqqhxxxxxcustomer());
         jxxxuq201xwwqqhxxxxxcustomerHome.superUpdate();

         fxxxuq111xwwqqhxxxxxaddressHome.clearInstance();
         fxxxuq111xwwqqhxxxxxaddressHome.setInstance(this.instance.getJxxxuq201xwwqqhxxxxxcustomer().getFxxxuq111xwwqqhxxxxxaddressByShiptocode());
         fxxxuq111xwwqqhxxxxxaddressHome.superUpdate();
         setChangeDone(true);
         return "superUpdated"; 
        }



	public Yxxxuh566xwwqqwxxxxxuser getOwnerUserData(String owner) {
        if(owner.length()<4){
         return null;
        }
        String userKey=owner.substring(0,owner.length()-3);
        try {
             Yxxxuh566xwwqqwxxxxxuser user =(Yxxxuh566xwwqqwxxxxxuser) entityManager
					.createQuery(
							"select cc from Yxxxuh566xwwqqwxxxxxuser cc where cc.a0xxukuxbvxxxxxxxxxxid = :nKeyName and cc.zzxxu2oxxhxxxxxxxxxxowner2 = :owner2 order by cc.a0xxuobxbxxxxxxxxxxxsid asc")
					.setParameter("nKeyName",userKey)
					.setParameter("owner2", owner2Code)
					.getSingleResult();
          if (user != null){
           return user; 
          }
          else{
           return null;
          }
      
        }
        catch(Exception zzz){
        FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                                     FacesMessage.SEVERITY_WARN,bundle.getString("yxxxuh566xwwqqwxxxxxuser")+" "+bundle.getString("error")+" "+ zzz.getMessage(),""));
          return null;
        }              

     }

    /**
    * The following method deletes temp users created in shopping cart addProductToOrder who dropped out ie alevel null 
    * or users who never activated
    * should also drop temp customer via deleteDetails and temp cuorder created but not abondoned
    * @param args not used
    * @return void
    * @exception instance creation error.
    * @see 
    * function to add create usageby records to capture ip (later geo location ie country,state,city) and how many per
    * location by periods
    * use upto 5 predefined ips(countries) in client table and rest as others, capture cuorder item if any
    */ 
        public Integer deleteStatDropOuts(String action) {
                 //dropout users-dd or dc, inactive signup users-sd/sc, inactive user-ud/uc
		 try { 
                   calendar = Calendar.getInstance();
                   tempCount=0;
                   List<Yxxxuh566xwwqqwxxxxxuser> listofuser=yxxxuh566xwwqqwxxxxxuserList.getResultListMaxSet(1200) ;
                   // otherwise list has wrong maxresult
                   yxxxuh566xwwqqwxxxxxuserList.setMaxResultsVal(6);
		   Iterator<Yxxxuh566xwwqqwxxxxxuser> itrg = listofuser.iterator();
		   itrg = listofuser.iterator();
	           while (itrg.hasNext()) {
		     yxxxuh566xwwqqwxxxxxuserli = itrg.next();
                     // alevel null for drop out users 
                     if(yxxxuh566xwwqqwxxxxxuserli.getZ2xxcztxlxxxxxxxxxxxstatusfldt()==null){
                      continue;
                     } 
                     calendare.setTime(yxxxuh566xwwqqwxxxxxuserli.getZ2xxcztxlxxxxxxxxxxxstatusfldt());
                     //dd/dc
                     if(action.equals("dd") || action.equals("dc")){
                      if(action.equals("dd")){
                       calendar.add(Calendar.DATE, -30);//30 days grace , assuming login updates user statusfldt
                      } 
                      if(action.equals("dc")){
                       calendar.add(Calendar.DATE, -20);//20 days grace and another 10 days before delete
                      }

                      if(calendare.before(calendar) && yxxxuh566xwwqqwxxxxxuserli.getC2xxuxuaiv38xxxxxxxxalevel()==null ){
                        //remove profile first jay add logic to remove related customers
                        for (Yxxxch575xwwqqhxxxxxuserprofl glDetail : yxxxuh566xwwqqwxxxxxuserList.entityDetailedList(yxxxuh566xwwqqwxxxxxuserli.getA0xxuobxbxxxxxxxxxxxsid())) {
                         if(action.equals("dd")){
                          // flush did not work if in loop xorxeh66exwwqqhxxxxxgentriesdetailsHome.remove();
                          deleteDetails(yxxxuh566xwwqqwxxxxxuserli.getA0xxuobxbxxxxxxxxxxxsid());
                         }
                        }
                        tempCount=tempCount+1;
                      }
                      yxxxuh566xwwqqwxxxxxuserHome.setInstance(yxxxuh566xwwqqwxxxxxuserli);
                      if(action.equals("dd")){
                       yxxxuh566xwwqqwxxxxxuserHome.remove();
                      }
                     }
                     //sd/sc
                     if(action.equals("sd") || action.equals("sc")){
                      if(action.equals("sc")){
                       calendar.add(Calendar.DATE, -10);//10 days grace
                      } 
                      if(action.equals("sc")){
                       calendar.add(Calendar.DATE, -3);//3 days grace
                      } 
                      if(calendare.before(calendar) && (yxxxuh566xwwqqwxxxxxuserli.getC9xxuxxxbvxxxxxxxxxxactivationkey() !=null && !yxxxuh566xwwqqwxxxxxuserli.getC9xxuxxxbvxxxxxxxxxxactivationkey().isEmpty()) ){
                       //remove profile first jay add logic to remove related customers
                       for (Yxxxch575xwwqqhxxxxxuserprofl glDetail : yxxxuh566xwwqqwxxxxxuserList.entityDetailedList(yxxxuh566xwwqqwxxxxxuserli.getA0xxuobxbxxxxxxxxxxxsid())) {
                        if(action.equals("sd")){
                         // flush did not work if in loop xorxeh66exwwqqhxxxxxgentriesdetailsHome.remove();
                         deleteDetails(yxxxuh566xwwqqwxxxxxuserli.getA0xxuobxbxxxxxxxxxxxsid());
                        }
                        tempCount=tempCount+1;
                       }
                       yxxxuh566xwwqqwxxxxxuserHome.setInstance(yxxxuh566xwwqqwxxxxxuserli);
                       if(action.equals("sd")){
                        yxxxuh566xwwqqwxxxxxuserHome.remove();
                       }
                      }
                     }
                     if(action.equals("ud") || action.equals("uc") ){
                      if(action.equals("ud")){
                       calendar.add(Calendar.DATE, -40);//40 days grace , login updates userprofl statusfldt
                      } 
                      if(action.equals("uc")){
                       calendar.add(Calendar.DATE, -30);//30 days grace
                      }
                      //use userprofl date
                      yxxxch575xwwqqhxxxxxuserprofl=yxxxuh566xwwqqwxxxxxuserList.getUserProfiles();
                      if(yxxxch575xwwqqhxxxxxuserprofl != null){
                       calendare.setTime(yxxxch575xwwqqhxxxxxuserprofl.getZ2xxcztxlxxxxxxxxxxxstatusfldt());
                      }
                      if(calendare.before(calendar) && yxxxuh566xwwqqwxxxxxuserli.getZ2xxcztxlxxxxxxxxxxxstatusfldt() !=null ){
                       //remove profile first jay add logic to remove related customers
                       for (Yxxxch575xwwqqhxxxxxuserprofl glDetail : yxxxuh566xwwqqwxxxxxuserList.entityDetailedList(yxxxuh566xwwqqwxxxxxuserli.getA0xxuobxbxxxxxxxxxxxsid())) {
                        if(action.equals("ud")){
                         // flush did not work if in loop xorxeh66exwwqqhxxxxxgentriesdetailsHome.remove();
                         deleteDetails(yxxxuh566xwwqqwxxxxxuserli.getA0xxuobxbxxxxxxxxxxxsid());
                        }
                        tempCount=tempCount+1;
                       }
                       yxxxuh566xwwqqwxxxxxuserHome.setInstance(yxxxuh566xwwqqwxxxxxuserli);
                       if(action.equals("ud")){
                        yxxxuh566xwwqqwxxxxxuserHome.remove();
                       }
                      }
                     } 
                   }//end of while
                   if(action.equals("dd")){
                    FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                     FacesMessage.SEVERITY_INFO,bundle.getString("dropout")+" "+bundle.getString("users")+" "+bundle.getString("older")+" "+bundle.getString("than")+ sdf.format(calendar.getTime())+" "+bundle.getString("now")+" "+bundle.getString("deleted"),""));
                    return null;
                   }
                   if(action.equals("dc")){
                    return tempCount;
                   } 
                   if(action.equals("sd")){
                    FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                     FacesMessage.SEVERITY_INFO,bundle.getString("signup")+" "+bundle.getString("users")+" "+bundle.getString("older")+" "+bundle.getString("than")+ sdf.format(calendar.getTime())+" "+bundle.getString("now")+" "+bundle.getString("deleted"),""));
                    return null;
                   }
                   if(action.equals("sc")){
                    return tempCount;
                   } 
                   if(action.equals("ud")){
                    FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                     FacesMessage.SEVERITY_INFO,bundle.getString("inactive")+" "+bundle.getString("users")+" "+bundle.getString("older")+" "+bundle.getString("than")+ sdf.format(calendar.getTime())+" "+bundle.getString("now")+" "+bundle.getString("deleted"),""));
                    return null;
                   }
                   if(action.equals("uc")){
                    return tempCount;
                   } 

		 } catch (Exception e) {
                   FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                                     FacesMessage.SEVERITY_ERROR,bundle.getString("user")+" "+bundle.getString("purge")+" "+bundle.getString("failed")+" "+e.getMessage(),""));
			 // log.severe( "user purge error "+e.getMessage());
 			            bcontinue= false;
                    return null;
     	         }
                 
                 return null;

        
        }






/*
currentUserClass 
*/
	public String getCurrentUserFieldValue(String p) {
            String result="";
            Yxxxuh566xwwqqwxxxxxuser user=null;
           try{
            // identity can have username from lastlogon, so use customIdentity.getOwner() rather than Identity.instance().getUsername()
            // owner is logonid+cdd ie companydivisiondepartment or sss if no comany hierarchy
            // username is ok and same as logonid if logged in
              user =(Yxxxuh566xwwqqwxxxxxuser) entityManager
					.createQuery(
							"select cc from Yxxxuh566xwwqqwxxxxxuser cc where cc.a0xxukuxbvxxxxxxxxxxid = :nKeyName and cc.zzxxu2oxxhxxxxxxxxxxowner2 = :owner2 order by cc.a0xxuobxbxxxxxxxxxxxsid asc")
					.setParameter("nKeyName",customIdentity.getUsername())
					.setParameter("owner2", owner2Code)
					.getSingleResult();
            }catch(Exception exc){
             FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
               FacesMessage.SEVERITY_INFO,bundle.getString("user")+ " "+customIdentity.getUsername()+" "+bundle.getString("record")+ " "+bundle.getString("read")+ " "+bundle.getString("failed")+", "+exc.getMessage(),""));
             user=null;
            }

		if (user != null) {
                  if (p.equals("e")){
                    if (user.getJxxxbh400xwwqqhxxxxxemployee() != null) { 
                     result=user.getJxxxbh400xwwqqhxxxxxemployee().getA0xxuktxbvxxxxxxxxxxemployee();
                    }
                  }
                  else {
                   if (p.equals("c")){
                    if (user.getJxxxuq201xwwqqhxxxxxcustomer() != null) { 
                     result=user.getJxxxuq201xwwqqhxxxxxcustomer().getA0xxukxxbvxxxxxxxxxxcustomer();
                    }
                   }
                   else {   
                    if (p.equals("v")){
                     if (user.getJxxxuq300xwwqqhxxxxxvendor() != null) { 
                       result=user.getJxxxuq300xwwqqhxxxxxvendor().getA0xxukxxbvxxxxxxxxxxvendor();
                     }
                    }
                    else{
                     if (p.equals("l")){
                      if (user.getYxxxch522xhhxxhxxxxxclient() != null) { 
                        result=user.getYxxxch522xhhxxhxxxxxclient().getD8xxuzxdbvxxxxxxxxxxenterprisecompcode();
                      }
                     }
                     else{
                      if (p.equals("d")){
                         result=user.getY8xxuzdrbvxxxxxxxxxxdocmnt();
                      }
                     }
                    }
                   }
                  }
                  if (result.trim().length() == 0) { 
                    return "Select value"; 
                  }
                  else{
                    return result;
                  }
           }
		else{
                 FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                  FacesMessage.SEVERITY_INFO,bundle.getString("user")+ " "+bundle.getString("table")+ " "+bundle.getString("not")+ " "+bundle.getString("accessible"),""));
                  return "Select value"; 
			
		}
      }

/*
acperiodClass Y
*/
        private Yxxxch621xwwqqhxxxxxacperiod acperiod;
	public String getAcperiodFieldValue(String p) {
            String result="";
            //dont use owner2Code until genApp finished  needs try catch
            try{
             acperiod =(Yxxxch621xwwqqhxxxxxacperiod) entityManager
		.createQuery(
		 "select cc from Yxxxch621xwwqqhxxxxxacperiod cc where cc.a0xxukwpbv47xxxxxxxxrowid = :nKeyName  AND cc.zzxxu2oxxhxxxxxxxxxxowner2=:owner2 order by cc.a0xxuobxbxxxxxxxxxxxsid asc")
		.setParameter("nKeyName","01").setParameter("owner2", owner2Code)
		.getSingleResult();
            }catch(Exception exc){
             FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
               FacesMessage.SEVERITY_INFO,bundle.getString("account")+ " "+bundle.getString("period")+ " "+bundle.getString("01")+ " "+bundle.getString("read")+ " "+bundle.getString("failed")+", "+exc.getMessage(),""));
             acperiod=null;
            }

	    if (acperiod != null) {
                  if (p.equals("cp")){
                    if(acperiod.getA1xxuxwpbv47xxxxxxxxcurrperiod() != null){
                     return acperiod.getA1xxuxwpbv47xxxxxxxxcurrperiod();
                    }else{
                     return "12";//assume period 12
                    }
                  }
                  else {
                    if(acperiod.getB2xxdwerbvxxxxxxxxxxcurrbusdate() !=null){
                     return acperiod.getB2xxdwerbvxxxxxxxxxxcurrbusdate().toString();
                    }else{
                      SimpleDateFormat ss = new SimpleDateFormat("yyyy-MM-dd");

                     return ss.format(calendar.getTime()).toString();// assume toDay
                    }
                  }
            }
	    else{
                 FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                  FacesMessage.SEVERITY_INFO,bundle.getString("account")+ " "+bundle.getString("period")+ " "+bundle.getString("table")+ " "+bundle.getString("not")+ " "+bundle.getString("accessible"),""));

                  bcontinue=false;
			return null;
			
           }
      }
	public Date getAcperiodDateFieldValue(String p) {
            String result="";
             Yxxxch621xwwqqhxxxxxacperiod acperiod =(Yxxxch621xwwqqhxxxxxacperiod) entityManager
					.createQuery(
							"select cc from Yxxxch621xwwqqhxxxxxacperiod cc where cc.a0xxukwpbv47xxxxxxxxrowid = :nKeyName  AND cc.zzxxu2oxxhxxxxxxxxxxowner2=:owner2 order by cc.a0xxuobxbxxxxxxxxxxxsid asc")
					.setParameter("nKeyName","01").setParameter("owner2", owner2Code)
					.getSingleResult();

		if (acperiod != null) {
                  if (p.equals("cbd")){
                    return acperiod.getB2xxdwerbvxxxxxxxxxxcurrbusdate();
                  }
                  else{
			   return null;
                  }
           }
		else{
                  FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                                     FacesMessage.SEVERITY_INFO,bundle.getString("accounting")+ " "+bundle.getString("period")+ " "+bundle.getString("table")+ " "+bundle.getString("not")+" "+bundle.getString("accessible"),""));

                  bcontinue=false;
			return null;
			
		}
      }


	public void setShowKeyFields() {
	}
        //cartPoPicked is a flag to allow/suppress key generation and is set to true in cartpersist if po already exists  
        private boolean cartPoPicked=false;
        private boolean restEntity =false;
     // vendor invoice uses key from supplier , add more logic to handle it
	private boolean picked = false;
	private boolean multipicked = false;

     //jay document purpose of using last and show. last may be to reuse what was used recently
     // and show may be for dynamic rendering look at useraux as well 
     // note the lastItemEntity is used in forum to hold replyTo , others are not used
	private boolean bcontinue = true;
	private boolean moreActive = false;
	private boolean includeNext = false;
/*The following needs to be defined only if we need an instance of an entity which is not already generated via default seam gen. example if the entity is not a foreign key like Journal entity.
For the Foreign key instance, use the variables used in wire() where a getInstance is issued.For others use the variable defined below and issue a getInstance later.
*/




      private Integer lastItemLine=new Integer(0);
      //@Begin(join=true)

	public BigDecimal getKeyedQuantity() {
		return keyedQuantity;
	}

	public void setKeyedQuantity(BigDecimal keyedQuantity) {
		this.keyedQuantity = keyedQuantity;
      }

	public BigDecimal getTotalbaseamt() {
		return totalbaseamt;
	}

	public void setTotalbaseamt(BigDecimal totalbaseamt) {
		this.totalbaseamt = totalbaseamt;
	}
        //
	public BigDecimal getChange() {
		return change;
	}

	public void setChange(BigDecimal change) {
		this.change = change;
	}

	public BigDecimal getTotalmis() {
		return totalmis;
	}

	public void setTotalmis(BigDecimal totalmis) {
		this.totalmis = totalmis;
	}

	public void setDetailMis(BigDecimal detailMis) {
		this.detailMis = detailMis;
	}

	public void setDetailDel(BigDecimal detailDel) {
		this.detailDel = detailDel;
	}

	public void setDetailTax1(BigDecimal detailTax1) {
		this.detailTax1 = detailTax1;
	}


	public void setTotaltax1(BigDecimal totaltax1) {
		this.totaltax1 = totaltax1;
	}

	public BigDecimal getTotaltax1() {
		return totaltax1;
	}

	public void setTotalamountTotal(BigDecimal amountTotal) {
		this.amountTotal = amountTotal;
	}

	public BigDecimal getTotalamountTotal() {
		return amountTotal;
	}

	public void setTotalqtyTotal(BigDecimal qtyTotal) {
		this.qtyTotal = qtyTotal;
	}

	public BigDecimal getTotalqtyTotal() {
		return qtyTotal;
	}
	public void setTotaltax2(BigDecimal totaltax2) {
		this.totaltax2 = totaltax2;
	}

	public BigDecimal getTotaltax2() {
		return totaltax2;
	}

	public void setTotaltax3(BigDecimal totaltax3) {
		this.totaltax3 = totaltax3;
	}

	public BigDecimal getTotaltax3() {
		return totaltax3;
	}

	public BigDecimal getTotaldel() {
		return totaldel;
	}

	public void setTotaldel(BigDecimal totaldel) {
		this.totaldel = totaldel;
	}

	public BigDecimal getTotalqty() {
		return totalqty;
	}
	public void setTotalqty(BigDecimal totalqty) {
		this.totalqty = totalqty;
	}

      public Integer getLastItemLine() {
       return lastItemLine;
      }

	public void setLastItemLine(Integer lastItemLine) {

		this.lastItemLine = lastItemLine;
	}

//jay look into automating the below logic using related property values
// getShow does not seem to be used?? may be future security
// The below is useed to handle foreign fields which are dropdown and the value cannot point to instance.foreign entity
// since the entity does not exist yet if create, list works
// enhance remembering last value by using userprofile table the way row and option value is used
	private boolean showyxxxuh566xwwqqwxxxxxuser = false;
	 private String  lastyxxxuh566xwwqqwxxxxxuser = " ";
	 private String  lastyxxxuh566xwwqqwxxxxxuserP = " ";
	public boolean getShowyxxxuh566xwwqqwxxxxxuser() {
		return this.showyxxxuh566xwwqqwxxxxxuser;
	}
	public void setShowyxxxuh566xwwqqwxxxxxuser(boolean showyxxxuh566xwwqqwxxxxxuser) {
		 this.showyxxxuh566xwwqqwxxxxxuser=showyxxxuh566xwwqqwxxxxxuser;
	}

	public String getLastyxxxuh566xwwqqwxxxxxuser() {
                if(this.instance !=null && this.instance.getA0xxukuxbvxxxxxxxxxxid() !=null){
                 lastyxxxuh566xwwqqwxxxxxuser= this.instance.getA0xxukuxbvxxxxxxxxxxid();
                }
		return this.lastyxxxuh566xwwqqwxxxxxuser;
	}

	public void setLastyxxxuh566xwwqqwxxxxxuser(String lastyxxxuh566xwwqqwxxxxxuser) {
		 this.lastyxxxuh566xwwqqwxxxxxuser=lastyxxxuh566xwwqqwxxxxxuser;
	}
	public String getLastyxxxuh566xwwqqwxxxxxuserP() {
                //if(this.instance !=null && this.instance.getYxxxuh566xwwqqwxxxxxuser().getA0xxukuxbvxxxxxxxxxxid() !=null){
                 //lastyxxxuh566xwwqqwxxxxxuserP= this.instance.getYxxxuh566xwwqqwxxxxxuser().getA0xxukuxbvxxxxxxxxxxid();
                //}
		return this.lastyxxxuh566xwwqqwxxxxxuserP;
	}

	public void setLastyxxxuh566xwwqqwxxxxxuserP(String lastyxxxuh566xwwqqwxxxxxuser) {
		 this.lastyxxxuh566xwwqqwxxxxxuserP=lastyxxxuh566xwwqqwxxxxxuser;
	}















	public boolean isPicked() {
		return picked;
	}
	public void setPicked(boolean picked) {
		this.picked= picked;
	}
	public boolean isMultipicked() {
		return multipicked;
	}


	public boolean isMoreActive() {
		return moreActive;
	}
	public boolean isEntityUpdated() {
		return entityUpdated;
	}


	public boolean isEntityDeleted() {
		return entityDeleted;
	}
     public Date getCurrentTime() {
        return new Date();
     }



































            public boolean addAnyAttachment(){
            return true;
            }
            public boolean updateShipmentOrPickUp(){
            return true;
            }





	     public boolean checkAccount() {
		bcontinue = true;
          try{
			           yxxxch601xwwqqhxxxxxaccount = (Yxxxch601xwwqqhxxxxxaccount) entityManager
					.createQuery(
							"select cc from Yxxxch601xwwqqhxxxxxaccount cc where cc.  a0xxukwxbvxxxxxxxxxxaccount=:accountv and cc.zzxxu2oxxhxxxxxxxxxxowner2 = :owner2  ")
					.setParameter("accountv", accountn).setParameter("owner2", owner2Code)
					.getSingleResult();

		 if (yxxxch601xwwqqhxxxxxaccount == null) {
                  FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                                     FacesMessage.SEVERITY_INFO,bundle.getString("account")+ " "+accountn+" "+bundle.getString("does")+ " "+bundle.getString("not")+" "+bundle.getString("exist"),""));
			bcontinue = false;
		 }
     		} catch (Exception e) {
			log.severe(" check account error "+accountn + e.getMessage());
			bcontinue = false;
           }

		 return bcontinue;
	}



public void markAll() {
 // this needs to be here rather than xxxList bean because of persitence
 try {
                List<Yxxxuh566xwwqqwxxxxxuser> listofStatus=yxxxuh566xwwqqwxxxxxuserList.getResultList() ;
	Iterator<Yxxxuh566xwwqqwxxxxxuser> itr = listofStatus.iterator();
	while (itr.hasNext()) {
	  yxxxuh566xwwqqwxxxxxuserli = itr.next();
                    yxxxuh566xwwqqwxxxxxuserli.setZ1xxzzfxhhxxxxxxxxxxstatusfl(yxxxuh566xwwqqwxxxxxuserli.getZ1xxzzfxhhxxxxxxxxxxstatusfl()|mmark);
	}
                  FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                  FacesMessage.SEVERITY_INFO,bundle.getString("marking")+ " "+bundle.getString("done"),""));
 } catch (Exception e) {
	log.severe("Mark iterator error " + e.getMessage());
 }
 
}
	public void unmarkAll() {
		// this needs to be here rather than xxxList bean because of persitence
		try {
			List<Yxxxuh566xwwqqwxxxxxuser> listofStatus = yxxxuh566xwwqqwxxxxxuserList
					.getResultList();
			Iterator<Yxxxuh566xwwqqwxxxxxuser> itr = listofStatus.iterator();
			while (itr.hasNext()) {
				yxxxuh566xwwqqwxxxxxuserli = itr.next();
				yxxxuh566xwwqqwxxxxxuserli.setZ1xxzzfxhhxxxxxxxxxxstatusfl(yxxxuh566xwwqqwxxxxxuserli
						.getZ1xxzzfxhhxxxxxxxxxxstatusfl()
						& _mmark);
			}
                        FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                                     FacesMessage.SEVERITY_INFO,bundle.getString("un")+" "+bundle.getString("marking")+ " "+bundle.getString("done"),""));
		} catch (Exception e) {
			log.severe("UnMark iterator error " + e.getMessage());
		}

	}

	public void toggleRowEditable(Integer id) {
          setYxxxuh566xwwqqwxxxxxuserA0xxuobxbxxxxxxxxxxxsid(id);
		getDefinedInstance();
		if (this.instance != null) {
			if (!isBitSet(this.instance.getZ1xxzzfxhhxxxxxxxxxxstatusfl(), _mclosed)) {
				this.instance.setZ1xxzzfxhhxxxxxxxxxxstatusfl(this.instance
						.getZ1xxzzfxhhxxxxxxxxxxstatusfl()
						& ~(1<<_mconsign));
			} else {
				this.instance.setZ1xxzzfxhhxxxxxxxxxxstatusfl(this.instance
						.getZ1xxzzfxhhxxxxxxxxxxstatusfl()
						| mconsign);
			}

                        FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                                     FacesMessage.SEVERITY_INFO,bundle.getString("edit")+ " "+bundle.getString("toggle")+ " "+bundle.getString("done"),""));

		} else {
			log.severe("toggleRowEditable error-this.instance null value ");
		}
	}


	public void toggleRowDeleteable(Integer id) {
           setYxxxuh566xwwqqwxxxxxuserA0xxuobxbxxxxxxxxxxxsid(id);
		getDefinedInstance();
		if (this.instance != null) {
			if (isBitSet(this.instance.getZ1xxzzfxhhxxxxxxxxxxstatusfl(), _mdel)) {
				this.instance.setZ1xxzzfxhhxxxxxxxxxxstatusfl(this.instance
						.getZ1xxzzfxhhxxxxxxxxxxstatusfl()
						& ~(1<<_mdel));
			} else {
				this.instance.setZ1xxzzfxhhxxxxxxxxxxstatusfl(this.instance
						.getZ1xxzzfxhhxxxxxxxxxxstatusfl()
						| mdel);
			}

                        FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                                     FacesMessage.SEVERITY_INFO,bundle.getString("delete")+ " "+bundle.getString("toggle")+ " "+bundle.getString("done"),""));

		} else {
			log.severe("toggleRowDeleteable error-this.instance null value ");
		}
	}


public boolean gethideAllMarked() {
 if (hideChosen){
                return true;
 }
 else {
             return false;
 }
}

public void sethideAllMarked(boolean chosen){
      this.hideChosen=chosen;
     }




public void deleteAllHidden() {
           // this needs to be here because of perstence
           // jay add more logic to check association ie referential integrity
                Integer count=0;

 try {
                List<Yxxxuh566xwwqqwxxxxxuser> listofStatus=yxxxuh566xwwqqwxxxxxuserList.getResultList() ;
	Iterator<Yxxxuh566xwwqqwxxxxxuser> itr = listofStatus.iterator();
         while (itr.hasNext()) {
	  yxxxuh566xwwqqwxxxxxuserli = itr.next();
                  if(isBitSet(yxxxuh566xwwqqwxxxxxuserli.getZ1xxzzfxhhxxxxxxxxxxstatusfl(),_mmark)){
                   count++;
                  }
                  
			}
                listofStatus=yxxxuh566xwwqqwxxxxxuserList.getResultList() ;
			itr = listofStatus.iterator();
			while (itr.hasNext()) {
			  yxxxuh566xwwqqwxxxxxuserli = itr.next();
                  if(isBitSet(yxxxuh566xwwqqwxxxxxuserli.getZ1xxzzfxhhxxxxxxxxxxstatusfl(),_mmark)){
		        // yxxxuh566xwwqqwxxxxxuserli.remove();
                  }
          }
 } catch (Exception e) {
    log.severe(" status field iterator error " + e.getMessage());
 }

}
 public void copyAllMarked() {
 // rename it to copyAllFlagged 
  //60

      try{
        // jay should reuse ComponentName rather than many variables like   itemChecked, listofstatus takes memory
        String oldKey="";
        String oldDescr="";
        int index = 0;
        for (Yxxxuh566xwwqqwxxxxxuser itemChecked : yxxxuh566xwwqqwxxxxxuserList.getResultList()) {
            this.clearInstance();
            if (checked.get(index)) {
                entityManager.detach(itemChecked);
                      itemChecked.setA0xxuobxbxxxxxxxxxxxsid(null);
                       // add copy(1) etc using a variable to natural key field assign natural key itemChecked.setdollar{keyField?cap_first}(null);
                       oldKey=itemChecked.getA0xxukuxbvxxxxxxxxxxid();
                       if (oldKey.length()+5 <= 60){
                        oldKey=oldKey.substring(0,oldKey.length()-5);
                        itemChecked.setA0xxukuxbvxxxxxxxxxxid(oldKey+"-copy");
                       }
                       else{
                        itemChecked.setA0xxukuxbvxxxxxxxxxxid("c"+oldKey.substring(1));
                       } 
                      itemChecked.setZ1xxzzfxhhxxxxxxxxxxstatusfl(0);
                      itemChecked.setZ1xxzzfxhhxxxxxxxxxxstatusfl(itemChecked.getZ1xxzzfxhhxxxxxxxxxxstatusfl()| mcopy);
                       itemChecked.setZ2xxcztxlxxxxxxxxxxxstatusfldt(calendar.getTime());
                       itemChecked.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);
                      this.setInstance(itemChecked);
                      //is this a copy of SYSTEM record
                      if (this.instance.getZzxxu2oxxhxxxxxxxxxxowner2().equals("SYSTEM")){
                       this.instance.setZzxxu2oxxhxxxxxxxxxxowner2(owner2Code);
                      }
                     this.persist();
                      FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                                     FacesMessage.SEVERITY_INFO,bundle.getString("copy")+ " "+bundle.getString("done"),""));

            }
            index++;
        }

        checked.clear(); 
      }
      catch ( Exception e){
      FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                                     FacesMessage.SEVERITY_INFO,bundle.getString("checked")+ " "+bundle.getString("items")+ " "+bundle.getString("update")+ " "+bundle.getString("error")+" "+e.getMessage(),""));
      }

 }

 public void updateAllFlagged() {
 // this needs to be here because of perstence jay5 enhance this using getallflagged 
        int index = 0;

      try{
        // jay should reuse ComponentName rather than many variables like   itemChecked, listofstatus takes memory
        for (Yxxxuh566xwwqqwxxxxxuser itemChecked : yxxxuh566xwwqqwxxxxxuserList.getResultList()) {
            this.clearInstance();
            if (checked.get(index)) {
                this.setInstance(itemChecked);
                this.update();
            }
            index++;
        }

        checked.clear(); 
                        FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                                     FacesMessage.SEVERITY_INFO,bundle.getString("update")+ " "+bundle.getString("done"),""));

      }
      catch ( Exception e){
      FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                                     FacesMessage.SEVERITY_INFO,bundle.getString("checked")+ " "+bundle.getString("items")+ " "+bundle.getString("update")+ " "+bundle.getString("error")+" "+e.getMessage(),""));
      }


    }

	public void writeAsIcalText() {
		// this needs to be here because of perstence jay5 enhance this using getallflagged 

      try{
        // jay should reuse ComponentName rather than many variables like   itemChecked, listofstatus takes memory
        int index = 0;
        for (Yxxxuh566xwwqqwxxxxxuser itemChecked : yxxxuh566xwwqqwxxxxxuserList.getResultList()) {
            this.clearInstance();
            if (checked.get(index)) {
                this.setInstance(itemChecked);
                //this.update() put logic here
            }
            index++;
        }

        checked.clear(); 
      }
      catch ( Exception e){
      FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                                     FacesMessage.SEVERITY_INFO,bundle.getString("checked")+ " "+bundle.getString("items")+ " "+bundle.getString("update")+ " "+bundle.getString("error")+" "+e.getMessage(),""));
      }


    }
   public void deleteAllRecentCopied() {
      // uses todays date and stausfl 2 so includes imported, scope is group members,item,customer etc 
      int index=0;
      try{
        index=0;
        count=0;
        calendar.add(Calendar.DATE, -5);
        Date toDay = calendar.getTime();
        for (Yxxxuh566xwwqqwxxxxxuser itemChecked : yxxxuh566xwwqqwxxxxxuserList.getFlaggedAsList(mcopy)) {
            //
            this.clearInstance();
            // extra check needed if duplicate keys need to check using sid?
            if (isBitSet(itemChecked.getZ1xxzzfxhhxxxxxxxxxxstatusfl(),_mcopy)
             && itemChecked.getZ2xxcztxlxxxxxxxxxxxstatusfldt().after( toDay)) {
             this.setInstance(itemChecked);
	     superdotremove();
             count++;


            }
            index++;
        }
             timeStamp = new SimpleDateFormat("yyyy.MM.dd.HH.mm.ss").format(new Date());
             FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
              FacesMessage.SEVERITY_INFO,bundle.getString("deleted")+" "+count+", "+bundle.getString("of")+" "+index+" "+"at"+" "+timeStamp,""));
             this.clearInstance();
      }
      catch ( Exception e){
       FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
        FacesMessage.SEVERITY_INFO,bundle.getString("checked")+ " "+bundle.getString("items")+ " "+bundle.getString("delete")+ " "+bundle.getString("error")+" "+e.getMessage(),""));
      }


   }

   public void closeRecord(Yxxxuh566xwwqqwxxxxxuser entity) {

      String key="";    
      //not all entities have key value 
      try{
            this.clearInstance();
            this.setInstance(entity);
            this.instance.setZ1xxzzfxhhxxxxxxxxxxstatusfl(mclosed);
            superdotupdate();//dont change statusfldt
             FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
              FacesMessage.SEVERITY_INFO,bundle.getString("Marked")+" "+bundle.getString("as")+" "+bundle.getString("closed")+", "+" "+bundle.getString("key")+" "+key,""));

      }catch ( Exception e){
       FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
        FacesMessage.SEVERITY_INFO,bundle.getString("Status")+ " "+bundle.getString("update")+ " "+bundle.getString("error")+ ", "+bundle.getString("key")+" "+key+" "+e.getMessage(),""));
      }


   }


   public void closeOldRecords(int days) {
      // uses todays date 
      int index=0;
      try{
        index=0;
        count=0;
        Date toDay = calendar.getTime();
        for (Yxxxuh566xwwqqwxxxxxuser itemChecked : yxxxuh566xwwqqwxxxxxuserList.getOldByList(days)) {
            //
            this.clearInstance();
            if (!isBitSet(itemChecked.getZ1xxzzfxhhxxxxxxxxxxstatusfl(),_mclosed)){
             itemChecked.setZ1xxzzfxhhxxxxxxxxxxstatusfl(mclosed);
             this.setInstance(itemChecked);
	     superdotupdate();//dont change statusfldt
             count++;
            }
            index++;
        }
             timeStamp = new SimpleDateFormat("yyyy.MM.dd.HH.mm.ss").format(new Date());
             FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
              FacesMessage.SEVERITY_INFO,bundle.getString("updated")+" "+count+", "+bundle.getString("of")+" "+index+" "+"at"+" "+timeStamp,""));

      }
      catch ( Exception e){
       FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
        FacesMessage.SEVERITY_INFO,bundle.getString("checked")+ " "+bundle.getString("items")+ " "+bundle.getString("delete")+ " "+bundle.getString("error")+" "+e.getMessage(),""));
      }


   }
   public void csvZapOldRecords(int days) {
      // uses todays date 
      int index=0;
      try{
        index=0;
        count=0;
        Date toDay = calendar.getTime();
        for (Yxxxuh566xwwqqwxxxxxuser itemChecked : yxxxuh566xwwqqwxxxxxuserList.getOldByList(days)) {
            // if we produce csv then they can be downloaded to local machine
            this.clearInstance();
            itemChecked.setZ1xxzzfxhhxxxxxxxxxxstatusfl(mclosed);
             this.setInstance(itemChecked);
	     superdotremove();//give msg about creating csv to download
             count++;

            index++;
        }
             timeStamp = new SimpleDateFormat("yyyy.MM.dd.HH.mm.ss").format(new Date());
             FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
              FacesMessage.SEVERITY_INFO,bundle.getString("updated")+" "+count+", "+bundle.getString("of")+" "+index+" "+"at"+" "+timeStamp,""));

      }
      catch ( Exception e){
       FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
        FacesMessage.SEVERITY_INFO,bundle.getString("checked")+ " "+bundle.getString("items")+ " "+bundle.getString("delete")+ " "+bundle.getString("error")+" "+e.getMessage(),""));
      }


   }




   public void deleteAllFlagged() {
  // this needs to be here because of perstence jay5 enhance this using getallflagged 
      int index=0;
      try{
        // jay should reuse ComponentName rather than many variables like   itemChecked, listofstatus takes memory
        for (Yxxxuh566xwwqqwxxxxxuser itemChecked : yxxxuh566xwwqqwxxxxxuserList.getResultList()) {
            if (checked.get(index)) {
             index++;
            }
        }
        if(index > 5){
             FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
             FacesMessage.SEVERITY_INFO,bundle.getString("Please")+" "+bundle.getString("select")+" "+bundle.getString("upto")+" "+bundle.getString("five"),""));
             return;
        }
        index=0;
        count=0;
        for (Yxxxuh566xwwqqwxxxxxuser itemChecked : yxxxuh566xwwqqwxxxxxuserList.getResultList()) {
            // restrict to 5 at a time to avoid UT000047 excceding max parameters 
            this.clearInstance();
            // extra check needed if duplicate keys need to check using sid?
            if (checked.get(index)) {
             //delete details if any first
              deleteDetails(itemChecked.getA0xxuobxbxxxxxxxxxxxsid());

             this.setInstance(itemChecked);
	     superdotremove();
             count++;



            }
            index++;
        }
        checked.clear(); 
             timeStamp = new SimpleDateFormat("yyyy.MM.dd.HH.mm.ss").format(new Date());
             FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
             FacesMessage.SEVERITY_INFO,bundle.getString("deleted")+" "+count+" "+bundle.getString("selected")+" "+"User"+" "+bundle.getString("and")+" "+bundle.getString("related")+" "+countB+" "+bundle.getString("and")+" "+bundle.getString("details")+" "+countD+" "+bundle.getString("entries")+" "+"at"+" "+timeStamp,""));

      }
      catch ( Exception e){
       FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                                     FacesMessage.SEVERITY_INFO,bundle.getString("checked")+ " "+bundle.getString("items")+ " "+bundle.getString("delete")+ " "+bundle.getString("error")+" "+e.getMessage(),""));
      }


   }




     public void deleteDetails(Integer sid) {
      try{

        // get all details for this sid as parent, use entityLessStatusDetailedList not entityDetailedList to get all includind -1
        //has userprofl and customer etc
        for (Yxxxch575xwwqqhxxxxxuserprofl detail : yxxxuh566xwwqqwxxxxxuserList.entityDetailedList(sid)) {
             yxxxch575xwwqqhxxxxxuserproflHome.setInstance(detail);
	     yxxxch575xwwqqhxxxxxuserproflHome.remove();
             entityManager.flush();
            countD++;
        }
      

      }
      catch ( Exception e){
      FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                                     FacesMessage.SEVERITY_INFO,bundle.getString("detail")+ " "+bundle.getString("remove")+ " "+bundle.getString("error")+" "+e.getMessage(),""));
      }
    }



 public void toggleAllFlagged() {
 // this needs to be here because of perstence jay5 enhance this using getallflagged 
      try{
        // jay should reuse ComponentName rather than many variables like   itemChecked, listofstatus takes memory
        for (Yxxxuh566xwwqqwxxxxxuser itemChecked : yxxxuh566xwwqqwxxxxxuserList.getResultList()) {
            this.clearInstance();
            if (checked.get(itemChecked.getA0xxuobxbxxxxxxxxxxxsid())) {
                this.setInstance(itemChecked);
			if (isBitSet(this.instance.getZ1xxzzfxhhxxxxxxxxxxstatusfl(), _mmark)) {
				this.instance.setZ1xxzzfxhhxxxxxxxxxxstatusfl(this.instance
						.getZ1xxzzfxhhxxxxxxxxxxstatusfl()
						& ~(1<<_mmark));
			} else {
				this.instance.setZ1xxzzfxhhxxxxxxxxxxstatusfl(this.instance
						.getZ1xxzzfxhhxxxxxxxxxxstatusfl()
						| mmark);
             
			}
                this.update();
            }
        }
      FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                                     FacesMessage.SEVERITY_INFO,bundle.getString("marking")+ " / "+bundle.getString("un")+" "+bundle.getString("marking")+ " "+bundle.getString("done"),""));
        checked.clear(); 
      }
      catch ( Exception e){
      FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                                     FacesMessage.SEVERITY_INFO,bundle.getString("checked")+ " "+bundle.getString("items")+" "+ " "+bundle.getString("update")+ " "+bundle.getString("error")+" "+e.getMessage(),""));
      }


 }




	public void toggleRowMarked(Integer id) {
           setYxxxuh566xwwqqwxxxxxuserA0xxuobxbxxxxxxxxxxxsid(id);
		getDefinedInstance();
		if (this.instance != null) {
			if (isBitSet(this.instance.getZ1xxzzfxhhxxxxxxxxxxstatusfl(), _mmark)) {
				this.instance.setZ1xxzzfxhhxxxxxxxxxxstatusfl(this.instance
						.getZ1xxzzfxhhxxxxxxxxxxstatusfl()
						& ~(1<<_mmark));
                     // unmark should reset del and update tags as well
				this.instance.setZ1xxzzfxhhxxxxxxxxxxstatusfl(this.instance
						.getZ1xxzzfxhhxxxxxxxxxxstatusfl()
						& ~(1<<_mdel));
				this.instance.setZ1xxzzfxhhxxxxxxxxxxstatusfl(this.instance
						.getZ1xxzzfxhhxxxxxxxxxxstatusfl()
						& ~(1<<_mconsign));
			} else {
				this.instance.setZ1xxzzfxhhxxxxxxxxxxstatusfl(this.instance
						.getZ1xxzzfxhhxxxxxxxxxxstatusfl()
						| mmark);
             
			}
      FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                                     FacesMessage.SEVERITY_INFO,bundle.getString("marking")+ " / "+bundle.getString("un")+bundle.getString("marking")+ " "+bundle.getString("done"),""));
		} else {
			log.severe("markThis error-this.instance null value,id is "+id);
		}

	}





 public void downloadThis(Integer id) {
           // made changes needed for jsf2.2, zd means data in clob/blob ex item,customer zb means blob and za means clob
         try{

	   // mime type
           String mime="";
           String extension="";
           setYxxxuh566xwwqqwxxxxxuserA0xxuobxbxxxxxxxxxxxsid(id);
           this.setInstance(getDefinedInstance()); 
           if(this.instance.getY8xxuzdrbvxxxxxxxxxxdocmnt().length()==1){
            FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                                     FacesMessage.SEVERITY_INFO,bundle.getString("no")+ " "+bundle.getString("data"),""));

            return;
           }
                key=this.instance.getY8xxuzdrbvxxxxxxxxxxdocmnt();
                // need to get blobdatatype
                extension =this.getBlobdataType("YXXXUH566XWWQQWXXXXXUSER",key,"1",1);
           //need to stripoff asis from type
           if(extension != null && extension.contains("asis")){
            extension=extension.substring(4);
           }
    FacesContext fc = FacesContext.getCurrentInstance();
    ExternalContext ec = fc.getExternalContext();

    ec.responseReset(); // Some JSF component library or some Filter might have set some headers in the buffer beforehand. We want to get rid of them, else it may collide.

    OutputStream output = ec.getResponseOutputStream();
			if ("bmp".equals(extension)) {
				mime = "image/bmp";
			} else if ("jpg".equals(extension)) {
				mime = "image/jpeg";
			} else if ("gif".equals(extension)) {
				mime = "image/gif";
			} else if ("png".equals(extension)) {
				mime = "image/png";
			} else if ("xml".equals(extension)) {
				mime = "text/xml";
			} else if ("doc".equals(extension)) {
				mime = "application/msword";
                                resp.setHeader("Cache-Control", "Public");  
			} else if ("txt".equals(extension)) {
				mime = "text/plain";
			} else if ("html".equals(extension)) {
				mime = "text/html";
			} else if ("pdf".equals(extension)) {
				mime = "application/pdf";
			} else if ("xls".equals(extension)) {
				mime = "application/vnd.ms-excel";
                                resp.setHeader("Cache-Control", "Public");  
			} else if ("ppt".equals(extension)) {
				mime = "application/vnd.ms-powerpoint";
                                resp.setHeader("Cache-Control", "Public");  
			} else if ("mp3".equals(extension)) {
				mime = "audio/mpeg";
			} else if ("mp4".equals(extension)) {
				mime = "video/mp4";
			} else {
				mime = "image/unknown";
			}

          
          // add logic to figure out text data or binary data, may need to look into data header first ??

		byte[] bytes = null;

		bytes = this.getBlobdata("YXXXUH566XWWQQWXXXXXUSER",key,"1",1);
           if(bytes == null){
            FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
             FacesMessage.SEVERITY_ERROR,"User"+" "+bundle.getString("no")+" "+bundle.getString("data")+" "+bundle.getString("found"),""));
             return;
           }

                String fileName="mydownload." + extension;
    ec.setResponseContentType(mime); // Check http://www.iana.org/assignments/media-types for all types. Use if necessary ExternalContext#getMimeType() for auto-detection based on filename.
    ec.setResponseContentLength(bytes.length); // Set it with the file size. This header is optional. It will work if it's omitted, but the download progress will be unknown.
    ec.setResponseHeader("Content-Disposition", "attachment; filename=\"" + fileName + "\""); // The Save As popup magic is done here. You can give it any file name you want, this only won't work in MSIE, it will use current request URL as file name instead.
    OutputStream outputStream = ec.getResponseOutputStream();
		outputStream.write(bytes, 0, bytes.length);
		outputStream.flush();
		outputStream.close();
    fc.responseComplete();

         }catch ( Exception e){
          FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
           FacesMessage.SEVERITY_INFO,"User"+ " "+bundle.getString("key")+" "+bundle.getString("error")+" "+ e.getMessage(),""));
           log.severe("list download error " + e.getCause());
         }



      


 }



// same as checking for "1B"



	

	public String getCleaned(String strHTML) {
         String cleanedHTML = Jsoup.clean(strHTML, Whitelist.none());  
         String text= cleanedHTML.replace("&nbsp;"," "); 
         text= text.replace("&amp;","&"); 
         return text;
        }



     // it seems you cannot call the following get methods directly from clob or blob home, so local method are
     // created , otherwise compile error about calling non static method
    /**
    * The following method gets clobdata and for geeral usage
    * if both a site and SYSTEM records exist, site record is returned 
    * Return value if null will show drop down menu, otherwise the content
    * @param 5 args String table,keyWPrefix,String keyQualifier,int keySequence,int size
    * @return String
    * @exception No Record Exists
    * @see "getClobdata(String theme,String vendor,String table,String keyWPrefix,String keyQualifier,int keySequence,int size) for theme content"
    * 
    */

     public String getClobdata(String table,String keyWPrefix,String keyQualifier,int keySequence,int size) {
           String actualTable=table;
           if(keyWPrefix.length() > 0){
            slobkeyhash = keyWPrefix.substring(1);
           }else{
            return null;
           }
          String qualifier = keyQualifier;
          int sequence = keySequence;
           try {
               Yxxxuq1m1xwwqqqxxxxxclobdata clobdata=null;
		    List<Yxxxuq1m1xwwqqqxxxxxclobdata> results =  entityManager
					.createQuery(
							"select cc from Yxxxuq1m1xwwqqqxxxxxclobdata cc where cc.a0xxukcdlvxxxxxxxxxxfromtable=:clobdatafromtable and cc.a1xxuxxxbv49xxxxxxxxfromkey=:clobdatafromkey and cc.a2xxuxxxbv50xxxxxxxxqualifier=:clobdataqualifier and a3xxexnsbvxxxxxxxxxxsequence = :clobdatasequence and cc.zzxxu2oxxhxxxxxxxxxxowner2 = :owner2  ")
					.setParameter("clobdatafromtable", actualTable).setParameter(
							"clobdatafromkey", slobkeyhash).setParameter(
							"clobdataqualifier", qualifier).setParameter(
							"clobdatasequence", sequence).setParameter("owner2", owner2Code).getResultList();
                if(!results.isEmpty()){
                 if ( !results.get(0).getZzxxu2oxxhxxxxxxxxxxowner2().equals("SYSTEM")) {
                  clobdata= results.get(0);
                 }else{
                  if (results.size() > 1){
                   clobdata= results.get(1);
                  }else{
                   clobdata= results.get(0);
                  }
                 }
                 if(clobdata==null){
                  return null; 
                 }
                }
                else{
                 return null;
                }
                if(clobdata.getB1xxuzaxbvxxxxxxxxxxdata()==null){
                 return null;
                }
                else{
                 int dl=clobdata.getB1xxuzaxbvxxxxxxxxxxdata().length();
                 if (dl > size){
	  return clobdata.getB1xxuzaxbvxxxxxxxxxxdata().substring(0,size);
                 }else {
	  return clobdata.getB1xxuzaxbvxxxxxxxxxxdata();
                 }
                } 
           } catch (NoResultException nre) {
             return null;
          } catch (Exception e) {
                   FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                     FacesMessage.SEVERITY_INFO,bundle.getString("clobdata")+ " "+bundle.getString("unexpcted")+ " "+bundle.getString("error")+ " "+e.getMessage(),""));
             return null;
          }
     }

    /**
    * The following method gets clobdata from SYSTEM if qualifier matches theme name 
    * No logic yet to use vendor and clob type hdr
    * Quick check and return null if no SYSTEM record for the key, if key exists then key qualifier part is
    * changed to theme name and searched again. If found String data returned (why two passes?) 
    * @param 7 args String theme,vendor,table,keyWPrefix,String keyQualifier,int keySequence,int size
    * theme comes from session variable value skinBean.previewTh
    * @return byte[] image stream
    * @exception No Record Exists
    * @see "getClobdata(String table,String keyWPrefix,String keyQualifier,int keySequence,int size) for non theme content"
    * 
    */


     public String getClobdata(String theme,String vendor,String table,String keyWPrefix,String keyQualifier,int keySequence,int size) {
           String actualTable=table;
           if(theme.isEmpty()){
            theme="Service-Lan";
           }
           if(vendor.isEmpty()){
            vendor="3R";
           }
           
           if(keyWPrefix.length() > 0){
	     	 slobkeyhash = keyWPrefix.substring(1);
           }else{
            return null;
           }
		String qualifier = keyQualifier;
		int sequence = keySequence;
                //first check if any system record exists for the key.if txt not hdr then change qualifier to theme
                // and search again 
		try {
                 Yxxxuq1m1xwwqqqxxxxxclobdata clobdata=null;
		    List<Yxxxuq1m1xwwqqqxxxxxclobdata> results =  entityManager
					.createQuery(
							"select cc from Yxxxuq1m1xwwqqqxxxxxclobdata cc where cc.a0xxukcdlvxxxxxxxxxxfromtable=:clobdatafromtable and cc.a1xxuxxxbv49xxxxxxxxfromkey=:clobdatafromkey and cc.a2xxuxxxbv50xxxxxxxxqualifier LIKE :clobdataqualifier and a3xxexnsbvxxxxxxxxxxsequence = :clobdatasequence and cc.zzxxu2oxxhxxxxxxxxxxowner2 = :owner2 ")
					.setParameter("clobdatafromtable", actualTable).setParameter(
							"clobdatafromkey", slobkeyhash).setParameter(
							"clobdataqualifier", qualifier).setParameter(
							"clobdatasequence", sequence).setParameter("owner2", "SYSTEM").getResultList();

	} catch (NoResultException nre) {
	return null;
	} catch (Exception e) {
                  FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                   FacesMessage.SEVERITY_ERROR,bundle.getString("text")+ " "+bundle.getString("data")+ " "+bundle.getString("unexpcted")+ " "+bundle.getString("error")+ " "+e.getMessage(),""));
	return null;
	}
                // if HDR then dont show anything, may be in future. if TXT show vendor theme if any otherwise null
                // if multiple returns last one, enhance logic to avoid first 10 ?? chrs being same
                if(qualifier.equals("HDR")){
                 return null;
                }
                //qualifier=theme.substring(0,10)+"%"; can have same first 10 
                qualifier=theme;// 
		try {
                 Yxxxuq1m1xwwqqqxxxxxclobdata clobdata=null;
		    List<Yxxxuq1m1xwwqqqxxxxxclobdata> results =  entityManager
					.createQuery(
							"select cc from Yxxxuq1m1xwwqqqxxxxxclobdata cc where cc.a0xxukcdlvxxxxxxxxxxfromtable=:clobdatafromtable and cc.a1xxuxxxbv49xxxxxxxxfromkey=:clobdatafromkey and cc.a2xxuxxxbv50xxxxxxxxqualifier LIKE :clobdataqualifier and a3xxexnsbvxxxxxxxxxxsequence = :clobdatasequence and cc.zzxxu2oxxhxxxxxxxxxxowner2 = :owner2 ")
					.setParameter("clobdatafromtable", actualTable).setParameter(
							"clobdatafromkey", slobkeyhash).setParameter(
							"clobdataqualifier", qualifier).setParameter(
							"clobdatasequence", sequence).setParameter("owner2", "SYSTEM").getResultList();
                if(!results.isEmpty()){
                 if ( !results.get(0).getZzxxu2oxxhxxxxxxxxxxowner2().equals("SYSTEM")) {
                  clobdata= results.get(0);
                 }else{
                  if (results.size() > 1){
                   clobdata= results.get(1);
                  }else{
                   clobdata= results.get(0);
                  }
                 }
                 if(clobdata==null){
                  return null; 
                 }
                }
                else{
                 return null;
                }
                if(clobdata.getB1xxuzaxbvxxxxxxxxxxdata()==null){
                 return null;
                }
                else{
                 int dl=clobdata.getB1xxuzaxbvxxxxxxxxxxdata().length();
                 if (dl > size){
			  return clobdata.getB1xxuzaxbvxxxxxxxxxxdata().substring(0,size);
                 }else {
			  return clobdata.getB1xxuzaxbvxxxxxxxxxxdata();
                 }
                } 
		} catch (NoResultException nre) {
			return null;
		} catch (Exception e) {
                  FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                   FacesMessage.SEVERITY_ERROR,bundle.getString("text")+ " "+bundle.getString("data")+ " "+bundle.getString("unexpcted")+ " "+bundle.getString("error")+ " "+e.getMessage(),""));
		   return null;
		}
	}

    /**
    * The following method used by non faces env like servlet or rest and needs set the owner2Code SYSTEM or new site etc
    * @param args String table,keyWPrefix,String keyQualifier,int keySequence,String owner2Code
    * @return byte[] image stream
    * @exception None 
    * @see 
    * 
    */

     public byte[] getBlobdata(String table,String keyWPrefix,String keyQualifier,int keySequence,String owner2Code) {
         this.owner2Code=owner2Code;
         return getBlobdata(table,keyWPrefix,keyQualifier,keySequence); 
        }


    /**
    * The following method gets blobdata from both user for a specific key
    * @param args String table,keyWPrefix,String keyQualifier,int keySequence
    * @return byte[] image stream
    * @exception No Record Exists 
    * @see 
    * 
    */

	public byte[] getBlobdata(String table,String keyWPrefix,String keyQualifier,int keySequence) {
           String actualTable=table;
           if(keyWPrefix.length() > 0){
	     	 slobkeyhash = keyWPrefix.substring(1);
           }else{
            return null;
           }
		String qualifier = keyQualifier;
		int sequence = keySequence;

		try {
               Yxxxuq1n1xwwqqqxxxxxblobdata blobdata=null;
		    List<Yxxxuq1n1xwwqqqxxxxxblobdata> results = entityManager
					.createQuery(
							"select cc from Yxxxuq1n1xwwqqqxxxxxblobdata cc where cc.a0xxukbdlvxxxxxxxxxxfromtable=:blobdatafromtable and cc.a1xxuxxxbv49xxxxxxxxfromkey=:blobdatafromkey and cc.a2xxuxxxbv50xxxxxxxxqualifier=:blobdataqualifier and a3xxexnsbvxxxxxxxxxxsequence = :blobdatasequence and cc.zzxxu2oxxhxxxxxxxxxxowner2 = :owner2  ")
					           .setParameter("blobdatafromtable", actualTable).setParameter(
							"blobdatafromkey", slobkeyhash).setParameter(
							"blobdataqualifier", qualifier).setParameter(
							"blobdatasequence", sequence).setParameter("owner2", owner2Code).getResultList();
                if(!results.isEmpty()){
                 if ( !results.get(0).getZzxxu2oxxhxxxxxxxxxxowner2().equals("SYSTEM")) {
                  return results.get(0).getB1xxuzbxbvxxxxxxxxxxdata();
                 }else{
                  if (results.size() > 1){
                   return results.get(1).getB1xxuzbxbvxxxxxxxxxxdata();
                  }else{
                   return results.get(0).getB1xxuzbxbvxxxxxxxxxxdata();
                  }
                 }
                }else{
                 // use bkgr color richSkin.headerGradientColor if no image supplied , which is default
                  return null; 
                }
         } catch (NoResultException e) {
               return null;
	 } catch (Exception e) {
      FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                                     FacesMessage.SEVERITY_INFO,bundle.getString("unexpcted")+ " "+bundle.getString("error")+ " "+e.getMessage(),""));
               return null;
         }
	}

/**
 get system blobs, harcode qualifier using theme, owner2 as SYSTEM. add vendor matching blob type ??
*/
	public byte[] getBlobdata(String theme,String vendor,String table,String keyWPrefix,String keyQualifier,int keySequence) {
           String actualTable=table;
           if(theme.isEmpty()){
            theme="Service-Lan";
           }
           if(vendor.isEmpty()){
            vendor="3R";
           }
           if(keyWPrefix.length() > 0){
	     	 slobkeyhash = keyWPrefix.substring(1);
           }else{
            return null;
           }
		String qualifier = keyQualifier;
                //qualifier=theme.substring(0,10)+"%";
                qualifier=theme;

		int sequence = keySequence;

		try {
               Yxxxuq1n1xwwqqqxxxxxblobdata blobdata=null;
		    List<Yxxxuq1n1xwwqqqxxxxxblobdata> results = entityManager
					.createQuery(
							"select cc from Yxxxuq1n1xwwqqqxxxxxblobdata cc where cc.a0xxukbdlvxxxxxxxxxxfromtable=:blobdatafromtable and cc.a1xxuxxxbv49xxxxxxxxfromkey=:blobdatafromkey and cc.a2xxuxxxbv50xxxxxxxxqualifier LIKE :blobdataqualifier and a3xxexnsbvxxxxxxxxxxsequence = :blobdatasequence and cc.zzxxu2oxxhxxxxxxxxxxowner2 = :owner2  ")
					           .setParameter("blobdatafromtable", actualTable).setParameter(
							"blobdatafromkey", slobkeyhash).setParameter(
							"blobdataqualifier", qualifier).setParameter(
							"blobdatasequence", sequence).setParameter("owner2", "SYSTEM").getResultList();
                if(!results.isEmpty()){
                 if ( !results.get(0).getZzxxu2oxxhxxxxxxxxxxowner2().equals("SYSTEM")) {
                  return results.get(0).getB1xxuzbxbvxxxxxxxxxxdata();
                 }else{
                  if (results.size() > 1){
                   return results.get(1).getB1xxuzbxbvxxxxxxxxxxdata();
                  }else{
                   return results.get(0).getB1xxuzbxbvxxxxxxxxxxdata();
                  }
                 }
                }else{
                 // use bkgr color richSkin.headerGradientColor if no image supplied , which is default
                  return null; 
                }
         } catch (NoResultException e) {
               return null;
	 } catch (Exception e) {
           FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                                     FacesMessage.SEVERITY_INFO,bundle.getString("unexpcted")+ " "+bundle.getString("error")+ " "+e.getMessage(),""));
               return null;
         }
	}


	public String getBlobdataType(String table,String keyWPrefix, String keyQualifier, int keySequence) {
           //  type like jpg etc not formal mime type
           //String table="YXXXUH566XWWQQWXXXXXUSER";
           String actualTable=table;
           if(keyWPrefix.length() > 0){
	     	 slobkeyhash = keyWPrefix.substring(1);
           }else{
            return null;
           }
		String qualifier = keyQualifier;
		int sequence = keySequence;

		Yxxxuq1n1xwwqqqxxxxxblobdata blobdata;

		try {
			blobdata = (Yxxxuq1n1xwwqqqxxxxxblobdata) entityManager
					.createQuery(
							"select cc from Yxxxuq1n1xwwqqqxxxxxblobdata cc where cc.a0xxukbdlvxxxxxxxxxxfromtable=:blobdatafromtable and cc.a1xxuxxxbv49xxxxxxxxfromkey=:blobdatafromkey and cc.a2xxuxxxbv50xxxxxxxxqualifier=:blobdataqualifier and a3xxexnsbvxxxxxxxxxxsequence = :blobdatasequence and cc.zzxxu2oxxhxxxxxxxxxxowner2 = :owner2 order by cc.a0xxuobxbxxxxxxxxxxxsid asc")
					.setParameter("blobdatafromtable", actualTable).setParameter(
							"blobdatafromkey", slobkeyhash).setParameter(
							"blobdataqualifier", qualifier).setParameter(
							"blobdatasequence", sequence).setParameter("owner2", owner2Code).getSingleResult();
			return blobdata.getA4xxexxxbvxxxxxxxxxxtype();
		} catch (NoResultException nre) {
			return null;
		} catch (NonUniqueResultException e) {
                 FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                  FacesMessage.SEVERITY_ERROR,bundle.getString("user")+" "+bundle.getString("key")+" "+slobkeyhash+" "+bundle.getString("error")+" "+e.getMessage(),""));
                 return null;
		}
	}
 
     //jay look into changing the name to just getDataTypeMime as it applies to both clob and blob
	public String getBlobdataTypeMime(String table,String keyWPrefix, String keyQualifier, int keySequence) {
           // mime type
           String mime="x";
           String extension="";
           //String table="YXXXUH566XWWQQWXXXXXUSER";
           String actualTable=table;
           if(keyWPrefix == null  || keyWPrefix.length() < 2){
            return mime;
           }
           if(keyWPrefix.length() > 0){
	     	 slobkeyhash = keyWPrefix.substring(1);
           }else{
            return null;
           }
		String qualifier = keyQualifier;
		int sequence = keySequence;

		Yxxxuq1n1xwwqqqxxxxxblobdata blobdata;

		try {
		    List<Yxxxuq1n1xwwqqqxxxxxblobdata> results = entityManager
					.createQuery(
							"select cc from Yxxxuq1n1xwwqqqxxxxxblobdata cc where cc.a0xxukbdlvxxxxxxxxxxfromtable=:blobdatafromtable and cc.a1xxuxxxbv49xxxxxxxxfromkey=:blobdatafromkey and cc.a2xxuxxxbv50xxxxxxxxqualifier=:blobdataqualifier and a3xxexnsbvxxxxxxxxxxsequence = :blobdatasequence and cc.zzxxu2oxxhxxxxxxxxxxowner2 = :owner2 order by cc.a0xxuobxbxxxxxxxxxxxsid asc")
					.setParameter("blobdatafromtable", actualTable).setParameter(
							"blobdatafromkey", slobkeyhash).setParameter(
							"blobdataqualifier", qualifier).setParameter(
							"blobdatasequence", sequence).setParameter("owner2", owner2Code).getResultList();
                if(!results.isEmpty()){
                 blobdata=results.get(0);
                 extension =blobdata.getA4xxexxxbvxxxxxxxxxxtype();
                }else{
                 return mime;
                } 
			if ("bmp".equals(extension)) {
				mime = "image/bmp";
			} else if ("jpg".equals(extension)) {
				mime = "image/jpeg";
			} else if ("gif".equals(extension)) {
				mime = "image/gif";
			} else if ("png".equals(extension)) {
				mime = "image/png";
			} else if ("xml".equals(extension)) {
				mime = "text/xml";
			} else if ("doc".equals(extension)) {
				mime = "application/msword";
			} else if ("txt".equals(extension)) {
				mime = "text/plain";
			} else if ("txt".equals(extension)) {
				mime = "text/plain";
			} else if ("pdf".equals(extension)) {
				mime = "application/pdf";
			} else if ("xls".equals(extension)) {
				mime = "application/vnd.ms-excel";
			} else if ("ppt".equals(extension)) {
				mime = "application/vnd.ms-powerpoint";
			} else if ("mp3".equals(extension)) {
				mime = "audio/mpeg";
			} else {
				mime = "image/unknown";
			}

			return mime;
		} catch (NoResultException nre) {
			return null;
		}
	}




 public int getSize() {
   if (yxxxuq1n1xwwqqqxxxxxblobdataHome.getFiles().size()>0){
   return yxxxuq1n1xwwqqqxxxxxblobdataHome.getFiles().size();
  }else 
  {
   return 0;
  }
 }

 public static String padRight(String s, int n) {
  // s is string, n number of padding 
  //format(String format, Object... args) 
  //%[argument number] [flags] [width] [.precision] type
  return String.format("%1$-" + n + "s", s);
 }
 public static String padLeft(String s, int n) {
    return String.format("%1$" + n + "s", s);  
}


    




 public String clearUploadData() {
  if(yxxxuq1n1xwwqqqxxxxxblobdataHome.getFiles() !=null){
   yxxxuq1n1xwwqqqxxxxxblobdataHome.getFiles().clear();
   setUploadsAvailable(1);
  }
  return null;
 }

 public long getTimeStamp(){
  return System.currentTimeMillis();
 }


 public int getUploadsAvailable() {
  return uploadsAvailable;
 }

 public void setUploadsAvailable(int uploadsAvailable) {
  this.uploadsAvailable = uploadsAvailable;
 }

 public boolean isAutoUpload() {
 return autoUpload;
 }

 public void setAutoUpload(boolean autoUpload) {
  this.autoUpload = autoUpload;
 }

 public boolean isUseFlash() {
 return useFlash;
 }

 public void setUseFlash(boolean useFlash) {
 this.useFlash = useFlash; 
 }




	public boolean getButtonPressed() {

		if (buttonPressed){
                return true;
           }
		else {
             return false;
          }
     }

     public void setButtonPressed(boolean pressed){
      this.buttonPressed=pressed;
     }


	public String getButtonPressedLabel() {

          return buttonPressedLabel;
     }

     public void setButtonPressedLabel(){
     }

     public String getupLoadPurpose() {

          return upLoadPurpose;
     }

     public void setupLoadPurpose(String upLoadPurpose){
      this.upLoadPurpose=upLoadPurpose;
     }

     public int getuseSeq() {

          return useSeq;
     }

     public void setuseSeq(int useSeq){
      this.useSeq=useSeq;
     }
	public String getdiscountType() {

          return discountType;
     }

     public void setupDiscountType(String discountType){
      this.discountType=discountType;
     }

	public int getUploadsDoneCount() {

          return uploadsDoneCount;
     }

     public void setUploadsDoneCount(){
     }

     public void makeButtonPressed(){
      if (buttonPressedLabel.equals("+ Upload")){
       this.buttonPressed=true;
       this.buttonPressedLabel="- Upload";
      }
      else{
       this.buttonPressed=false;
       this.buttonPressedLabel="+ Upload";
      }
     }

     public void makeButtonPressedPlusB(){
      Integer maxAttach=5;
      makeButtonPressed();
      /**
       used by basketOut,basketOutCast and in mailingSend
      */
      // 3r-attachment records are reused seq 1 to max say 5. if record count = max then get oldest record and update that record
      // if record count is less than max then add a record and set seq to record count+1 
      // since records are reused within a client, we need to change owner to restrict view as needed in case item mgmt
      // but can be ignored for mailing attachment
      // also in jsf render the attachment records    
                 temps=file.getMime();
			 if ("image/bmp".equals(temps)) {
				lobDataType = "bmp";
			 } else if ("image/jpeg".equals(temps)) {
				lobDataType = "jpg";
			 } else if ("image/gif".equals(temps)) {
				lobDataType = "gif";
			 } else if ("image/png".equals(temps)) {
				lobDataType = "png";
			 } else if ("text/xml".equals(temps)) {
				lobDataType = "xml";
			 } else if ("application/msword".equals(temps)) {
				lobDataType = "doc";
			 } else if ("text/plain".equals(temps)) {
				lobDataType = "txt";
			 } else if ("text/html".equals(temps)) {
				lobDataType = "html";
			 } else if ("application/pdf".equals(temps)) {
				lobDataType = "pdf";
			 } else if ("application/vnd.ms-excel".equals(temps)) {
				lobDataType = "xls";
			 } else if ("application/vnd.ms-powerpoint".equals(temps)) {
				lobDataType = "ppt";
			 } else if ("audio/mpeg".equals(temps)) {
				lobDataType = "mp3";
			 } else if ("video/mp4".equals(temps)) {
				lobDataType = "mp4";
			 } else {
				lobDataType = "unkn";
			 }
      if (lobDataType.equals("txt") || lobDataType.equals("xml") || lobDataType.equals("html")) {
       makeButtonPressedPlusC();
       return;
      }       

      if(yxxxuq1n1xwwqqqxxxxxblobdataList.getAttachCount() == maxAttach){
       yxxxuq1n1xwwqqqxxxxxblobdata=yxxxuq1n1xwwqqqxxxxxblobdataList.getOldest();
       yxxxuq1n1xwwqqqxxxxxblobdata.setY3xxuxznbvxxxxxxxxxxnotes(yxxxuq1n1xwwqqqxxxxxblobdataHome.getFiles().get(0).getName());
       yxxxuq1n1xwwqqqxxxxxblobdata.setB1xxuzbxbvxxxxxxxxxxdata(file.getData());
       yxxxuq1n1xwwqqqxxxxxblobdata.setA4xxexxxbvxxxxxxxxxxtype(lobDataType);
       yxxxuq1n1xwwqqqxxxxxblobdata.setZ3xxutoxlhxxxxxxxxxxowner(ownerCode);
       yxxxuq1n1xwwqqqxxxxxblobdataHome.setInstance(yxxxuq1n1xwwqqqxxxxxblobdata);
       // ready to persist, use superUpdate
       yxxxuq1n1xwwqqqxxxxxblobdataHome.superUpdate();
       clearUploadData();
      }else{
       yxxxuq1n1xwwqqqxxxxxblobdataHome.clearInstance();
       yxxxuq1n1xwwqqqxxxxxblobdata=yxxxuq1n1xwwqqqxxxxxblobdataHome.getInstance();
       //already has blobdata and PIC
       yxxxuq1n1xwwqqqxxxxxblobdata.setA1xxuxxxbv49xxxxxxxxfromkey("3R-ATTACHMENT-1-C");
       yxxxuq1n1xwwqqqxxxxxblobdata.setA3xxexnsbvxxxxxxxxxxsequence( yxxxuq1n1xwwqqqxxxxxblobdataList.getAttachCount()+1);
       yxxxuq1n1xwwqqqxxxxxblobdata.setY3xxuxznbvxxxxxxxxxxnotes(yxxxuq1n1xwwqqqxxxxxblobdataHome.getFiles().get(0).getName());
       yxxxuq1n1xwwqqqxxxxxblobdata.setB1xxuzbxbvxxxxxxxxxxdata(file.getData());
       yxxxuq1n1xwwqqqxxxxxblobdata.setA4xxexxxbvxxxxxxxxxxtype(lobDataType);
       yxxxuq1n1xwwqqqxxxxxblobdataHome.persist();
       clearUploadData();
      }
     }
     public void makeButtonPressedPlusC(){
      Integer maxAttach=5;
      makeButtonPressed();
      // 3r-attachment records are reused seq 1 to max say 5. if record count = max then get oldest record and update that record
      // if record count is less than max then add a record and set seq to record count+1 
      // also in jsf render the attachment records    
      if(yxxxuq1m1xwwqqqxxxxxclobdataList.getAttachCount() == maxAttach){
       yxxxuq1m1xwwqqqxxxxxclobdata=yxxxuq1m1xwwqqqxxxxxclobdataList.getOldest();
       yxxxuq1m1xwwqqqxxxxxclobdata.setY3xxuxznbvxxxxxxxxxxnotes(yxxxuq1n1xwwqqqxxxxxblobdataHome.getFiles().get(0).getName());
       yxxxuq1m1xwwqqqxxxxxclobdata.setB1xxuzaxbvxxxxxxxxxxdata(new String(file.getData()));
       yxxxuq1m1xwwqqqxxxxxclobdata.setA4xxexxxbvxxxxxxxxxxtype(lobDataType);
       yxxxuq1m1xwwqqqxxxxxclobdata.setZ3xxutoxlhxxxxxxxxxxowner(ownerCode);
       yxxxuq1m1xwwqqqxxxxxclobdataHome.update();
       clearUploadData();
      }else{
       yxxxuq1m1xwwqqqxxxxxclobdataHome.clearInstance();
       yxxxuq1m1xwwqqqxxxxxclobdata=yxxxuq1m1xwwqqqxxxxxclobdataHome.getInstance();
       //already has clobdata but not qualifier since it could be TXT or HDR
       yxxxuq1m1xwwqqqxxxxxclobdata.setA2xxuxxxbv50xxxxxxxxqualifier("TXT");
       yxxxuq1m1xwwqqqxxxxxclobdata.setA1xxuxxxbv49xxxxxxxxfromkey("3R-ATTACHMENT-1-C");
       yxxxuq1m1xwwqqqxxxxxclobdata.setA3xxexnsbvxxxxxxxxxxsequence(yxxxuq1m1xwwqqqxxxxxclobdataList.getAttachCount()+1);
       yxxxuq1m1xwwqqqxxxxxclobdata.setY3xxuxznbvxxxxxxxxxxnotes(yxxxuq1n1xwwqqqxxxxxblobdataHome.getFiles().get(0).getName());
                   String uploadedText=file.getText();
                   String jay=uploadedText;
                   try{
                    uploadedText=this.sanitize(uploadedText);//
                    uploadedText=jay;
                   } catch ( Exception e){
                    FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                    FacesMessage.SEVERITY_INFO," "+"invalid"+" "+" "+bundle.getString("content")+",  "+e.getMessage(),""));
                    return;
                   }
                   yxxxuq1m1xwwqqqxxxxxclobdata.setB1xxuzaxbvxxxxxxxxxxdata(uploadedText);

       yxxxuq1m1xwwqqqxxxxxclobdata.setA4xxexxxbvxxxxxxxxxxtype(lobDataType);
       yxxxuq1m1xwwqqqxxxxxclobdataHome.persist();
       clearUploadData();
      }
     }




 public String sanitizeApply(String unsafe) throws IOException{
         String safe = Jsoup.clean(unsafe, Whitelist.relaxed().addTags("iframe").addAttributes("p", "style"));
         return unsafe;

 }

    /**
    * The following method sanitizes ie drops unwanted html tags to reduce xss attack 
    * called by xxxlist.send (email)  and clobdataEdit and theme pages etc
    * @param args unsafe data entered by untrusted user 
    * @return safe string
    * @exception IOException
    * @see 
    *  use sanitize wherever clbdata is used or in future used 
    *  default is is ignore sanitize but added a new method sanitizeApply
    */  

 public String sanitize(String unsafe) throws IOException{
         //String safe = Jsoup.clean(unsafe, Whitelist.relaxed().addTags("iframe").addAttributes("p", "style"));
         return unsafe;

 }

/*      addTags for tag, addAttributes for attribute within a specific tag only
	.addTags("meta", "title", "script", "iframe")
	.addAttributes("meta", "charset")
	.addAttributes("iframe", "src")
	.addProtocols("iframe", "src", "http", "https");
*/


     // generate 

	public boolean getForgotPasswordError() {
		return hasErrorMessage(FacesContext.getCurrentInstance(),
				"resetLostPassword");
	}

	public boolean getRegisterError() {
		return hasErrorMessage(FacesContext.getCurrentInstance(),
				"registerForm:");
	}


	public boolean getSignupError() {
		return hasErrorMessage(FacesContext.getCurrentInstance(),
				"signupForm:");
	}


	public boolean getDemoSignupError() {
		return hasErrorMessage(FacesContext.getCurrentInstance(),
				"demosignupForm:");
	}

	public boolean getChangePasswordError() {
		return hasErrorMessage(FacesContext.getCurrentInstance(),
				"changePWCommand");
	}

	public String getLostPasswordUserId() {
		return lostPasswordUserId;
	}

	public void setLostPasswordUserId(String value) {
		this.lostPasswordUserId = value;
	}

	public String getLostPasswordEmail() {
		return lostPasswordEmail;
	}

	public void setLostPasswordEmail(String value) {
		this.lostPasswordEmail = value;
	}

	public String getLoginUserId() {
		return loginUserId;
	}

	public void setLoginUserId(String loginUserId) {
		this.loginUserId = loginUserId;
	}

	public String getRecoveredPasswordEmail() {
		return this.recoveredPasswordEmail;
	}

	public void setRecoveredPasswordEmail(String value) {
		this.recoveredPasswordEmail = value;
	}

	public String getResetPassword() {
		return this.resetPassword;
	}

	public void setResetPassword(String value) {
		this.resetPassword = value;
	}

	public String getSignupas() {
		return signupas;
	}

	public void setSignupas(String signupas) {
		this.signupas = signupas;
	}

	public String getA0xxukuxbvxxxxxxxxxxid2() {
		return a0xxukuxbvxxxxxxxxxxid2;
	}

	public void setA0xxukuxbvxxxxxxxxxxid2(String a0xxukuxbvxxxxxxxxxxid2) {
		this.a0xxukuxbvxxxxxxxxxxid2 = a0xxukuxbvxxxxxxxxxxid2;
	}
	public String getC4xxuxupivxxxxxxxxxxcurrpw2() {
		return      c4xxuxupivxxxxxxxxxxcurrpw2;
	}

	public void setC4xxuxupivxxxxxxxxxxcurrpw2(String c4xxuxupivxxxxxxxxxxcurrpw2) {
		this.c4xxuxupivxxxxxxxxxxcurrpw2 = c4xxuxupivxxxxxxxxxxcurrpw2;
	}

	public boolean getAgreedToTermsOfUse() {
		return agreedToTermsOfUse;
	}

	public void setAgreedToTermsOfUse(boolean agreedToTermsOfUse) {
		this.agreedToTermsOfUse = agreedToTermsOfUse;
	}

	public boolean getAgreedToTermsOfUsefb() {
		return agreedToTermsOfUsefb;
	}

	public void setAgreedToTermsOfUsefb(boolean agreedToTermsOfUse) {
		this.agreedToTermsOfUsefb = agreedToTermsOfUse;
	}

	public String getClientEmail() {
		return this.clientEmail;
	}

	public void setClientEmail(String value) {
		this.clientEmail = value;
	}

	public String getClientName() {
		return this.clientName;
	}

	public void setClientName(String value) {
		this.clientName = value;
	}

	public String getCompanyName() {
		return this.companyName;
	}

	public void setCompanyName(String value) {
		this.companyName = value;
	}
	public String getClientApplicationFunction() {
		return this.clientApplicationFunction;
	}

	public void setClientApplicationFunction(String value) {
		this.clientApplicationFunction = value;
                if(value !=null && !value.isEmpty()){
                 FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                  FacesMessage.SEVERITY_INFO,bundle.getString("Site")+ " "+bundle.getString("Usage")+ " "+value+" "+bundle.getString("was")+" "+bundle.getString("selected"),""));
                }
	}


	public String getClientApplicationSize() {
		return this.clientApplicationSize;
	}

	public void setClientApplicationSize(String value) {
		this.clientApplicationSize = value;
                if(value !=null && !value.isEmpty()){
                 FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                  FacesMessage.SEVERITY_INFO,bundle.getString("Backoffice")+ " "+bundle.getString("size")+ " "+value+" "+bundle.getString("was")+" "+bundle.getString("selected"),""));
                }

	}


	public String getClientApplicationSubFunction() {
		return this.clientApplicationSubFunction;
	}

	public void setClientApplicationSubFunction(String value) {
		this.clientApplicationSubFunction = value;
	}

	public String getClientApplicationName() {
		return this.clientApplicationName;
	}

        public void setClientApplicationName(String value) {
         //replace multiple spaces into one space and get rid of typical extra stuff
         String jay=value.replaceAll(" +", ""); 
         String jay0=jay;
         //warn http or .com present and strip them off
         jay=jay.toLowerCase();
         jay=jay.replaceAll("'","");
         jay=jay.replaceAll("http://","");
         jay=jay.replaceAll("https://","");
         jay=jay.replaceAll("www\\.","");
         jay=jay.replaceAll("\\.com","");
         if(!jay.equals(jay0)){
         FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
           FacesMessage.SEVERITY_INFO,bundle.getString("name")+ " "+bundle.getString("revised")+ " "+bundle.getString("from")+" "+jay0+" "+bundle.getString("to")+ " "+jay,""));
         }
         this.clientApplicationName = jay;
         if(urlName.contains(customIdentity.getMasterSiteCode())){
          this.setClientFullUrlName(this.clientApplicationName+"."+customIdentity.getMasterSiteUrl());
         }
       }

      public String getClientUrlName() {
         //not used 
       return this.clientUrlName;
      }
     public void setClientUrlName(String value) {
      this.clientUrlName = value;
     }

       public String getClientFullUrlName() {
          // change clientFullUrlName as well to be in sync
         if(clientFullUrlName != null && clientFullUrlName.isEmpty()){
          if(urlName.contains(customIdentity.getMasterSiteCode())){
           this.setClientFullUrlName(this.clientApplicationName+"."+customIdentity.getMasterSiteCode());
          }
          // this.setClientFullUrlName(this.clientApplicationName+"."+urlName); is it same as above? compare??
         }else{
          //if fullUrlName has value dont change it to default
         }
         return this.clientFullUrlName;
       }

	public void setClientFullUrlName(String value) {
		this.clientFullUrlName = value;
	}

	public String getClientSerialNum() {
		return this.clientSerialNum;
	}

	public void setClientSerialNum(String value) {
		this.clientSerialNum = value;
	}

	public Integer getClientExpiryDays() {
           if (this.clientExpiryDays==0){
            calendar.setTime(Calendar.getInstance().getTime());
            calendar.add(Calendar.DAY_OF_YEAR, 30);
            //calendare.setTime(clientRow.getF8xxcxxxlvxxxxxxxxxxlicenseend());
            //this.clientExpiryDays=( (calendare.getTime() - calendar.getTime() ) / (1000 * 60 * 60 * 24));
           }
		return this.clientExpiryDays;
	}

	public void setClientExpiryDays(Integer value) {
		this.clientExpiryDays = value;
	}
    //Admin site myflowp/raaspi url port may be 80 or 8080
    public String getNewUserLink() {
        return newUserLink;
    }
  
    public void setNewUserLink(String newUserLink) {
        this.newUserLink = newUserLink;
    }
    //client url port should be same as in Admin site ie userLink
    public String getNewUserLink2() {
        return newUserLink2;
    }

    public void setNewUserLink2(String newUserLink2) {
        this.newUserLink2 = newUserLink2;
    }

    public boolean isMobileO() {
        if(userAgentStrO !=null && userAgentStrO.contains("Mobi")){
         if(userAgentStrO.contains("iPad") && !urlName.contains("cartPOS.")){
          return false;
         }
         return true ;  
        }else{
         return false;
        }
    }

    public String getUserAgentStr() {
        return userAgentStr;
    }

    public void setUserAgentStr(String userAgentStr) {
        this.userAgentStr = userAgentStr;
        customIdentity.setMobileView(userAgentStr);

    }
    public boolean isMobile() {  
        //change to mobi
        
        if(userAgentStr !=null && userAgentStr.contains("Mobi")){
         if(userAgentStr.contains("iPad") && !urlName.contains("cartPOS.")){
          return false;
         }
         return true ;  
        }else{
         return false;
        }
    }  

	protected String getMD5Hash(final String msg) {
		try {
			MessageDigest md5 = MessageDigest.getInstance("MD5");
			md5.reset();
			return new String(Hex.encodeHex(md5.digest(msg.getBytes("UTF-8"))));
		} catch (Exception exc) {
			throw new RuntimeException(exc);
		}
	}

	public static final boolean hasErrorMessage(FacesContext jsf, String msgPfx) {
		boolean hasErrorMessage = false;
		FacesMessage.Severity maxSeverity = jsf.getMaximumSeverity();
		if (maxSeverity != null
				&& maxSeverity.getOrdinal() >= FacesMessage.SEVERITY_ERROR
						.getOrdinal()) {
			java.util.Iterator<String> clientIdIter = jsf
					.getClientIdsWithMessages();
			if (clientIdIter != null) {
				while (clientIdIter.hasNext()) {
					String nextClientId = clientIdIter.next();
					if (nextClientId != null
							&& (nextClientId.startsWith(msgPfx) || nextClientId
									.equals(msgPfx))) {
						hasErrorMessage = true;
						break;
					}
				}
			}
		}
		return hasErrorMessage;
	}

	@Transactional
	public void doRecoverLostPassword() {
		if (lostPasswordUserId == null )
		 return;
		this.recoveredPasswordEmail = null;
		this.resetPassword = null;

		Yxxxuh566xwwqqwxxxxxuser theUser  = new Yxxxuh566xwwqqwxxxxxuser();

		try {
			theUser = (Yxxxuh566xwwqqwxxxxxuser) entityManager
					.createQuery(
							"select cc from Yxxxuh566xwwqqwxxxxxuser cc where cc.a0xxukuxbvxxxxxxxxxxid = :username and cc.zzxxu2oxxhxxxxxxxxxxowner2 = :owner2 order by cc.a0xxuobxbxxxxxxxxxxxsid asc")
					.setParameter("username", lostPasswordUserId).setParameter(
							"owner2", owner2Code).getSingleResult();

		} catch (NoResultException ex) {
                  FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                   FacesMessage.SEVERITY_INFO,bundle.getString("login") +" "+bundle.getString("user") +" "+bundle.getString("name")+" "+lostPasswordUserId+" "+bundle.getString("not")+" "+bundle.getString("found"),""));

			return;
		}
		if (theUser.getC4xxuxupivxxxxxxxxxxcurrpw().equals("ssoPW")) {
                 FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                  FacesMessage.SEVERITY_INFO,bundle.getString("sso") +" "+bundle.getString("password") +" "+bundle.getString("cannot")+" "+bundle.getString("be")+" "+bundle.getString("changed")+" "+bundle.getString("here"),""));

                 FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                  FacesMessage.SEVERITY_INFO,bundle.getString("try") +" "+bundle.getString("original") +" "+bundle.getString("signon")+" "+bundle.getString("site")+" "+theUser.getC6xxuxuoivxxxxxxxxxxoldpw(),""));

   		 return;
                } 
                // if demo user no email saved except in user
                if(theUser.getY1xxuxxxivxxxxxxxxxxrestrict1() != null && theUser.getY1xxuxxxivxxxxxxxxxxrestrict1().equals("D")){
                 lostPasswordEmail=theUser.getA0xxukuxbvxxxxxxxxxxid();
                }
		if ((lostPasswordEmail == null || lostPasswordEmail.isEmpty()) && theUser.getJxxxbh400xwwqqhxxxxxemployee() != null) {
                 lostPasswordEmail=theUser.getJxxxbh400xwwqqhxxxxxemployee().getN4xxhxxrbv24xxxxxxxximailaddr();
		}
		if ((lostPasswordEmail == null || lostPasswordEmail.isEmpty()) && theUser.getJxxxuq300xwwqqhxxxxxvendor() != null) {
                 lostPasswordEmail=theUser.getJxxxuq300xwwqqhxxxxxvendor().getN4xxhxxrbv24xxxxxxxximailaddr();
		}
		if ((lostPasswordEmail == null || lostPasswordEmail.isEmpty()) && theUser.getJxxxuq201xwwqqhxxxxxcustomer() != null) {
                 lostPasswordEmail=theUser.getJxxxuq201xwwqqhxxxxxcustomer().getQ4xxhxxxbv24xxxxxxxximailaddr();
		}

		if ((lostPasswordEmail == null || lostPasswordEmail.isEmpty())  && theUser.getYxxxch522xhhxxhxxxxxclient() != null) {
                 lostPasswordEmail=theUser.getYxxxch522xhhxxhxxxxxclient().getD4xxhxxrbv24xxxxxxxximailaddr();
                 if ( lostPasswordEmail == null || lostPasswordEmail.isEmpty()){
                  FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                   FacesMessage.SEVERITY_INFO,bundle.getString("login") +" "+bundle.getString("email") +" "+bundle.getString("not")+" "+bundle.getString("found"),""));

		   return;
                 }
	        }
		if (lostPasswordEmail == null || lostPasswordEmail.isEmpty()){
                 FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                  FacesMessage.SEVERITY_INFO,bundle.getString("login") +" "+bundle.getString("email") +" "+bundle.getString("not")+" "+bundle.getString("found"),""));
		  return;
                }
                if (theUser.getYxxxch522xhhxxhxxxxxclient() != null) {
                 this.setClientEmail(theUser.getYxxxch522xhhxxhxxxxxclient().getD4xxhxxrbv24xxxxxxxximailaddr());
                }


		try {
		  this.resetPassword = PasswordSupport.tempPassword();
		  theUser.setC4xxuxupivxxxxxxxxxxcurrpw(PasswordSupport.hash(this.resetPassword));
 		  theUser.setC8xxuxxxbvxxxxxxxxxxpasswordhash(PasswordSupport.getHashNoon() );
		  theUser.setC7xxfxxxivxxxxxxxxxxtemporarypassword(true);
		  theUser.setZ2xxcztxlxxxxxxxxxxxstatusfldt(calendar.getTime());
                calendare.add(Calendar.HOUR, 24);
                theUser.setC5xxcxxxbvxxxxxxxxxxexpiry(calendare.getTime() );
                inRecoverPassword=true;
                inCreateUser=false;
		entityManager.flush();
	        this.recoveredPasswordEmail = lostPasswordEmail;
		this.lostPasswordEmail = null;
                String alteredEmail="xx";
                if(this.recoveredPasswordEmail.length() >3){ 
                  alteredEmail="xx"+this.recoveredPasswordEmail.substring(3);   
                }  
                //
                this.getInstance();
                this.setInstance(theUser);
                // to cover where email valid syntax but not real. Manager/Admin can fix others but not themselves if cannot login
                if(lostPasswordUserId.toLowerCase().contains("manager") || lostPasswordUserId.toLowerCase().contains("admin") ){
                 log.info("site---- "+owner2Code+", temporary password xxx"+this.resetPassword+"xxx for "+lostPasswordUserId+" done ----");
                }
   
                Emailsend("/password_reset.xhtml");
                FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                 FacesMessage.SEVERITY_INFO,bundle.getString("password") +" "+bundle.getString("reset") +" "+bundle.getString("email")+" "+bundle.getString("to")+" "+bundle.getString("be")+" "+bundle.getString("sent")+" "+bundle.getString("to")+" "+alteredEmail,""));

		} catch (Exception exc) {
                  // write uncrypted temp pw in clob otherwise no recovery option  
			try {
				//org.jboss.seam.transaction.Transaction.instance()
				//		.setRollbackOnly();
			} catch (Exception ignore) {
			}
			// note: don't send the exception message back to the client as it may contain
			// too much information that a hacker could use to break into the site
			//statusMessages.addToControlFromResourceBundle("resetLostPassword",
			//		ERROR, "reset_failed_unknown");
		}
	}
    /***
    * comes from login.xhtml > signUp() for type loginsignin or from signup for type signin or demosignup for type demosignin
    * or register.xhtml > doregister() for type gettingActi
    * In login page resendActivation is shown only if the site has any activation pending 
    * In other pages involving sendActivation, resend is autmatically tried in case it completed except for sending email 
    *@parameters 2 type (gettingActi or signin) and otherid (contains user email)
    * id entered is stored as credentials.getUserId if login resendActivation or as user instance id if signup or if register (user manager and admin) or if useredit in backoffice create user
    * if user otherid is not correct or empty, signupemail can be entered manually
    *@return boolean true if activation pending and email resent or false if error
     *
    */

    public boolean doResendActivationEmail(String type,String otherId) {
     //the email content and xhtml are different based on demosignup/signup/site activation
    // add logic to allow new email in case old email was wrong or mail failed and if pending resend email
     //toEmail:yxxxbh566xwwqqhxxxxxuserHome.clientEmail for all except otherid if site
     // subject yxxxvh566xwwqqwxxxxxuserHome.instance.zzxxu2oxxhxxxxxxxxxxowner2 site 
     // status time yxxxvh566xwwqqwxxxxxuserHome.instance.z2xxcztxlxxxxxxxxxxxstatusfldt site and gettingAct
     //Dear {yxxxbh566xwwqqhxxxxxuserHome.instance.a0xxukuxbvxxxxxxxxxxid} sign and demo
     //activation link {yxxxbh566xwwqqhxxxxxuserHome.newUserLink} for all except getting
     // Logon Email Id: {yxxxvh566xwwqqwxxxxxuserHome.instance.c1xxuxxxbvxxxxxxxxxxotherid  for demo mail why 
     //logonid yxxxbh566xwwqqhxxxxxuserHome.instance.a0xxukuxbvxxid
     // PW yxxxbh566xwwqqhxxxxxuserHome.instance.c6xxuxuoivxxoldpw or yxxxbh566xwwqqhxxxxxuserHome.clientEmail both PW if site 
      // instance is just created and needs to be filled up as info is available and for demo id is same as otherid ie email
     String owner2Code=this.owner2Code;
     if (type.equals("gettingActi")){
      owner2Code=this.getClientApplicationName();
      // used in activation email 
      this.instance.setZzxxu2oxxhxxxxxxxxxxowner2(owner2Code);
     }
     if(activationPending(otherId,owner2Code,type)){
            // send the activation email ... as part of this transaction, user is global variable
            String activationLink="";
            boolean smtpEnabled = true;
        try {
                 Yxxxch522xhhxxhxxxxxclient client =(Yxxxch522xhhxxhxxxxxclient) entityManager
					.createQuery(
							"select cc from Yxxxch522xhhxxhxxxxxclient cc where cc.a0xxukxxbvxxxxxxxxxxclientversion = :nKeyName and cc.zzxxu2oxxhxxxxxxxxxxowner2 = :owner2 order by cc.a0xxuobxbxxxxxxxxxxxsid asc")
					.setParameter("nKeyName","01")
					.setParameter("owner2", owner2Code)
					.getSingleResult();
		      if (client == null) {
                       FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                        FacesMessage.SEVERITY_ERROR,bundle.getString("create") +" "+bundle.getString("site") +" "+bundle.getString("first"),""));

                       return false;
                      }else{
                       clientFullUrlName=client.getD6xxuxxrbvxxxxxxxxxxintaddr();
                       if(clientFullUrlName ==null || clientFullUrlName.isEmpty()){
                        FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                         FacesMessage.SEVERITY_INFO,bundle.getString("client") +" "+bundle.getString("url") +" "+bundle.getString("missing"),""));


                          return false;
                       }

                      }
        } catch (Exception exc) {
          FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
            FacesMessage.SEVERITY_INFO,bundle.getString("client") +" "+bundle.getString("url") +" "+bundle.getString("missing"),""));
          return false; 
        }

              if(urlPort ==8080){
               activationLink = "http://"+clientFullUrlName+":8080/login.wflow";
              }else{
               // need to add www if non raaspi.com ex raaspi.com,3rcomputer.com ie domain registered
               if(clientFullUrlName.contains("."+masterSiteCode)){
                activationLink = "http://"+clientFullUrlName+"/login.wflow";
               }else{
                activationLink = "http://www."+clientFullUrlName+"/login.wflow";
               }
              } 
            String newUserLink = activationLink + ((activationLink.indexOf("?") != -1) ? "&act=" : "?act=") + user.getC9xxuxxxbvxxxxxxxxxxactivationkey();
            setNewUserLink(newUserLink);
            this.setInstance(user);// later override if needed
            if (type.equals("signIn") || type.equals("loginsignIn")){
             this.setClientEmail(user.getC1xxuxxxbvxxxxxxxxxxotherid() );
             this.instance.setC6xxuxuoivxxxxxxxxxxoldpw(user.getC6xxuxuoivxxxxxxxxxxoldpw());
            }
            else if (type.equals("demoSignIn")){
             this.setClientEmail(user.getC1xxuxxxbvxxxxxxxxxxotherid() );
             this.instance.setC6xxuxuoivxxxxxxxxxxoldpw(user.getC6xxuxuoivxxxxxxxxxxoldpw());
            }
            else if (type.equals("gettingActi")){
             this.setClientEmail(user.getC1xxuxxxbvxxxxxxxxxxotherid() );
            }
            else{
            }    
            if (smtpEnabled) {
                try {
                 if (type.equals("signIn") || type.equals("loginsignIn")){
                   Emailsend("/activationSignUp.xhtml");
                   return true;
                 }
                 else if (type.equals("demoSignIn")){
                   Emailsend("/activationDemo.xhtml");
                   return true;
                 }
                 else if (type.equals("gettingActi")){
                   Emailsend("/getactivation.xhtml");
                   return true;
                 }
                 else if (type.equals("acti")){
                   //activation is sent by sysAdmin so call may be from there
                   Emailsend("/activation.xhtml");
                   return true;
                 } 
                 else{
                 }   

                } catch (Exception zzz) {
                 FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                  FacesMessage.SEVERITY_ERROR,"yxxxuh566xwwqqwxxxxxuser "+bundle.getString("send") +" "+bundle.getString("email") +" "+bundle.getString("failed"),""));

                    try {
                     //org.jboss.seam.transaction.Transaction.instance().setRollbackOnly();
                     } catch (Exception ignore) {}
                     return false;
                }
            }
      
     }
      FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
         FacesMessage.SEVERITY_ERROR,"No "+bundle.getString("match") +" "+bundle.getString("found") +" "+bundle.getString("for")+" "+bundle.getString("pending")+" "+bundle.getString("activation") +" "+bundle.getString("for") +" "+credentials.getUserId()+" / "+otherId,""));
     return false;
    }
    public boolean activationPending(String otherId,String owner2Code,String type) {
    // add logic to check in user table if admin ids activation key is not null for owner2 same as this servername
        List<Yxxxuh566xwwqqwxxxxxuser> results  = null;
        String enteredId=null;
        if( type.equals("loginsignIn")){
         enteredId=credentials.getUserId();
        }else{
         enteredId=this.instance.getA0xxukuxbvxxxxxxxxxxid();
        }
        results  =  entityManager
 	.createQuery(
 	"select cc from Yxxxuh566xwwqqwxxxxxuser cc where cc.a0xxukuxbvxxxxxxxxxxid = :enteredid  and cc.zzxxu2oxxhxxxxxxxxxxowner2 = :owner2 ")
 	.setParameter("owner2", owner2Code).setParameter("enteredid", enteredId)
 	.getResultList();
          if(results.isEmpty()){
           FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
            FacesMessage.SEVERITY_ERROR,bundle.getString("No") +" "+bundle.getString("record") +"(s) "+", "+bundle.getString("found")+" "+bundle.getString("for")+" "+bundle.getString("user")+" "+enteredId,""));
                   return false;
          }
          if (results.size()>1){
           FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
            FacesMessage.SEVERITY_ERROR,bundle.getString("Multiple") +" "+bundle.getString("record") +"(s) "+", "+bundle.getString("found")+" "+bundle.getString("for")+" "+bundle.getString("user")+" "+enteredId,""));
                   return false;
          }           
          user=results.get(0);

          if(type.equals("signin") && (user.getC1xxuxxxbvxxxxxxxxxxotherid() ==null || user.getC1xxuxxxbvxxxxxxxxxxotherid().isEmpty()) && (otherId == null || otherId.isEmpty()) ){
           FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
           FacesMessage.SEVERITY_ERROR,bundle.getString("user") +" "+bundle.getString("otherid field containing email info ") +" "+bundle.getString("missing")+" / "+bundle.getString("not")+" "+bundle.getString("entered"),""));
           return false;
          }
          if(type.equals("signin") && (user.getC1xxuxxxbvxxxxxxxxxxotherid() ==null || user.getC1xxuxxxbvxxxxxxxxxxotherid().isEmpty()) && otherId != null && !otherId.isEmpty() ){
           user.setC1xxuxxxbvxxxxxxxxxxotherid(otherId);//update user record email with entered value
          }
          if (user.getC9xxuxxxbvxxxxxxxxxxactivationkey() != null && user.getC7xxfxxxivxxxxxxxxxxtemporarypassword()){
           return true;
          }else{
           return false;
          }
    }

    @Transactional
    public void doVsignup() {
     signupas="V";
     doSignup();
    }


    /**
     comes here 3 ways
        1. Signup as visitor
        2. registerFacebookUser fbuid has user id 
        3. visitor deciding to Signup reference has temp userid
           The above are all user type visitor(V) and role H.
        (4) There is also doDemoSignUp (U) which also creates user(U) but allows them to do back office functions in demo sites
            Demo user has restriction D to limit changing their own records. Because they are User(U) they have employee record
            to allow transactions
        (5) Regular back office user(U) is created by create user menu option 
        (6) Vendor signup for Resellers mainly Theme vendor
    **/
    @Transactional
    public void doSignup() {
    // doSignUp(signup) and doRegister(createsite) and doDemo(demosignup) all sends activation link via EMail and on receive will invoke doActivate 
    // which finds the user which has activation pending and process it
        // no email involved if fb
        if(fbUid == null || this.instance != null){
         if(!this.validEmail(this.instance.getC1xxuxxxbvxxxxxxxxxxotherid())){
          FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
           FacesMessage.SEVERITY_ERROR,bundle.getString("ERROR")+", "+this.instance.getC1xxuxxxbvxxxxxxxxxxotherid()+" "+bundle.getString("is")+" "+bundle.getString("not")+" "+bundle.getString("valid")+" "+bundle.getString("email") ,""));
            return;
         }

         if(doResendActivationEmail("signIn",this.instance.getC1xxuxxxbvxxxxxxxxxxotherid())){
          return;
         }
        }
        // cannot persist user if cuorder half finished
        if (fpxxfq1a5xwwqqhxxxxxitemList.getCartedList("cart") != null && fpxxfq1a5xwwqqhxxxxxitemList.getCartedList("cart").size() > 0){
         FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
          FacesMessage.SEVERITY_ERROR,bundle.getString("cannot") +" "+bundle.getString("signup") +" "+bundle.getString("if")+", "+bundle.getString("cart")+" "+bundle.getString("not")+" "+bundle.getString("empty"),""));

         FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
          FacesMessage.SEVERITY_ERROR,bundle.getString("please") +" "+bundle.getString("empty") +" "+bundle.getString("cart")+", "+bundle.getString("return")+" "+bundle.getString("and")+" "+bundle.getString("then")+" "+bundle.getString("login")+"/"+bundle.getString("signup"),""));

            return;
        }
        if (!agreedToTermsOfUsefb && fbUid != null ) {
         FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
          FacesMessage.SEVERITY_ERROR,bundle.getString("please") +" "+bundle.getString("agree") +" "+bundle.getString("to")+" "+bundle.getString("terms"),""));
         FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
          FacesMessage.SEVERITY_ERROR,bundle.getString("if")+" "+bundle.getString("already") +" "+bundle.getString("auto") +" "+bundle.getString("logged")+" "+bundle.getString("in")+" "+bundle.getString("using")+" "+bundle.getString("facebook"),""));
         FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
          FacesMessage.SEVERITY_ERROR,bundle.getString("please") +" "+bundle.getString("open") +" "+bundle.getString("facebook")+", "+bundle.getString("logout")+" "+bundle.getString("first"),""));
         FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
          FacesMessage.SEVERITY_ERROR,bundle.getString("then") +" "+bundle.getString("fb-signup") +" "+bundle.getString("here")+" "+bundle.getString("and")+" "+bundle.getString("agree")+" "+bundle.getString("to")+" "+bundle.getString("terms")+" "+bundle.getString("here"),""));

            return;
        }
        // jay at end of fbSignUp take to sign up page or something to click on Terms otherwise put a flag
        // check whether appname already exists and return
        // if identity.owner not equal to sss,it means temp user wants permanent

        boolean smtpEnabled = true;
        String savedActivationKey="";
        String savedPassword="";
        try {
                 Yxxxch522xhhxxhxxxxxclient client =(Yxxxch522xhhxxhxxxxxclient) entityManager
					.createQuery(
							"select cc from Yxxxch522xhhxxhxxxxxclient cc where cc.a0xxukxxbvxxxxxxxxxxclientversion = :nKeyName and cc.zzxxu2oxxhxxxxxxxxxxowner2 = :owner2 order by cc.a0xxuobxbxxxxxxxxxxxsid asc")
					.setParameter("nKeyName","01")
					.setParameter("owner2", owner2Code)
					.getSingleResult();
		      if (client == null) {
                       FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                                     FacesMessage.SEVERITY_ERROR,bundle.getString("create") +" "+bundle.getString("site") +" "+bundle.getString("first"),""));

                       return;
                      }else{
                       clientFullUrlName=client.getD6xxuxxrbvxxxxxxxxxxintaddr();
                       if(clientFullUrlName ==null || clientFullUrlName.isEmpty()){
                        FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                         FacesMessage.SEVERITY_ERROR,bundle.getString("client") +" "+bundle.getString("url") +" "+bundle.getString("missing"),""));
                          return;
                       }

                      }

        } catch (Exception exc) {
          FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
           FacesMessage.SEVERITY_ERROR,bundle.getString("create") +" "+bundle.getString("site") +" "+bundle.getString("error")+" "+exc.getMessage(),""));

          return; 
        }

        try {
	     user = (Yxxxuh566xwwqqwxxxxxuser) entityManager
 					.createQuery(
 							"select cc from Yxxxuh566xwwqqwxxxxxuser cc where cc.a0xxukuxbvxxxxxxxxxxid = :userid and cc.zzxxu2oxxhxxxxxxxxxxowner2 = :owner2 ")
 					.setParameter("userid", this.instance.getA0xxukuxbvxxxxxxxxxxid())
 					.setParameter("owner2", owner2Code)
 					.getSingleResult();
          if (user != null){
           FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
            FacesMessage.SEVERITY_ERROR,bundle.getString("id") +" "+this.instance.getA0xxukuxbvxxxxxxxxxxid()+" "+bundle.getString("exists"),""));

           return; 
          }
      
        }
        catch(NonUniqueResultException e){
         FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
          FacesMessage.SEVERITY_ERROR,bundle.getString("id") +" "+this.instance.getA0xxukuxbvxxxxxxxxxxid()+" "+bundle.getString("exists"),""));

           return; 
        }
        catch(Exception ignore){
        }

        try {
           //if coming from facebook sign up make user as Instance
           if (fbUid != null){
            this.setInstance(user);
            //currentPW is a non null field
            this.instance.setC4xxuxupivxxxxxxxxxxcurrpw("dummyfbPW");
           }else{
            this.instance.setZ1xxzzfxhhxxxxxxxxxxstatusfl(mopen);
            this.instance.setC7xxfxxxivxxxxxxxxxxtemporarypassword(true);
            this.setClientEmail(this.instance.getC1xxuxxxbvxxxxxxxxxxotherid() );
            // user key already has the email as key, it goes to customer record as well
            if (smtpEnabled) {
                this.instance.setZ1xxzzfxhhxxxxxxxxxxstatusfl(mpartial);
                savedActivationKey=getMD5Hash(this.getA0xxukuxbvxxxxxxxxxxid2() + this.getClientName() + this.getClientEmail() + System.currentTimeMillis());
                this.instance.setC9xxuxxxbvxxxxxxxxxxactivationkey(savedActivationKey);
            } else {
                // TODO: Fix for production ... No way to activate using email
                // if SMTP is not enabled ...
                System.out.println("WARNING!!! SMTP eMailer not enabled ... partially activating user without email activation.");
                this.instance.setZ1xxzzfxhhxxxxxxxxxxstatusfl(mpartial);
            }
            if (this.instance.getA0xxukuxbvxxxxxxxxxxid() == null || this.instance.getA0xxukuxbvxxxxxxxxxxid().length() == 0){
             this.instance.setA0xxukuxbvxxxxxxxxxxid(this.instance.getC1xxuxxxbvxxxxxxxxxxotherid());
            }
            savedPassword=PasswordSupport.tempPassword();
            this.instance.setC6xxuxuoivxxxxxxxxxxoldpw(savedPassword);
	    this.instance.setC4xxuxupivxxxxxxxxxxcurrpw(PasswordSupport.hash(savedPassword));
	    this.instance.setC8xxuxxxbvxxxxxxxxxxpasswordhash(PasswordSupport.getHashNoon() );
	    this.instance.setZ2xxcztxlxxxxxxxxxxxstatusfldt(calendar.getTime());
            calendare.add(Calendar.HOUR, 48);
            this.instance.setC5xxcxxxbvxxxxxxxxxxexpiry(calendare.getTime() );
           }
           //fb or app signUp  social media same rights as email signup activation

            if(this.chekIfDemo()){
		  this.instance.setC2xxuxuaiv38xxxxxxxxalevel("U");
		  this.instance.setC3xxuxubiv39xxxxxxxxblevel("H");
		  this.instance.setY1xxuxxxivxxxxxxxxxxrestrict1("D");
            }else{
                 if(signupas.equals("C")){//default is C and level V unless reseller sign up then V(en) and level P
 		  this.instance.setC2xxuxuaiv38xxxxxxxxalevel("V");
                 }else{
 		  this.instance.setC2xxuxuaiv38xxxxxxxxalevel("P");
                 }
             //  allow visitor to change own user record, user entity has VW 
             // manager can change  a vistor from W to H or Q if needed/trusted
             if(productCode.equals("f") ){
		   this.instance.setC3xxuxubiv39xxxxxxxxblevel("W");
             }else{
		   this.instance.setC3xxuxubiv39xxxxxxxxblevel("W");
             }
            }
            calendare.add(Calendar.HOUR, 24);
            this.instance.setC5xxcxxxbvxxxxxxxxxxexpiry(calendare.getTime() );
            //clientApplicationName is unique name within this cloud and can have alias public dns name like mitra.com
            enterprisecompcode=this.getClientApplicationName();
            inSignupAndCreateUser=true;
            // in following user persist a new customer or vendor will also be created with owner2 set as owner2Code 
            // using firstname lastname which are a0xxukuxbvxxxxxxxxxxid2 and clientname
            // change owner default value sss to this.instance.getA0xxukuxbvxxxxxxxxxxid()+ownerCode to restrict access to
            // user/customer(vendor)/address records created now
            ownerCode=this.instance.getA0xxukuxbvxxxxxxxxxxid()+ownerCode;
            // ownerCode 40ch max
            if(ownerCode.length() > 40){
             ownerCode=ownerCode.substring(ownerCode.length()-40);
            } 
            this.instance.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);

            if (fbUid != null){
             this.persist();
             return;
            } 
            // send the activation email ... as part of this transaction
            String activationLink="";
              if(urlPort ==8080){
               activationLink = "http://"+clientFullUrlName+":8080/login.wflow";
              }else{
               // need to add www if non raaspi.com ex raaspi.com,3rcomputer.com ie domain registered
               if(clientFullUrlName.contains("."+masterSiteCode)){
                activationLink = "http://"+clientFullUrlName+"/login.wflow";
               }else{
                activationLink = "http://www."+clientFullUrlName+"/login.wflow";
               }
              } 
            String newUserLink = activationLink + ((activationLink.indexOf("?") != -1) ? "&act=" : "?act=") + savedActivationKey;
            savedActivationKey="";
            setNewUserLink(newUserLink);
            if (smtpEnabled) {
                try {
                   Emailsend("/activationSignUp.xhtml");//emailSend will call emailRender and emailRender will try alternate email if setup
                   if(bcontinue){
                    this.instance.setZ1xxzzfxhhxxxxxxxxxxstatusfl(mnoMail);// mail worked no resend mail needed
                    this.persist();
                   }
                } catch (Exception zzz) {
                 FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                  FacesMessage.SEVERITY_ERROR,"yxxxuh566xwwqqwxxxxxuser "+bundle.getString("send") +" "+bundle.getString("email") +" "+bundle.getString("failed")+" "+zzz.getMessage(),""));
                    try {
                     //org.jboss.seam.transaction.Transaction.instance().setRollbackOnly();
                     } catch (Exception ignore) {}
                }
            }
            this.registrationScreenName = null;
            if(!customIdentity.getOwner().equals("sss")){
             // no one logged in so assume temp user not signing up , copy selection from temp userprofl to new one
             // added logic to change existing cart orders owner from userIP etc to new ID & add logic to delete temp customer and temp user
             Trexuq244xwwqqhxxxxxcuorders trexuq244xwwqqhxxxxxcuorders=null;
             if (fpxxfq1a5xwwqqhxxxxxitemList.getCartedList("cart") !=null && fpxxfq1a5xwwqqhxxxxxitemList.getCartedList("cart").size() > 0){
             for (Xoxxuq2b4xwwqqhxxxxxcuodetails itemOrderDetail : fpxxfq1a5xwwqqhxxxxxitemList.getCartedList("cart")) {
                 trexuq244xwwqqhxxxxxcuorders=itemOrderDetail.getTrexuq244xwwqqhxxxxxcuorders();
                 //change order owner and customer for history or wish list, no owner column for details
                 // but hibernate will detect change and create a new detail , so update statusfldt 
                 trexuq244xwwqqhxxxxxcuorders.setZexxutoxlhxxxxxxxxxxowner(this.instance.getA0xxukuxbvxxxxxxxxxxid()+"sss");
                 trexuq244xwwqqhxxxxxcuorders.setJxxxuq201xwwqqhxxxxxcustomer(this.instance.getJxxxuq201xwwqqhxxxxxcustomer());
                 trexuq244xwwqqhxxxxxcuorders.setZdxxcztxlxxxxxxxxxxxstatusfldt(Calendar.getInstance().getTime());
                 trexuq244xwwqqhxxxxxcuordersHome.setInstance(trexuq244xwwqqhxxxxxcuorders);
                 trexuq244xwwqqhxxxxxcuordersHome.superUpdate(); 
                 itemOrderDetail.setZixxcztxlxxxxxxxxxxxstatusfldt(Calendar.getInstance().getTime());
                 xoxxuq2b4xwwqqhxxxxxcuodetailsHome.update();
                 
                 jxxxuq201xwwqqhxxxxxcustomerHome.setInstance(trexuq244xwwqqhxxxxxcuorders.getJxxxuq201xwwqqhxxxxxcustomer());
                  // remove later as offline batch now record is in use , may be a way to do it outside for loop ie get rid of loop
                 //jxxxuq201xwwqqhxxxxxcustomerHome.remove();    
                 //entityManager.flush();
                try {
	     user = (Yxxxuh566xwwqqwxxxxxuser) entityManager
                       .createQuery(
                         "select cc from Yxxxuh566xwwqqwxxxxxuser cc where cc.a0xxukuxbvxxxxxxxxxxid = :userid and cc.zzxxu2oxxhxxxxxxxxxxowner2 = :owner2 ")
                          .setParameter("userid", customIdentity.getOwner().substring(0,customIdentity.getOwner().length()-3))
                          .setParameter("owner2", owner2Code)
                           .getSingleResult();
                 if (user != null){
                    this.setInstance(user); 
                    // this.remove();
                    break;
                 }
                 else{
                  FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                   FacesMessage.SEVERITY_ERROR,bundle.getString("temp") +" "+bundle.getString("user")+" "+bundle.getString("to")+" "+bundle.getString("delete")+"-"+customIdentity.getOwner()+" "+bundle.getString("not")+" "+bundle.getString("found"),""));

                  break;
                 } 
      
               }
               catch(NonUniqueResultException e){
                FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                 FacesMessage.SEVERITY_ERROR,bundle.getString("multiple") +" "+bundle.getString("user")+" "+bundle.getString("id")+" "+bundle.getString("entries")+"-"+customIdentity.getOwner()+" "+bundle.getString("error")+" "+bundle.getString("condition"),""));


                return; 
               }
               catch(Exception ignore){
                FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                 FacesMessage.SEVERITY_ERROR,bundle.getString("temp") +" "+bundle.getString("user")+" "+bundle.getString("delete")+" "+bundle.getString("error")+" "+bundle.getString("for")+"-"+customIdentity.getOwner(),""));

               }
             }//for             
             }//null check             
           }//not sss  
            this.instance = null; // do this last ... just to reset the register
                                 // form ...
        } catch (Exception exc) {
            try {
                //org.jboss.seam.transaction.Transaction.instance().setRollbackOnly();
            } catch (Exception ignore) {}

            // NOTE: we don't return the Exception message back to the newUser
            // because it may reveal too much information to a hacker
            log.severe( exc.getMessage());
            FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
              FacesMessage.SEVERITY_ERROR,bundle.getString("error") +" "+bundle.getString("in")+" "+bundle.getString("signup"),""));

        }
    }


    /**
           This is doDemoSignUp which also creates user(U) but allows them to do back office functions in demo sites
            Demo user has restriction D to limit changing their own records. Because they are User(U) they have employee record
            to allow transactions    
    */
    @Transactional
    public void doDemoSignup() {
    // doSignUp(signup) and doRegister(createsite) and doDemo(demosignup) all sends activation link via EMail and on receive will invoke doActivate 
    // which finds the user which has activation pending and process it
        // cannot persist user if cuorder half finished
        if (fpxxfq1a5xwwqqhxxxxxitemList.getCartedList("cart") != null && fpxxfq1a5xwwqqhxxxxxitemList.getCartedList("cart").size() > 0){
         FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                                     FacesMessage.SEVERITY_ERROR,bundle.getString("cannot") +" "+bundle.getString("signup") +" "+bundle.getString("if")+", "+bundle.getString("cart")+" "+bundle.getString("not")+" "+bundle.getString("empty"),""));

         FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                                     FacesMessage.SEVERITY_ERROR,bundle.getString("please") +" "+bundle.getString("empty") +" "+bundle.getString("cart")+", "+bundle.getString("return")+" "+bundle.getString("and")+" "+bundle.getString("then")+" "+bundle.getString("login")+"/"+bundle.getString("signup"),""));

            return;
        }
        if(!this.validEmail(this.instance.getC1xxuxxxbvxxxxxxxxxxotherid())){
          FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
           FacesMessage.SEVERITY_ERROR,bundle.getString("ERROR")+", "+this.instance.getC1xxuxxxbvxxxxxxxxxxotherid()+" "+bundle.getString("is")+" "+bundle.getString("not")+" "+bundle.getString("valid")+" "+bundle.getString("email") ,""));
            return;
        }

        if(doResendActivationEmail("demoSignIn",this.instance.getC1xxuxxxbvxxxxxxxxxxotherid())){
         return;
        }
        // check box values not being sent using bootstrap???
        if (!agreedToTermsOfUse && fbUid == null) {
         //FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
          //FacesMessage.SEVERITY_ERROR,bundle.getString("please") +" "+bundle.getString("agree")+" "+bundle.getString("to")+" "+bundle.getString("terms"),""));
            //return;
        }
        if (!agreedToTermsOfUse && fbUid != null) {
         //FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
          //FacesMessage.SEVERITY_ERROR,bundle.getString("please") +" "+bundle.getString("agree")+" "+bundle.getString("to")+" "+bundle.getString("terms"),""));
            //return;
        }
        // check whether appname already exists and return

        boolean smtpEnabled = true;
        String savedActivationKey="";
        String savedPassword="";
        try {
                 Yxxxch522xhhxxhxxxxxclient client =(Yxxxch522xhhxxhxxxxxclient) entityManager
					.createQuery(
							"select cc from Yxxxch522xhhxxhxxxxxclient cc where cc.a0xxukxxbvxxxxxxxxxxclientversion = :nKeyName and cc.zzxxu2oxxhxxxxxxxxxxowner2 = :owner2 order by cc.a0xxuobxbxxxxxxxxxxxsid asc")
					.setParameter("nKeyName","01")
					.setParameter("owner2", owner2Code)
					.getSingleResult();
		      if (client == null) {
                       FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                        FacesMessage.SEVERITY_ERROR,bundle.getString("site") +" "+bundle.getString("record")+" "+bundle.getString("not")+" "+bundle.getString("found"),""));

                          return;
                      }else{
                       clientFullUrlName=client.getD6xxuxxrbvxxxxxxxxxxintaddr();
                       if(clientFullUrlName ==null || clientFullUrlName.isEmpty()){
                        FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                         FacesMessage.SEVERITY_ERROR,bundle.getString("client") +" "+bundle.getString("url")+" "+bundle.getString("missing"),""));

                          return;
                       }
                      }
        } catch (Exception exc) {
          FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
           FacesMessage.SEVERITY_ERROR,bundle.getString("site") +" "+bundle.getString("record")+" "+bundle.getString("not")+" "+bundle.getString("found")+" "+ exc.getMessage(),""));

          return; 
        }

        try {
	     user = (Yxxxuh566xwwqqwxxxxxuser) entityManager
 					.createQuery(
 							"select cc from Yxxxuh566xwwqqwxxxxxuser cc where cc.a0xxukuxbvxxxxxxxxxxid = :userid and cc.zzxxu2oxxhxxxxxxxxxxowner2 = :owner2 ")
 					.setParameter("userid", this.instance.getC1xxuxxxbvxxxxxxxxxxotherid())
 					.setParameter("owner2", owner2Code)
 					.getSingleResult();
          if (user != null){
           FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
            FacesMessage.SEVERITY_ERROR,bundle.getString("id")+" "+ this.instance.getC1xxuxxxbvxxxxxxxxxxotherid()+" "+bundle.getString("already")+" "+bundle.getString("taken"),""));

           return; 
          }
      
        }
        catch(NonUniqueResultException e){
         FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
          FacesMessage.SEVERITY_ERROR,bundle.getString("id")+" "+ this.instance.getC1xxuxxxbvxxxxxxxxxxotherid()+" "+bundle.getString("already")+" "+bundle.getString("taken"),""));
           return; 
        }
        catch(Exception ignore){
        }

        try {
            this.instance.setZ1xxzzfxhhxxxxxxxxxxstatusfl(mopen);
            this.instance.setC7xxfxxxivxxxxxxxxxxtemporarypassword(true);
            this.setClientEmail(this.instance.getC1xxuxxxbvxxxxxxxxxxotherid() );
            // user key already has the email as key, it goes to customer record as well
            if (smtpEnabled) {
                this.instance.setZ1xxzzfxhhxxxxxxxxxxstatusfl(mpartial);
                savedActivationKey=getMD5Hash(this.getA0xxukuxbvxxxxxxxxxxid2() + this.getClientName() + this.getClientEmail() + System.currentTimeMillis());
                this.instance.setC9xxuxxxbvxxxxxxxxxxactivationkey(savedActivationKey);
            } else {
                // TODO: Fix for production ... No way to activate using email
                // if SMTP is not enabled ...
                System.out.println("WARNING!!! SMTP eMailer not enabled ... partially activating user without email activation.");
                this.instance.setZ1xxzzfxhhxxxxxxxxxxstatusfl(mpartial);
            }
            if (this.instance.getA0xxukuxbvxxxxxxxxxxid() == null || (this.instance.getA0xxukuxbvxxxxxxxxxxid() != null && this.instance.getA0xxukuxbvxxxxxxxxxxid().length() == 0)){
             this.instance.setA0xxukuxbvxxxxxxxxxxid(this.instance.getC1xxuxxxbvxxxxxxxxxxotherid());
            }
            savedPassword=PasswordSupport.tempPassword();
            this.instance.setC6xxuxuoivxxxxxxxxxxoldpw(savedPassword);
		 this.instance.setC4xxuxupivxxxxxxxxxxcurrpw(PasswordSupport.hash(savedPassword));
		 this.instance.setC8xxuxxxbvxxxxxxxxxxpasswordhash(PasswordSupport.getHashNoon() );
		 this.instance.setZ2xxcztxlxxxxxxxxxxxstatusfldt(calendar.getTime());
            calendare.add(Calendar.HOUR, 48);
            this.instance.setC5xxcxxxbvxxxxxxxxxxexpiry(calendare.getTime() );
		 this.instance.setC2xxuxuaiv38xxxxxxxxalevel("U");
		 this.instance.setC3xxuxubiv39xxxxxxxxblevel("H");
		 this.instance.setY1xxuxxxivxxxxxxxxxxrestrict1("D");
            calendare.add(Calendar.HOUR, 24);
            this.instance.setC5xxcxxxbvxxxxxxxxxxexpiry(calendare.getTime() );
            //clientApplicationName is unique name within this cloud and can have alias public dns name like mitra.com
            enterprisecompcode=this.getClientApplicationName();
            inDemoSignupAndCreateUser=true;
            //owner2Code=enterprisecompcode;
            //this.instance.setZzxxu2oxxhxxxxxxxxxxowner2(owner2Code);
            // in following user persist a new customer will also be created with owner2 set as owner2Code 
            // using firstname lastname which are a0xxukuxbvxxxxxxxxxxid2 and clientname
            this.persist();

            // send the activation email ... as part of this transaction
            String activationLink="";
              if(urlPort ==8080){
               activationLink = "http://"+clientFullUrlName+":8080/login.wflow";
              }else{
               // need to add www if non raaspi.com ex raaspi.com,3rcomputer.com ie domain registered
               if(clientFullUrlName.contains("."+masterSiteCode)){
                activationLink = "http://"+clientFullUrlName+"/login.wflow";
               }else{
                activationLink = "http://www."+clientFullUrlName+"/login.wflow";
               }
              } 
            String newUserLink = activationLink + ((activationLink.indexOf("?") != -1) ? "&act=" : "?act=") + savedActivationKey;
            savedActivationKey="";
		 setNewUserLink(newUserLink);
            if (smtpEnabled) {
                try {
                   Emailsend("/activationDemo.xhtml");
                   if(bcontinue){
                    this.instance.setZ1xxzzfxhhxxxxxxxxxxstatusfl(mnoMail);// mail worked no resend mail needed
                    this.persist();
                   }
                } catch (Exception zzz) {
                  FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                                     FacesMessage.SEVERITY_ERROR,"yxxxuh566xwwqqwxxxxxuser "+bundle.getString("send")+" "+bundle.getString("email")+" "+bundle.getString("failed"),""));

                }
            }
            this.registrationScreenName = null;
            this.instance = null; // do this last ... just to reset the register
                                 // form ...
        } catch (Exception exc) {
            try {
                //org.jboss.seam.transaction.Transaction.instance().setRollbackOnly();
            } catch (Exception ignore) {}

            // NOTE: we don't return the Exception message back to the newUser
            // because it may reveal too much information to a hacker
		 log.severe( exc.getMessage());
            //statusMessages.addToControlFromResourceBundle("demoButton", ERROR, "general_demo_error");
            FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                                     FacesMessage.SEVERITY_ERROR,bundle.getString("demo")+" "+bundle.getString("signup")+" "+bundle.getString("error"),""));

        }
    }

    public void eMailSubscribed(Yxxxch522xhhxxhxxxxxclient clientRow,String frequency) {
        //handle where online subscription was not used but payment handle in backoffice 
        calendar.setTime(clientRow.getF8xxcxxxlvxxxxxxxxxxlicenseend());
        calendare.setTime(clientRow.getF8xxcxxxlvxxxxxxxxxxlicenseend());
        yxxxch522xhhxxhxxxxxclientHome.clearInstance();
        if (yxxxch522xhhxxhxxxxxclientHome.dateCompare(clientRow.getF7xxcxxxlvxxxxxxxxxxlicensestart(),null) <0){
         if(frequency.equals("Monthly")){
                clientRow.setF6xxuxxxlvxxxxxxxxxxlicensetype("Monthly");
                calendar.add(Calendar.DAY_OF_YEAR, 1);//add 1 day to current end date, allows payment before expiry
                clientRow.setF7xxcxxxlvxxxxxxxxxxlicensestart(calendar.getTime());
                calendar.add(Calendar.DAY_OF_YEAR, 364);
                clientRow.setF8xxcxxxlvxxxxxxxxxxlicenseend(calendar.getTime());
                yxxxch522xhhxxhxxxxxclientHome.setInstance(clientRow);
                yxxxch522xhhxxhxxxxxclientHome.allowUpdate();
       
         }else{
                clientRow.setF6xxuxxxlvxxxxxxxxxxlicensetype("Yearly");
                calendar.add(Calendar.DAY_OF_YEAR, 1);//add 1 day to current end date, allows not loosing trial 
                clientRow.setF7xxcxxxlvxxxxxxxxxxlicensestart(calendar.getTime());
                calendar.add(Calendar.DAY_OF_YEAR, 364);
                clientRow.setF8xxcxxxlvxxxxxxxxxxlicenseend(calendar.getTime());
                yxxxch522xhhxxhxxxxxclientHome.setInstance(clientRow);
                yxxxch522xhhxxhxxxxxclientHome.allowUpdate();

         }
         newUserLink2=new SimpleDateFormat("yyyy.MMM.dd.HH.mm").format(clientRow.getF8xxcxxxlvxxxxxxxxxxlicenseend());

         FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
          FacesMessage.SEVERITY_ERROR,bundle.getString("license")+" "+bundle.getString("start")+" "+clientRow.getF7xxcxxxlvxxxxxxxxxxlicensestart()+", "+frequency,""));

        }else{
         FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
          FacesMessage.SEVERITY_ERROR,bundle.getString("license")+" "+bundle.getString("start")+" "+clientRow.getF7xxcxxxlvxxxxxxxxxxlicensestart()+" "+bundle.getString("in_future"),""));

          return;
        }

        boolean smtpEnabled = true;
            String owner2Client=clientRow.getZzxxu2oxxhxxxxxxxxxxowner2();
            if(urlPort ==8080){
             newUserLink=clientRow.getD6xxuxxrbvxxxxxxxxxxintaddr()+":8080";// intaddr also saved in customIdentity as mastersiteUrl
            }else{
             newUserLink=clientRow.getD6xxuxxrbvxxxxxxxxxxintaddr();// intaddr also saved in customIdentity as mastersiteUrl
            }


            if (smtpEnabled) {
                try {
                 Yxxxuh566xwwqqwxxxxxuser yxxxuh566xwwqqwxxxxxuser =(Yxxxuh566xwwqqwxxxxxuser) entityManager
					.createQuery(
							"select cc from Yxxxuh566xwwqqwxxxxxuser cc where cc.a0xxukuxbvxxxxxxxxxxid = :nKeyName and cc.zzxxu2oxxhxxxxxxxxxxowner2 = :owner2 order by cc.a0xxuobxbxxxxxxxxxxxsid asc")
					.setParameter("nKeyName","admin")
					.setParameter("owner2", owner2Client)
					.getSingleResult();
                 yxxxuh566xwwqqwxxxxxuserHome.setInstance(yxxxuh566xwwqqwxxxxxuser);
                 this.setClientEmail(this.instance.getC1xxuxxxbvxxxxxxxxxxotherid() );
 
                 // check if master site, a subdomain serverName can also include master site name 
                 if(customIdentity.isMasterSite()){   
                 }
                 else{
                     // not allowed
                  return;
                 }
                 setNewUserLink(newUserLink);

                 Emailsend("/subscribed.xhtml");//

                } catch (Exception zzz) {
                 FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                  FacesMessage.SEVERITY_ERROR,"yxxxuh566xwwqqwxxxxxuser "+bundle.getString("send")+" "+bundle.getString("subscribedemail")+" "+bundle.getString("failed")+" -"+ zzz.getMessage(),""));

                }
            }

    }




    public void eMailNoactivity(Yxxxch522xhhxxhxxxxxclient clientRow) {
        boolean smtpEnabled = true;
  
            String owner2Client=clientRow.getZzxxu2oxxhxxxxxxxxxxowner2();
            if(urlPort ==8080){
             newUserLink=clientRow.getD6xxuxxrbvxxxxxxxxxxintaddr()+":8080";// intaddr also saved in customIdentity as mastersiteUrl
            }else{
             newUserLink=clientRow.getD6xxuxxrbvxxxxxxxxxxintaddr();// intaddr also saved in customIdentity as mastersiteUrl
            }
            if (smtpEnabled) {
                try {
                 Yxxxuh566xwwqqwxxxxxuser yxxxuh566xwwqqwxxxxxuser =(Yxxxuh566xwwqqwxxxxxuser) entityManager
					.createQuery(
							"select cc from Yxxxuh566xwwqqwxxxxxuser cc where cc.a0xxukuxbvxxxxxxxxxxid = :nKeyName and cc.zzxxu2oxxhxxxxxxxxxxowner2 = :owner2 order by cc.a0xxuobxbxxxxxxxxxxxsid asc")
					.setParameter("nKeyName","admin")
					.setParameter("owner2", owner2Client)
					.getSingleResult();
                 yxxxuh566xwwqqwxxxxxuserHome.setInstance(yxxxuh566xwwqqwxxxxxuser);
                 this.setClientEmail(this.instance.getC1xxuxxxbvxxxxxxxxxxotherid() );
                 // check if master site, a subdomain serverName can also include master site name 
                 if(customIdentity.isMasterSite()){   
                 }
                 else{
                     // not allowed
                  return;
                 }
                 setNewUserLink(newUserLink);
                 Emailsend("/noactivity.xhtml");

                } catch (Exception zzz) {
                 FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                                     FacesMessage.SEVERITY_ERROR,"yxxxuh566xwwqqwxxxxxuser "+bundle.getString("send")+" "+bundle.getString("email")+" "+bundle.getString("failed")+" -"+ zzz.getMessage(),""));

                }
            }

    }

    public void eMailEndOfTrial(Yxxxch522xhhxxhxxxxxclient clientRow) {
        boolean smtpEnabled = true;
            String owner2Client=clientRow.getZzxxu2oxxhxxxxxxxxxxowner2();

            if (smtpEnabled) {
                try {
                 Yxxxuh566xwwqqwxxxxxuser yxxxuh566xwwqqwxxxxxuser =(Yxxxuh566xwwqqwxxxxxuser) entityManager
					.createQuery(
							"select cc from Yxxxuh566xwwqqwxxxxxuser cc where cc.a0xxukuxbvxxxxxxxxxxid = :nKeyName and cc.zzxxu2oxxhxxxxxxxxxxowner2 = :owner2 order by cc.a0xxuobxbxxxxxxxxxxxsid asc")
					.setParameter("nKeyName","admin")
					.setParameter("owner2", owner2Client)
					.getSingleResult();
                 yxxxuh566xwwqqwxxxxxuserHome.setInstance(yxxxuh566xwwqqwxxxxxuser);
                 clientFullUrlName=clientRow.getD6xxuxxrbvxxxxxxxxxxintaddr();
                 this.setClientEmail(this.instance.getC1xxuxxxbvxxxxxxxxxxotherid() );//reuse clientEmail to pass user Email info
                 // check if master site, a subdomain serverName can also include master site name 
                 if(customIdentity.isMasterSite()){                  }
                 else{
                     // not allowed
                  return;
                 }
                 Emailsend("/endoftrial.xhtml");

                } catch (Exception zzz) {
                FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                                     FacesMessage.SEVERITY_ERROR,"yxxxuh566xwwqqwxxxxxuser "+bundle.getString("send")+" "+bundle.getString("email")+" "+bundle.getString("failed")+" -"+ zzz.getMessage(),""));

                }
            }

    }
    public void closeClient(Yxxxch522xhhxxhxxxxxclient clientRow) {
     // change status to mclosed from mactive
        try {
                 Yxxxch522xhhxxhxxxxxclient yxxxch522xhhxxhxxxxxclient =(Yxxxch522xhhxxhxxxxxclient) entityManager
					.createQuery(
							"select cc from Yxxxch522xhhxxhxxxxxclient cc where cc.a0xxukxxbvxxxxxxxxxxclientversion = :nKeyName and cc.zzxxu2oxxhxxxxxxxxxxowner2 = :owner2 order by cc.a0xxuobxbxxxxxxxxxxxsid asc")
					.setParameter("nKeyName","01")
					.setParameter("owner2",clientRow.getZzxxu2oxxhxxxxxxxxxxowner2() )
					.getSingleResult();
		      if (yxxxch522xhhxxhxxxxxclient != null) {
                  if (yxxxch522xhhxxhxxxxxclient.getZexxzzfxhhxxxxxxxxxxstatusfl() != mclosed){
                   yxxxch522xhhxxhxxxxxclient.setZexxzzfxhhxxxxxxxxxxstatusfl(mclosed);
                   FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                                     FacesMessage.SEVERITY_ERROR,bundle.getString("status")+" "+bundle.getString("closed"),""));

                  }else{
                   yxxxch522xhhxxhxxxxxclient.setZexxzzfxhhxxxxxxxxxxstatusfl(mactive);
                   FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                                     FacesMessage.SEVERITY_ERROR,bundle.getString("status")+" "+bundle.getString("active"),""));

                  }
                  yxxxch522xhhxxhxxxxxclientHome.setInstance(yxxxch522xhhxxhxxxxxclient);
                  yxxxch522xhhxxhxxxxxclientHome.persist();
                  FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                                     FacesMessage.SEVERITY_ERROR,bundle.getString("status")+" "+bundle.getString("closed"),""));
                  return;
                 }
        } catch (Exception e) {
          FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                                     FacesMessage.SEVERITY_ERROR,bundle.getString("error")+" "+e.getMessage(),""));

        }



    }


    public void removeData(Yxxxch522xhhxxhxxxxxclient clientRow) {
     
    }

    @Transactional
    //allows couponName to be paased
    public void eMailReadyToActivate(Yxxxch522xhhxxhxxxxxclient clientRow,String couponName) {
     clientApplicationSubFunction=couponName;
     eMailReadyToActivate(clientRow);
    }

    /**
    * The following method called by r3restclient or by sqlAdmin depending on automated or manual site create
    * @param args tenant client record
    * @return none
    * @exception jdbc error or email error
    * @see "class r3RestClient openAuthorize(),view sqlAdmin, doMasterSite()"
    * 
    */

    @Transactional
    public void eMailReadyToActivate(Yxxxch522xhhxxhxxxxxclient clientRow) {
        // called (by either doregister only if masterSite or by sqladmin.xhtml action after new site dns setups 
        // also by r3restapi for shopify clients
        // complete new site setup part2 first but use owner2Client (new client)  instead of owner2code (which is myflowp)  
        // if already activated then renew license but after reasonability checking, 
        String owner2Client=clientRow.getZzxxu2oxxhxxxxxxxxxxowner2();
        clientFullUrlName=clientRow.getD6xxuxxrbvxxxxxxxxxxintaddr();
        //DoRegister/DoQuickRegister > persist(admin) > inRegistrationAndCreateUser > createClientRegister() sets clientFullUrlName
        if(clientFullUrlName ==null || clientFullUrlName.isEmpty()){
         FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
          FacesMessage.SEVERITY_ERROR,bundle.getString("client")+" "+bundle.getString("url")+" "+bundle.getString("missing"),""));
          return;
        }
         // inRegistrationAndCreateUser useful in same session, for later invoke from sqladmin in case of email fail
         //  log the value to check if value not retained if comes from doq but set it to true
         log.severe("jay value before "+inRegistrationAndCreateUser);

         inRegistrationAndCreateUser=true;         
         //if (!inRegistrationAndCreateUser && clientRow.getF6xxuxxxlvxxxxxxxxxxlicensetype().trim().equals("TrialPending") ){
         if(!hostingAt.equals("op") && clientRow.getF6xxuxxxlvxxxxxxxxxxlicensetype().trim().equals("TrialPending")){
          //no automated routing and automated invoking copy defaults and copy options and still pending 
          copyDefaultsToOwner2(owner2Client);
          log.severe(bundle.getString("copy")+" "+bundle.getString("defaults")+"done for "+owner2Client);

          if (!bcontinue){
           return;
          }
          copyOptionsDefaultsToOwner2(owner2Client);
          if (!bcontinue){
           return;
          }
          copy2OptionsDefaultsToOwner2(owner2Client);
          if (!bcontinue){
           return;
          }
          log.severe(bundle.getString("copy")+" "+bundle.getString("options")+"done for "+owner2Client);

         }
         if (!bcontinue){
          return;
         }
         // comes here either from sqladmin for remaining sites or as part of myflowp/raaspi create site
         // check trial or license and send appropriate email
         //if trial,information to be sent is split between admin and manager, so both records need to be read 
         // myflowp/raaspi was set to trial already, so it will now go into yearly, others will go to Trial pending first and later to yearly
         // any yearly coming here will go into Renewal  
         // need to put more reasonability checking for renewal
         // can we use the fact doregister puts passwords in site client notes field which is later used in below logic
         // 

         boolean smtpEnabled = true;
           //test in what seq licensetype is setup,? comes here by sqladmin action
           if (clientRow.getZexxzzfxhhxxxxxxxxxxstatusfl() != mclosed && 
               (clientRow.getF6xxuxxxlvxxxxxxxxxxlicensetype().equals("Trial") ||
                 clientRow.getF6xxuxxxlvxxxxxxxxxxlicensetype().equals("Yearly"))){
             try {
              // trial to Yearly or renewal of Yearly can come here if email failed/resent or by mistake
              // assume trial email resend only if closed status
              // allow yearly renewal only in last month or later 
              // if couponName has value assume long trial ie 365+14 days and licenseend date a year+14 days away
              // and licensetype trialPending

              //if(clientApplicationSubFunction ==null || clientApplicationSubFunction.isEmpty()){
               calendar.setTime(clientRow.getF8xxcxxxlvxxxxxxxxxxlicenseend());
               calendare.setTime(clientRow.getF8xxcxxxlvxxxxxxxxxxlicenseend());
               calendare.add(Calendar.MONTH, -1);
               if(calendare.before(currbusdate) ){
                clientRow.setF6xxuxxxlvxxxxxxxxxxlicensetype("Yearly");
                calendar.add(Calendar.DAY_OF_YEAR, 1);
                clientRow.setF7xxcxxxlvxxxxxxxxxxlicensestart(calendar.getTime());
                calendar.add(Calendar.DAY_OF_YEAR, 364);
                clientRow.setF8xxcxxxlvxxxxxxxxxxlicenseend(calendar.getTime());
                yxxxch522xhhxxhxxxxxclientHome.setInstance(clientRow);
                yxxxch522xhhxxhxxxxxclientHome.allowUpdate();
               }else{
                FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                 FacesMessage.SEVERITY_ERROR,bundle.getString("Renewal")+" "+bundle.getString("allowed")+" "+bundle.getString("in")+" "+bundle.getString("last")+" "+bundle.getString("month")+" "+bundle.getString("or")+" "+bundle.getString("later")+", "+bundle.getString("license")+" "+bundle.getString("ending")+ sdf.format(calendar.getTime()),""));
                return;
               } 
              //}
             } catch (Exception zzz) {
              FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
               FacesMessage.SEVERITY_ERROR,bundle.getString("client")+" "+bundle.getString("update")+" "+bundle.getString("failed")+" "+zzz.getMessage(),""));
             
             // continue but put alert msg in site client pop3server field for raaspi support action  
             }
             FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
              FacesMessage.SEVERITY_ERROR,bundle.getString("type")+" "+clientRow.getF6xxuxxxlvxxxxxxxxxxlicensetype()+" "+bundle.getString("license")+" "+bundle.getString("done"),""));

             if (smtpEnabled) {
              owner2Client=clientRow.getZzxxu2oxxhxxxxxxxxxxowner2();
              try {
               Yxxxuh566xwwqqwxxxxxuser yxxxuh566xwwqqwxxxxxuser =(Yxxxuh566xwwqqwxxxxxuser) entityManager
	.createQuery(
	"select cc from Yxxxuh566xwwqqwxxxxxuser cc where cc.a0xxukuxbvxxxxxxxxxxid = :nKeyName and cc.zzxxu2oxxhxxxxxxxxxxowner2 = :owner2 order by cc.a0xxuobxbxxxxxxxxxxxsid asc")
	.setParameter("nKeyName","manager")
	.setParameter("owner2", owner2Client)
	.getSingleResult();
                 yxxxuh566xwwqqwxxxxxuserHome.setInstance(yxxxuh566xwwqqwxxxxxuser);
                 this.setClientEmail(this.instance.getC1xxuxxxbvxxxxxxxxxxotherid() );
                 if(urlPort ==8080){
                  newUserLink = clientFullUrlName+":8080/login.wflow";
                 }else{
                  newUserLink = clientFullUrlName+"/login.wflow";
                 } 
                 newUserLink2 =sdf.format(clientRow.getF8xxcxxxlvxxxxxxxxxxlicenseend());
                 
                 Emailsend("/licensed.xhtml","(license renewal)");
              } catch (Exception zzz) {
                FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                  FacesMessage.SEVERITY_ERROR,bundle.getString("user")+" "+bundle.getString("email")+" "+bundle.getString("send")+" "+bundle.getString("failed")+" "+zzz.getMessage(),""));
                // set alert for raaspi support (rather than email) by putting msg in site client field named pop3server

              }
              return;
             }
           }
           else{
            // license type is trial pending  and client status mclosed,  comes here by sqladmin action or r3rest after router setup
            if (clientRow.getF6xxuxxxlvxxxxxxxxxxlicensetype().equals("Yearly") ){
             FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
               FacesMessage.SEVERITY_ERROR,bundle.getString("expected")+" "+bundle.getString("TrialPending")+" "+bundle.getString("status")+", "+bundle.getString("got")+" "+bundle.getString("status")+" "+bundle.getString("yearly"),""));

               // add logic to check status if email sent if not send email
              return;
            }
            // normal logic path for sqladmin action
            else {
             FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
              FacesMessage.SEVERITY_ERROR,bundle.getString("current")+" "+bundle.getString("status")+" "+clientRow.getF6xxuxxxlvxxxxxxxxxxlicensetype(),""));

             try {
              clientRow.setF6xxuxxxlvxxxxxxxxxxlicensetype("Trial");
              clientRow.setZfxxcztxlxxxxxxxxxxxstatusfldt(Calendar.getInstance().getTime());
              clientRow.setZexxzzfxhhxxxxxxxxxxstatusfl(mactive);//reset if closed
              yxxxch522xhhxxhxxxxxclientHome.setInstance(clientRow);
              yxxxch522xhhxxhxxxxxclientHome.allowUpdate();
             } catch (Exception zzz) {
               FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                FacesMessage.SEVERITY_ERROR,bundle.getString("client")+" "+bundle.getString("update")+" "+bundle.getString("failed")+" "+zzz.getMessage(),""));
               return;
             }

             owner2Client=clientRow.getZzxxu2oxxhxxxxxxxxxxowner2();
             String savedPW=null;
             Yxxxuh566xwwqqwxxxxxuser yxxxuh566xwwqqwxxxxxuser = null;
             try{
              yxxxuh566xwwqqwxxxxxuser =(Yxxxuh566xwwqqwxxxxxuser) entityManager
					.createQuery(
							"select cc from Yxxxuh566xwwqqwxxxxxuser cc where cc.a0xxukuxbvxxxxxxxxxxid = :nKeyName and cc.zzxxu2oxxhxxxxxxxxxxowner2 = :owner2 order by cc.a0xxuobxbxxxxxxxxxxxsid asc")
					.setParameter("nKeyName","manager")
					.setParameter("owner2", owner2Client)
					.getSingleResult();
              savedPW=yxxxuh566xwwqqwxxxxxuser.getY7xxuxznbvxxxxxxxxxxnotes(); 
             } catch (Exception zzz) {
               FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                FacesMessage.SEVERITY_ERROR,bundle.getString("user")+" "+bundle.getString("record")+" "+bundle.getString("manager")+" "+bundle.getString("failed")+" "+zzz.getMessage(),""));
               return;
             }

             if (smtpEnabled) {
              // send the activation email ... as part of this transaction
              String activationLink="";
              if(urlPort ==8080){
               activationLink = clientFullUrlName+":8080/login.wflow";
              }else{
               activationLink = clientFullUrlName+"/login.wflow";
              } 
                           yxxxuh566xwwqqwxxxxxuser =(Yxxxuh566xwwqqwxxxxxuser) entityManager
					.createQuery(
							"select cc from Yxxxuh566xwwqqwxxxxxuser cc where cc.a0xxukuxbvxxxxxxxxxxid = :nKeyName and cc.zzxxu2oxxhxxxxxxxxxxowner2 = :owner2 order by cc.a0xxuobxbxxxxxxxxxxxsid asc")
					.setParameter("nKeyName","admin")
					.setParameter("owner2", owner2Client)
					.getSingleResult();
              yxxxuh566xwwqqwxxxxxuserHome.setInstance(yxxxuh566xwwqqwxxxxxuser);
              if (yxxxuh566xwwqqwxxxxxuser.getC9xxuxxxbvxxxxxxxxxxactivationkey() == null | (yxxxuh566xwwqqwxxxxxuser.getC9xxuxxxbvxxxxxxxxxxactivationkey() != null && yxxxuh566xwwqqwxxxxxuser.getC9xxuxxxbvxxxxxxxxxxactivationkey().length() == 0)){
               FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                 FacesMessage.SEVERITY_ERROR,bundle.getString("activation")+" "+bundle.getString("key")+" "+bundle.getString("null"),""));

               return;          
              }
              String newUserLink = activationLink + ((activationLink.indexOf("?") != -1) ? "&act=" : "?act=") + yxxxuh566xwwqqwxxxxxuser.getC9xxuxxxbvxxxxxxxxxxactivationkey();
              // we need to get pw from client record and not from this.instance.getC4xxuxupivxxxxxxxxxxcurrpw()
              //in case asyncrhonus ie after doregister session ends. use bbandbb as  
              String[] str = savedPW.split("  and  ");
              if(str.length>1){
               String mgrPw=str[1];
               newUserLink =newUserLink+"&id=manager&pw="+mgrPw; 
              }
             setNewUserLink(newUserLink);
              setClientEmail(savedPW);// savedPW holds the two passwords which were saved in site manager user notes field by doRegister()

                try {
                   // will be addressed to admin but pw saved in clientEmail property of clientHome, use otherid for eMail
                   Emailsend("/activation.xhtml","(for site activation)");
                   //jay tbd also call a method to create a co for this manager re subscription with 90 days delivery
                   // getActivation was send in doregister, emailsend/activation will send an email siteSetupSteps.xhtml to client outlining the steps to follow
                   // emailsend/emailrender saves info in clobdata
                } catch (Exception zzz) {
		    log.severe(" Send eMail failed: " + zzz.getMessage());
                    FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                     FacesMessage.SEVERITY_ERROR,"yxxxuh566xwwqqwxxxxxuser"+" "+bundle.getString("having")+" "+bundle.getString("email")+" "+bundle.getString("server")+", "+bundle.getString("try")+" "+bundle.getString("later"),""));

                }
           }
         }
        }//trial/yearly/pending trial
    }
    public boolean validEmail(String email) {
      // email checking addded , otherwise persist fails 
        Pattern pattern = Pattern.compile("^.+@.+\\..+$");
        Matcher matcher = pattern.matcher(email);
        if(!matcher.matches()){
         FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
          FacesMessage.SEVERITY_ERROR,bundle.getString("email")+ " "+email+" "+bundle.getString("invalid"),""));
         return false;
        }
        return true;
    }

@Transactional
    public String reDeem() {
    // for prePaid and redeem coupon situations like appSumo
        // we need to search if it exists then verify why 
        // capture info and create as a new raaspi customer first. Needed now in prepaid coupon case plus was missed 
        //modified existing method createEmployeeCustomerAddressSignup but added parameters 
        // password is now passed via newUserLink not userAgentStr which was getting reset by browser
        if(this.newUserLink == null){
         this.newUserLink="";
        }
        this.newUserLink=this.newUserLink.trim();
        this.clientApplicationSubFunction=this.clientApplicationSubFunction.trim();
        String couponName=this.clientApplicationSubFunction;     
        // validate email                 
        if(!this.validEmail(this.instance.getC1xxuxxxbvxxxxxxxxxxotherid())){
          FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
           FacesMessage.SEVERITY_ERROR,bundle.getString("ERROR")+", "+this.instance.getC1xxuxxxbvxxxxxxxxxxotherid()+" "+bundle.getString("is")+" "+bundle.getString("not")+" "+bundle.getString("valid")+" "+bundle.getString("email") ,""));
            return null;
        }

        String password=this.newUserLink;
        if(password !=null && !password.isEmpty()){
         int score=getStength(password);
         if(score ==0){
          FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
           FacesMessage.SEVERITY_ERROR,bundle.getString("Password")+" "+bundle.getString("minimum")+" "+bundle.getString("length")+" "+bundle.getString("four")+", "+bundle.getString("recommend")+" "+bundle.getString("eight")+" "+bundle.getString("or")+" "+bundle.getString("more"),""));
           bcontinue=false;
           return null;                
         }
        }

        yxxxuq591xwwqqhxxxxxrate1f=yxxxuq591xwwqqhxxxxxrate1fList.getRaaspiIncentiveToEntity("SC",clientApplicationSubFunction);
        if (yxxxuq591xwwqqhxxxxxrate1f==null){
         FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
          FacesMessage.SEVERITY_ERROR,bundle.getString("Coupon")+ " "+clientApplicationSubFunction+" "+bundle.getString("invalid"),""));
         return null;
        } 
        if (isBitSet(yxxxuq591xwwqqhxxxxxrate1f.getZ1xxzzfxhhxxxxxxxxxxstatusfl(),_mclosed)){
         FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
          FacesMessage.SEVERITY_ERROR,bundle.getString("Coupon")+ " "+clientApplicationSubFunction+" "+bundle.getString("already")+" "+bundle.getString("used"),""));
         return null;
        } 
        Jxxxuq201xwwqqhxxxxxcustomer jxxxuq201xwwqqhxxxxxcustomer=jxxxuq201xwwqqhxxxxxcustomerList.getEmailCouponToEntity(this.instance.getC1xxuxxxbvxxxxxxxxxxotherid(),clientApplicationSubFunction);
        if (jxxxuq201xwwqqhxxxxxcustomer !=null
         && isBitSet(yxxxuq591xwwqqhxxxxxrate1f.getZ1xxzzfxhhxxxxxxxxxxstatusfl(),_mclosed)){
         //At this point found is bad only if coupon status is closed
         FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
          FacesMessage.SEVERITY_ERROR,bundle.getString("Coupon")+ " "+clientApplicationSubFunction+" "+bundle.getString("already")+" "+bundle.getString("used"),""));
         FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
          FacesMessage.SEVERITY_ERROR,bundle.getString("Please")+" "+bundle.getString("contact")+" "+bundle.getString("our")+" "+bundle.getString("support")+" "+bundle.getString("team")+", "+bundle.getString("if")+" "+bundle.getString("needed"),""));
         return null;
        }
        if (jxxxuq201xwwqqhxxxxxcustomer==null){

         createEmployeeCustomerAddressSignup("redeem",clientName,clientSerialNum,this.instance.getC1xxuxxxbvxxxxxxxxxxotherid(),masterSiteCode,this.instance.getC1xxuxxxbvxxxxxxxxxxotherid());
         //requestType (Demo,eedeem,coupon,..) ,company name/ fname,lname, email, owner2,userId (for redeem userId gets recalculated) 
         //calls createsUserInstance which creates visitor user along with customer etc records who can login
         //get from ie 1,45 or 1a etc which is used to set default theme and functionGroup
         //from is misccode1 after trial,default is 1 ie business. get it from coupon>ratetable>item>misccode1
         // future ?fpxxfq1a5xwwqqhxxxxxitem=fpxxfq1a5xwwqqhxxxxxitemList.getSidToEntity(yxxxuq591xwwqqhxxxxxrate1f.getB2xxuxxrbv51xxxxxxxxstepname());
         stepN=yxxxuq591xwwqqhxxxxxrate1f.getB2xxuxxrbv51xxxxxxxxstepname().trim();
         int sid=0;
         if(stepN.equals("S") && yxxxuq591xwwqqhxxxxxrate1f.getA0xxukxxbvxxxxxxxxxxusertype().equals("SC")){
          stepN="281";
          // use stepN value dont change instance,this causes persist by hibernate yxxxuq591xwwqqhxxxxxrate1f.setB2xxuxxrbv51xxxxxxxxstepname(stepN);
         } 
         try{// coupons type SC means stepName is item sid ie numeric, also temp bypass
          sid=Integer.parseInt(stepN);
         }catch (Exception e){
          FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
           FacesMessage.SEVERITY_ERROR,bundle.getString("Coupon")+ " "+clientApplicationSubFunction+" "+bundle.getString("access/stepName")+" "+bundle.getString("error"),""));
          FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
           FacesMessage.SEVERITY_ERROR,bundle.getString("Please")+" "+bundle.getString("contact")+" "+bundle.getString("our")+" "+bundle.getString("support")+" "+bundle.getString("team")+", "+bundle.getString("if")+" "+bundle.getString("needed"),""));
          return null;
         }
         String functionGroup=this.getFunctionGroupForItemSid(sid);
         //
         //handle any errors and quickly respond messages back to customer, giving how to create site now or how later
         //now jxxxuq201xwwqqhxxxxxcustomer should exist in raaspi

         if(!bcontinue){
          return null;
         }else{
          customIdentity.setHoldArray(2,clientEmail);//hold as session value to be used to create site email param
          customIdentity.setHoldArray(5,couponName);// used in siteCreate in r3restclient

          FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
           FacesMessage.SEVERITY_INFO,bundle.getString("Success")+"! "+bundle.getString("coupon")+" "+bundle.getString("redeemed")+". "+bundle.getString("We")+" "+bundle.getString("recommend")+" "+bundle.getString("you")+" ("+customIdentity.getHoldArray(2)+") "+" "+bundle.getString("to")+" "+bundle.getString("continue")+" "+bundle.getString("with")+" "+bundle.getString("Step2a")+" "+bundle.getString("now")+". ",""));

          FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
           FacesMessage.SEVERITY_INFO,bundle.getString("Enter")+" "+bundle.getString("website")+" "+bundle.getString("name")+", "+bundle.getString("and")+" "+bundle.getString("click")+" "+bundle.getString("Install")+" "+bundle.getString("cloudApp")+" / "+bundle.getString("create")+" "+bundle.getString("website")+". ",""));

          FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
           FacesMessage.SEVERITY_INFO,bundle.getString("If")+" "+bundle.getString("needed")+", "+bundle.getString("you")+" "+bundle.getString("may")+" "+bundle.getString("skip")+" "+bundle.getString("Step2a")+" "+bundle.getString("for")+" "+bundle.getString("now")+" "+bundle.getString("and")+" "+bundle.getString("come")+" "+bundle.getString("back")+" "+bundle.getString("here")+" "+bundle.getString("and")+" "+bundle.getString("use")+" "+bundle.getString("step2b")+" "+bundle.getString("shown")+" "+bundle.getString("at")+" "+bundle.getString("the")+" "+bundle.getString("bottom")+" "+bundle.getString("of")+" "+bundle.getString("this")+" "+bundle.getString("page.") ,""));
          return "/redeem.xhml?registrationName="+clientName+"&from="+functionGroup;
          // /redeem.wflow?registrationName=ratnadidu@gmail.com&from=1
         } 
         //if couponcode got added in customer and doregister-increateclientRecord01 it will check for coupon
         // and will change rate1f entry status closed and srt client licensetype trialPending
        }
        //customer exists and coupon chosen but not completed 
         FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
          FacesMessage.SEVERITY_ERROR,bundle.getString("Coupon")+ " "+clientApplicationSubFunction+" "+bundle.getString("prviously")+" "+bundle.getString("selected")+", "+bundle.getString("but")+" "+bundle.getString("not")+" "+bundle.getString("completed"),""));
         FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
          FacesMessage.SEVERITY_ERROR,bundle.getString("To")+ " "+bundle.getString("complete")+" "+bundle.getString("the")+", "+bundle.getString("process")+", "+bundle.getString("need")+" "+bundle.getString("to")+" "+bundle.getString("use")+" "+bundle.getString("step2b")+", "+bundle.getString("shown")+" "+bundle.getString("at")+" "+bundle.getString("the")+" "+bundle.getString("bottom")+" "+bundle.getString("of")+" "+bundle.getString("this")+" "+bundle.getString("page") ,""));

        return null;
    }


    /**
    * used by createmastersite.xhtml (not used) and also by Authenticator.java to create master site after  tables exist via checkCreateTables method
    * @param args -owner2Code ie xxx part of url xxx.com,email used for pre created user role manager  
    * copy default site contents messages and creates other table contents,copies default user(site) theme images,
    * admin and manager records,
    * @return void
    * @exception mainly persist related 
    * @see "doRegister() for creating site under master Site, doQuickRegister in r3RestClient for shopify backOffice site "
    */

    @Transactional
    public void doMasterSite(String owner2Code,String email) {
        String savedPassword="";
        bcontinue=true;
        if (yxxxch522xhhxxhxxxxxclientList.getOwner2ClientList(owner2Code).size() > 0) {
         FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
           FacesMessage.SEVERITY_ERROR,bundle.getString("ERROR")+", "+owner2Code+" "+bundle.getString("site")+" "+bundle.getString("already")+" "+bundle.getString("exists") ,""));
            return;
        }
        //following are for master site only
        //(step1)account,options,usagebyPeriods,resourceBundle,rate etc 10 table defailt values
        yxxxuh566xwwqqwxxxxxuserHome.copyDefaultsToOwner2(owner2Code);//copy base tables like account,rate etc for a site/tables

        //for now vendor for a theme ignored, use value v
        themeName="Nature/Gene7.313-1243994117";//hardcode Nature/Generic/business
        clientApplicationFunction="ehge";//Business  eh is alias of ee but shows create tenant sites link in login.xhtml. ge is generic theme.
        //eg instead of eh will show other type of business functions like association, erp, agency 
        if(!this.validEmail(email)){
         FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
           FacesMessage.SEVERITY_ERROR,bundle.getString("ERROR")+", "+email+" "+bundle.getString("is")+" "+bundle.getString("not")+" "+bundle.getString("valid")+" "+bundle.getString("email") ,""));
            return;
        }
        bcontinue=true;
        try {
        //(step2a) we need to create the default theme related clobdata and blobdata content in system first           
        createMasterSiteAddonThemes();// for now it is dummy ie no default themes created or copied, since next step also copies themes from csv files
       // step2a can be expanded to include addon 3rd party themes
        // The following method (step2b) assumes that csv files with themes are in root.war/WEB-INF/resources dir named Pre built sblob.csv etc
        //(step2b) copies themes from csv files. csv files can be created from existing sites via menu themeExport.xhtml
        // key with -M are for gallery and -C for current production. If same key multiple times, then the first one/oldest one will be used
        //param theme vendor,theme Name, jowner owner2CodeClient ie site name,2 client Name ie company, site contact email, client App function prod+subProd like eerb
         yxxxuq1n1xwwqqqxxxxxblobdataHome.copyDefaultsToUSER("v",themeName,owner2Code,this.getClientName(),email,this.getClientApplicationFunction());
         if (!bcontinue){
          return;
         } 
        //(step3)default option values
          copyOptionsDefaultsToOwner2(owner2Code);//mastersite 
          if (!bcontinue){
           return;
          }
        //(step4)remaining default option values
          copy2OptionsDefaultsToOwner2(owner2Code);
          if (!bcontinue){
           return;
          }

         //admin and manager user records will be created 
            this.clearInstance();
            this.getInstance();
            this.instance.setZ1xxzzfxhhxxxxxxxxxxstatusfl(mactive);
            this.instance.setC7xxfxxxivxxxxxxxxxxtemporarypassword(true);
            this.setClientEmail(email);
            //this.instance.setZ1xxzzfxhhxxxxxxxxxxstatusfl(mpartial);
            this.instance.setC1xxuxxxbvxxxxxxxxxxotherid(this.getClientEmail());
            this.instance.setA0xxukuxbvxxxxxxxxxxid("admin");
            this.instance.setC9xxuxxxbvxxxxxxxxxxactivationkey(null);
            savedPassword=PasswordSupport.tempPassword();
            savedPassword="admin";//master site has more control
            this.instance.setC6xxuxuoivxxxxxxxxxxoldpw(savedPassword);
            this.instance.setC4xxuxupivxxxxxxxxxxcurrpw(PasswordSupport.hash(savedPassword));
            this.instance.setC8xxuxxxbvxxxxxxxxxxpasswordhash(PasswordSupport.getHashNoon() );
            this.instance.setZ2xxcztxlxxxxxxxxxxxstatusfldt(calendar.getTime());
            calendare.add(Calendar.HOUR, 48);
            this.instance.setC5xxcxxxbvxxxxxxxxxxexpiry(calendare.getTime() );
            this.instance.setC2xxuxuaiv38xxxxxxxxalevel("I");
            this.instance.setC3xxuxubiv39xxxxxxxxblevel("H");
            calendare.add(Calendar.HOUR, 24);
            this.instance.setC5xxcxxxbvxxxxxxxxxxexpiry(calendare.getTime() );
            inRegistrationAndCreateUser=true;
            this.instance.setZzxxu2oxxhxxxxxxxxxxowner2(owner2Code);
            // in 2nd user persist a new client will also be created with owner2 set as owner2Code and enterprisecompcode set to enterprisecompcode .
            // also account,acintgr,acperiod will be cloned from 3rcomp owner2 to new account owner2
            subKey="admin";
            this.persist(owner2Code); // call persist with overdrive so that owner2Code has new site name, not the myflow name
            // during persist client records 05 and 01 will be created by createClientRegister because inRegistrationAndCreateUser 
            // in but copydefaultstoowner2 ie account,options etc will be delayed
            // to Sqladmin to avoid connection timeout ie server running long task
            // now persist backoffice manager user id2  
            this.clearInstance();
            this.instance=this.getInstance();
            //cripple this as wee but avoid another activation key, both will activate using one key
            this.instance.setC1xxuxxxbvxxxxxxxxxxotherid(this.getClientEmail());
            this.instance.setC7xxfxxxivxxxxxxxxxxtemporarypassword(true);
            this.instance.setC9xxuxxxbvxxxxxxxxxxactivationkey(null);
            this.instance.setZ1xxzzfxhhxxxxxxxxxxstatusfl(mactive);
            this.instance.setA0xxukuxbvxxxxxxxxxxid("manager");
            this.instance.setC4xxuxupivxxxxxxxxxxcurrpw(PasswordSupport.tempPassword());
            this.instance.setC4xxuxupivxxxxxxxxxxcurrpw("manager");//override if mastersite
            this.instance.setC6xxuxuoivxxxxxxxxxxoldpw(this.instance.getC4xxuxupivxxxxxxxxxxcurrpw());
            this.instance.setY7xxuxznbvxxxxxxxxxxnotes(savedPassword+"  and  "+this.instance.getC4xxuxupivxxxxxxxxxxcurrpw());
            this.instance.setC4xxuxupivxxxxxxxxxxcurrpw(PasswordSupport.hash(this.instance.getC4xxuxupivxxxxxxxxxxcurrpw()));
            this.instance.setC8xxuxxxbvxxxxxxxxxxpasswordhash(PasswordSupport.getHashNoon() );
            // calendar gets altered in clientregister ie 3 months added for trial end
           this.instance.setZ2xxcztxlxxxxxxxxxxxstatusfldt(Calendar.getInstance().getTime());
            calendare.add(Calendar.HOUR, 48);
            this.instance.setC5xxcxxxbvxxxxxxxxxxexpiry(calendare.getTime() );
            this.instance.setC2xxuxuaiv38xxxxxxxxalevel("U");
            this.instance.setC3xxuxubiv39xxxxxxxxblevel("H");
            calendare.add(Calendar.HOUR, 24);
            this.instance.setC5xxcxxxbvxxxxxxxxxxexpiry(calendare.getTime() );
            inRegistrationAndCreateUser=true;//persist below has if createClientRegister > createClientRegister()
            this.instance.setZzxxu2oxxhxxxxxxxxxxowner2(owner2Code);
            // in following user persist a new client will also be created with owner2 set as owner2Code and enterprisecompcode set to enterprisecompcode .
            // also account,acintgr,acperiod will be cloned from 3rcomp owner2 to new account owner2
            subKey="manager";
            // manager persist calls createClientRegister() 2nd time  > creates/persists client related records and then client itself
            this.persist(owner2Code);
            //logic added to set client F2xxfxxxbvxxxxxxxxxxlooseit as true to indicate this as master site
            FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
              FacesMessage.SEVERITY_INFO,"Master site---- "+owner2Code+", admin with temporary password "+savedPassword+" and manager with temorary password "+this.instance.getC6xxuxuoivxxxxxxxxxxoldpw()+ " done ----",""));
            //do not send activation email, but log it
            log.info("Master site---- "+owner2Code+", admin with temporary password "+savedPassword+" and manager with temorary password "+this.instance.getC6xxuxuoivxxxxxxxxxxoldpw()+ " done ----");
            try{
             Yxxxch522xhhxxhxxxxxclient client = yxxxch522xhhxxhxxxxxclientList.getKeyToEntity("01"); 
             if(client == null){
              log.severe("Error getting null client record for "+owner2Code);
              FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
               FacesMessage.SEVERITY_ERROR,bundle.getString("error")+ " "+bundle.getString("getting")+ " "+bundle.getString("setup")+ " "+bundle.getString("record"),""));
               return;  
             }
             client.setF2xxfxxxbvxxxxxxxxxxlooseit(true);//mastersite indicator
             //although client record was already created in createclientRegister(to be depecated by createClientRecord01)
             // not all fields were populated since data did not come via new site create form. We need to put values here
             if(urlName.length() > 35){
              client.setD6xxuxxrbvxxxxxxxxxxintaddr(urlName.substring(0,35));//already set in postconstruct
             }else{
              client.setD6xxuxxrbvxxxxxxxxxxintaddr(urlName);//already set in postconstruct
             }
             client.setB3xxuxzsbvxxxxxxxxxxdescript("Home page for master site "+owner2Code+" ,has shopping cart, products and login for back office");
             client.setB2xxuzcxbvxxxxxxxxxxenterprisecompanyna(this.getClientName());
             client.setD4xxhxxrbv24xxxxxxxximailaddr(email);

             yxxxch522xhhxxhxxxxxclientHome.clearInstance();
             yxxxch522xhhxxhxxxxxclientHome.setInstance(client);
             yxxxch522xhhxxhxxxxxclientHome.superUpdate();
             FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
              FacesMessage.SEVERITY_INFO,bundle.getString("Set")+ " "+bundle.getString("as")+ " "+bundle.getString("master")+" "+bundle.getString("site"),""));
             //cannot inject need to find a way to refresh databaseResourceLoader.reLoadBundle("en",owner2Code);// messages need to be refreshed
             FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
              FacesMessage.SEVERITY_INFO,bundle.getString("Please")+ " "+bundle.getString("stop(CNTRL-C)/start")+ " "+bundle.getString("the")+" "+bundle.getString("Server")+" "+bundle.getString("to")+" "+bundle.getString("load")+" "+bundle.getString("menu")+" / "+bundle.getString("field")+" "+bundle.getString("labels")+" "+bundle.getString("from")+" "+bundle.getString("database"),""));
             //in this session customIdentity already initialized and values were null, so set the masterSite values now
             //after this session customIdentity will can from masterSite client record
             customIdentity.setMasterSiteCode(owner2Code);
             customIdentity.setMasterSiteEmail(email);
             customIdentity.setMasterSiteUrl(urlName);
             return;    
            } catch (Exception e) {
             log.severe("Error setting as master site "+ e);
             FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
              FacesMessage.SEVERITY_ERROR,bundle.getString("error")+ " "+bundle.getString("saving")+ " "+bundle.getString("as")+ " "+bundle.getString("master")+ " "+bundle.getString("site")+ " - "+e.getMessage(),""));
             //databaseResourceLoader.reLoadBundle("en",owner2Code);// messages need to be refreshed
             return ;  
           }

        } catch (Exception exc) {
            try {
                //org.jboss.seam.transaction.Transaction.instance().setRollbackOnly();
            } catch (Exception ignore) {
            }

            // NOTE: we don't return the Exception message back to the newUser
            // because it may reveal too much information to a hacker
           log.severe(exc.getMessage());
            //statusMessages.addToControlFromResourceBundle("registerButton", ERROR, "general_reg_error");
        }


    }

    /**
    * used by end users via register.xhtml to create new site or via fatjar install > Authenticator.java > domastersite() 
    * @param args -theme vendor, themeName, userHome getters have values too for usage, size  
    * themes are used below via blobdataHome.copyDefaultsToUSER(String vendor .. method which adds both blob and clob data for new site
    * @return "" String type
    * @exception none here but handled in called methods 
    */
    @Transactional
    public void createMasterSiteAddonThemes() {
    //in existing system the following were done manually, we need to create new methods 
    // to export those data as csv and then import them as needed when a master site is created.
    // the same export/import can be used to offer theme galleries as addon product option. 
    //create items type SI-D for theme gallery. Subcodesn has TH for theme, subcodesn3 has theme category/theme
    //create SYSTEM or common blobdata image to be loaded by clobdata content via imageServlet 
    //create SYSTEM clobdata for html content for page sections using key like 3R-MID-TOP-M with image url to blobdata 
    // and qualifier value for a theme
    //
    // make use of the existing importTheme and exportTheme for hardcoded themeCategory.
    // look into using data from cloud file url or rest api to get the csv data stream

    }

    /**
    * used by end users via register.xhtml to create new site
    * @param args -theme vendor, themeName, userHome getters have values too for usage, size  
    * themes are used below via blobdataHome.copyDefaultsToUSER(String vendor .. method which adds both blob and clob data for new site
    * @return "" String type
    * @exception none here but handled in called methods 
    */

    @Transactional
    public void doRegister(String vendor,String themeName) {
    // doSignUp(signup) and doRegister(createsite) and doDemo(demosignup) all sends activation link via EMail and on receive will invoke doActivate 
    // which finds the user which has activation pending and process it

        if(!this.validEmail(this.instance.getC1xxuxxxbvxxxxxxxxxxotherid())
          || this.instance.getC1xxuxxxbvxxxxxxxxxxotherid().equals("mail@yourdomain.com")){
         FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
           FacesMessage.SEVERITY_ERROR,bundle.getString("ERROR")+", "+this.instance.getC1xxuxxxbvxxxxxxxxxxotherid()+" "+bundle.getString("is")+" "+bundle.getString("not")+" "+bundle.getString("valid")+" "+bundle.getString("email") ,""));
            return;
        }


        if(doResendActivationEmail("gettingActi",this.instance.getC1xxuxxxbvxxxxxxxxxxotherid())){
         return;
        }

        if (!agreedToTermsOfUse) {
         FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
           FacesMessage.SEVERITY_ERROR,bundle.getString("please")+" "+bundle.getString("agree")+" "+bundle.getString("to")+" "+bundle.getString("terms") ,""));

            return;
        }
        // check whether appname already exists and return
        if ((this.getClientName()!= null && this.getClientName().trim().length() ==0) | (this.getClientName() == null)) {
         FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
            FacesMessage.SEVERITY_ERROR,bundle.getString("no")+" "+bundle.getString("client")+" "+bundle.getString("name")+" "+bundle.getString("entered") ,""));

            return;
        }
        if (this.getClientName().trim().length() > 35) {
         FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
            FacesMessage.SEVERITY_ERROR,bundle.getString("client")+" "+bundle.getString("name")+" "+bundle.getString("length")+" "+this.getClientName().trim().length()+" > "+bundle.getString("35") ,""));

            return;
        }
        if ((this.getClientApplicationName() != null && this.getClientApplicationName().trim().length() ==0) | (this.getClientApplicationName() == null)    ) {
         FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
            FacesMessage.SEVERITY_ERROR,bundle.getString("site")+" "+bundle.getString("name")+" "+bundle.getString("missing") ,""));

            return;
        }
        //clientApplicationName ->client enterpriseCompCode (35) which is site url prefix, also owner2 (40)
         
        if (this.getClientApplicationName().trim().length() > 35 ) {
         FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
           FacesMessage.SEVERITY_ERROR,bundle.getString("site")+" "+bundle.getString("name")+" "+bundle.getString("length")+" "+this.getClientApplicationName().trim().length()+" > "+bundle.getString("35") ,""));

            return;
        }

        if (!this.getClientFullUrlName().trim().contains(this.getClientApplicationName().trim()) ) {
         FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
          FacesMessage.SEVERITY_ERROR,bundle.getString("site")+" "+bundle.getString("url")+" "+this.getClientFullUrlName().trim()+" "+bundle.getString("does")+" "+bundle.getString("not")+" "+bundle.getString("contain")+" "+bundle.getString("site")+" "+bundle.getString("name")+" "+this.getClientApplicationName().trim() ,""));

         FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
          FacesMessage.SEVERITY_ERROR,bundle.getString("keyin")+" "+bundle.getString("or")+" "+bundle.getString("copy")+"/"+bundle.getString("paste")+" "+this.getClientApplicationName().trim() ,""));
            return;
        }


        if (this.getClientFullUrlName().trim().length() > 60 ) {
         FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
          FacesMessage.SEVERITY_ERROR,bundle.getString("site")+" "+bundle.getString("url")+" "+bundle.getString("length")+" "+this.getClientFullUrlName().trim().length()+" > "+bundle.getString("60") ,""));
         bcontinue=false;         
         return;
        }


        Yxxxch522xhhxxhxxxxxclient client=null;;

        boolean smtpEnabled = true;
        String savedActivationKey="";
        String savedPassword="";
        try {
                 client =(Yxxxch522xhhxxhxxxxxclient) entityManager
                  .createQuery(
                    "select cc from Yxxxch522xhhxxhxxxxxclient cc where cc.a0xxukxxbvxxxxxxxxxxclientversion = :nKeyName AND cc.zexxzzfxhhxxxxxxxxxxstatusfl != :mclosed and cc.zzxxu2oxxhxxxxxxxxxxowner2 = :owner2 order by cc.a0xxuobxbxxxxxxxxxxxsid asc")
                      .setParameter("nKeyName","01").setParameter("mclosed",mclosed)
                       .setParameter("owner2", this.getClientApplicationName())
                        .getSingleResult();
                     if (client != null) {
                       FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                                     FacesMessage.SEVERITY_ERROR,bundle.getString("website")+" "+bundle.getString("name")+" / "+bundle.getString("url")+" "+bundle.getString("prefix")+", "+bundle.getString("already")+" "+bundle.getString("taken")+" "+bundle.getString("use")+" "+bundle.getString("another") ,""));
                       return;
                      }
        } catch (NoResultException ignore) {
        } catch (Exception e) {
	 log.severe("Error checking new client "+this.getClientApplicationName()+" exists "+ e.getMessage());
         FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
          FacesMessage.SEVERITY_ERROR,"Error checking new client "+this.getClientApplicationName()+" exists "+ e.getMessage(),""));
         return;
        }
        // in future this part can be replaced by the new modular methods 

            // register sets via action sets theme  or usage(clientApplicationFunction, use default otherwise)
            // if from trial, addon product will have clientApplicationFunction as a1,a2,a3 etc 
            //and set here using parameter from
            // functionGroup and into from variable.
            // from now holds trial for which function as well as trial duration in days after 1,45 or 1a
            // allow for direct invoke when functionGroup not set so from is empty or has value but no trial period
        try {
            if(from == null || from.isEmpty()){
             from="1";//business and default duration 14 days (variable trialPeriod value but can be changed using Item misccode1)
             trialPeriod =14;
            }        
            String fromO=from; //114 or 4514 or 45365  
            if(!fromO.substring(0,1).equals("a") && fromO.length() == 1){  
             from=fromO.substring(0,1);//can be 2 digits as well like 67
             trialPeriod =14;
            }            
            if(!fromO.substring(0,1).equals("a") && from.length() > 1){
             if(fromO.substring(0,2).equals("45") || fromO.substring(0,2).equals("67") || fromO.substring(0,2).equals("89")){//
              from=fromO.substring(0,2);
              trialPeriod=fromO.length()>2?Integer.parseInt(fromO.substring(2)):14;
             }else{
              from=fromO.substring(0,1);
              trialPeriod=fromO.length()>1?Integer.parseInt(fromO.substring(1)):14;
             }
            }
            if(fromO.substring(0,1).equals("a") && fromO.length() >= 2){
             from=fromO.substring(0,2);
             trialPeriod=fromO.length()>2?Integer.parseInt(fromO.substring(2)):14;
            }
            //check for unknown from value and return
            if (!(from.equals("1") || from.equals("2") || from.equals("3")
               || from.equals("45") || from.equals("67") || from.equals("89")
                 || from.equals("a1") || from.equals("a2") || from.equals("a3") || from.equals("a4"))){
             FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
              FacesMessage.SEVERITY_ERROR,bundle.getString("Unknown")+" "+bundle.getString("product")+" "+bundle.getString("request")+" "+bundle.getString("for")+" "+fromO+", "+bundle.getString("try")+" "+bundle.getString("again") ,""));
             return;
            }
            switch(from){
             case "a1":
              themeName="Nature/Gene7.313-1243994117";//hardcode Nature/Generic/business for theme
              clientApplicationFunction="esge";//stock addon general business theme
              break;
             case "a2":
              themeName="Nature/Gene7.313-1243994117";//hardcode Nature/Generic/business for theme
              clientApplicationFunction="ecge";//ecommerce addon
              break;
             case "a3":
              themeName="Nature/Gene7.023544634959";//hardcode Nature/Generic/Organization for theme
              clientApplicationFunction="olge";//organization seat allocation addon
              break;
             case "a4":
              themeName="Nature/Gene7.023544634959";//hardcode Nature/Generic/Organization for theme
              clientApplicationFunction="oege";//organization event mgmt
              break;
            } 
        } catch (Exception e) {
	 log.severe("do register app function / trial period error"+ e.getMessage());
         FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
          FacesMessage.SEVERITY_ERROR,"Error checking Application usage and trial period "+ e.getMessage(),""));
         return;
        }


            //continu below, if register theme/function already set. tbd use rate table for flexibikity?? 
            if(themeName ==null || themeName.isEmpty()){
             themeName="Nature/Gene7.313-1243994117";//hardcode Nature/Generic/business
            } 
            //if coming from ItemDetailsBrowse as 1,2,45 etc we need to set clientApplicationFunction value
            //jay how client later is going to select specific sub function ?? 6 vs 7 or within 6 ???
            if(clientApplicationFunction ==null || clientApplicationFunction.isEmpty()){
             switch(from){
              case "1":
               themeName="Nature/Gene7.313-1243994117";//hardcode Nature/Generic/business for theme
               clientApplicationFunction="eege";//Business
               break;
              case "2":
               themeName="Nature/Gene6.354-129272933";//hardcode Nature/Generic/erp for theme
               clientApplicationFunction="efge";//ERP mfg
               break;
              case "3":
               themeName="Nature/Gene6.354-129272933";//hardcode Nature/Generic/Lab for theme
               clientApplicationFunction="elge";//Med Lab
               break;
              case "45":
               themeName="Nature/Gene9.968-629982659";//hardcode Nature/Generic/Organization for theme
               clientApplicationFunction="oage";//organization
               break;
              case "67":
               themeName="Nature/Gene7.023544634959";//hardcode Nature/Generic/Organization for theme
               clientApplicationFunction="scge";//Service Agency
               break;
              case "89":
               themeName="Nature/Gene6.0761136209321";//hardcode Nature/Generic/Organization for theme
               clientApplicationFunction="fsge";//News users forum
               break;
              default:
               clientApplicationFunction="eege";//hardcode
             } 
            } 

       Yxxxuq591xwwqqhxxxxxrate1f yxxxuq591xwwqqhxxxxxrate1f = yxxxuq591xwwqqhxxxxxrate1fList.getRaaspiIncentiveToEntity("PC",clientApplicationFunction.substring(0,2));
       if(yxxxuq591xwwqqhxxxxxrate1f !=null){
        product=yxxxuq591xwwqqhxxxxxrate1f.getB2xxuxxrbv51xxxxxxxxstepname();//  stepname holds item sid, since key can change
        if(product.equals("S") && yxxxuq591xwwqqhxxxxxrate1f.getA0xxukxxbvxxxxxxxxxxusertype().equals("SC")){
         product="281";//
        }
       }


        try {
            // first create the image and text data to be used by the new site,blobdataHome handles both
            //clientApplicationName is unique name within this cloud and can have alias public dns name like mitra.com
            enterprisecompcode=this.getClientApplicationName();
            owner2Code=enterprisecompcode;
            //enterprisecompcode is same as website name, owner2Code now refers to new client as owner2 not where createsite button exists
            if(enterprisecompcode.length() > this.clientFullUrlName.length()){
             FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
              FacesMessage.SEVERITY_ERROR,bundle.getString("prefix")+" "+bundle.getString("part")+" "+enterprisecompcode+" "+bundle.getString("exceeds")+" "+bundle.getString("url")+" "+this.clientFullUrlName ,""));
             FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
              FacesMessage.SEVERITY_ERROR,bundle.getString("copy")+" "+bundle.getString("and")+" "+bundle.getString("paste")+" "+enterprisecompcode+" "+bundle.getString("as")+" "+bundle.getString("url")+" "+bundle.getString("prefix")+" "+bundle.getString("or")+" "+bundle.getString("keyin")+" "+bundle.getString("correct")+" "+bundle.getString("value") ,""));


              return;
            }
     
            // note owner2Code here has enterprisecompcode not raaspi until end of this method
            // all persist will use new site code not raaspi
            //(1)set default theme for the site
            yxxxuq1n1xwwqqqxxxxxblobdataHome.copyDefaultsToUSER(vendor,themeName,owner2Code,this.getClientName(),this.instance.getC1xxuxxxbvxxxxxxxxxxotherid(),this.getClientApplicationFunction());
            if (!bcontinue){
             return;
            }
            //(2,3,4) copy ie default table values like account,rate etc and options are done at site activation time
            this.instance.setZ1xxzzfxhhxxxxxxxxxxstatusfl(mactive);
            this.instance.setC7xxfxxxivxxxxxxxxxxtemporarypassword(true);
            this.setClientEmail(this.instance.getC1xxuxxxbvxxxxxxxxxxotherid() );
            if (smtpEnabled) {
                this.instance.setZ1xxzzfxhhxxxxxxxxxxstatusfl(mpartial);
                this.instance.setA0xxukuxbvxxxxxxxxxxid("admin");
                savedActivationKey=getMD5Hash(this.instance.getA0xxukuxbvxxxxxxxxxxid() + this.getClientName() + this.getClientEmail() + System.currentTimeMillis());
                this.instance.setC9xxuxxxbvxxxxxxxxxxactivationkey(savedActivationKey);
            } else {
                // TODO: Fix for production ... No way to activate using email
                // if SMTP is not enabled ...
                System.out.println("WARNING!!! SMTP eMailer not enabled ... partially activating user without email activation.");
                this.instance.setZ1xxzzfxhhxxxxxxxxxxstatusfl(mpartial);
            }
            savedPassword=PasswordSupport.tempPassword();
            this.instance.setC6xxuxuoivxxxxxxxxxxoldpw(savedPassword);
	    this.instance.setC4xxuxupivxxxxxxxxxxcurrpw(PasswordSupport.hash(savedPassword));
	    this.instance.setC8xxuxxxbvxxxxxxxxxxpasswordhash(PasswordSupport.getHashNoon() );
	    this.instance.setZ2xxcztxlxxxxxxxxxxxstatusfldt(calendar.getTime());
            calendare.add(Calendar.HOUR, 48);
            this.instance.setC5xxcxxxbvxxxxxxxxxxexpiry(calendare.getTime() );
	    this.instance.setC2xxuxuaiv38xxxxxxxxalevel("I");
	    this.instance.setC3xxuxubiv39xxxxxxxxblevel("H");
            calendare.add(Calendar.HOUR, 24);
            this.instance.setC5xxcxxxbvxxxxxxxxxxexpiry(calendare.getTime() );
            inRegistrationAndCreateUser=true;
            this.instance.setZzxxu2oxxhxxxxxxxxxxowner2(owner2Code);
            // in 2nd user persist a new client will also be created with owner2 set as owner2Code and enterprisecompcode set to enterprisecompcode .
            // also account,acintgr,acperiod will be cloned from 3rcomp owner2 to new account owner2
            subKey="admin";
            this.persist(owner2Code); // call persist with overdrive so that owner2Code has new site name, not the myflow name
            // during persist client will be created by createClientRegister because inRegistrationAndCreateUser 
            // in but copydefaultstoowner2 ie account,options etc will be delayed
            // to Sqladmin to avoid connection timeout ie server running long task
            // now persist backoffice manager user id2  
            this.clearInstance();
            this.instance=this.getInstance();
            //cripple this as wee but avoid another activation key, both will activate using one key
            this.instance.setC1xxuxxxbvxxxxxxxxxxotherid(this.getClientEmail());
            this.instance.setC7xxfxxxivxxxxxxxxxxtemporarypassword(true);
            this.instance.setC9xxuxxxbvxxxxxxxxxxactivationkey("nonNull");
            this.instance.setZ1xxzzfxhhxxxxxxxxxxstatusfl(mpartial);
            this.instance.setA0xxukuxbvxxxxxxxxxxid("manager");
            this.instance.setC4xxuxupivxxxxxxxxxxcurrpw(PasswordSupport.tempPassword());
            this.instance.setC6xxuxuoivxxxxxxxxxxoldpw(this.instance.getC4xxuxupivxxxxxxxxxxcurrpw());
            this.instance.setY7xxuxznbvxxxxxxxxxxnotes(savedPassword+"  and  "+this.instance.getC4xxuxupivxxxxxxxxxxcurrpw());
	    this.instance.setC4xxuxupivxxxxxxxxxxcurrpw(PasswordSupport.hash(this.instance.getC4xxuxupivxxxxxxxxxxcurrpw()));
	    this.instance.setC8xxuxxxbvxxxxxxxxxxpasswordhash(PasswordSupport.getHashNoon() );
            // calendar gets altered in clientregister ie 3 months added for trial end
	    this.instance.setZ2xxcztxlxxxxxxxxxxxstatusfldt(Calendar.getInstance().getTime());
            calendare.add(Calendar.HOUR, 48);
            this.instance.setC5xxcxxxbvxxxxxxxxxxexpiry(calendare.getTime() );
	    this.instance.setC2xxuxuaiv38xxxxxxxxalevel("U");
	    this.instance.setC3xxuxubiv39xxxxxxxxblevel("H");
            calendare.add(Calendar.HOUR, 24);
            this.instance.setC5xxcxxxbvxxxxxxxxxxexpiry(calendare.getTime() );
            inRegistrationAndCreateUser=true;
            this.instance.setZzxxu2oxxhxxxxxxxxxxowner2(owner2Code);
            // in following user persist a new client will also be created with owner2 set as owner2Code and enterprisecompcode set to enterprisecompcode .
            // also account,acintgr,acperiod will be cloned from 3rcomp owner2 to new account owner2
            subKey="manager";
            this.persist(owner2Code);

            if (smtpEnabled) {
                try {
                   // will be addressed to admin using manager record (passwords and email are saved in both)
                   Emailsend("/getactivation.xhtml"," to you- "+this.getClientEmail());
                } catch (Exception zzz) {
                    log.severe("#{messages['getting_activation_email_send_failed']}"+ zzz.getMessage());

                    FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                     FacesMessage.SEVERITY_ERROR,bundle.getString("email")+" "+bundle.getString("send")+" "+bundle.getString("failed")+", "+bundle.getString("will")+" "+bundle.getString("be")+" "+bundle.getString("resent")+" "+bundle.getString("later"),""));

                }

                try {
                   // send another email to support group for their actions
                   Emailsend("/activationSetup.xhtml"," to our support team for their actions");
                } catch (Exception zzz) {
                    log.severe("#{messages['activation_setup_email_send_failed']}"+ zzz);

                }
                //doMasterSite() is used for masterSite and does not use this method doRegister()
                
            }//not smtp 
            if(hostingAt.equals("op")){
             // automate openshift router create. createClientRegister created new client yxxxch522xhhxxhxxxxxclient
             //following creates the new route entry and also calls copydefaults and copyOptions
             r3RestClient.openAuthorize("r",yxxxch522xhhxxhxxxxxclient);
             //the above will not copy defaults etc if no record 08 , so support need to invoke email trial license ready from dashboard
                  try{
                   Thread.sleep(3000);//2 secs
                   log.severe("#{messages['thread_sleep_ist_2secs done']}");
                   Thread.sleep(2000);//2 secs

                  }catch (Exception e){
                    log.severe("#{messages['thread_sleep_failed']}"+ e.getMessage());
                  }
            }else{
             log.severe("No automated routing, go to dashboard / clientActions and send Email activation ");
            }
            this.registrationScreenName = null;
            this.instance = null; // do this last ... just to reset the register
            // form ...
           FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
            FacesMessage.SEVERITY_INFO,bundle.getString("Create")+" "+bundle.getString("site")+" "+bundle.getString("completed")+" "+bundle.getString("for")+" "+this.getClientApplicationName()+", "+bundle.getString("check")+" "+bundle.getString("email"),""));
           externalContext.redirect(externalContext.getRequestContextPath()+"/installAppStatus.wflow?websiteName="+owner2Code+"&websiteFullUrl="+this.getClientFullUrlName());
        } catch (Exception exc) {
            try {
            } catch (Exception ignore) {
            }

            // NOTE: we don't return the Exception message back to the newUser
            // because it may reveal too much information to a hacker
            log.severe(exc.getMessage());
            //statusMessages.addToControlFromResourceBundle("registerButton", ERROR, "general_reg_error");
        }

    }

	public String showInstallStatus() {
           try{
               //if called from xhtml use return to navigate, cannot use direct externalContext.redirect
               // js go.history(-1) did not work
               return "installAppStatus.wflow??faces-redirect=true&websiteName="+this.clientApplicationName+"&email="+this.getInstance().getC1xxuxxxbvxxxxxxxxxxotherid()+"&registrationName="+this.clientName+"&functionGroup="+this.from;
           } catch (Exception exc) {
            FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
             FacesMessage.SEVERITY_INFO,bundle.getString("redirect")+" "+bundle.getString("failed")+" "+bundle.getString("for")+" "+this.clientApplicationName +", "+exc.getMessage(),""));
            return null;
           }
        }

    @Transactional
    // comes here via pages.xml entry
    //may come here because of new incoming email and processed by mandrll site 
    // need to add logic to validate post data and process email data

    public void doImail(String postData) {
    }

    @Transactional
    /**
    * method is used to unsubcribe from mailing  
    * comes here via f:viewAction 
    * may come here because of new incoming email and processed by sendgrid site 
    * need to add logic to validate post data and process email data
    * @return void
    * @param type 1 for customer,2 vendor, 3 employee
    * it is assumed hacker wont be able to guess the combination of keycode and sid. risk and impact is low
    * @exception no record found
    */ 
    public void doUnsc(String keyCode,Integer unsc,int type) {
        switch (type){
         case 1:
          Query q = entityManager.createQuery("select cc from Jxxxuq201xwwqqhxxxxxcustomer cc where cc.a0xxukxxbvxxxxxxxxxxcustomer=:keyCode and cc.a0xxuobxbxxxxxxxxxxxsid=:unsc");
          Jxxxuq201xwwqqhxxxxxcustomer unc = null;
          q.setParameter("keyCode", keyCode);
          q.setParameter("unsc", unsc);
          try {
            unc = (Jxxxuq201xwwqqhxxxxxcustomer) q.getSingleResult();
            unc.setZaxxzzfxhhxxxxxxxxxxstatusfl(unc.getZaxxzzfxhhxxxxxxxxxxstatusfl() | mnoMail );
            unc.setZbxxcztxlxxxxxxxxxxxstatusfldt(Calendar.getInstance().getTime());
            jxxxuq201xwwqqhxxxxxcustomerHome.setInstance(unc);
            jxxxuq201xwwqqhxxxxxcustomerHome.persist();
          } catch (javax.persistence.NoResultException nre) {
           FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
            FacesMessage.SEVERITY_ERROR,bundle.getString("unsubscribe")+" "+bundle.getString("record")+" "+bundle.getString("not")+" "+bundle.getString("found"),""));

          }
          return;
         case 2:
          q = entityManager.createQuery("select cc from Jxxxuq300xwwqqhxxxxxvendor cc where cc.a0xxukxxbvxxxxxxxxxxvendor=:keyCode and cc.a0xxuobxbxxxxxxxxxxxsid=:unsc");
          Jxxxuq300xwwqqhxxxxxvendor unv = null;
          q.setParameter("keyCode", keyCode);
          q.setParameter("unsc", unsc);
          try {
            unv = (Jxxxuq300xwwqqhxxxxxvendor) q.getSingleResult();
            unv.setZdxxzzfxhhxxxxxxxxxxstatusfl(unv.getZdxxzzfxhhxxxxxxxxxxstatusfl() | mnoMail );
            unv.setZexxcztxlxxxxxxxxxxxstatusfldt(Calendar.getInstance().getTime());
	       jxxxuq300xwwqqhxxxxxvendorHome.setInstance(unv);
            jxxxuq300xwwqqhxxxxxvendorHome.persist();
          } catch (javax.persistence.NoResultException nre) {
            FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
             FacesMessage.SEVERITY_ERROR,bundle.getString("unsubscribe")+" "+bundle.getString("record")+" "+bundle.getString("not")+" "+bundle.getString("found"),""));

          }
          return;
         case 3:
          q = entityManager.createQuery("select cc from Jxxxbh400xwwqqhxxxxxemployee cc where cc.a0xxuktxbvxxxxxxxxxxemployee=:keyCode and cc.a0xxuobxbxxxxxxxxxxxsid=:unsc");
          Jxxxbh400xwwqqhxxxxxemployee une = null;
          q.setParameter("keyCode", keyCode);
          q.setParameter("unsc", unsc);
          try {
            une = (Jxxxbh400xwwqqhxxxxxemployee) q.getSingleResult();
            une.setZexxzzfxhhxxxxxxxxxxstatusfl(une.getZexxzzfxhhxxxxxxxxxxstatusfl() | mnoMail );
            une.setZfxxcztxlxxxxxxxxxxxstatusfldt(Calendar.getInstance().getTime());
	       jxxxbh400xwwqqhxxxxxemployeeHome.setInstance(une);
            jxxxbh400xwwqqhxxxxxemployeeHome.persist();
          } catch (javax.persistence.NoResultException nre) {
            FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
             FacesMessage.SEVERITY_ERROR,bundle.getString("unsubscribe")+" "+bundle.getString("record")+" "+bundle.getString("not")+" "+bundle.getString("found"),""));

          }
          return;
        }
    }

    @Transactional
    /**
    * method is used to subcribe to mailing  
    * comes here via f:viewAction 
    * may come here because of new incoming email and processed by sendgrid site 
    * need to add logic to validate post data and process email data
    * @return void
    * @param type 1 for customer,2 vendor, 3 employee
    * it is assumed hacker wont be able to guess the combination of keycode and sid. risk and impact is low
    * @exception no record found
    */ 

    public void dosc(String keyCode,Integer unsc,int type) {
        switch (type){
         case 1:
          Query q = entityManager.createQuery("select cc from Jxxxuq201xwwqqhxxxxxcustomer cc where cc.a0xxukxxbvxxxxxxxxxxcustomer=:keyCode and cc.a0xxuobxbxxxxxxxxxxxsid=:unsc");
          Jxxxuq201xwwqqhxxxxxcustomer unc = null;
          q.setParameter("keyCode", keyCode);
          q.setParameter("unsc", unsc);
          try {
            unc = (Jxxxuq201xwwqqhxxxxxcustomer) q.getSingleResult();
            unc.setZaxxzzfxhhxxxxxxxxxxstatusfl(unc.getZaxxzzfxhhxxxxxxxxxxstatusfl() & _mnoMail );
            unc.setZbxxcztxlxxxxxxxxxxxstatusfldt(Calendar.getInstance().getTime());
           jxxxuq201xwwqqhxxxxxcustomerHome.setInstance(unc);
            jxxxuq201xwwqqhxxxxxcustomerHome.persist();
          } catch (javax.persistence.NoResultException nre) {
           FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
            FacesMessage.SEVERITY_ERROR,bundle.getString("unsubscribe")+" "+bundle.getString("record")+" "+bundle.getString("not")+" "+bundle.getString("found"),""));
          }
          return;
         case 2:
          q = entityManager.createQuery("select cc from Jxxxuq300xwwqqhxxxxxvendor cc where cc.a0xxukxxbvxxxxxxxxxxvendor=:keyCode and cc.a0xxuobxbxxxxxxxxxxxsid=:unsc");
          Jxxxuq300xwwqqhxxxxxvendor unv = null;
          q.setParameter("keyCode", keyCode);
          q.setParameter("unsc", unsc);
          try {
            unv = (Jxxxuq300xwwqqhxxxxxvendor) q.getSingleResult();
            unv.setZdxxzzfxhhxxxxxxxxxxstatusfl(unv.getZdxxzzfxhhxxxxxxxxxxstatusfl() & _mnoMail );
            unv.setZexxcztxlxxxxxxxxxxxstatusfldt(Calendar.getInstance().getTime());
            jxxxuq300xwwqqhxxxxxvendorHome.setInstance(unv);
            jxxxuq300xwwqqhxxxxxvendorHome.persist();
          } catch (javax.persistence.NoResultException nre) {
            FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
             FacesMessage.SEVERITY_ERROR,bundle.getString("unsubscribe")+" "+bundle.getString("record")+" "+bundle.getString("not")+" "+bundle.getString("found"),""));

          }
          return;
         case 3:
          q = entityManager.createQuery("select cc from Jxxxbh400xwwqqhxxxxxemployee cc where cc.a0xxuktxbvxxxxxxxxxxemployee=:keyCode and cc.a0xxuobxbxxxxxxxxxxxsid=:unsc");
          Jxxxbh400xwwqqhxxxxxemployee une = null;
          q.setParameter("keyCode", keyCode);
          q.setParameter("unsc", unsc);
          try {
            une = (Jxxxbh400xwwqqhxxxxxemployee) q.getSingleResult();
            une.setZexxzzfxhhxxxxxxxxxxstatusfl(une.getZexxzzfxhhxxxxxxxxxxstatusfl() & _mnoMail );
            une.setZfxxcztxlxxxxxxxxxxxstatusfldt(Calendar.getInstance().getTime());
            jxxxbh400xwwqqhxxxxxemployeeHome.setInstance(une);
            jxxxbh400xwwqqhxxxxxemployeeHome.persist();
          } catch (javax.persistence.NoResultException nre) {
            FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
             FacesMessage.SEVERITY_ERROR,bundle.getString("unsubscribe")+" "+bundle.getString("record")+" "+bundle.getString("not")+" "+bundle.getString("found"),""));

          }
          return;
        }
    }


    @Transactional
    /**
    * method is used to activate new user after signup or create site  
    * comes here via f:viewAction 
    * may come here because of new site and client registration ie admin,manager or new SignUp or new Demo User
    * doSignUp and doRegister and doDemo all sends activation link via EMail and on receive will invoke doActivate 
    * which finds the user which has activation pending and process it
    * @return void
    * @param none
    * @exception no record found
    */ 

    public void doActivate(String activationKey) {
        Query q = entityManager.createQuery("select cc from Yxxxuh566xwwqqwxxxxxuser cc where cc.c9xxuxxxbvxxxxxxxxxxactivationkey=:activationKey");
        q.setParameter("activationKey", activationKey);
        Yxxxuh566xwwqqwxxxxxuser activatedUser = null;
        try {
            activatedUser = (Yxxxuh566xwwqqwxxxxxuser) q.getSingleResult();
        } catch (javax.persistence.NoResultException nre) {
            // safe to ignore ...
        }
        if (activatedUser != null) {
           activatedUser.setC9xxuxxxbvxxxxxxxxxxactivationkey(null);
           activatedUser.setZ1xxzzfxhhxxxxxxxxxxstatusfl(mactive);
           // now take care of the other id activation in case 2 ids ie admin/manager are involved or exit if visitor ie single id
           if (!activatedUser.getA0xxukuxbvxxxxxxxxxxid().equals("admin")) {
            return;
           }
          Yxxxuh566xwwqqwxxxxxuser the2ndUser  = new Yxxxuh566xwwqqwxxxxxuser();
          try {
                 the2ndUser = (Yxxxuh566xwwqqwxxxxxuser) entityManager
	.createQuery(
	"select cc from Yxxxuh566xwwqqwxxxxxuser cc where cc.a0xxukuxbvxxxxxxxxxxid='manager' AND cc.z1xxzzfxhhxxxxxxxxxxstatusfl=:statusfl and cc.zzxxu2oxxhxxxxxxxxxxowner2 = :owner2 order by cc.a0xxuobxbxxxxxxxxxxxsid asc")
	.setParameter("statusfl", mpartial).setParameter(
	"owner2", owner2Code).getSingleResult();
                if (the2ndUser != null) {
                 the2ndUser.setC9xxuxxxbvxxxxxxxxxxactivationkey(null);
                 the2ndUser.setZ1xxzzfxhhxxxxxxxxxxstatusfl(mactive);
                }
            } catch (NoResultException ignore) {
		}
                try {
                 // now send an email to manager re steps to setup site but needs to setup userhome instance
                 yxxxuh566xwwqqwxxxxxuserHome.getInstance();
                 yxxxuh566xwwqqwxxxxxuserHome.setInstance(activatedUser);
                 Emailsend("/siteSetupSteps.xhtml","to you explaining site set up steps");
                } catch (Exception zzz) {
	    log.severe(" siteSetupSteps Send eMail failed: " + zzz.getMessage());
                }


        } else {
            // home pages are reloaded to fix item/issue label or user may reload so via pages this method will get called, supress message
            FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
             FacesMessage.SEVERITY_ERROR,"yxxxuh566xwwqqwxxxxxuser "+bundle.getString("no")+" "+bundle.getString("user")+" "+bundle.getString("found")+" "+bundle.getString("for")+" "+bundle.getString("activation")+" "+bundle.getString("key")+" "+activationKey,""));

        }
        
    }



             public void Emailsend(String content) {
                //content is the xxx.xhtml with mail tags.
                // called by doregister,doactivation,r3restclient doQuickregister etc. 
                             
                bcontinue=true;
                try {
                 //renderer.render(content);
                 emailRender(content);
                 if(bcontinue){
                  FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                    //FacesMessage.SEVERITY_INFO,bundle.getString("email")+" "+ bundle.getString("sent")+" "+bundle.getString("sucessfully"),""));
                    FacesMessage.SEVERITY_INFO,bundle.getString("email")+" "+ bundle.getString("sent")+", "+ bundle.getString("please")+" "+ bundle.getString("check"),""));
                 }else{
                  FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                   FacesMessage.SEVERITY_INFO,bundle.getString("email")+" "+ bundle.getString("send")+" "+bundle.getString("failed"),""));
                 } 
                } catch (Exception e) {
                  /* logging/msg for exceptions are in emailrender now

                    //FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                    //FacesMessage.SEVERITY_INFO,bundle.getString("email")+" "+ bundle.getString("send")+" "+bundle.getString("failed")+" "+e.getMessage(),""));
                    if(e.getCause() !=null && e.getCause().getCause()!=null){
                      String rootMsg=e.getCause().getCause().getMessage();
                      FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                       FacesMessage.SEVERITY_INFO,bundle.getString("cause")+" "+ rootMsg,""));
  		      log.severe("Error sending mail "+ e.getMessage());

                    }
                  */

                  }
               }
/**
*  used to send emails and called by master and other sites for admin functions like site activation, pw reset
* 1. if mailRelayoff  in client version/record 01 has checkmark blank (default) , then gather mailRelay (05 record) smtp server/port/etc information ,
* 2. if mailRelayoff has checkMark on, then gather site (01 record) smtp server/port/etc information
* 3. Then gather gmail server information, if record 07 has information
* 4  If valid gMail info then use it, otherwise use mailRelay or site smtp depending on mailRelayOff checkbox.
* 5. As redundancy, mailRelay will be tried if other options fail 
* in case of activations, there are two owner2/clients involved one is new client and raaspi
* allways use the url to resolve since for a new client email will be sent from master site
" @see "xxxcustomerlist emailRender method used by all sites to send emails and txns email"
* @see "createClientRecord01 for record01 and 05"
*/ 
        public Void emailRender(String content) throws MessagingException, IOException{
         // in case of activations, there are two owner2/clients involved one is new client and raaspi
         // allways use the url to resolve since for a new client email will be sent from raaspi
         // called by raaspi and other sites for admin functions like site activation, pw reset
         String bodyj="";//
         String smtpOwner=owner2Code;
         // check if master site, a subdomain serverName can also include master site name 
         if(customIdentity.isMasterSite()){                 
         /*if((req.getServerName().contains("raaspi.com") && !req.getServerName().contains(".raaspi.com") && !req.getServerName().contains(".lraaspi.com"))
                  ||  (req.getServerName().contains("www.raaspi.com") ||  req.getServerName().contains("raaspi.lraaspi.com"))
                    || content.equals("/siteSetupSteps.xhtml")){
         */
          smtpOwner=masterSiteCode;
         }
  
         // add case stmt for content and populate the following variables and use diff template
         /// remove hard coded values, create new templtes like template.html.paasword_reset.freemarker
         /// templates will replace subject and body only

         String fromName = this.owner2Code;//can be overridden 
         String fromAddress = " ";//override this with xxx.yyyy.com where yyyy.com is registered with sendgrid or mail relay server
         if(!mailRelayOff){
          fromAddress ="via@"+customIdentity.getMasterSiteUrl(); // via@3rcomputer.com if mailRelay otherwise smtpuser say mail@raaspi.com  or xxx@gmail.com
         }else{
          fromAddress=this.getClientEmail();//useremployee/client email
         }
         String fromAddress05=fromAddress;
         String siteAddress05="";// if site uses email address using another domain name
         // re fromAddress, if mailrelayOff  domain name should match smtp host, otherwise you may get spam or phising warning
         // client/employee record further down holds email address, if mailRelay, smtp smtp host is 3rcomputer
         //do not change clientEmail as it contains passwords for activation.fmt
         String replyToName = "No Reply";// implies system generated email
         String replyToAddress ="no-reply@" +customIdentity.getMasterSiteUrl(); //no-reply@3rcomputer.com
         String replyToAddresso5=replyToAddress;
         String toName = ""; //specify in case stmt as needed, clientEmail holds passwords if activation.fmt
         String toAddress ="";// specify in case stmt
         String ccName = "support";
         String ccAddress = "support@"+customIdentity.getMasterSiteUrl();
         // remove hardcoding , store in client record 01
         String host05="smtp.sendgrid.net";
         String host="smtp.sendgrid.net";
         int port05=587;
         int port=587;//465 is used for ssl only, which is replaced by tls. 587 is used by both tls and non ssl
         String userName05="apikey";
         String userName="apikey";
         String password05="SG.BxxxxxxxxxxyyyyyiBg";//manually enter in client record 05
         String password="SG.BxxxxxxxxxxyyyyyiBg";//manually enter in client records
         Yxxxch522xhhxxhxxxxxclient client05 =null;
         boolean auth=true;
         String auth_mechanisms="LOGIN PLAIN DIGEST-MD5 NTLM";
         //gmail use XOAUTH2 , if null auth will use id/password, if XOAUTH2 then email as id/access token 
         // as password. if client version 07 record has value in id (refresh token) and in secret(access token) 
         // then set XOAUTH2 so that java mail will use OAUTH. client version 01 will still hold id/pw for
         // non gmail send like sendgrid or hostpapa or zoho smtp send
         boolean ssl=false;
         mailRelayOff=false;
         String htmlBody = "<html><body><b>Hello</b> World!</body></html>";
         String textBody = "This is a Text Body!";
         //envelop_from_address is used for bounce reply ie for invalid address or spam detection, like a package return address as in postoffice
         //fromAddress shows the actual email from address and either that or if present replyToAddres is where email reply will goto, like the sender of a package as in postoffice
         // most of the time they are are same but can be different if needed  
         String ENVELOPE_FROM_ADDRESS = "support@"+customIdentity.getMasterSiteUrl(); //support@3rcomputer.com, override and make this same as fromAddress in case stmt
         // let the actual client see what got bounced rather than support@3rcomputer
         // jay needs testing before changing envelope from Address, may conflict with dkim record
         //SessionConfig mailConfig = TestMailConfigs.standardConfig();//TestMailConfigs.java
         try {
                 Yxxxch522xhhxxhxxxxxclient client =(Yxxxch522xhhxxhxxxxxclient) entityManager
	.createQuery(
	"select cc from Yxxxch522xhhxxhxxxxxclient cc where cc.a0xxukxxbvxxxxxxxxxxclientversion = :nKeyName and cc.zzxxu2oxxhxxxxxxxxxxowner2 = :owner2 order by cc.a0xxuobxbxxxxxxxxxxxsid asc")
	.setParameter("nKeyName","01")
	.setParameter("owner2", smtpOwner)
	.getSingleResult();
                  if (client == null) {
                       FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                        FacesMessage.SEVERITY_ERROR,bundle.getString("create") +" "+bundle.getString("site") +" "+smtpOwner+" "+bundle.getString("first"),""));
                       return null ;
                  }

                      if(client.getY1xxuxxxbvxxxxxxxxxxrootdir()!=null && !client.getY1xxuxxxbvxxxxxxxxxxrootdir().isEmpty()){
                       fromName = client.getY1xxuxxxbvxxxxxxxxxxrootdir();//rootdir holds smtp email send fromname (default owner2)
                      }
                      if(client.getP1xxfxxxbvxxxxxxxxxxconfirm()!=null ){
                        mailRelayOff=client.getP1xxfxxxbvxxxxxxxxxxconfirm();
                      }else{//null means default is mailrelay
                        mailRelayOff=false;
                      }
                      if(!mailRelayOff){
                       //means mailRelayOn,added logic here to read default values from client record 05 for default smtp relay server like sendgrid
                       client05 =null;
                       try {
                              client05 =(Yxxxch522xhhxxhxxxxxclient) entityManager
		.createQuery(
		"select cc from Yxxxch522xhhxxhxxxxxclient cc where cc.a0xxukxxbvxxxxxxxxxxclientversion = :nKeyName and cc.zzxxu2oxxhxxxxxxxxxxowner2 = :owner2 order by cc.a0xxuobxbxxxxxxxxxxxsid asc")
		.setParameter("nKeyName","05")
		.setParameter("owner2", owner2Code)
		.getSingleResult();
                             if(client05 !=null ){
                              host=client05.getZ8xxuxxxbvxxxxxxxxxxsmtpserver().trim();//exmpl smtp.sendgrid.net
                              port=client05.getL6xxzxxrbvxxxxxxxxxxaltselen();//use 587 as default
                              if (port==0){
                               port=587;
                              }
                              fromAddress=client05.getD5xxuxxrbvxxxxxxxxxxrmailaddr();//exmpl mail@raaspi.com 
                              fromAddress05=fromAddress;
                              siteAddress05=client05.getD4xxhxxrbv24xxxxxxxximailaddr();//exmpl mail@raaspi.com 
                              ccAddress=siteAddress05;
                              replyToAddress=siteAddress05;
                              userName=client05.getZ9xxuxxxbvxxxxxxxxxxsmtpuser();//exmpl apikey if sendgrid. logic may need change to support other mailRelay server 
                              userName=client05.getZ9xxuxxxbvxxxxxxxxxxsmtpuser();//exmpl apikey if sendgrid. logic may need change to support other mailRelay server 
                              userName05=userName;
                              password=client05.getDbxxuzxdssxxxxxxxxxxapiclientsecret().trim();//access token
                              password05=password;
                              if(password == null || password.isEmpty() || password.equals("SG.BxxxxxxxxxxyyyyyiBg") ){
                               smtpError=true; //both record 01 and 05 checked
                               FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                                FacesMessage.SEVERITY_INFO,bundle.getString("MailRelay")+" "+host+" "+bundle.getString("smtp")+" "+bundle.getString("password")+" / "+bundle.getString("ApiSecret")+" "+bundle.getString("information") +" "+bundle.getString("invalid"),""));
                               bcontinue=false;
                               return null;
                              }
                             }
                        } catch (Exception exc) {
                               FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                                FacesMessage.SEVERITY_INFO,bundle.getString("Client") +" "+bundle.getString("record")+" "+bundle.getString("05")+" "+bundle.getString("for")+" "+bundle.getString("mailRelay") +" "+bundle.getString("missing"),""));
                               bcontinue=false;
                               return null;
                        }
                      }else{
                       if(client.getZ8xxuxxxbvxxxxxxxxxxsmtpserver()!=null && !client.getZ8xxuxxxbvxxxxxxxxxxsmtpserver().isEmpty()){
                        host=client.getZ8xxuxxxbvxxxxxxxxxxsmtpserver().trim();
                        //handle if mailrelayOff false by mistake, add logic in client persist/update
                        // may happen in local machine if virus protection running
                        if(!host.equals("smtp.sendgrid.net")){
                         fromAddress=userName;// apikey
                        }
                       }else{
                         smtpError=true;
                         FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                           FacesMessage.SEVERITY_INFO,bundle.getString("client") +" "+bundle.getString("smtp")+" "+bundle.getString("host")+" "+bundle.getString("information") +" "+bundle.getString("missing"),""));
                       }
                       if(client.getZ9xxuxxxbvxxxxxxxxxxsmtpuser()!=null && !client.getZ9xxuxxxbvxxxxxxxxxxsmtpuser().isEmpty()){
                        userName=client.getZ9xxuxxxbvxxxxxxxxxxsmtpuser().trim();
                       }else{
                         smtpError=true;
                         FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                           FacesMessage.SEVERITY_INFO,bundle.getString("client") +" "+bundle.getString("smtp")+" "+bundle.getString("userName")+" "+bundle.getString("information") +" "+bundle.getString("missing"),""));
                       }
                       if(client.getZaxxuxxxssxxxxxxxxxxsmtppass()!=null && !client.getZaxxuxxxssxxxxxxxxxxsmtppass().isEmpty()){
                        password=client.getZaxxuxxxssxxxxxxxxxxsmtppass();
                       }else{
                         smtpError=true;
                         FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                           FacesMessage.SEVERITY_INFO,bundle.getString("client") +" "+bundle.getString("smtp")+" "+bundle.getString("password")+" "+bundle.getString("information") +" "+bundle.getString("missing"),""));
                       }
                       if(client.getL6xxzxxrbvxxxxxxxxxxaltselen()!=null && client.getL6xxzxxrbvxxxxxxxxxxaltselen() !=0){
                        port=client.getL6xxzxxrbvxxxxxxxxxxaltselen();
                       }else{
                         smtpError=true;
                         FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                           FacesMessage.SEVERITY_INFO,bundle.getString("client") +" "+bundle.getString("smtp")+" "+bundle.getString("port")+" "+bundle.getString("information") +" "+bundle.getString("missing"),""));
                       }
                       if(client.getO9xxfxxxbvxxxxxxxxxxbeepsou()!=null ){
                        auth=client.getO9xxfxxxbvxxxxxxxxxxbeepsou();
                       }else{
                         smtpError=true;
                         FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                           FacesMessage.SEVERITY_INFO,bundle.getString("client") +" "+bundle.getString("smtp")+" "+bundle.getString("auth")+" "+bundle.getString("information") +" "+bundle.getString("missing"),""));
                       }
                       if(client.getP2xxfxxxbvxxxxxxxxxxlinefeed()!=null ){
                        ssl=client.getP2xxfxxxbvxxxxxxxxxxlinefeed();
                       }else{
                         smtpError=true;
                         FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                           FacesMessage.SEVERITY_INFO,bundle.getString("client") +" "+bundle.getString("smtp")+" "+bundle.getString("ssl")+" "+bundle.getString("information") +" "+bundle.getString("missing"),""));
                       }
                       if(smtpError){
                        bcontinue=false;
                        return null;
                       } 
                      }
         } catch (Exception exc) {
            FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
             FacesMessage.SEVERITY_INFO,bundle.getString("client") +" "+bundle.getString("smtp")+" "+bundle.getString("information") +" "+bundle.getString("missing"),""));
            bcontinue=false;
          return null; 
         }
         Yxxxch522xhhxxhxxxxxclient client =null;
         // raaspi and lraaspi record 07 holds gmail Oauth app id/secret not refresh/access 
         if(owner2Code.contains(masterSiteCode) || owner2Code.contains("lraaspi")){
          //skip checking record 07, will not use gmail OAuth. It will use record 01 set up
         }else{
          // check Gmail smtp or not. Note client record below points to version 07 not 01
          try {
           client =(Yxxxch522xhhxxhxxxxxclient) entityManager
		.createQuery(
		"select cc from Yxxxch522xhhxxhxxxxxclient cc where cc.a0xxukxxbvxxxxxxxxxxclientversion = :nKeyName and cc.zzxxu2oxxhxxxxxxxxxxowner2 = :owner2 order by cc.a0xxuobxbxxxxxxxxxxxsid asc")
		.setParameter("nKeyName","07")
		.setParameter("owner2", owner2Code)
		.getSingleResult();

           if(client !=null && client.getDaxxuzxdssxxxxxxxxxxapiclientid() !=null && !client.getDaxxuzxdssxxxxxxxxxxapiclientid().isEmpty()
              && client.getDbxxuzxdssxxxxxxxxxxapiclientsecret() !=null && !client.getDbxxuzxdssxxxxxxxxxxapiclientsecret().isEmpty()){
            auth_mechanisms="XOAUTH2";//gmail smtp
            password=client.getDbxxuzxdssxxxxxxxxxxapiclientsecret().trim();//access token
            //check if token expired and refresh if needed
            calendar.getTime();
            calendare.setTime(client.getZfxxcztxlxxxxxxxxxxxstatusfldt());
            calendare.add(Calendar.MINUTE, 59);
            if(calendare.before(calendar)){
             password=r3RestClient.getAccessTokenGMail(client.getDaxxuzxdssxxxxxxxxxxapiclientid(),"refresh_token",owner2Code );
            }      

            if(password == null || password.isEmpty()){
             smtpError=true; //both record 01 and 07 checked
             FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
             FacesMessage.SEVERITY_INFO,bundle.getString("GMail") +" "+bundle.getString("smtp")+" "+bundle.getString("password")+" "+bundle.getString("information") +" "+bundle.getString("missing"),""));
             bcontinue=false;
             return null;
            }
           }else{
            //access token may fail, check for it in mail send 
            // if needed use restclient to request new access but avoid user permission by using refresh token
            // in restclient use scope offline (user not needed) to get refresh token
            //to get new token if expired use post json request and response
            //{\"client_id\":\""+client_id+"\",\"client_secret\":\""+client_secret+"\",\"grant_type\":\""+refresh_token+"\",\"refresh_token\":\""+refresh_token+"\",\"redirect_uri\":\""+redirect_uri+"\"}
            host="gmail";
            FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
             FacesMessage.SEVERITY_ERROR,host+" "+bundle.getString("client")+" "+bundle.getString("record") +" "+bundle.getString("version")+" "+bundle.getString("07") +" "+bundle.getString("needs")+" "+bundle.getString("both") +" "+bundle.getString("id")+" "+bundle.getString("and") +" "+bundle.getString("secret"),""));
             return null;
           }
          } catch (Exception exc) {
           //ignore no record 07 normal occurrence, can use resultList 
          }
          if(password == null || password.isEmpty()){// will come here only if record 01 pw missing
           smtpError=true; //both record 01 and 07 checked
           FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
           FacesMessage.SEVERITY_INFO,bundle.getString("client") +" "+bundle.getString("smtp")+" "+bundle.getString("password")+" "+bundle.getString("information") +" "+bundle.getString("missing"),""));
           return null;
          }
         }
         //below common for raaspi and others
         SessionConfig mailConfig = TestMailConfigs.standardConfig(host,port,userName,password,auth,ssl,auth_mechanisms);
         String messageId = "id@"+customIdentity.getMasterSiteUrl(); //jay@3rcomputer.com
         String resourceName="";  
  
 

         EmailMessage e=null;
         String uuid = java.util.UUID.randomUUID().toString();
         String subjectTemplate = "Text Message from 4.0.0 Mail - " + uuid;
         String version = "simple-mail";
         String subject = "Text Message from " + version + " Mail - " + uuid;
         if(mailRelayOff){
            fromAddress=userName;// smtpuser mail@raaspi.com (raaspi)or jaymitra@3rcomputer.com (3rcomputer) valid email and dom part matches
            replyToAddress=fromAddress;//otherwise gmail puts via??
         }else{
            //relay being used , via@xxx needs to be specified and site may not have its own domain email . They need to be specified in client record 05 field 
            fromAddress=fromAddress05;// via@3rcomputer.com, assuming 3rcomputer smtp (privateemail)  is used for mailrelay (sendgrid)
            if(siteAddress05 != null && !siteAddress05.isEmpty()){
             ENVELOPE_FROM_ADDRESS =siteAddress05;
             toName =siteAddress05;
             toAddress =siteAddress05;
            }
         }

         switch (content) {
          //where sender can be other than raaspi/3rcomputer, override fromAddress to via@3rcomputer to match and avoid spam warning
          // if mailrelayOff fromAddress needs to contain site domain to avoid spam warning
          case "/password_reset.xhtml": 
           //resetPassword has new temp pw and lostPasswordUserId is the userId, fromName is site name ie owner2Code value
           toName = this.lostPasswordUserId;
           toAddress = this.recoveredPasswordEmail;
           subjectTemplate="Password Reset Notification from "+owner2Code;
           resourceName="password_reset.fmt";
           break;
          case "/activationSignUp.xhtml":
           //yxxxuh56userHome.newUserLink has activation value to trigger acti= via f:viewAction, fromName is site name
           // instance.c1xxuxxxbvxxxxxxxxxxotherid (also clientEmail) has to email, a0xxukuxbvxxxxxxxxxxid has new logon id 
           // and c6xxuxuoivxxxxxxxxxxoldpw has temp pw, clientName has user lastName
           toName = this.instance.getA0xxukuxbvxxxxxxxxxxid();
           toAddress = this.instance.getC1xxuxxxbvxxxxxxxxxxotherid();
           subjectTemplate=owner2Code+" new user Activation-"+this.instance.getA0xxukuxbvxxxxxxxxxxid();
           resourceName="activationSignUp.fmt";
           break;
          case "/activationDemo.xhtml":
           //yxxxuh56userHome.newUserLink has activation value to trigger acti= via f:viewAction entry, fromName is site name
           // instance.c1xxuxxxbvxxxxxxxxxxotherid (also clientEmail) has email, a0xxukuxbvxxxxxxxxxxid has new logon id and c6xxuxuoivxxxxxxxxxxoldpw has temp pw
           toName = this.instance.getA0xxukuxbvxxxxxxxxxxid();
           toAddress = this.instance.getC1xxuxxxbvxxxxxxxxxxotherid();
           subjectTemplate=owner2Code+" Demonstration Account Activation-"+this.instance.getA0xxukuxbvxxxxxxxxxxid();
           resourceName="activationDemo.fmt";
           break;
          case "/activation.xhtml":
           //this follows getactivation + activationSetup by doregister/doQuickRegister and later this activation sent via SqlAdmin
           // there is also siteSetupSteps as post activation (4 email content renders)
           toName = this.instance.getC1xxuxxxbvxxxxxxxxxxotherid();
           toAddress = this.instance.getC1xxuxxxbvxxxxxxxxxxotherid();
           subjectTemplate=this.instance.getZzxxu2oxxhxxxxxxxxxxowner2()+" - WorkFlow New Client Registration Activation";
           resourceName="activation.fmt";
           break;
          case "/getactivation.xhtml":
           //first email to client advising setup done email will come.  addded cc for support
           //user records already created for admin and manager,otherid holds entered email 
           toName = this.instance.getC1xxuxxxbvxxxxxxxxxxotherid();
           toAddress = this.instance.getC1xxuxxxbvxxxxxxxxxxotherid();
           //ccAddress="support@"+customIdentity.getMasterSiteUrl();// send a copy to masterSite
           subjectTemplate=this.instance.getZzxxu2oxxhxxxxxxxxxxowner2()+" - Create Site and Registration";
           resourceName="getactivation.fmt";
           break;
          case "/activationSetup.xhtml":
           toName = "support@"+customIdentity.getMasterSiteUrl(); //support@3rcomputer.com, alias will send to jaymitra@3rcomputer.com
           toAddress = "support@"+customIdentity.getMasterSiteUrl(); //support@3rcomputer.com
           subjectTemplate=this.instance.getZzxxu2oxxhxxxxxxxxxxowner2()+" -- server side Create Site Setup steps ";
           resourceName="activationSetup.fmt";
           break;
          case "/siteSetupSteps.xhtml":
           toName = this.instance.getC1xxuxxxbvxxxxxxxxxxotherid();
           toAddress = this.instance.getC1xxuxxxbvxxxxxxxxxxotherid();
           subjectTemplate=this.instance.getZzxxu2oxxhxxxxxxxxxxowner2()+" -New Site Post Activation activities";
           resourceName="siteSetupSteps.fmt";
           break;
          case "/endoftrial.xhtml":
           toName = this.instance.getC1xxuxxxbvxxxxxxxxxxotherid();
           toAddress = this.instance.getC1xxuxxxbvxxxxxxxxxxotherid();
           subjectTemplate="End of Trial for -"+this.instance.getZzxxu2oxxhxxxxxxxxxxowner2();
           resourceName="endoftrial.fmt";
           break;
          case "/licensed.xhtml":
           toName = this.instance.getC1xxuxxxbvxxxxxxxxxxotherid();
           toAddress = this.instance.getC1xxuxxxbvxxxxxxxxxxotherid();
           subjectTemplate="Subscription/Renewal for -"+this.instance.getZzxxu2oxxhxxxxxxxxxxowner2();
           resourceName="licensed.fmt";
           break;
          case "/noactivity.xhtml":
           toName = this.instance.getC1xxuxxxbvxxxxxxxxxxotherid();
           toAddress = this.instance.getC1xxuxxxbvxxxxxxxxxxotherid();
           subjectTemplate="No activity for -"+this.instance.getZzxxu2oxxhxxxxxxxxxxowner2();
           resourceName="noactivity.fmt";
           break;
          case "/subscribed.xhtml":
           toName = this.instance.getC1xxuxxxbvxxxxxxxxxxotherid();
           toAddress = this.instance.getC1xxuxxxbvxxxxxxxxxxotherid();
           subjectTemplate="Subscription Renewal for -"+this.instance.getZzxxu2oxxhxxxxxxxxxxowner2();
           resourceName="subscribed.fmt";
           break;
         }

    if(!mailRelayOff){
     try {
        SMTPAPI header = new SMTPAPI();
         // jay put sender's name here instead of blank ie loop through but dont send ?, mailInfo may already have attach info
         // build x-smtpi header
         header.addCategory(owner2Code);// can be used in webhook
         header.addTo(toAddress);
         header.addSubstitution("keyx", "ignore");
         header.addSubstitution("unx", "0");
         headers = header.jsonString();
     }catch (Exception ex){
	log.severe("Error creating smtpi-X,"+ ex);//continue, user need not know
     }
    }
       try{
         //no attachments now,for future check eRender logic in entityList.  build msg but send after msg is saved in clob  
         // added try/catch to be able to continue here in case send fails but e(mail message) will be null

        if(!mailRelayOff){//sendgrid bulk email, tbd add support and support@raaspi.com as extra To
         if(content.equals("/getactivation.xhtml")){
            e =
             new MailMessageImpl(mailConfig).from(MailTestUtil.getAddressHeader(fromName, fromAddress)).replyTo(replyToAddress).to(MailTestUtil.getAddressHeader(toName, toAddress)).subject(
              new FreeMarkerTemplate(subjectTemplate)).bodyHtml(new FreeMarkerTemplate(Resources.newInputStreamSupplier(Resources.getResource(resourceName)).getInput()))
              .put("yxxxuh56userHome", this).addHeader("X-SMTPAPI",this.headers).importance(MessagePriority.HIGH).send();
         }else{
            e =
             new MailMessageImpl(mailConfig).from(MailTestUtil.getAddressHeader(fromName, fromAddress)).replyTo(replyToAddress).to(MailTestUtil.getAddressHeader(toName, toAddress)).subject(
              new FreeMarkerTemplate(subjectTemplate)).bodyHtml(new FreeMarkerTemplate(Resources.newInputStreamSupplier(Resources.getResource(resourceName)).getInput()))
               .put("yxxxuh56userHome", this).addHeader("X-SMTPAPI",this.headers).importance(MessagePriority.HIGH).send();
         }
        }else{//email service txn email,tbd add support and support@raaspi.com as CC .cc(MailTestUtil.getAddressHeader(ccName, ccAddress)) worked infrequent socket reset
         if(content.equals("/getactivation.xhtml")){
            e =
              new MailMessageImpl(mailConfig).from(MailTestUtil.getAddressHeader(fromName, fromAddress)).replyTo(replyToAddress).to(MailTestUtil.getAddressHeader(toName, toAddress)).subject(
               new FreeMarkerTemplate(subjectTemplate)).bodyHtml(new FreeMarkerTemplate(Resources.newInputStreamSupplier(Resources.getResource(resourceName)).getInput()))
                .put("yxxxuh56userHome", this).importance(MessagePriority.HIGH).send();
         }else{
            e =
              new MailMessageImpl(mailConfig).from(MailTestUtil.getAddressHeader(fromName, fromAddress)).replyTo(replyToAddress).to(MailTestUtil.getAddressHeader(toName, toAddress)).subject(
               new FreeMarkerTemplate(subjectTemplate)).bodyHtml(new FreeMarkerTemplate(Resources.newInputStreamSupplier(Resources.getResource(resourceName)).getInput()))
                .put("yxxxuh56userHome", this).importance(MessagePriority.HIGH).send();
         }
        }

        }catch(Exception ex){
         bcontinue=false;
         log.severe("Error in sending email"+ ex);//continue
         FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
         FacesMessage.SEVERITY_ERROR,bundle.getString("Email") +" "+bundle.getString("from")+" "+fromName+" "+bundle.getString("send")+" "+bundle.getString("failed") ,""));
          String cause="";
          if(ex.getCause() !=null && ex.getCause().getCause()!=null){
           cause=ex.getCause().getCause().getMessage();
           FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
           FacesMessage.SEVERITY_INFO,bundle.getString("cause")+" "+ ex.getCause().getCause().getMessage(),""));
          }

         //continue
         // retry with refresh if failed on bad token or expired token then only get a new token using
         // existing refresh token(client site record 07 clientId)
         // send again using new token is there subcode for expired or check token expiry?
         if(cause.contains("334")){
          password=r3RestClient.getAccessTokenGMail(client.getDaxxuzxdssxxxxxxxxxxapiclientid(),"refresh_token",owner2Code );
          //reset token but continue with alternate for now
         }

        }
        //bodyj holds id/pw and saved in system clobdata as mail-sent for any send from here
        if(this.instance !=null){
             // if doregister comes twice getactivation and then by activationSetup
             bodyj=bodyj+"The LogOn Ids are: admin and manager, The Passwords are: "+this.instance.getY7xxuxznbvxxxxxxxxxxnotes()+" activation:"+newUserLink;
        }else{
             bodyj=bodyj+" id: "+this.getLostPasswordUserId()+" tempPW "+this.getResetPassword() ;
        }

        // try sending using mailRelay first then save in clob, need to use revised mailconfig ie mailrelay config and password from client05
        if(e==null && mailRelayOff==true ){
         //first check if mailrelay is setup
                       client05 =null;
                       bcontinue=true;
                       try {
                              client05 =(Yxxxch522xhhxxhxxxxxclient) entityManager
		.createQuery(
		"select cc from Yxxxch522xhhxxhxxxxxclient cc where cc.a0xxukxxbvxxxxxxxxxxclientversion = :nKeyName and cc.zzxxu2oxxhxxxxxxxxxxowner2 = :owner2 order by cc.a0xxuobxbxxxxxxxxxxxsid asc")
		.setParameter("nKeyName","05")
		.setParameter("owner2", owner2Code)
		.getSingleResult();
                             if(client05 !=null ){
                              host=client05.getZ8xxuxxxbvxxxxxxxxxxsmtpserver().trim();//exmpl smtp.sendgrid.net
                              port=client05.getL6xxzxxrbvxxxxxxxxxxaltselen();//use 587 as default
                              if (port==0){
                               port=587;
                              }
                              fromAddress=client05.getD5xxuxxrbvxxxxxxxxxxrmailaddr();//exmpl mail@raaspi.com 
                              fromAddress05=fromAddress;
                              siteAddress05=client05.getD4xxhxxrbv24xxxxxxxximailaddr();//exmpl mail@raaspi.com 
                              userName=client05.getZ9xxuxxxbvxxxxxxxxxxsmtpuser();//exmpl apikey if sendgrid. logic may need change to support other mailRelay server 
                              userName=client05.getZ9xxuxxxbvxxxxxxxxxxsmtpuser();//exmpl apikey if sendgrid. logic may need change to support other mailRelay server 
                              userName05=userName;
                              password=client05.getDbxxuzxdssxxxxxxxxxxapiclientsecret().trim();//access token
                              password05=password;
                              if(password == null || password.isEmpty() || password.equals("SG.BxxxxxxxxxxyyyyyiBg") ){
                               smtpError=true; //both record 01 and 05 checked
                               FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                                FacesMessage.SEVERITY_INFO,bundle.getString("MailRelay")+" "+host+" "+bundle.getString("smtp")+" "+bundle.getString("password")+" / "+bundle.getString("ApiSecret")+" "+bundle.getString("information") +" "+bundle.getString("invalid"),""));
                               bcontinue=false;
                               //return null;
                              }//
                             }// no mail relay
                        } catch (Exception exc) {
                               FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                                FacesMessage.SEVERITY_INFO,bundle.getString("Client") +" "+bundle.getString("record")+" "+bundle.getString("05")+" "+bundle.getString("for")+" "+bundle.getString("mailRelay") +" "+bundle.getString("missing"),""));
                               bcontinue=false;
                               //return null;
                        }
        if(bcontinue){
         FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
          FacesMessage.SEVERITY_ERROR,bundle.getString("Alternate")+" "+bundle.getString("Email") +" "+bundle.getString("send")+" "+bundle.getString("being")+" "+bundle.getString("tried") ,""));
         mailRelayOff=false;
         host=host05; //smtp.sendgrid.net
         port=port05;//587, 465 is used for ssl only, which is replaced by tls. 587 is used by both tls and non ssl
         userName=userName05; //apikey
         password=password05;//SG.xxxxg
         auth=true;
         ssl=false;
         mailConfig = TestMailConfigs.standardConfig(host,port,userName,password,auth,ssl,auth_mechanisms);

         try {
          SMTPAPI header = new SMTPAPI();
          // jay put sender's name here instead of blank ie loop through but dont send ?, mailInfo may already have attach info
          // build x-smtpi header
          header.addCategory(owner2Code); //can be used in webhook
          header.addTo(toAddress);
          header.addSubstitution("keyx", "ignore");
          header.addSubstitution("unx", "0");
          headers = header.jsonString();
         }catch (Exception ex){
	  log.severe("Error creating smtpi-X,"+ ex);//continue, user need not know
         }
         try{
            e =
                    new MailMessageImpl(mailConfig).from(MailTestUtil.getAddressHeader(fromName, fromAddress)).replyTo(replyToAddress).to(MailTestUtil.getAddressHeader(toName, toAddress)).subject(
                            new FreeMarkerTemplate(subjectTemplate)).bodyHtml(new FreeMarkerTemplate(Resources.newInputStreamSupplier(Resources.getResource(resourceName)).getInput()))
                            .put("yxxxuh56userHome", this).addHeader("X-SMTPAPI",this.headers).importance(MessagePriority.HIGH).send();
         }catch(Exception ex){
	  log.severe("Error in alternate sending via relay"+ ex);//continue
            FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
             FacesMessage.SEVERITY_ERROR,bundle.getString("Alternate")+" "+bundle.getString("Email") +" "+bundle.getString("send")+" "+bundle.getString("failed") ,""));
            FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
             FacesMessage.SEVERITY_ERROR,bundle.getString("Please")+" "+bundle.getString("try") +" "+bundle.getString("later") ,""));
          bcontinue=false;
         }
        }// end of alternate email setup check
        }// end alternate email 
        // save in client clobdata, if pwreset extra save in system clobdata
        //do not use e it can be null if failure. for htmlbody save the needed information in text since cannot use freemarker
                // send can fail/blocked, so keep a copy in clob after send, data is available after send 
                 //MAIL-SENT used by icalsend and system send, MAIL-CONTENT used by customer/ventor/employee Mailing
	         // do not reuse but new seq because unlike MAIL-CONTENT, no control when gets created and overwritten
                 // automatic purge of these and others if date is old
               if(!content.contains("/activationSetup")){// already done by getactivation
                try {
                  yxxxuq1m1xwwqqqxxxxxclobdataHome.clearInstance();
                  yxxxuq1m1xwwqqqxxxxxclobdata = yxxxuq1m1xwwqqqxxxxxclobdataHome.getInstance();
                  yxxxuq1m1xwwqqqxxxxxclobdataHome.setInstance(yxxxuq1m1xwwqqqxxxxxclobdata);
                  yxxxuq1m1xwwqqqxxxxxclobdata.setA0xxukcdlvxxxxxxxxxxfromtable("clobdata");
                  yxxxuq1m1xwwqqqxxxxxclobdata.setA1xxuxxxbv49xxxxxxxxfromkey("MAIL-SENT");
                  int jay=  yxxxuq1m1xwwqqqxxxxxclobdataList.getNextSeqAvailable("clobdata","AMAIL-SENT",content.substring(1,content.length()-6),0);
                  yxxxuq1m1xwwqqqxxxxxclobdata.setA3xxexnsbvxxxxxxxxxxsequence(jay);
                 yxxxuq1m1xwwqqqxxxxxclobdata.setA2xxuxxxbv50xxxxxxxxqualifier(content.substring(1,content.length()-6));
                  yxxxuq1m1xwwqqqxxxxxclobdata.setB1xxuzaxbvxxxxxxxxxxdata("to: "+toAddress+" from: "+fromAddress+" subject: "+subjectTemplate+" body: "+bodyj);
                  yxxxuq1m1xwwqqqxxxxxclobdata.setA4xxexxxbvxxxxxxxxxxtype("txt");
                  yxxxuq1m1xwwqqqxxxxxclobdataHome.persist();
                  // newUserLink does not hold activation value at this time, get from user/admin record
                  // better move this log to doQuickRegister/DoRegister as well
                 log.severe("in case clob not saved,debug code "+ownerCode+"/"+owner2Code+","+resetPassword+" xx:"+lostPasswordUserId);//continue, user need not know

                }catch (Exception ex){
                 log.severe("Error saving mail-sent for "+ownerCode+"/"+owner2Code+","+ ex);//continue, user need not know
                 log.severe("debug code "+ownerCode+"/"+owner2Code+","+resetPassword+" xx:"+lostPasswordUserId);//continue, user need not know
                }
               }
               // create/update a record  like mail-content in raaspi for any other site pw reset, in case site manager gets locked out.
               // unlike above, this saves in SYSTEM
               if(content.contains("/password_reset")){
                try {
                 yxxxuq1m1xwwqqqxxxxxclobdata = yxxxuq1m1xwwqqqxxxxxclobdataList.getclobDataSystemInstance("clobdata","AMAIL-SENT","pwreset",0);
                 if(yxxxuq1m1xwwqqqxxxxxclobdata == null){   
                  yxxxuq1m1xwwqqqxxxxxclobdataHome.clearInstance();
                  yxxxuq1m1xwwqqqxxxxxclobdata = yxxxuq1m1xwwqqqxxxxxclobdataHome.getInstance();
                  yxxxuq1m1xwwqqqxxxxxclobdataHome.setInstance(yxxxuq1m1xwwqqqxxxxxclobdata);
                  yxxxuq1m1xwwqqqxxxxxclobdata.setA0xxukcdlvxxxxxxxxxxfromtable("clobdata");
                  yxxxuq1m1xwwqqqxxxxxclobdata.setA1xxuxxxbv49xxxxxxxxfromkey("MAIL-SENT");
                  yxxxuq1m1xwwqqqxxxxxclobdata.setA3xxexnsbvxxxxxxxxxxsequence(0);
                  yxxxuq1m1xwwqqqxxxxxclobdata.setA2xxuxxxbv50xxxxxxxxqualifier("pwreset");
                  yxxxuq1m1xwwqqqxxxxxclobdata.setB1xxuzaxbvxxxxxxxxxxdata("to: "+toAddress+" from: "+fromAddress+" subject: "+subjectTemplate+" body: "+bodyj);
                  yxxxuq1m1xwwqqqxxxxxclobdata.setA4xxexxxbvxxxxxxxxxxtype("txt");
                  yxxxuq1m1xwwqqqxxxxxclobdataHome.persist("SYSTEM");
                 }else{
                  String jay=yxxxuq1m1xwwqqqxxxxxclobdata.getB1xxuzaxbvxxxxxxxxxxdata();
                    
                  yxxxuq1m1xwwqqqxxxxxclobdata.setB1xxuzaxbvxxxxxxxxxxdata(jay+" to: "+toAddress+" from: "+fromAddress+" subject: "+subjectTemplate+" body: "+bodyj);
                  yxxxuq1m1xwwqqqxxxxxclobdataHome.setInstance(yxxxuq1m1xwwqqqxxxxxclobdata);
                  yxxxuq1m1xwwqqqxxxxxclobdataHome.allowUpdate();
                 }
                }catch (Exception ex){
                 log.severe("Error saving mail-sent for pwreset/SYSTEM, "+ ex);//continue, user need not know
                }
               }
             return null;
        }





	public void Emailsend(String content,String msg) {
                //content is the xxx.xhtml with mail tags
                // called by doregister,doactivation etc
                             try {
                               //renderer.render(content);
                                emailRender(content);
                                if(!msg.equals("no")){ 
                                 FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                                     FacesMessage.SEVERITY_INFO,bundle.getString("email") +" "+bundle.getString("sent") +" "+bundle.getString("sucessfully")+" "+msg,""));

                                }
                              } catch (Exception e) {
                               //log.severe("Error sending mail "+ e); all exceptiion logging/msg in emailrender now
                               //FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                                     //FacesMessage.SEVERITY_ERROR,bundle.getString("email") +" "+bundle.getString("send") +" "+bundle.getString("failed")+" "+e.getMessage(),""));

		}
	}
	public void createCustomerAddressSignup() {
    /**
    * Method creates customer and address record for a user. if address information not available a placeholder is created
    * so that user can modify it later. visitors can only list and modify but not create new record, 
    * @param none
    * @return void
    * @exception none
    * @see 
    * 
    */ 
       
	if (fxxxuq111xwwqqhxxxxxaddress == null) {
	    fxxxuq111xwwqqhxxxxxaddress=fxxxuq111xwwqqhxxxxxaddressHome.getInstance();
	}
              if(fxxxuq111xwwqqhxxxxxaddress.getB1pxusa1bvxxxxxxxxxxaddrl1() == null || fxxxuq111xwwqqhxxxxxaddress.getB1pxusa1bvxxxxxxxxxxaddrl1().isEmpty() ){
               fxxxuq111xwwqqhxxxxxaddress.setB1pxusa1bvxxxxxxxxxxaddrl1(this.instance.getA0xxukuxbvxxxxxxxxxxid()+" address");
              }//
              if(fxxxuq111xwwqqhxxxxxaddress.getB3xxh2acbv11xxxxxxxxcity() == null || fxxxuq111xwwqqhxxxxxaddress.getB3xxh2acbv11xxxxxxxxcity().isEmpty() ){
               if(this.instance.getA0xxukuxbvxxxxxxxxxxid().length()>14){      
                fxxxuq111xwwqqhxxxxxaddress.setB3xxh2acbv11xxxxxxxxcity(this.instance.getA0xxukuxbvxxxxxxxxxxid().substring(0,14)+" City");
               }else{
                fxxxuq111xwwqqhxxxxxaddress.setB3xxh2acbv11xxxxxxxxcity(this.instance.getA0xxukuxbvxxxxxxxxxxid()+" City");
               } 
              }
              subKey=fxxxuq111xwwqqhxxxxxaddress.getB1pxusa1bvxxxxxxxxxxaddrl1()+fxxxuq111xwwqqhxxxxxaddress.getB3xxh2acbv11xxxxxxxxcity();
              if (subKey.length() !=0){
               String subKeyh=Integer.toString(subKey.hashCode());
               if (subKey.length() > 9){
                subKey=subKey.substring(0,10)+subKeyh;
               }
               else {
                subKey=subKey+subKeyh;
               }
               // 
               fxxxuq111xwwqqhxxxxxaddress.setA0xxukbxbxxxxxxxxxxxaddrescode(subKey);
               fxxxuq111xwwqqhxxxxxaddress.setZzxxu2oxxhxxxxxxxxxxowner2(owner2Code);
               fxxxuq111xwwqqhxxxxxaddress.setZ3xxutoxlhxxxxxxxxxxowner(ownerCode);
               fxxxuq111xwwqqhxxxxxaddressHome.persist();
               bcontinue=true;
              }else{
               FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                FacesMessage.SEVERITY_ERROR,bundle.getString("create")+" "+bundle.getString("address")+" "+subKey+" "+bundle.getString("error"),""));

               bcontinue=false;
              }

	if (jxxxuq201xwwqqhxxxxxcustomer == null) {
	    jxxxuq201xwwqqhxxxxxcustomer=jxxxuq201xwwqqhxxxxxcustomerHome.getInstance();
	}
              subKey=this.getClientName()+this.getA0xxukuxbvxxxxxxxxxxid2();
              if (subKey.length() !=0){
               String subKeyh=Integer.toString(subKey.hashCode());
               if (subKey.length() > 9){
                subKey=subKey.substring(0,10)+subKeyh;
               }
               else {
                subKey=subKey+subKeyh;
               }
              }

      jxxxuq201xwwqqhxxxxxcustomer.setA0xxukxxbvxxxxxxxxxxcustomer(subKey);
      jxxxuq201xwwqqhxxxxxcustomer.setC2xxu2fnbvixxxxxxxxxfirstname(this.getA0xxukuxbvxxxxxxxxxxid2());
      jxxxuq201xwwqqhxxxxxcustomer.setC1xxuslnbvixxxxxxxxxlastname(this.getClientName());
      jxxxuq201xwwqqhxxxxxcustomer.setD1xxu3cnbvixxxxxxxxxcustomerascompanyname(this.getCompanyName());
      jxxxuq201xwwqqhxxxxxcustomer.setQ4xxhxxxbv24xxxxxxxximailaddr(this.getClientEmail());
      jxxxuq201xwwqqhxxxxxcustomer.setZzxxu2oxxhxxxxxxxxxxowner2(owner2Code);
      jxxxuq201xwwqqhxxxxxcustomer.setZdxxutoxlhxxxxxxxxxxowner(ownerCode);
      jxxxuq201xwwqqhxxxxxcustomer.setF2xxuwmxbv40xxxxxxxxintegrset("DEFAULT");
      if (bcontinue){
       jxxxuq201xwwqqhxxxxxcustomer.setFxxxuq111xwwqqhxxxxxaddressByMailtocode(fxxxuq111xwwqqhxxxxxaddress);
       jxxxuq201xwwqqhxxxxxcustomer.setFxxxuq111xwwqqhxxxxxaddressByShiptocode(fxxxuq111xwwqqhxxxxxaddress);
      }
      jxxxuq201xwwqqhxxxxxcustomerHome.persist();
      bcontinue=true;

      return;
     

     }


	public void createVendorAddressSignup() {
	if (fxxxuq111xwwqqhxxxxxaddress == null) {
	    fxxxuq111xwwqqhxxxxxaddress=fxxxuq111xwwqqhxxxxxaddressHome.getInstance();
	}
              if(fxxxuq111xwwqqhxxxxxaddress.getB1pxusa1bvxxxxxxxxxxaddrl1() == null){
               fxxxuq111xwwqqhxxxxxaddress.setB1pxusa1bvxxxxxxxxxxaddrl1(this.instance.getA0xxukuxbvxxxxxxxxxxid()+" address");
              }//
              if(fxxxuq111xwwqqhxxxxxaddress.getB3xxh2acbv11xxxxxxxxcity() == null || fxxxuq111xwwqqhxxxxxaddress.getB3xxh2acbv11xxxxxxxxcity().isEmpty() ){
               if(this.instance.getA0xxukuxbvxxxxxxxxxxid().length()>14){      
                fxxxuq111xwwqqhxxxxxaddress.setB3xxh2acbv11xxxxxxxxcity(this.instance.getA0xxukuxbvxxxxxxxxxxid().substring(0,14)+" City");
               }else{
                fxxxuq111xwwqqhxxxxxaddress.setB3xxh2acbv11xxxxxxxxcity(this.instance.getA0xxukuxbvxxxxxxxxxxid()+" City");
               } 
              }
              subKey=fxxxuq111xwwqqhxxxxxaddress.getB1pxusa1bvxxxxxxxxxxaddrl1()+fxxxuq111xwwqqhxxxxxaddress.getB3xxh2acbv11xxxxxxxxcity();
              if (subKey.length() !=0){
               String subKeyh=Integer.toString(subKey.hashCode());
               if (subKey.length() > 9){
                subKey=subKey.substring(0,10)+subKeyh;
               }
               else {
                subKey=subKey+subKeyh;
               }
  
               fxxxuq111xwwqqhxxxxxaddress.setA0xxukbxbxxxxxxxxxxxaddrescode(subKey);
               fxxxuq111xwwqqhxxxxxaddress.setZzxxu2oxxhxxxxxxxxxxowner2(owner2Code);
               fxxxuq111xwwqqhxxxxxaddress.setZ3xxutoxlhxxxxxxxxxxowner(ownerCode);
               fxxxuq111xwwqqhxxxxxaddressHome.persist();
               bcontinue=true;
              }else{
               bcontinue=false;
              }

	if (jxxxuq300xwwqqhxxxxxvendor == null) {
	    jxxxuq300xwwqqhxxxxxvendor=jxxxuq300xwwqqhxxxxxvendorHome.getInstance();
	}
              subKey=this.getClientName()+this.getA0xxukuxbvxxxxxxxxxxid2();
              if (subKey.length() !=0){
               String subKeyh=Integer.toString(subKey.hashCode());
               if (subKey.length() > 9){
                subKey=subKey.substring(0,10)+subKeyh;
               }
               else {
                subKey=subKey+subKeyh;
               }
              }

      jxxxuq300xwwqqhxxxxxvendor.setA0xxukxxbvxxxxxxxxxxvendor(subKey);
      jxxxuq300xwwqqhxxxxxvendor.setB4xxu2fnbvxxxxxxxxxxfirstname(this.getA0xxukuxbvxxxxxxxxxxid2());
      jxxxuq300xwwqqhxxxxxvendor.setB3xxuslnbvxxxxxxxxxxlastname(this.getClientName());
      jxxxuq300xwwqqhxxxxxvendor.setN4xxhxxrbv24xxxxxxxximailaddr(this.getClientEmail());
      jxxxuq300xwwqqhxxxxxvendor.setZzxxu2oxxhxxxxxxxxxxowner2(owner2Code);
      jxxxuq300xwwqqhxxxxxvendor.setZhxxutoxlhxxxxxxxxxxowner(ownerCode);
      jxxxuq300xwwqqhxxxxxvendor.setO1xxuwmrbv40xxxxxxxxintegrset("DEFAULT");
      if (bcontinue){
       jxxxuq300xwwqqhxxxxxvendor.setFxxxuq111xwwqqhxxxxxaddressByMailtocode(fxxxuq111xwwqqhxxxxxaddress);
       jxxxuq300xwwqqhxxxxxvendor.setFxxxuq111xwwqqhxxxxxaddressByShiptocode(fxxxuq111xwwqqhxxxxxaddress);
      }
      jxxxuq300xwwqqhxxxxxvendorHome.persist();
      bcontinue=true;

      return;
     

     }



    /***
    *history
    * createEmployeeCustomerAddressSignup() no params existed and was used by only demosignup 
    * quickregister calls doregister which calls doregister and has similar logic inside user perist
    * The following method uses parameters and only demoSignUp and new Coupon redeem method here  
    * and new siteCreate in r3restclient use this method.
    * in near future doregister will be changed to use this
    */

    @Transactional

	public void createEmployeeCustomerAddressSignup(String requestType,String fName,String lName,String eMail,String owner2Code,String userId) {
        //6 parms 1)requestType demo/redeem/coupon,2)firstName or company name 3)last name ,4)email, 5)site name raaspi or client site name 6)userId needed for createUserInstance
        //was coming from demosignup. added doregister(site create) tbd signup and vsignup
        //create customer,employee n address but scramble employee email to avoid misuse, only place demo user real email is kept is in user and is hidden from others

        eMail=eMail.trim().toLowerCase();
        fName=fName.trim();
        lName=lName.trim();
        userId=userId.trim();
        if(!requestType.equals("redeem")){//redeem means raaspi visitor VH no employee record only addr/customer/user
         if(requestType.equals("demo")){
          this.setClientEmail(eMail);
          // demo is backoffice user,put scrambled dummy employee
          FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
              FacesMessage.SEVERITY_INFO,bundle.getString("During")+ " "+bundle.getString("demo")+" "+bundle.getString("signup")+", "+bundle.getString("your")+" "+bundle.getString("name")+", "+bundle.getString("address")+" "+bundle.getString("is")+" "+bundle.getString("stored")+" "+bundle.getString("as")+" "+bundle.getString("slightly")+" "+bundle.getString("modified")+" "+bundle.getString("to")+" "+bundle.getString("protect")+" "+bundle.getString("privacy"),""));
          FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
              FacesMessage.SEVERITY_INFO,bundle.getString("your")+ " "+bundle.getString("email")+" "+bundle.getString("address")+" "+bundle.getString("is")+" "+bundle.getString("not")+" "+bundle.getString("visible")+" "+bundle.getString("to")+" "+bundle.getString("other")+" "+bundle.getString("demo")+" "+bundle.getString("users"),""));

              subKey=this.getClientEmail();
              int atAt=subKey.indexOf("@");
              if (atAt != -1){
               if (atAt > 2 ){
                subKey="de"+subKey.substring(2,atAt)+"x"+subKey.substring(atAt+2);//allow one demo per same email
               }
              }
              else{
               if (subKey.length() !=0 && subKey.length()>2 ){
                subKey="de"+subKey.substring(2)+"AXZ";
               }
              }
         }else{
           //site means back office user UH for new site, employee/addr/customer/user
           subKey=eMail;
           if (lName != null && lName.length() !=0){
            subKey=subKey+lName;
            timeStamp = new SimpleDateFormat("yyyy.MM.dd.HH.mm.ss").format(new Date());
            subKey=subKey+timeStamp.substring(17,18);
           }else{
            timeStamp = new SimpleDateFormat("yyyy.MM.dd.HH.mm.ss").format(new Date());
            subKey=subKey+timeStamp.substring(17,18);
           } 
           if (fName != null && fName.length() !=0){
            subKey=subKey+fName;
            timeStamp = new SimpleDateFormat("yyyy.MM.dd.HH.mm.ss").format(new Date());
            subKey=subKey+timeStamp.substring(17,18);
           }else{
            timeStamp = new SimpleDateFormat("yyyy.MM.dd.HH.mm.ss").format(new Date());
            subKey=subKey+timeStamp.substring(17,18);
           } 
         }//demo/coupon subkey built, put random part and persist employee  
         if (subKey.length() !=0){
               String subKeyh=Integer.toString(subKey.hashCode());
               if (subKey.length() > 9){
                subKey=subKey.substring(0,10)+subKeyh;
               }
               else {
                subKey=subKey+subKeyh;
               }
         }
              if(jxxxbh400xwwqqhxxxxxemployeeList.getKeyToEntity(subKey)!=null){
               FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                FacesMessage.SEVERITY_ERROR,bundle.getString("Employee")+" "+subKey+" "+bundle.getString("already")+" "+bundle.getString("exists")+" "+bundle.getString("for")+" "+owner2Code+" "+bundle.getString("continuing"),""));
              }else{ 
	       if (jxxxbh400xwwqqhxxxxxemployee == null) {
	        jxxxbh400xwwqqhxxxxxemployee=jxxxbh400xwwqqhxxxxxemployeeHome.getInstance();
	       }
               jxxxbh400xwwqqhxxxxxemployee.setA0xxuktxbvxxxxxxxxxxemployee(subKey);
               jxxxbh400xwwqqhxxxxxemployee.setN4xxhxxrbv24xxxxxxxximailaddr("");
               jxxxbh400xwwqqhxxxxxemployee.setZzxxu2oxxhxxxxxxxxxxowner2(owner2Code);
               jxxxbh400xwwqqhxxxxxemployee.setO2xxuwmrbv40xxxxxxxxintegrset("DEFAULT");
               jxxxbh400xwwqqhxxxxxemployeeHome.superdotpersist();//otherwise key gets recalculated in persist()
              }  
              //ignore employee persist ??
              bcontinue=true;
         
        //end of employee for demo/coupon

        }//demo/redeem/coupon
 	      if (fxxxuq111xwwqqhxxxxxaddress == null) {
	         fxxxuq111xwwqqhxxxxxaddress=fxxxuq111xwwqqhxxxxxaddressHome.getInstance();
	      }
              String addrPrefix=eMail;
              if(eMail.length()>4){
               addrPrefix=eMail.substring(0,4);
              }
              if(fxxxuq111xwwqqhxxxxxaddress.getB1pxusa1bvxxxxxxxxxxaddrl1() == null){
               
               if(requestType.equals("redeem")||requestType.equals("coupon")){
                String ts=new SimpleDateFormat("yyyy.MM.dd.HH.mm.ss").format(new Date());//no user exists
                subKey=addrPrefix+ts.substring(17,19)+ts.substring(14,16)+ts.substring(11,13)+ts.substring(0,7)+userIP;
                fxxxuq111xwwqqhxxxxxaddress.setB1pxusa1bvxxxxxxxxxxaddrl1(subKey+" address");
                if(fxxxuq111xwwqqhxxxxxaddress.getB3xxh2acbv11xxxxxxxxcity() == null || fxxxuq111xwwqqhxxxxxaddress.getB3xxh2acbv11xxxxxxxxcity().isEmpty() ){
                 if(subKey.length()>14){      
                  fxxxuq111xwwqqhxxxxxaddress.setB3xxh2acbv11xxxxxxxxcity(subKey.substring(0,14)+" City");
                 }else{
                  fxxxuq111xwwqqhxxxxxaddress.setB3xxh2acbv11xxxxxxxxcity(subKey+" City");
                 }
                } 
               }else{//demo
                fxxxuq111xwwqqhxxxxxaddress.setB1pxusa1bvxxxxxxxxxxaddrl1(this.instance.getA0xxukuxbvxxxxxxxxxxid()+" address");
                if(fxxxuq111xwwqqhxxxxxaddress.getB3xxh2acbv11xxxxxxxxcity() == null || fxxxuq111xwwqqhxxxxxaddress.getB3xxh2acbv11xxxxxxxxcity().isEmpty() ){
                 if(this.instance.getA0xxukuxbvxxxxxxxxxxid().length()>14){      
                  fxxxuq111xwwqqhxxxxxaddress.setB3xxh2acbv11xxxxxxxxcity(this.instance.getA0xxukuxbvxxxxxxxxxxid().substring(0,14)+" City");
                 }else{
                  fxxxuq111xwwqqhxxxxxaddress.setB3xxh2acbv11xxxxxxxxcity(this.instance.getA0xxukuxbvxxxxxxxxxxid()+" City");
                 }
                }
               } 
              }//addrl1 empty 
              String country="";
              String ip="";
              if(yxxxch522xhhxxhxxxxxclientList.getSuggestList("01").size() > 0){
               ip=yxxxch522xhhxxhxxxxxclientList.getSuggestList("01").get(0).getW2xxuxxxbvxxxxxxxxxxintpassw();
              }

              if(!ip.isEmpty()){
               country=r3RestClient.ip2C(ip);
               if(!(country.equals("e") || country.equals("x")) && country.length()>5){
                country=country.substring(0,5);
               } 
              }
              fxxxuq111xwwqqhxxxxxaddress.setB5xxhboxee13xxxxxxxxcountry(country);
                //coupon means user address is in new site but redeem means user address in raaspi 
                //owner2Code is sitename, in case of redeem it hardcodes raaspi 
              if(requestType.equals("redeem")|| requestType.equals("coupon")){//same for now
               subKey=fxxxuq111xwwqqhxxxxxaddress.getB1pxusa1bvxxxxxxxxxxaddrl1()+fxxxuq111xwwqqhxxxxxaddress.getB3xxh2acbv11xxxxxxxxcity()+country;
              }else{
               subKey=fxxxuq111xwwqqhxxxxxaddress.getB1pxusa1bvxxxxxxxxxxaddrl1()+fxxxuq111xwwqqhxxxxxaddress.getB3xxh2acbv11xxxxxxxxcity()+country;
              }
              if (subKey.length() !=0){
               String subKeyh=Integer.toString(subKey.hashCode());
               if (subKey.length() > 9){
                subKey=subKey.substring(0,10)+subKeyh;
               }
               else {
                subKey=subKey+subKeyh;
               }
               if(fxxxuq111xwwqqhxxxxxaddressList.getKeyToEntity(subKey)!=null){
                FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                 FacesMessage.SEVERITY_ERROR,bundle.getString("Address")+" "+subKey+" "+bundle.getString("already")+" "+bundle.getString("exists")+" "+bundle.getString("for")+" "+owner2Code+" "+bundle.getString("continuing"),""));
               }else{ 
 
                fxxxuq111xwwqqhxxxxxaddress.setA0xxukbxbxxxxxxxxxxxaddrescode(subKey);
                if(requestType.equals("redeem")||requestType.equals("coupon")){
                 fxxxuq111xwwqqhxxxxxaddress.setZzxxu2oxxhxxxxxxxxxxowner2(owner2Code);
                }else{
                 fxxxuq111xwwqqhxxxxxaddress.setZzxxu2oxxhxxxxxxxxxxowner2(owner2Code);
                }
                fxxxuq111xwwqqhxxxxxaddressHome.superdotpersist();
               } 
               bcontinue=true;
              }else{
               FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                FacesMessage.SEVERITY_ERROR,bundle.getString("create")+" "+bundle.getString("address")+" "+subKey+" "+bundle.getString("error"),""));

               bcontinue=false;
              }
       //end of address
      if(requestType.equals("redeem") || requestType.equals("coupon")){
          subKey=eMail;
          if (lName != null && lName.length() !=0){
            subKey=subKey+lName;
            timeStamp = new SimpleDateFormat("yyyy.MM.dd.HH.mm.ss").format(new Date());
            subKey=subKey+timeStamp.substring(17,18);
          }else{
            timeStamp = new SimpleDateFormat("yyyy.MM.dd.HH.mm.ss").format(new Date());
            subKey=subKey+timeStamp.substring(17,18);
          } 
          if (fName != null && fName.length() !=0){
            subKey=subKey+fName;
            timeStamp = new SimpleDateFormat("yyyy.MM.dd.HH.mm.ss").format(new Date());
            subKey=subKey+timeStamp.substring(17,18);
          }else{
            timeStamp = new SimpleDateFormat("yyyy.MM.dd.HH.mm.ss").format(new Date());
            subKey=subKey+timeStamp.substring(17,18);
          } 
         }  
         if (subKey.length() !=0){
               String subKeyh=Integer.toString(subKey.hashCode());
               if (subKey.length() > 9){
                subKey=subKey.substring(0,10)+subKeyh;
               }
               else {
                subKey=subKey+subKeyh;
               }
         }
      if(jxxxuq201xwwqqhxxxxxcustomerList.getKeyToEntity(subKey)!=null){
       FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
        FacesMessage.SEVERITY_ERROR,bundle.getString("Customer")+" "+subKey+" "+bundle.getString("already")+" "+bundle.getString("exists")+" "+bundle.getString("for")+" "+owner2Code+" "+bundle.getString("continuing"),""));
      }else{
 	        if (jxxxuq201xwwqqhxxxxxcustomer == null) {
	         jxxxuq201xwwqqhxxxxxcustomer=jxxxuq201xwwqqhxxxxxcustomerHome.getInstance();
	        }
 
       if(requestType.equals("redeem")||requestType.equals("coupon")){
        this.clientApplicationSubFunction=this.clientApplicationSubFunction.trim();

        jxxxuq201xwwqqhxxxxxcustomer.setA0xxukxxbvxxxxxxxxxxcustomer(subKey);//gets overwritten ?
        jxxxuq201xwwqqhxxxxxcustomer.setC2xxu2fnbvixxxxxxxxxfirstname(fName);
        jxxxuq201xwwqqhxxxxxcustomer.setC1xxuslnbvixxxxxxxxxlastname(lName);
        jxxxuq201xwwqqhxxxxxcustomer.setQ4xxhxxxbv24xxxxxxxximailaddr(eMail);
        jxxxuq201xwwqqhxxxxxcustomer.setQ5xxuxxxbxxxxxxxxxxxrmailaddr(clientApplicationSubFunction);//holds coupon value
        jxxxuq201xwwqqhxxxxxcustomer.setZzxxu2oxxhxxxxxxxxxxowner2(owner2Code);
       }else{//demo we dont ask for name , may change
        jxxxuq201xwwqqhxxxxxcustomer.setA0xxukxxbvxxxxxxxxxxcustomer(subKey);//should we use part of email ? in subkey
        jxxxuq201xwwqqhxxxxxcustomer.setC2xxu2fnbvixxxxxxxxxfirstname("demo");
        jxxxuq201xwwqqhxxxxxcustomer.setC1xxuslnbvixxxxxxxxxlastname("demo_lastname");
        jxxxuq201xwwqqhxxxxxcustomer.setQ4xxhxxxbv24xxxxxxxximailaddr("");//should we use part of real email?
        jxxxuq201xwwqqhxxxxxcustomer.setZzxxu2oxxhxxxxxxxxxxowner2(owner2Code);
       }
       jxxxuq201xwwqqhxxxxxcustomer.setF2xxuwmxbv40xxxxxxxxintegrset("DEFAULT");
       if (bcontinue){
        jxxxuq201xwwqqhxxxxxcustomer.setFxxxuq111xwwqqhxxxxxaddressByMailtocode(fxxxuq111xwwqqhxxxxxaddress);
       }
       jxxxuq201xwwqqhxxxxxcustomerHome.superdotpersist();
      }
      bcontinue=true;
      // if doregister or dosignup or dodemosignup user is created first and user persist calls this method
      // and then updates user record with just created customer or employee record
      // note:in case of doregister no user record/customer gets created for raaspi itsel. this is wrong and needs fix
      //in requestType is site, flow is reverse ie raaspi user is created as a last step
      
      if(requestType.equals("redeem")){//from redeem part1 enroll from redeem() method here, we create a visitor user in raaspi to be able to login
       String oUserId=eMail;
       userId=eMail;
       if(yxxxuh566xwwqqwxxxxxuserList.getKeyToEntity(oUserId)!=null){//getKeyToEntity holds how many in holdValue3
        userId=oUserId+customIdentity.getHoldValue3();//Id held as string 
        customIdentity.setHoldArray(3,userId);// HoldArray now holds revised userId ie xx@jj.com12
        FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
         FacesMessage.SEVERITY_INFO,bundle.getString("As")+" "+bundle.getString("needed")+", "+bundle.getString("use")+" "+userId+" "+bundle.getString("with")+" "+bundle.getString("your")+" "+bundle.getString("password")+" "+bundle.getString("to")+" "+bundle.getString("log")+" "+bundle.getString("into")+" "+bundle.getString(masterSiteCode),""));

       }
       this.createUserInstance(masterSiteCode,userId,"V","H",null,newUserLink,true,eMail);//this creates a visitor user instance
       if(!bcontinue){
        return;
       }
       //visitor so no employee record only customer linked to user userprofile where gets created
       this.instance.setJxxxuq201xwwqqhxxxxxcustomer(jxxxuq201xwwqqhxxxxxcustomer);         
       //in this case user is verified (came via appSumo) so no need for activation but persist is needed.
       this.superdotpersist();//
       //once user,customer w couponcode exists, user can sign in and raaspi can put a link with parameters filled up for create Site
       //consider using r3RestClient doQuickRegister type method when user sign in
       //in doregister add logic to add email as a new UH user along with manager
      
      }else{
       if(requestType.equals("coupon")){//reddem part2 sitecreate from r3restclient , where routes get created as well
        if(fName.equals("admin")){
         userId="admin";
         this.createUserInstance(owner2Code,userId,"I","H",null,null,true,eMail);//this creates am admin user instance
         //params String owner2Client,String userId,String role, String level,Yxxxuh566xwwqqwxxxxxuser user,String password,boolean pwEncrypt,String emailAddress
        }else{
         if(fName.equals("manager")){
          userId="manager";
          this.createUserInstance(owner2Code,userId,"U","H",null,null,true,eMail);//this creates a manager or backoffice user instance
         }else{
          //test how userId gets to id and temppassord getting set
          this.createUserInstance(owner2Code,userId,"U","H",null,newUserLink,true,eMail);//this creates a manager or backoffice user instance
         }
        }
        if(!bcontinue){
         return;
        }
        this.instance.setJxxxbh400xwwqqhxxxxxemployee(jxxxbh400xwwqqhxxxxxemployee);//backoffice users         
        this.instance.setJxxxuq201xwwqqhxxxxxcustomer(jxxxuq201xwwqqhxxxxxcustomer);         
        this.superdotpersist();//
       }else{
        //demo for now uses persist method to persist user, may move here
       }
      }
      return;
     

     }


   // not used now but for reengineering both user and site activation. needs more work 
   //sitecreate in r3restclient can use it. Also user and demo sign up can use this method. Current similar logic
   //in many places
   public void sendUserActivationEmail(String clientfullUrlName,String clientName,String clientEMail){
            // send the activation email. Only manager activation field matters 
            // activation will find manager user record and clears activation field to null
            boolean smtpEnabled = true;
            String savedActivationKey="";
            String savedPassword="";
            String activationLink="";
            this.setClientName(clientName);
            this.setClientEmail(clientEMail);
            //client record01 can be used to check and set enabled or not
            if (smtpEnabled) {
                this.instance.setZ1xxzzfxhhxxxxxxxxxxstatusfl(mpartial);
                savedActivationKey=getMD5Hash(this.getA0xxukuxbvxxxxxxxxxxid2() + this.getClientName() + this.getClientEmail() + System.currentTimeMillis());
                this.instance.setC9xxuxxxbvxxxxxxxxxxactivationkey(savedActivationKey);
            } else {
                // TODO: Fix for production ... No way to activate using email
                // if SMTP is not enabled ...
                System.out.println("WARNING!!! SMTP eMailer not enabled ... partially activating user without email activation.");
                this.instance.setZ1xxzzfxhhxxxxxxxxxxstatusfl(mpartial);
            }

            if(urlPort ==8080){
               activationLink = "http://"+clientFullUrlName+":8080/login.wflow";
            }else{
               // need to add www if non raaspi.com ex raaspi.com,3rcomputer.com ie domain registered
               if(clientFullUrlName.contains("."+masterSiteCode)){
                activationLink = "http://"+clientFullUrlName+"/login.wflow";
               }else{
                activationLink = "http://www."+clientFullUrlName+"/login.wflow";
               }
            } 
            String newUserLink = activationLink + ((activationLink.indexOf("?") != -1) ? "&act=" : "?act=") + savedActivationKey;
            savedActivationKey="";
	    setNewUserLink(newUserLink);
            if (smtpEnabled) {
                try {
                   Emailsend("/activationSignUp.xhtml");

                } catch (Exception zzz) {
                 FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                  FacesMessage.SEVERITY_ERROR,"yxxxuh566xwwqqwxxxxxuser "+bundle.getString("send") +" "+bundle.getString("email") +" "+bundle.getString("failed")+" "+zzz.getMessage(),""));
                    try {
                     //org.jboss.seam.transaction.Transaction.instance().setRollbackOnly();
                     } catch (Exception ignore) {}
                }
            }

    return;
   }
   // for reengineering sitecreate or createClientRecord can use it 
   // this logic now exists in doregister(). r3restclient doQuickRegister for shopify does not need it, hard coded for one product
   // for appSumo type redeem can use it, prepaid customer rmailaddr field holds coupon code
   // couponCode holds item sid and item misccode from info ie 1a 45 etc.

   public boolean setSiteUsingFromValue(String from){
            // register/redeem sets via action sets theme  or usage(clientApplicationFunction, use default otherwise)
            //if from trial, addon product will have clientApplicationFunction as a1,a2,a3 etc 
            //and set here using parameter from
            // functionGroup and into from variable.
            // from now holds trial for which function as well as trial duration in days after 1,45 or 1a
            // allow for direct invoke when functionGroup not set so from is empty or has value but no trial period
        String vendor="";
        try {
            if(from == null || from.isEmpty()){
             // we can set from based on prepaid customer record 
             from="1";//business and default duration 14 days (variable trialPeriod value but can be changed using Item misccode1)
             trialPeriod =14;
            }        
            String fromO=from;   
            if(!fromO.substring(0,1).equals("a") && fromO.length() == 1){  
             from=fromO.substring(0,1);//can be 2 digits as well like 67
             trialPeriod =14;
            }            
            if(!fromO.substring(0,1).equals("a") && from.length() > 1){
             if(fromO.substring(0,2).equals("45") || fromO.substring(0,2).equals("67") || fromO.substring(0,2).equals("89")){//
              from=fromO.substring(0,2);
              trialPeriod=fromO.length()>2?Integer.parseInt(fromO.substring(2)):14;
             }else{
              from=fromO.substring(0,1);
              trialPeriod=fromO.length()>1?Integer.parseInt(fromO.substring(1)):14;
             }
            }
            if(fromO.substring(0,1).equals("a") && fromO.length() >= 2){
             from=fromO.substring(0,2);
             trialPeriod=fromO.length()>2?Integer.parseInt(fromO.substring(2)):14;
            }
            //check for unknown from value and return
            if (!(from.equals("1") || from.equals("2") || from.equals("3")
               || from.equals("45") || from.equals("67") || from.equals("89")
                 || from.equals("a1") || from.equals("a2") || from.equals("a3") || from.equals("a4"))){
             FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
              FacesMessage.SEVERITY_ERROR,bundle.getString("Unknown")+" "+bundle.getString("product")+" "+bundle.getString("request")+" "+bundle.getString("for")+" "+fromO+", "+bundle.getString("try")+" "+bundle.getString("again") ,""));
             return false;
            }
            switch(from){
             case "a1":
              themeName="Nature/Gene7.313-1243994117";//hardcode Nature/Generic/business for theme
              clientApplicationFunction="esge";//stock addon general business theme
              break;
             case "a2":
              themeName="Nature/Gene7.313-1243994117";//hardcode Nature/Generic/business for theme
              clientApplicationFunction="ecge";//ecommerce addon
              break;
             case "a3":
              themeName="Nature/Gene7.023544634959";//hardcode Nature/Generic/Organization for theme
              clientApplicationFunction="olge";//organization seat allocation addon
              break;
             case "a4":
              themeName="Nature/Gene7.023544634959";//hardcode Nature/Generic/Organization for theme
              clientApplicationFunction="oege";//organization event mgmt
              break;
            } 
        } catch (Exception e) {
	 log.severe("do register app function / trial period error"+ e.getMessage());
         FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
          FacesMessage.SEVERITY_ERROR,"Error checking Application usage and trial period "+ e.getMessage(),""));
             return false;
        }


            //continu below, if register theme/function already set. tbd use rate table for flexibikity?? 
            if(themeName ==null || themeName.isEmpty()){
             themeName="Nature/Gene7.313-1243994117";//hardcode Nature/Generic/business
            } 
            //if coming from ItemDetailsBrowse as 1,2,45 etc we need to set clientApplicationFunction value
            //jay how client later is going to select specific sub function ?? 6 vs 7 or within 6 ???
            if(clientApplicationFunction ==null || clientApplicationFunction.isEmpty()){
             switch(from){
              case "1":
               themeName="Nature/Gene7.313-1243994117";//hardcode Nature/Generic/business for theme
               clientApplicationFunction="eege";//Business
               break;
              case "2":
               themeName="Nature/Gene6.354-129272933";//hardcode Nature/Generic/erp for theme
               clientApplicationFunction="efge";//ERP mfg
               break;
              case "3":
               themeName="Nature/Gene6.354-129272933";//hardcode Nature/Generic/Lab for theme
               clientApplicationFunction="elge";//Med Lab
               break;
              case "45":
               themeName="Nature/Gene9.968-629982659";//hardcode Nature/Generic/Organization for theme
               clientApplicationFunction="oage";//organization
               break;
              case "67":
               themeName="Nature/Gene7.023544634959";//hardcode Nature/Generic/Organization for theme
               clientApplicationFunction="scge";//Service Agency
               break;
              case "89":
               themeName="Nature/Gene6.0761136209321";//hardcode Nature/Generic/Organization for theme
               clientApplicationFunction="fsge";//News users forum
               break;
              default:
               clientApplicationFunction="eege";//hardcode
             } 
            } 

       Yxxxuq591xwwqqhxxxxxrate1f yxxxuq591xwwqqhxxxxxrate1f = yxxxuq591xwwqqhxxxxxrate1fList.getRaaspiIncentiveToEntity("PC",clientApplicationFunction.substring(0,2));
       if(yxxxuq591xwwqqhxxxxxrate1f !=null){
        product=yxxxuq591xwwqqhxxxxxrate1f.getB2xxuxxrbv51xxxxxxxxstepname();//  stepname holds item sid, since key can change
        if(product.equals("S") && yxxxuq591xwwqqhxxxxxrate1f.getA0xxukxxbvxxxxxxxxxxusertype().equals("SC")){
         product="281";//
        }
       }


        try {
            // first create the image and text data to be used by the new site,blobdataHome handles both
            //clientApplicationName is unique name within this cloud and can have alias public dns name like mitra.com
            enterprisecompcode=this.getClientApplicationName();
            owner2Code=enterprisecompcode;
            //enterprisecompcode is same as website name, owner2Code now refers to new client as owner2 not where createsite button exists
            if(enterprisecompcode.length() > this.clientFullUrlName.length()){
             FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
              FacesMessage.SEVERITY_ERROR,bundle.getString("prefix")+" "+bundle.getString("part")+" "+enterprisecompcode+" "+bundle.getString("exceeds")+" "+bundle.getString("url")+" "+this.clientFullUrlName ,""));
             FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
              FacesMessage.SEVERITY_ERROR,bundle.getString("copy")+" "+bundle.getString("and")+" "+bundle.getString("paste")+" "+enterprisecompcode+" "+bundle.getString("as")+" "+bundle.getString("url")+" "+bundle.getString("prefix")+" "+bundle.getString("or")+" "+bundle.getString("keyin")+" "+bundle.getString("correct")+" "+bundle.getString("value") ,""));


             return false;
            }
     
            // note owner2Code here has enterprisecompcode not raaspi until end of this method
            // all persist will use new site code not raaspi
            yxxxuq1n1xwwqqqxxxxxblobdataHome.copyDefaultsToUSER(vendor,themeName,owner2Code,this.getClientName(),this.instance.getC1xxuxxxbvxxxxxxxxxxotherid(),this.getClientApplicationFunction());
            if (!bcontinue){
             return false;
            }
        } catch (Exception e) {
	 log.severe("do register app function / trial period error"+ e.getMessage());
         FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
          FacesMessage.SEVERITY_ERROR,"Error setting site defaults "+ e.getMessage(),""));
             return false;
        }
        return false;

   }
   
   /**
    called by this redeem() method as well as r3restclient siteCreate() method 
   */

   String getFunctionGroupForItemSid(int itemSid){
    //Item>miscCode1>6th or 6&7th chrs ie 1a or 2 or 45 
            fpxxfq1a5xwwqqhxxxxxitem=fpxxfq1a5xwwqqhxxxxxitemList.getSidToEntity(itemSid);
            if(fpxxfq1a5xwwqqhxxxxxitem ==null){
               FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                FacesMessage.SEVERITY_ERROR,bundle.getString("Product")+" "+bundle.getString("record")+" "+itemSid+" "+bundle.getString("not")+" "+bundle.getString("found")+", "+bundle.getString("contact")+" "+bundle.getString("support") ,""));
                bcontinue=false;
                return "";
            }
            if(fpxxfq1a5xwwqqhxxxxxitem.getY2xxuxxrbvxxxxxxxxxxmisccode1().length()<5){
               FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                FacesMessage.SEVERITY_ERROR,bundle.getString("Invalid")+" "+bundle.getString("value")+" "+fpxxfq1a5xwwqqhxxxxxitem.getA0xxukixbxxxxxxxxxxxmatcode()+" "+bundle.getString("for")+" "+bundle.getString("product")+" "+fpxxfq1a5xwwqqhxxxxxitem.getY2xxuxxrbvxxxxxxxxxxmisccode1()+" "+bundle.getString("subscriptioncode")+", "+bundle.getString("contact")+" "+bundle.getString("support") ,""));
                bcontinue=false;
                return "";
            }
            String from=fpxxfq1a5xwwqqhxxxxxitem.getY2xxuxxrbvxxxxxxxxxxmisccode1().substring(5);//skip trial prefix
            int period=14;//default 14 days trial period unless misccode1 overrides it
            if(from.length() > 1){// could a1 or a1xxx or 12 ie 2 days or 114 14 days trial or 4520 20 days trial
             // use a2 etc or 45 not 4 to allow using existing direct register via free trial link 
             try{
              if(from.substring(0,1).equals("a")||from.substring(0,1).equals("4")||from.substring(0,1).equals("6")||from.substring(0,1).equals("8")){
               if(from.length() > 2){
                period=Integer.parseInt(from.substring(2)); 
               }
               from=from.substring(0,2);
              }else{
               if(from.length() > 1){
                period=Integer.parseInt(from.substring(1)); 
               }
               from=from.substring(0,1);
              }
             } catch (Exception e) {
               FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                FacesMessage.SEVERITY_ERROR,bundle.getString("Invalid")+" "+bundle.getString("value")+" "+fpxxfq1a5xwwqqhxxxxxitem.getA0xxukixbxxxxxxxxxxxmatcode()+" "+bundle.getString("for")+" "+bundle.getString("product")+" "+fpxxfq1a5xwwqqhxxxxxitem.getY2xxuxxrbvxxxxxxxxxxmisccode1()+" "+bundle.getString("subscriptioncode")+", "+ e.getMessage()+" ,"+bundle.getString("contact")+" "+bundle.getString("support") ,""));

                bcontinue=false;
                return "";
             }
           }
           return from;

   } 
    @Transactional

   public Yxxxuh566xwwqqwxxxxxuser createUserInstance(String owner2Client,String userId,String role, String level,Yxxxuh566xwwqqwxxxxxuser user,String password,boolean pwEncrypt,String emailAddress){
        //we came here after checking no customer exists for this coupon, so we should create a new user for this 
        //customer,coupon combination. There will be multiple users, customers for the same email but for unique coupon
        //This allows specific link user will be able to link and get details or createSite. Tbd show all coupons for same email 
        //But user id needs to be unique, so if it already exists append next seq ie xyz@h.com, xyz@h.com2, etc
        String savedPassword="";
        this.clearInstance();
        this.getInstance();
        if(password !=null && !password.isEmpty()){
         int score=getStength(password);
         if(score ==0){
          FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
           FacesMessage.SEVERITY_ERROR,bundle.getString("Password")+" "+bundle.getString("minimum")+" "+bundle.getString("length")+" "+bundle.getString("four")+", "+bundle.getString("recommend")+" "+bundle.getString("eight")+" "+bundle.getString("or")+" "+bundle.getString("more"),""));
           bcontinue=false;
           return null;                
         }
        }
        customIdentity.setHoldArray(1,password);// used in siteCreate in r3restclient

        try {
           //if coming from facebook or appSumo etc ie parameter activation false and password dummyfbPW or whatever set. 
           if (user !=null){
            this.setInstance(user);//in case of social login the instance with values exists
            //currentPW is a non null field
	    this.instance.setC4xxuxupivxxxxxxxxxxcurrpw(password);
           }else{
            this.instance.setZ1xxzzfxhhxxxxxxxxxxstatusfl(mopen);
            if(password == null || password.isEmpty()){
             this.instance.setC7xxfxxxivxxxxxxxxxxtemporarypassword(true);
            }else{
             this.instance.setC7xxfxxxivxxxxxxxxxxtemporarypassword(false);//user chosen password
            }
            this.setClientEmail(emailAddress);
            if (this.instance.getA0xxukuxbvxxxxxxxxxxid() == null || this.instance.getA0xxukuxbvxxxxxxxxxxid().length() == 0){
             this.instance.setA0xxukuxbvxxxxxxxxxxid(userId);//gets passed from calling method, can be email or Admin or fbId
            }
            //jay check logic in case pw exists ie user supplied
            if(pwEncrypt){
             if(password == null || password.isEmpty()){
              savedPassword=PasswordSupport.tempPassword();
              this.instance.setC6xxuxuoivxxxxxxxxxxoldpw(savedPassword);
              calendare.add(Calendar.HOUR, 48);
              this.instance.setC5xxcxxxbvxxxxxxxxxxexpiry(calendare.getTime() );
             }else{
              savedPassword=password;
              this.instance.setC6xxuxuoivxxxxxxxxxxoldpw("userChosen");//add logic to check pw length quality
              this.instance.setC5xxcxxxbvxxxxxxxxxxexpiry(null);
             }
	     this.instance.setC4xxuxupivxxxxxxxxxxcurrpw(PasswordSupport.hash(savedPassword));
	     this.instance.setC8xxuxxxbvxxxxxxxxxxpasswordhash(PasswordSupport.getHashNoon() );
	     this.instance.setZ2xxcztxlxxxxxxxxxxxstatusfldt(calendar.getTime());

             if(this.instance.getA0xxukuxbvxxxxxxxxxxid().equals("admin")){
              resetPassword=savedPassword;
             }
             if(this.instance.getA0xxukuxbvxxxxxxxxxxid().equals("manager")){
               //resetPasword holds admin exposed pw and manager instance has its oldpw as exposed
               this.instance.setY7xxuxznbvxxxxxxxxxxnotes(resetPassword+"  and  "+this.instance.getC6xxuxuoivxxxxxxxxxxoldpw());
             }

            }//needs pw encrypt
           }//user instance not populated
           //fb or app signUp  social media same rights as email signup activation

           this.instance.setZzxxu2oxxhxxxxxxxxxxowner2(owner2Client);//sets raaspi or a client site user

           if(password == null || password.isEmpty()){//google of fb for now
            if(this.chekIfDemo()){
		  this.instance.setC2xxuxuaiv38xxxxxxxxalevel("U");
		  this.instance.setC3xxuxubiv39xxxxxxxxblevel("H");
		  this.instance.setY1xxuxxxivxxxxxxxxxxrestrict1("D");
            }else{
                 if(signupas.equals("C")){//default is C and level V unless reseller sign up then V(en) and level P
 		  this.instance.setC2xxuxuaiv38xxxxxxxxalevel("V");
                 }else{
 		  this.instance.setC2xxuxuaiv38xxxxxxxxalevel("P");
                 }
                 //  allow visitor to change own user record, user entity has VH 
                 // manager can lower a vistor from H to Q if needed
                 if(productCode.equals("f") ){
		   this.instance.setC3xxuxubiv39xxxxxxxxblevel("H");
                 }else{
		   this.instance.setC3xxuxubiv39xxxxxxxxblevel("H");
                 }
            }
           } 
           if(!role.isEmpty()){
	    this.instance.setC2xxuxuaiv38xxxxxxxxalevel(role);
           }
           if(!level.isEmpty()){
	    this.instance.setC3xxuxubiv39xxxxxxxxblevel(level);
           }
            boolean smtpEnabled = true;//can check client record 01
            String savedActivationKey=null;

           if (smtpEnabled) {
                clientName=owner2Client;
                this.instance.setZ1xxzzfxhhxxxxxxxxxxstatusfl(mpartial);
                this.instance.setC1xxuxxxbvxxxxxxxxxxotherid(emailAddress);
                //hardCode activation key into admin user record
                //but any click on the activation link will clear it since takeAction knows it is in admin record
                if(this.instance.getA0xxukuxbvxxxxxxxxxxid().equals("admin")){
                 //in future look into whether to bypass activation
                 savedActivationKey=this.getMD5Hash(userId + clientName + emailAddress + System.currentTimeMillis());
                 this.instance.setC9xxuxxxbvxxxxxxxxxxactivationkey(savedActivationKey);
                }
             } else {
                // TODO: Fix for production ... No way to activate using email
                // if SMTP is not enabled ...
                System.out.println("WARNING!!! SMTP eMailer not enabled ... partially activating user without email activation.");
                this.instance.setZ1xxzzfxhhxxxxxxxxxxstatusfl(mpartial);
           }

            /////////no persist here, only instance create. caller will persist/////////
             
        }catch(Exception e){
         FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
          FacesMessage.SEVERITY_ERROR,bundle.getString("Error")+" "+bundle.getString("processing") +" "+userId+" "+e.getMessage(),""));
          bcontinue=false;
           return null; 
        }
                                            
    return this.instance;
   }


    /**
    * The following method creates new site record 01 and 05 
    * This method has some init logic to setup variables like ApplicationName,product etc
    * Client record's intaddr, serialnumbers are based on these variables
    * We know the site name/owner2/applicationName, they are the same value.
    * Follow existing logic used in r3restClient DoQuickRegister before it calls userHome mothod  
    * called by r3restclient siteCreate
    * @param args two. new site name,eMail 
    * @return boolean true or false, if error
    * @exception None 
    * @see "createclientregister() which will get depecated by this"
    * 
    */
    @Transactional
   public boolean createClientRecord01(String owner2Code,String eMail,String couponName){
      // 
   /* see whether r3restclient does this part
      String clientUrl=null;
      if(serverName.contains("raaspi.com")){
       clientUrl=owner2CodeClient+".raaspi.com"  ;
      }else{
       clientUrl=owner2CodeClient+".lraaspi.com"  ;
      }
      this.setClientFullUrlName(clientUrl);//D6xxuxxrbvxxxxxxxxxxintaddr
      Yxxxuq591xwwqqhxxxxxrate1f yxxxuq591xwwqqhxxxxxrate1f = yxxxuq591xwwqqhxxxxxrate1fList.getRaaspiIncentiveToEntity("PC",clientApplicationFunction.substring(0,2));
      if(yxxxuq591xwwqqhxxxxxrate1f !=null){
        product=yxxxuq591xwwqqhxxxxxrate1f.getB2xxuxxrbv51xxxxxxxxstepname();//  stepname holds item sid, since key can change
        if(product.equals("S") && yxxxuq591xwwqqhxxxxxrate1f.getA0xxukxxbvxxxxxxxxxxusertype().equals("SC")){
         product="281";//
        }
      }
    */
      //get from value from customer>coupon>rate>item>miscCode ie use getFunctionGroupForItemSid(int itemSid) gives 1a etc
      //now in r3RestClient this.setSiteUsingFromValue(from);// from will be eest etc, this method also sets product trial period etc
      this.clientApplicationSubFunction=this.clientApplicationSubFunction.trim();
      
      yxxxch522xhhxxhxxxxxclientHome.clearInstance();
      yxxxch522xhhxxhxxxxxclient=yxxxch522xhhxxhxxxxxclientHome.getInstance();
      yxxxch522xhhxxhxxxxxclient.setA0xxukxxbvxxxxxxxxxxclientversion("01");
      yxxxch522xhhxxhxxxxxclient.setB3xxuxzsbvxxxxxxxxxxdescript("Home page for "+owner2Code+" site, has shopping cart, products and login for back office");
      yxxxch522xhhxxhxxxxxclient.setB2xxuzcxbvxxxxxxxxxxenterprisecompanyna(this.getClientName());
      yxxxch522xhhxxhxxxxxclient.setD4xxhxxrbv24xxxxxxxximailaddr(eMail);
      yxxxch522xhhxxhxxxxxclient.setD8xxuzxdbvxxxxxxxxxxenterprisecompcode(enterprisecompcode);
      yxxxch522xhhxxhxxxxxclient.setG2xxuxpclvxxxxxxxxxxprodcode(clientApplicationFunction+clientApplicationSubFunction);
      // put matcode as serianum so that we can associate the SI-DG product for subscription plan
      //many functions will relate to one product. needs hardcoding now may be rate1f table can be used later
      yxxxch522xhhxxhxxxxxclient.setB1xxuisxlvxxxxxxxxxxserialnum(product);
      if(product.length()>15){
       yxxxch522xhhxxhxxxxxclient.setG1xxuxxxbvxxxxxxxxxxproddesc(product.substring(0,15));//tbd jay get description from Item
      }else{
       yxxxch522xhhxxhxxxxxclient.setG1xxuxxxbvxxxxxxxxxxproddesc(product);
      }
      yxxxch522xhhxxhxxxxxclient.setD9xxuxxxbvxxxxxxxxxxenterprisecompsize(clientApplicationSize);
      yxxxch522xhhxxhxxxxxclient.setZzxxu2oxxhxxxxxxxxxxowner2(owner2Code);
      yxxxch522xhhxxhxxxxxclient.setD6xxuxxrbvxxxxxxxxxxintaddr(clientFullUrlName);
      // can come here prepaid and pre subscribed via coupon redeem ex appsumo or raaspi's own promotion
      // this is different than existing coupon for trial where u get extended trial, not subscribed.
      // check if email used matches with one as raaspi customer and its coupon code (rmailaddr) matches with
      // one in raaspi rate1f, as used.
      if (matchCustomerNCouponByEmail(yxxxch522xhhxxhxxxxxclient.getD4xxhxxrbv24xxxxxxxximailaddr(),couponName)){
       yxxxch522xhhxxhxxxxxclient.setF6xxuxxxlvxxxxxxxxxxlicensetype("TrialPending");//for now assume rate value is 365
       //add logic to check rate table and use value instead of 365
       trialPeriod =365+14;
      }else{
       yxxxch522xhhxxhxxxxxclient.setF6xxuxxxlvxxxxxxxxxxlicensetype("TrialPending");
      }  
      yxxxch522xhhxxhxxxxxclient.setJ4xxuxxxbvxxxxxxxxxxscrcolor("r3WhiteModern");
      if(userIP.length() > 10){
       yxxxch522xhhxxhxxxxxclient.setW2xxuxxxbvxxxxxxxxxxintpassw(userIP.substring(0,10));//already set in init
      }else{
       yxxxch522xhhxxhxxxxxclient.setW2xxuxxxbvxxxxxxxxxxintpassw(userIP);//already set in init
      } 
      // use locale info 
      Locale locale=FacesContext.getCurrentInstance().getExternalContext().getRequestLocale();
      // paypal/square etc should use item currency since customer will pay in local
      //tbd give option to pay item currency or in merchant currency
      // try ip to country
              String ip="";//
              if(yxxxch522xhhxxhxxxxxclientList.getSuggestList("01").size() > 0){
               ip=yxxxch522xhhxxhxxxxxclientList.getSuggestList("01").get(0).getW2xxuxxxbvxxxxxxxxxxintpassw();
              }
      String country="";
      if(!ip.isEmpty()){
       country=r3RestClient.ip2C(ip);
       if(!(country.equals("e") || country.equals("x")) && country.length()>2){
        country=country.substring(0,2);
       } 
      }
      Currency c  = Currency.getInstance(locale);
      if(c.getCurrencyCode() !=null){
       yxxxch522xhhxxhxxxxxclient.setY8xxuxxxbvxxxxxxxxxxdefaultc(c.getCurrencyCode());//used for item and customer charge
       yxxxch522xhhxxhxxxxxclient.setK1xxuxxxbvxxxxxxxxxxcurrcode(c.getCurrencyCode());//merchant/bank, used for posting
       yxxxch522xhhxxhxxxxxclient.setY2xxuxxxbvxxxxxxxxxxkeyorder(c.getSymbol());//used for item and customer charge
       yxxxch522xhhxxhxxxxxclient.setJ9xxuxxxbvxxxxxxxxxxcurrsymb(c.getSymbol());//merchant/bank      
       yxxxch522xhhxxhxxxxxclient.setP4xxzxxrbvxxxxxxxxxxshibaradj(100);//itemCurrency -> merchant currency 
      }
      yxxxch522xhhxxhxxxxxclient.setY8xxuxxxbvxxxxxxxxxxdefaultc("CAD");
      yxxxch522xhhxxhxxxxxclient.setK1xxuxxxbvxxxxxxxxxxcurrcode("CAD");
      yxxxch522xhhxxhxxxxxclient.setY2xxuxxxbvxxxxxxxxxxkeyorder("C$");
      yxxxch522xhhxxhxxxxxclient.setJ9xxuxxxbvxxxxxxxxxxcurrsymb("C$");
      yxxxch522xhhxxhxxxxxclient.setP4xxzxxrbvxxxxxxxxxxshibaradj(100);//itemCurrency -> merchant currency
      if(country.equals("US")){
        yxxxch522xhhxxhxxxxxclient.setY8xxuxxxbvxxxxxxxxxxdefaultc("USD");
        yxxxch522xhhxxhxxxxxclient.setK1xxuxxxbvxxxxxxxxxxcurrcode("USD");
        yxxxch522xhhxxhxxxxxclient.setY2xxuxxxbvxxxxxxxxxxkeyorder("$");
        yxxxch522xhhxxhxxxxxclient.setJ9xxuxxxbvxxxxxxxxxxcurrsymb("$");
        yxxxch522xhhxxhxxxxxclient.setP4xxzxxrbvxxxxxxxxxxshibaradj(100);//itemCurrency -> merchant currency
      }
      if(country.equals("UK")){
        yxxxch522xhhxxhxxxxxclient.setY8xxuxxxbvxxxxxxxxxxdefaultc("GBP");
        yxxxch522xhhxxhxxxxxclient.setK1xxuxxxbvxxxxxxxxxxcurrcode("GBP");
        yxxxch522xhhxxhxxxxxclient.setY2xxuxxxbvxxxxxxxxxxkeyorder("£");
        yxxxch522xhhxxhxxxxxclient.setJ9xxuxxxbvxxxxxxxxxxcurrsymb("£");
        yxxxch522xhhxxhxxxxxclient.setP4xxzxxrbvxxxxxxxxxxshibaradj(100);//itemCurrency -> merchant currency
      }

      yxxxch522xhhxxhxxxxxclient.setF7xxcxxxlvxxxxxxxxxxlicensestart(Calendar.getInstance().getTime());
      calendar.setTime(yxxxch522xhhxxhxxxxxclient.getF7xxcxxxlvxxxxxxxxxxlicensestart());
      // trial configurable via item misccode1. can be trial1(productn) or trial1a(productn addon)  default 2w (weeks) duration
      // ie trial121(3 weeks) or trial130(month) or trial2a90(3 months) etc 
      calendar.add(Calendar.DATE, trialPeriod);
      yxxxch522xhhxxhxxxxxclient.setF8xxcxxxlvxxxxxxxxxxlicenseend(calendar.getTime());
      yxxxch522xhhxxhxxxxxclient.setV6xxuxz1bvxxxxxxxxxxtax1code("Remitance dummy code");
      yxxxch522xhhxxhxxxxxclientHome.persist(owner2Code);//client record 01 created

      this.instance.setYxxxch522xhhxxhxxxxxclient(yxxxch522xhhxxhxxxxxclient);
      // create record 05 to hold sendgrid or default mail relay api id/secret to avoid hardcoding in source code
      yxxxch522xhhxxhxxxxxclientHome.clearInstance();
      yxxxch522xhhxxhxxxxxclient=yxxxch522xhhxxhxxxxxclientHome.getInstance();
      yxxxch522xhhxxhxxxxxclient.setA0xxukxxbvxxxxxxxxxxclientversion("05");
      yxxxch522xhhxxhxxxxxclient.setDbxxuzxdssxxxxxxxxxxapiclientsecret("SG.BxxxxxxxxxxyyyyyiBg");
      yxxxch522xhhxxhxxxxxclient.setZ8xxuxxxbvxxxxxxxxxxsmtpserver("smtp.sendgrid.net");
      yxxxch522xhhxxhxxxxxclient.setZ9xxuxxxbvxxxxxxxxxxsmtpuser("apikey");
      yxxxch522xhhxxhxxxxxclient.setD5xxuxxrbvxxxxxxxxxxrmailaddr(customIdentity.getMasterSiteEmail());
      yxxxch522xhhxxhxxxxxclient.setDaxxuzxdssxxxxxxxxxxapiclientid("VxxxxxxA");
      yxxxch522xhhxxhxxxxxclient.setL6xxzxxrbvxxxxxxxxxxaltselen(587);
      yxxxch522xhhxxhxxxxxclientHome.persist(owner2Code);

      // update coupon as closed ie being used
      yxxxuq591xwwqqhxxxxxrate1fHome.clearInstance();
      yxxxuq591xwwqqhxxxxxrate1f=yxxxuq591xwwqqhxxxxxrate1fList.getRaaspiIncentiveToEntity("SC",couponName);
      if(yxxxuq591xwwqqhxxxxxrate1f ==null){//
       FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
        FacesMessage.SEVERITY_INFO,bundle.getString("Cannot")+ " "+bundle.getString("find")+ " "+bundle.getString("coupon")+ " "+couponName+" "+bundle.getString("record"),""));
       return false;  
      }
      yxxxuq591xwwqqhxxxxxrate1f.setZ1xxzzfxhhxxxxxxxxxxstatusfl(mclosed);   
      yxxxuq591xwwqqhxxxxxrate1f.setZzxxu2oxxhxxxxxxxxxxowner2(masterSiteCode);   // coupon belongs to raaspi

      yxxxuq591xwwqqhxxxxxrate1fHome.setInstance(yxxxuq591xwwqqhxxxxxrate1f);
      //yxxxuq591xwwqqhxxxxxrate1fHome.superdotupdate();
      yxxxuq591xwwqqhxxxxxrate1fHome.superUpdate();// updates statusfl date
      return true;

   }

    @Transactional
   public boolean createClientVisitNSiteMap(String owner2Code){
       //add visitstat if missing
       if (fxxxuq1bhxwwqqhxxxxxusagebyperiods == null) {
	    fxxxuq1bhxwwqqhxxxxxusagebyperiods=fxxxuq1bhxwwqqhxxxxxusagebyperiodsHome.getInstance();
       }
       try   {
        fxxxuq1bhxwwqqhxxxxxusagebyperiods.setA0xxukupbvxxxxxxxxxxusagetrackerid("visitstats3r");
        fxxxuq1bhxwwqqhxxxxxusagebyperiods.setD5xxzc0rbxxxxxxxxxxxperiod0formulae("userIP");
        fxxxuq1bhxwwqqhxxxxxusagebyperiods.setZzxxu2oxxhxxxxxxxxxxowner2(owner2Code);
        fxxxuq1bhxwwqqhxxxxxusagebyperiodsHome.persist(owner2Code);
        fxxxuq1bhxwwqqhxxxxxusagebyperiodsHome.clearInstance();

       } catch (Exception e) {
        log.severe("Error persisting usagebyperiods"+ e);
        FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
         FacesMessage.SEVERITY_INFO,bundle.getString("usagebyperiods")+ " "+bundle.getString("visitstat")+ " "+bundle.getString("setup")+ " "+bundle.getString("initialize")+ " "+bundle.getString("failed")+" "+e.getMessage(),""));
         //bcontinue=false;
         return false;
       }
     //add sitemap.xml content 
     if (yxxxuq1m1xwwqqqxxxxxclobdata == null) {
	    yxxxuq1m1xwwqqqxxxxxclobdata=yxxxuq1m1xwwqqqxxxxxclobdataHome.getInstance();
     }
     try   {
      yxxxuq1m1xwwqqqxxxxxclobdata.setA0xxukcdlvxxxxxxxxxxfromtable("clobdata"); 
      yxxxuq1m1xwwqqqxxxxxclobdata.setA1xxuxxxbv49xxxxxxxxfromkey("3R-siteMap");
      yxxxuq1m1xwwqqqxxxxxclobdata.setA2xxuxxxbv50xxxxxxxxqualifier("TXT");
      String min="<?xml version=\"1.0\" encoding=\"UTF-8\"?><urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.sitemaps.org/schemas/sitemap/0.9 http://www.sitemaps.org/schemas/sitemap/0.9/sitemap.xsd\"><url><loc>https://www."+owner2Code+customIdentity.getTld()+"/</loc></url>";

      yxxxuq1m1xwwqqqxxxxxclobdata.setB1xxuzaxbvxxxxxxxxxxdata(min);
      yxxxuq1m1xwwqqqxxxxxclobdata.setA3xxexnsbvxxxxxxxxxxsequence(0);

      yxxxuq1m1xwwqqqxxxxxclobdata.setZzxxu2oxxhxxxxxxxxxxowner2(owner2Code);
      yxxxuq1m1xwwqqqxxxxxclobdataHome.persist(owner2Code);
      yxxxuq1m1xwwqqqxxxxxclobdataHome.clearInstance();

     } catch (Exception e) {
      log.severe("Error persisting clobdata"+ e);
      FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
       FacesMessage.SEVERITY_INFO,bundle.getString("clobdata")+ " "+bundle.getString("sitemap.xml")+ " "+bundle.getString("setup")+ " "+bundle.getString("initialize")+ " "+bundle.getString("failed")+" "+e.getMessage(),""));
       //bcontinue=false;
       return false;
     }
     return true;

   }


   public void createClientRegister() {
    //jay hard code for now add logic to take owner2 and time and email and hash it to make serial number

    if (subKey.equals("admin")){
      log.severe("in createClientRegister for  "+ subKey+" Persists for Client records 05 and 01 and employee(and clobdata)  ");
        // check if client record key '01' exists for owner2, then override the ist one (partially done?)
       if (yxxxch522xhhxxhxxxxxclientList.getOwner2ClientList(owner2Code).size() > 0) {
         yxxxch522xhhxxhxxxxxclient=yxxxch522xhhxxhxxxxxclientList.getOwner2ClientList(owner2Code).get(0);
      }else{
        yxxxch522xhhxxhxxxxxclientHome.clearInstance();
        yxxxch522xhhxxhxxxxxclient=yxxxch522xhhxxhxxxxxclientHome.getInstance();
     }
      yxxxch522xhhxxhxxxxxclient.setA0xxukxxbvxxxxxxxxxxclientversion("01");
      yxxxch522xhhxxhxxxxxclient.setB3xxuxzsbvxxxxxxxxxxdescript("Home page for "+owner2Code+" site, has shopping cart, products and login for back office");
      yxxxch522xhhxxhxxxxxclient.setB2xxuzcxbvxxxxxxxxxxenterprisecompanyna(this.getClientName());
      yxxxch522xhhxxhxxxxxclient.setD4xxhxxrbv24xxxxxxxximailaddr(this.instance.getC1xxuxxxbvxxxxxxxxxxotherid());
      yxxxch522xhhxxhxxxxxclient.setD8xxuzxdbvxxxxxxxxxxenterprisecompcode(enterprisecompcode);
      yxxxch522xhhxxhxxxxxclient.setG2xxuxpclvxxxxxxxxxxprodcode(clientApplicationFunction+clientApplicationSubFunction);
      // put matcode as serianum so that we can associate the SI-DG product for subscription plan
      //many functions will relate to one product. needs hardcoding now may be rate1f table can be used later
      yxxxch522xhhxxhxxxxxclient.setB1xxuisxlvxxxxxxxxxxserialnum(product);
      if(product.length()>15){
       yxxxch522xhhxxhxxxxxclient.setG1xxuxxxbvxxxxxxxxxxproddesc(product.substring(0,15));//tbd jay get description from Item
      }else{
       yxxxch522xhhxxhxxxxxclient.setG1xxuxxxbvxxxxxxxxxxproddesc(product);
      }
      yxxxch522xhhxxhxxxxxclient.setD9xxuxxxbvxxxxxxxxxxenterprisecompsize(clientApplicationSize);
      yxxxch522xhhxxhxxxxxclient.setZzxxu2oxxhxxxxxxxxxxowner2(owner2Code);
      yxxxch522xhhxxhxxxxxclient.setD6xxuxxrbvxxxxxxxxxxintaddr(clientFullUrlName);
      // can come here prepaid and pre subscribed via coupon redeem ex appsumo or raaspi's own promotion
      // this is different than existing coupon for trial where u get extended trial, not subscribed.
      // check if email used matches with one as raaspi customer and its coupon code (misccode??) matches with
      // one in raaspi rate1f, as used.
      //if (matchCustomerNCouponByEmail(yxxxch522xhhxxhxxxxxclient.getD4xxhxxrbv24xxxxxxxximailaddr(),couponName)){
       //yxxxch522xhhxxhxxxxxclient.setF6xxuxxxlvxxxxxxxxxxlicensetype("Yearly");
      //}else{
       yxxxch522xhhxxhxxxxxclient.setF6xxuxxxlvxxxxxxxxxxlicensetype("TrialPending");
      //}  
      yxxxch522xhhxxhxxxxxclient.setJ4xxuxxxbvxxxxxxxxxxscrcolor("r3WhiteModern");
      if(userIP.length() > 10){
       yxxxch522xhhxxhxxxxxclient.setW2xxuxxxbvxxxxxxxxxxintpassw(userIP.substring(0,10));//already set in init
      }else{
       yxxxch522xhhxxhxxxxxclient.setW2xxuxxxbvxxxxxxxxxxintpassw(userIP);//already set in init
      } 
      // use locale info 
      Locale locale=FacesContext.getCurrentInstance().getExternalContext().getRequestLocale();
      // paypal/square etc should use item currency since customer will pay in local
      //tbd give option to pay item currency or in merchant currency
      // try ip to country
              String ip="";//
              if(yxxxch522xhhxxhxxxxxclientList.getSuggestList("01").size() > 0){
               ip=yxxxch522xhhxxhxxxxxclientList.getSuggestList("01").get(0).getW2xxuxxxbvxxxxxxxxxxintpassw();
              }
      String country="";
      if(!ip.isEmpty()){
       country=r3RestClient.ip2C(ip);
       if(!(country.equals("e") || country.equals("x")) && country.length()>2){
        country=country.substring(0,2);
       } 
      }
      Currency c  = Currency.getInstance(locale);
      if(c.getCurrencyCode() !=null){
       yxxxch522xhhxxhxxxxxclient.setY8xxuxxxbvxxxxxxxxxxdefaultc(c.getCurrencyCode());//used for item and customer charge
       yxxxch522xhhxxhxxxxxclient.setK1xxuxxxbvxxxxxxxxxxcurrcode(c.getCurrencyCode());//merchant/bank, used for posting
       yxxxch522xhhxxhxxxxxclient.setY2xxuxxxbvxxxxxxxxxxkeyorder(c.getSymbol());//used for item and customer charge
       yxxxch522xhhxxhxxxxxclient.setJ9xxuxxxbvxxxxxxxxxxcurrsymb(c.getSymbol());//merchant/bank 
       yxxxch522xhhxxhxxxxxclient.setP4xxzxxrbvxxxxxxxxxxshibaradj(100);//itemCurrency -> merchant currency
      }
      yxxxch522xhhxxhxxxxxclient.setY8xxuxxxbvxxxxxxxxxxdefaultc("CAD");
      yxxxch522xhhxxhxxxxxclient.setK1xxuxxxbvxxxxxxxxxxcurrcode("CAD");
      yxxxch522xhhxxhxxxxxclient.setY2xxuxxxbvxxxxxxxxxxkeyorder("C$");
      yxxxch522xhhxxhxxxxxclient.setJ9xxuxxxbvxxxxxxxxxxcurrsymb("C$");
      yxxxch522xhhxxhxxxxxclient.setP4xxzxxrbvxxxxxxxxxxshibaradj(100);//itemCurrency -> merchant currency
      if(country.equals("US")){
        yxxxch522xhhxxhxxxxxclient.setY8xxuxxxbvxxxxxxxxxxdefaultc("USD");
        yxxxch522xhhxxhxxxxxclient.setK1xxuxxxbvxxxxxxxxxxcurrcode("USD");
        yxxxch522xhhxxhxxxxxclient.setY2xxuxxxbvxxxxxxxxxxkeyorder("$");
        yxxxch522xhhxxhxxxxxclient.setJ9xxuxxxbvxxxxxxxxxxcurrsymb("$");
        yxxxch522xhhxxhxxxxxclient.setP4xxzxxrbvxxxxxxxxxxshibaradj(100);//itemCurrency -> merchant currency
      }
      if(country.equals("UK")){
        yxxxch522xhhxxhxxxxxclient.setY8xxuxxxbvxxxxxxxxxxdefaultc("GBP");
        yxxxch522xhhxxhxxxxxclient.setK1xxuxxxbvxxxxxxxxxxcurrcode("GBP");
        yxxxch522xhhxxhxxxxxclient.setY2xxuxxxbvxxxxxxxxxxkeyorder("£");
        yxxxch522xhhxxhxxxxxclient.setJ9xxuxxxbvxxxxxxxxxxcurrsymb("£");
        yxxxch522xhhxxhxxxxxclient.setP4xxzxxrbvxxxxxxxxxxshibaradj(100);//itemCurrency -> merchant currency
      }

      yxxxch522xhhxxhxxxxxclient.setF7xxcxxxlvxxxxxxxxxxlicensestart(Calendar.getInstance().getTime());
      calendar.setTime(yxxxch522xhhxxhxxxxxclient.getF7xxcxxxlvxxxxxxxxxxlicensestart());
      // trial configurable via item misccode1. can be trial1(productn) or trial1a(productn addon)  default 2w (weeks) duration
      // ie trial121(3 weeks) or trial130(month) or trial2a90(3 months) etc 
      calendar.add(Calendar.DATE, trialPeriod);
      yxxxch522xhhxxhxxxxxclient.setF8xxcxxxlvxxxxxxxxxxlicenseend(calendar.getTime());
      yxxxch522xhhxxhxxxxxclientHome.persist(owner2Code);//record 01 created

      this.instance.setYxxxch522xhhxxhxxxxxclient(yxxxch522xhhxxhxxxxxclient);
      // create record 05 to hold sendgrid or default mail relay api id/secret to avoid hardcoding it source code
      yxxxch522xhhxxhxxxxxclientHome.clearInstance();
      yxxxch522xhhxxhxxxxxclient=yxxxch522xhhxxhxxxxxclientHome.getInstance();
      yxxxch522xhhxxhxxxxxclient.setA0xxukxxbvxxxxxxxxxxclientversion("05");
      yxxxch522xhhxxhxxxxxclient.setDbxxuzxdssxxxxxxxxxxapiclientsecret("SG.BxxxxxxxxxxyyyyyiBg");
      yxxxch522xhhxxhxxxxxclient.setZ8xxuxxxbvxxxxxxxxxxsmtpserver("smtp.sendgrid.net");
      yxxxch522xhhxxhxxxxxclient.setZ9xxuxxxbvxxxxxxxxxxsmtpuser("apikey");
      yxxxch522xhhxxhxxxxxclient.setD5xxuxxrbvxxxxxxxxxxrmailaddr(customIdentity.getMasterSiteEmail());
      yxxxch522xhhxxhxxxxxclient.setDaxxuzxdssxxxxxxxxxxapiclientid("VxxxxxxA");
      yxxxch522xhhxxhxxxxxclient.setL6xxzxxrbvxxxxxxxxxxaltselen(587);
      yxxxch522xhhxxhxxxxxclientHome.persist(owner2Code);

    }
    if (subKey.equals("manager")){
      log.severe("in createClientRegister for  "+ subKey+" Persists for  address (and userprofl), customer(and clobdata),usagebyperiods,clobdata and employee(and clobdata)  ");
      //put dummy address 
	if (fxxxuq111xwwqqhxxxxxaddress == null) {
	    fxxxuq111xwwqqhxxxxxaddress=fxxxuq111xwwqqhxxxxxaddressHome.getInstance();
	}
              if(fxxxuq111xwwqqhxxxxxaddress.getB1pxusa1bvxxxxxxxxxxaddrl1() == null){
               fxxxuq111xwwqqhxxxxxaddress.setB1pxusa1bvxxxxxxxxxxaddrl1(this.instance.getA0xxukuxbvxxxxxxxxxxid()+" address");
              }//
              if(fxxxuq111xwwqqhxxxxxaddress.getB3xxh2acbv11xxxxxxxxcity() == null || fxxxuq111xwwqqhxxxxxaddress.getB3xxh2acbv11xxxxxxxxcity().isEmpty() ){
               if(this.instance.getA0xxukuxbvxxxxxxxxxxid().length()>14){      
                fxxxuq111xwwqqhxxxxxaddress.setB3xxh2acbv11xxxxxxxxcity(this.instance.getA0xxukuxbvxxxxxxxxxxid().substring(0,14)+" City");
               }else{
                fxxxuq111xwwqqhxxxxxaddress.setB3xxh2acbv11xxxxxxxxcity(this.instance.getA0xxukuxbvxxxxxxxxxxid()+" City");
               } 
              }
              subKey=fxxxuq111xwwqqhxxxxxaddress.getB1pxusa1bvxxxxxxxxxxaddrl1()+fxxxuq111xwwqqhxxxxxaddress.getB3xxh2acbv11xxxxxxxxcity();
              if (subKey.length() !=0){
               String subKeyh=Integer.toString(subKey.hashCode());
               if (subKey.length() > 9){
                subKey=subKey.substring(0,10)+subKeyh;
               }
               else {
                subKey=subKey+subKeyh;
               }


               fxxxuq111xwwqqhxxxxxaddress.setA0xxukbxbxxxxxxxxxxxaddrescode(subKey);
               fxxxuq111xwwqqhxxxxxaddress.setZzxxu2oxxhxxxxxxxxxxowner2(owner2Code);
               fxxxuq111xwwqqhxxxxxaddressHome.persist();
               bcontinue=true;
              }else{
               FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                FacesMessage.SEVERITY_ERROR,bundle.getString("create")+" "+bundle.getString("address")+" "+subKey+" "+bundle.getString("error"),""));

               bcontinue=false;
              }


	if (jxxxuq201xwwqqhxxxxxcustomer == null) {
	    jxxxuq201xwwqqhxxxxxcustomer=jxxxuq201xwwqqhxxxxxcustomerHome.getInstance();
	}
        subKey=this.instance.getA0xxukuxbvxxxxxxxxxxid();
        if (subKey.length() !=0){
               String subKeyh=Integer.toString(subKey.hashCode());
               if (subKey.length() > 9){
                subKey=subKey.substring(0,10)+subKeyh;
               }
               else {
                subKey=subKey+subKeyh;
               }
       }
       jxxxuq201xwwqqhxxxxxcustomer.setA0xxukxxbvxxxxxxxxxxcustomer(subKey);
       jxxxuq201xwwqqhxxxxxcustomer.setC1xxuslnbvixxxxxxxxxlastname("manager");
       jxxxuq201xwwqqhxxxxxcustomer.setQ4xxhxxxbv24xxxxxxxximailaddr(this.getClientEmail());
       if (bcontinue){
        jxxxuq201xwwqqhxxxxxcustomer.setFxxxuq111xwwqqhxxxxxaddressByMailtocode(fxxxuq111xwwqqhxxxxxaddress);
       }
       jxxxuq201xwwqqhxxxxxcustomer.setZzxxu2oxxhxxxxxxxxxxowner2(owner2Code);
       jxxxuq201xwwqqhxxxxxcustomerHome.persist(owner2Code);
       this.instance.setJxxxuq201xwwqqhxxxxxcustomer(jxxxuq201xwwqqhxxxxxcustomer);
       bcontinue=true;
       //add visitstat if missing
       if (fxxxuq1bhxwwqqhxxxxxusagebyperiods == null) {
	    fxxxuq1bhxwwqqhxxxxxusagebyperiods=fxxxuq1bhxwwqqhxxxxxusagebyperiodsHome.getInstance();
       }
       try   {
        fxxxuq1bhxwwqqhxxxxxusagebyperiods.setA0xxukupbvxxxxxxxxxxusagetrackerid("visitstats3r");
        fxxxuq1bhxwwqqhxxxxxusagebyperiods.setD5xxzc0rbxxxxxxxxxxxperiod0formulae("userIP");
        fxxxuq1bhxwwqqhxxxxxusagebyperiods.setZzxxu2oxxhxxxxxxxxxxowner2(owner2Code);
        fxxxuq1bhxwwqqhxxxxxusagebyperiodsHome.persist(owner2Code);
        fxxxuq1bhxwwqqhxxxxxusagebyperiodsHome.clearInstance();

       } catch (Exception e) {
        log.severe("Error persisting usagebyperiods"+ e);
        FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
         FacesMessage.SEVERITY_INFO,bundle.getString("usagebyperiods")+ " "+bundle.getString("visitstat")+ " "+bundle.getString("setup")+ " "+bundle.getString("initialize")+ " "+bundle.getString("failed")+" "+e.getMessage(),""));
         //bcontinue=false;
         return;
       }
     //add sitemap.xml content 
     if (yxxxuq1m1xwwqqqxxxxxclobdata == null) {
	    yxxxuq1m1xwwqqqxxxxxclobdata=yxxxuq1m1xwwqqqxxxxxclobdataHome.getInstance();
     }
     try   {
      yxxxuq1m1xwwqqqxxxxxclobdata.setA0xxukcdlvxxxxxxxxxxfromtable("clobdata"); 
      yxxxuq1m1xwwqqqxxxxxclobdata.setA1xxuxxxbv49xxxxxxxxfromkey("3R-siteMap");
      yxxxuq1m1xwwqqqxxxxxclobdata.setA2xxuxxxbv50xxxxxxxxqualifier("TXT");
      String min="<?xml version=\"1.0\" encoding=\"UTF-8\"?><urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.sitemaps.org/schemas/sitemap/0.9 http://www.sitemaps.org/schemas/sitemap/0.9/sitemap.xsd\"><url><loc>https://www."+owner2Code+customIdentity.getTld()+"/</loc></url>";

      yxxxuq1m1xwwqqqxxxxxclobdata.setB1xxuzaxbvxxxxxxxxxxdata(min);
      yxxxuq1m1xwwqqqxxxxxclobdata.setA3xxexnsbvxxxxxxxxxxsequence(0);

      yxxxuq1m1xwwqqqxxxxxclobdata.setZzxxu2oxxhxxxxxxxxxxowner2(owner2Code);
      yxxxuq1m1xwwqqqxxxxxclobdataHome.persist(owner2Code);
      yxxxuq1m1xwwqqqxxxxxclobdataHome.clearInstance();

     } catch (Exception e) {
      log.severe("Error persisting clobdata"+ e);
      FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
       FacesMessage.SEVERITY_INFO,bundle.getString("clobdata")+ " "+bundle.getString("sitemap.xml")+ " "+bundle.getString("setup")+ " "+bundle.getString("initialize")+ " "+bundle.getString("failed")+" "+e.getMessage(),""));
       //bcontinue=false;
       return;
     }
    } 
    // common for admin and manager ie setup employee record
    bcontinue=true;
      log.severe("starting  persisting employee "+ this.instance.getA0xxukuxbvxxxxxxxxxxid());
    if (jxxxbh400xwwqqhxxxxxemployee == null) {
     jxxxbh400xwwqqhxxxxxemployeeHome.clearInstance();//avoid null id assertion error?
     jxxxbh400xwwqqhxxxxxemployee=jxxxbh400xwwqqhxxxxxemployeeHome.getInstance();
    }else{
      log.severe("employee instance not null "+ jxxxbh400xwwqqhxxxxxemployee.getA0xxuobxbxxxxxxxxxxxsid()+" "+jxxxbh400xwwqqhxxxxxemployee.getA0xxuktxbvxxxxxxxxxxemployee());
      jxxxbh400xwwqqhxxxxxemployeeHome.clearInstance();//avoid null id assertion error?
      jxxxbh400xwwqqhxxxxxemployee=jxxxbh400xwwqqhxxxxxemployeeHome.getInstance();
    }
    subKey=this.instance.getA0xxukuxbvxxxxxxxxxxid();
    if (subKey.length() !=0){
               String subKeyh=Integer.toString(subKey.hashCode());
               if (subKey.length() > 9){
                subKey=subKey.substring(0,10)+subKeyh;
               }
               else {
                subKey=subKey+subKeyh;
               }
     }
   try   {
    jxxxbh400xwwqqhxxxxxemployee.setA0xxuktxbvxxxxxxxxxxemployee(subKey);
    if (this.instance.getA0xxukuxbvxxxxxxxxxxid().equals("manager")){
     jxxxbh400xwwqqhxxxxxemployee.setB3xxuslnbvixxxxxxxxxlastname("manager");
    }
    if (this.instance.getA0xxukuxbvxxxxxxxxxxid().equals("admin")){
     jxxxbh400xwwqqhxxxxxemployee.setB3xxuslnbvixxxxxxxxxlastname("admin");
    }
    jxxxbh400xwwqqhxxxxxemployee.setN4xxhxxrbv24xxxxxxxximailaddr(this.getClientEmail());
    jxxxbh400xwwqqhxxxxxemployee.setZzxxu2oxxhxxxxxxxxxxowner2(owner2Code);
    jxxxbh400xwwqqhxxxxxemployeeHome.persist(owner2Code);
   } catch (Exception e) {
      log.severe("Error persisting employee"+ e);
      FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
       FacesMessage.SEVERITY_INFO,bundle.getString("employee")+ " "+this.instance.getA0xxukuxbvxxxxxxxxxxid()+ " "+bundle.getString("setup")+ " "+bundle.getString("initialize")+ " "+bundle.getString("failed")+" "+e.getMessage(),""));
       //bcontinue=false;
       return;
   }
    
    this.instance.setJxxxbh400xwwqqhxxxxxemployee(jxxxbh400xwwqqhxxxxxemployee);
    jxxxbh400xwwqqhxxxxxemployeeHome.clearInstance();
    jxxxbh400xwwqqhxxxxxemployee=null;
    bcontinue=true;
    return;


   }


     //copy default options owner2=owner2 
     public void copyOptionsDefaultsToOwner2(String client) {
     try   {

      int deletedCount =  entityManager.createQuery("DELETE FROM Yrxxch511xhhxxhxxxxxoptions a WHERE a.zzxxu2oxxhxxxxxxxxxxowner2 = :p").setParameter("p", client).executeUpdate();

      if (yrxxch511xhhxxhxxxxxoptions == null) {
       yrxxch511xhhxxhxxxxxoptions=yrxxch511xhhxxhxxxxxoptionsHome.getInstance();
      }
      // 01 account category
      yrxxch511xhhxxhxxxxxoptions.setA0xxukcxbvxxxxxxxxxxrow("01");
      yrxxch511xhhxxhxxxxxoptions.setB1xxuo01bvxxxxxxxxxxoptions01("A");
      yrxxch511xhhxxhxxxxxoptions.setB2xxup01bvxxxxxxxxxxpurpose01("Asset");
      yrxxch511xhhxxhxxxxxoptions.setB3xxuv01bvxxxxxxxxxxvalue01("");
      // 02 account display type
      yrxxch511xhhxxhxxxxxoptions.setB4xxuo02bvxxxxxxxxxxoptions02("H");
      yrxxch511xhhxxhxxxxxoptions.setB5xxup02bvxxxxxxxxxxpurpose02("Header");
      yrxxch511xhhxxhxxxxxoptions.setB6xxuv02bvxxxxxxxxxxvalue02("");
      // not used ?? payable 
      yrxxch511xhhxxhxxxxxoptions.setB7xxuo03bvxxxxxxxxxxoptions03("R");
      yrxxch511xhhxxhxxxxxoptions.setB8xxup03bvxxxxxxxxxxpurpose03("Receivable");
      yrxxch511xhhxxhxxxxxoptions.setB9xxuv03bvxxxxxxxxxxvalue03("");

      yrxxch511xhhxxhxxxxxoptions.setC1xxuo04bvxxxxxxxxxxoptions04("FST");
      yrxxch511xhhxxhxxxxxoptions.setC2xxup04bvxxxxxxxxxxpurpose04("Federal Tax(on Item)");
      yrxxch511xhhxxhxxxxxoptions.setC3xxuv04bvxxxxxxxxxxvalue04("13");
      yrxxch511xhhxxhxxxxxoptions.setC4xxuo05bvxxxxxxxxxxoptions05("PST");
      yrxxch511xhhxxhxxxxxoptions.setC5xxup05bvxxxxxxxxxxpurpose05("Province/State Tax(on Item)");
      yrxxch511xhhxxhxxxxxoptions.setC6xxuv05bvxxxxxxxxxxvalue05("05");
      yrxxch511xhhxxhxxxxxoptions.setC7xxuo06bvxxxxxxxxxxoptions06("Liquor");
      yrxxch511xhhxxhxxxxxoptions.setC8xxup06bvxxxxxxxxxxpurpose06("Liquor Tax");
      yrxxch511xhhxxhxxxxxoptions.setC9xxuv06bvxxxxxxxxxxvalue06("10");
      yrxxch511xhhxxhxxxxxoptions.setD1xxuo07bvxxxxxxxxxxoptions07("9");
      yrxxch511xhhxxhxxxxxoptions.setD2xxup07bvxxxxxxxxxxpurpose07("9:00 AM ");
      yrxxch511xhhxxhxxxxxoptions.setD3xxuv07bvxxxxxxxxxxvalue07("");
      // 08 not used now
      yrxxch511xhhxxhxxxxxoptions.setD4xxuo08bvxxxxxxxxxxoptions08("M");
      yrxxch511xhhxxhxxxxxoptions.setD5xxup08bvxxxxxxxxxxpurpose08("Medium");
      yrxxch511xhhxxhxxxxxoptions.setD6xxuv08bvxxxxxxxxxxvalue08("");
      // 09 terms
      yrxxch511xhhxxhxxxxxoptions.setD7xxuo09bvxxxxxxxxxxoptions09("60");
      yrxxch511xhhxxhxxxxxoptions.setD8xxup09bvxxxxxxxxxxpurpose09("-60 days");
      yrxxch511xhhxxhxxxxxoptions.setD9xxuv09bvxxxxxxxxxxvalue09("");
      // 10 type of payment if value has filter then options value not used ,instead purpose with filter is used to display
      // and value with filter is used as actual value, they could also be same if display is same as value
      // filter can be locale like ca=ON us=NY or entity code like 1a=s meaning show 1a=h meaning hide  
      // 
      yrxxch511xhhxxhxxxxxoptions.setE1xxuo10bvxxxxxxxxxxoptions10("not used");
      yrxxch511xhhxxhxxxxxoptions.setE2xxup10bvxxxxxxxxxxpurpose10("ca=-cheque us=-check");
      yrxxch511xhhxxhxxxxxoptions.setE3xxuv10bvxxxxxxxxxxvalue10("ca=q us=q");
      // 11 city or municipality 
      yrxxch511xhhxxhxxxxxoptions.setE4xxuo11bvxxxxxxxxxxoptions11("not used");
      yrxxch511xhhxxhxxxxxoptions.setE5xxup11bvxxxxxxxxxxpurpose11("ca=Toronto us=New York de=Berlin fr=Paris in=Delhi");
      yrxxch511xhhxxhxxxxxoptions.setE6xxuv11bvxxxxxxxxxxvalue11("ca=Toronto us=New York de=Berlin fr=Paris in=Delhi");
      // 12 prov or state
      yrxxch511xhhxxhxxxxxoptions.setE7xxuo12bvxxxxxxxxxxoptions12("Not used");
      yrxxch511xhhxxhxxxxxoptions.setE8xxup12bvxxxxxxxxxxpurpose12("ca=Alberta us=Alabama de=Berlin fr=Alsace in=Delhi");
      yrxxch511xhhxxhxxxxxoptions.setE9xxuv12bvxxxxxxxxxxvalue12("ca=Alberta us=Alabama de=Berlin fr=Alsace in=Delhi");
      // 13 country
      yrxxch511xhhxxhxxxxxoptions.setF1xxuo13bvxxxxxxxxxxoptions13("Ignored");
      yrxxch511xhhxxhxxxxxoptions.setF2xxup13bvxxxxxxxxxxpurpose13("ca=Canada us=USA de=Germany fr=France in=India");
      yrxxch511xhhxxhxxxxxoptions.setF3xxuv13bvxxxxxxxxxxvalue13("ca=Canada us=USA de=Germany fr=France in=India");
      // 14 pzcode
      yrxxch511xhhxxhxxxxxoptions.setF4xxuo14bvxxxxxxxxxxoptions14("Not used");
      yrxxch511xhhxxhxxxxxoptions.setF5xxup14bvxxxxxxxxxxpurpose14("ca=M4L3Z8 us=10003 de=12307 fr=75016 in=400029");
      yrxxch511xhhxxhxxxxxoptions.setF6xxuv14bvxxxxxxxxxxvalue14("ca=M4L3Z8 us=10003 de=12307 fr=75016 in=400029");
      // 15 yes/No not used
      yrxxch511xhhxxhxxxxxoptions.setF7xxuo15bvxxxxxxxxxxoptions15("No");
      yrxxch511xhhxxhxxxxxoptions.setF8xxup15bvxxxxxxxxxxpurpose15("No");
      yrxxch511xhhxxhxxxxxoptions.setF9xxuv15bvxxxxxxxxxxvalue15("");
      // 16-item type can qualify using filter in purpose like us="XX" or show only for machine by putting s=9a in value or hide by h=9a 
      // feb15 2020 SI-C COD removed since it should be payment option not item option and controlled
      // via rate1f table entries like CS small cod, CM medium and CL large cod item, if no entry no cod option
      yrxxch511xhhxxhxxxxxoptions.setG1xxuo16bvxxxxxxxxxxoptions16("IX");
      yrxxch511xhhxxhxxxxxoptions.setG2xxup16bvxxxxxxxxxxpurpose16("Inventory");
      yrxxch511xhhxxhxxxxxoptions.setG3xxuv16bvxxxxxxxxxxvalue16("");
      // 17 item/activity job type no values assigned yet 
      yrxxch511xhhxxhxxxxxoptions.setG4xxuo17bvxxxxxxxxxxoptions17("?");
      yrxxch511xhhxxhxxxxxoptions.setG5xxup17bvxxxxxxxxxxpurpose17("?");
      yrxxch511xhhxxhxxxxxoptions.setG6xxuv17bvxxxxxxxxxxvalue17("");

      // 18-item(1a) or activity(18)or schedule(89) repeat unit 
      yrxxch511xhhxxhxxxxxoptions.setG7xxuo18bvxxxxxxxxxxoptions18("LC");
      yrxxch511xhhxxhxxxxxoptions.setG8xxup18bvxxxxxxxxxxpurpose18("Length-cm");
      yrxxch511xhhxxhxxxxxoptions.setG9xxuv18bvxxxxxxxxxxvalue18("h=18");
      // 19 lan address remove from ordunit used in xxdetails
      yrxxch511xhhxxhxxxxxoptions.setH1xxuo19bvxxxxxxxxxxoptions19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH2xxup19bvxxxxxxxxxxpurpose19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH3xxuv19bvxxxxxxxxxxvalue19("");
      // 20 not used 
      yrxxch511xhhxxhxxxxxoptions.setH4xxuo20bvxxxxxxxxxxoptions20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH5xxup20bvxxxxxxxxxxpurpose20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH6xxuv20bvxxxxxxxxxxvalue20("");

      // 21 title leave ist row as blank so no default
      yrxxch511xhhxxhxxxxxoptions.setH7xxuo21bvxxxxxxxxxxoptions21(" ");
      yrxxch511xhhxxhxxxxxoptions.setH8xxup21bvxxxxxxxxxxpurpose21(" ");
      yrxxch511xhhxxhxxxxxoptions.setH9xxuv21bvxxxxxxxxxxvalue21("");
      //job title
      yrxxch511xhhxxhxxxxxoptions.setI1xxuo22bvxxxxxxxxxxoptions22(" ");
      yrxxch511xhhxxhxxxxxoptions.setI2xxup22bvxxxxxxxxxxpurpose22(" ");
      yrxxch511xhhxxhxxxxxoptions.setI3xxuv22bvxxxxxxxxxxvalue22("");
      // 23
      yrxxch511xhhxxhxxxxxoptions.setI4xxuo23bvxxxxxxxxxxoptions23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI5xxup23bvxxxxxxxxxxpurpose23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI6xxuv23bvxxxxxxxxxxvalue23("");
      // 24 EMail
      yrxxch511xhhxxhxxxxxoptions.setI7xxuo24bvxxxxxxxxxxoptions24("support@"+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI8xxup24bvxxxxxxxxxxpurpose24("support@"+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI9xxuv24bvxxxxxxxxxxvalue24("");
      yrxxch511xhhxxhxxxxxoptions.setJ1xxuo25bvxxxxxxxxxxoptions25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ2xxup25bvxxxxxxxxxxpurpose25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ3xxuv25bvxxxxxxxxxxvalue25("");
      yrxxch511xhhxxhxxxxxoptions.setJ4xxuo26bvxxxxxxxxxxoptions26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ5xxup26bvxxxxxxxxxxpurpose26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ6xxuv26bvxxxxxxxxxxvalue26("");
      yrxxch511xhhxxhxxxxxoptions.setJ7xxuo27bvxxxxxxxxxxoptions27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ8xxup27bvxxxxxxxxxxpurpose27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ9xxuv27bvxxxxxxxxxxvalue27("");
      yrxxch511xhhxxhxxxxxoptions.setK1xxuo28bvxxxxxxxxxxoptions28("CL");
      yrxxch511xhhxxhxxxxxoptions.setK2xxup28bvxxxxxxxxxxpurpose28("Corp-Large");
      yrxxch511xhhxxhxxxxxoptions.setK3xxuv28bvxxxxxxxxxxvalue28("");
      yrxxch511xhhxxhxxxxxoptions.setK4xxuo29bvxxxxxxxxxxoptions29("CL");
      yrxxch511xhhxxhxxxxxoptions.setK5xxup29bvxxxxxxxxxxpurpose29("Corp-Large");
      yrxxch511xhhxxhxxxxxoptions.setK6xxuv29bvxxxxxxxxxxvalue29("");
      // 30-next contact via
      yrxxch511xhhxxhxxxxxoptions.setK7xxuo30bvxxxxxxxxxxoptions30("MS");
      yrxxch511xhhxxhxxxxxoptions.setK8xxup30bvxxxxxxxxxxpurpose30("Mail-surface");
      yrxxch511xhhxxhxxxxxoptions.setK9xxuv30bvxxxxxxxxxxvalue30("");
      // 31 floor 
      yrxxch511xhhxxhxxxxxoptions.setL1xxuo31bvxxxxxxxxxxoptions31("Ground Floor");
      yrxxch511xhhxxhxxxxxoptions.setL2xxup31bvxxxxxxxxxxpurpose31("Ground Floor");
      yrxxch511xhhxxhxxxxxoptions.setL3xxuv31bvxxxxxxxxxxvalue31("");
      // 32 room 
      yrxxch511xhhxxhxxxxxoptions.setL4xxuo32bvxxxxxxxxxxoptions32("Room 101");
      yrxxch511xhhxxhxxxxxoptions.setL5xxup32bvxxxxxxxxxxpurpose32("Room 101");
      yrxxch511xhhxxhxxxxxoptions.setL6xxuv32bvxxxxxxxxxxvalue32("");
      // 33 cabinet or rack
      yrxxch511xhhxxhxxxxxoptions.setL7xxuo33bvxxxxxxxxxxoptions33("Cabinet 303");
      yrxxch511xhhxxhxxxxxoptions.setL8xxup33bvxxxxxxxxxxpurpose33("Cabinet 303");
      yrxxch511xhhxxhxxxxxoptions.setL9xxuv33bvxxxxxxxxxxvalue33("");
      // 34 iso 4217 currency codes
      yrxxch511xhhxxhxxxxxoptions.setM1xxuo34bvxxxxxxxxxxoptions34("CAD");
      yrxxch511xhhxxhxxxxxoptions.setM2xxup34bvxxxxxxxxxxpurpose34("Canadian dollar");
      yrxxch511xhhxxhxxxxxoptions.setM3xxuv34bvxxxxxxxxxxvalue34("124");
      //35 todo description as suggest not drop down  
      yrxxch511xhhxxhxxxxxoptions.setM4xxuo35bvxxxxxxxxxxoptions35("");
      yrxxch511xhhxxhxxxxxoptions.setM5xxup35bvxxxxxxxxxxpurpose35("");
      yrxxch511xhhxxhxxxxxoptions.setM6xxuv35bvxxxxxxxxxxvalue35("");
      //36 not used ?
      yrxxch511xhhxxhxxxxxoptions.setM7xxuo36bvxxxxxxxxxxoptions36("User");
      yrxxch511xhhxxhxxxxxoptions.setM8xxup36bvxxxxxxxxxxpurpose36("User");
      yrxxch511xhhxxhxxxxxoptions.setM9xxuv36bvxxxxxxxxxxvalue36("");
      //37-type priority type for activity,schedule
      yrxxch511xhhxxhxxxxxoptions.setN1xxuo37bvxxxxxxxxxxoptions37("M");
      yrxxch511xhhxxhxxxxxoptions.setN2xxup37bvxxxxxxxxxxpurpose37("Medium");
      yrxxch511xhhxxhxxxxxoptions.setN3xxuv37bvxxxxxxxxxxvalue37("");
      //38 user type
      yrxxch511xhhxxhxxxxxoptions.setN4xxuo38bvxxxxxxxxxxoptions38("U");
      yrxxch511xhhxxhxxxxxoptions.setN5xxup38bvxxxxxxxxxxpurpose38("User");
      yrxxch511xhhxxhxxxxxoptions.setN6xxuv38bvxxxxxxxxxxvalue38("");
      //39 user role
      yrxxch511xhhxxhxxxxxoptions.setN7xxuo39bvxxxxxxxxxxoptions39("Q");
      yrxxch511xhhxxhxxxxxoptions.setN8xxup39bvxxxxxxxxxxpurpose39("Medium");
      yrxxch511xhhxxhxxxxxoptions.setN9xxuv39bvxxxxxxxxxxvalue39("");

      yrxxch511xhhxxhxxxxxoptions.setO1xxuo40bvxxxxxxxxxxoptions40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO2xxup40bvxxxxxxxxxxpurpose40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO3xxuv40bvxxxxxxxxxxvalue40("");
      //41-??
      yrxxch511xhhxxhxxxxxoptions.setO4xxuo41bvxxxxxxxxxxoptions41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO5xxup41bvxxxxxxxxxxpurpose41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO6xxuv41bvxxxxxxxxxxvalue41("");
      // 42 not used
      yrxxch511xhhxxhxxxxxoptions.setO7xxuo42bvxxxxxxxxxxoptions42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO8xxup42bvxxxxxxxxxxpurpose42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO9xxuv42bvxxxxxxxxxxvalue42("");
      // 43 not used 
      yrxxch511xhhxxhxxxxxoptions.setP1xxuo43bvxxxxxxxxxxoptions43("New");
      yrxxch511xhhxxhxxxxxoptions.setP2xxup43bvxxxxxxxxxxpurpose43("New");
      yrxxch511xhhxxhxxxxxoptions.setP3xxuv43bvxxxxxxxxxxvalue43("");
      // 44 local ie corporate email address not internet email
      yrxxch511xhhxxhxxxxxoptions.setP4xxuo44bvxxxxxxxxxxoptions44("");
      yrxxch511xhhxxhxxxxxoptions.setP5xxup44bvxxxxxxxxxxpurpose44(" ");
      yrxxch511xhhxxhxxxxxoptions.setP6xxuv44bvxxxxxxxxxxvalue44("");
      // 45 employee type ie part time, perm hourly etc
      yrxxch511xhhxxhxxxxxoptions.setP7xxuo45bvxxxxxxxxxxoptions45("P");
      yrxxch511xhhxxhxxxxxoptions.setP8xxup45bvxxxxxxxxxxpurpose45("Perm/Full Time");
      yrxxch511xhhxxhxxxxxoptions.setP9xxuv45bvxxxxxxxxxxvalue45("");
      // 46 group member type 
      yrxxch511xhhxxhxxxxxoptions.setQ1xxuo46bvxxxxxxxxxxoptions46("R");
      yrxxch511xhhxxhxxxxxoptions.setQ2xxup46bvxxxxxxxxxxpurpose46("Regular");
      yrxxch511xhhxxhxxxxxoptions.setQ3xxuv46bvxxxxxxxxxxvalue46("");
      // 47 period id 1-14
      yrxxch511xhhxxhxxxxxoptions.setQ4xxuo47bvxxxxxxxxxxoptions47("01");
      yrxxch511xhhxxhxxxxxoptions.setQ5xxup47bvxxxxxxxxxxpurpose47("01");
      yrxxch511xhhxxhxxxxxoptions.setQ6xxuv47bvxxxxxxxxxxvalue47("");
      // 48 Holiday 
      yrxxch511xhhxxhxxxxxoptions.setQ7xxuo48bvxxxxxxxxxxoptions48("S");
      yrxxch511xhhxxhxxxxxoptions.setQ8xxup48bvxxxxxxxxxxpurpose48("Stautory");
      yrxxch511xhhxxhxxxxxoptions.setQ9xxuv48bvxxxxxxxxxxvalue48("");
      // 49 used as from key for clob/blob ie top-left or account data for import
      yrxxch511xhhxxhxxxxxoptions.setR1xxuo49bvxxxxxxxxxxoptions49("3R-TOP-LEFT-C");
      yrxxch511xhhxxhxxxxxoptions.setR2xxup49bvxxxxxxxxxxpurpose49("TOP LEFT");
      yrxxch511xhhxxhxxxxxoptions.setR3xxuv49bvxxxxxxxxxxvalue49("");
      // 50 is used as qualifier for bob/clob like jpg or csv data
      yrxxch511xhhxxhxxxxxoptions.setR4xxuo50bvxxxxxxxxxxoptions50("PIC");
      yrxxch511xhhxxhxxxxxoptions.setR5xxup50bvxxxxxxxxxxpurpose50("PICTURE IMAGE");
      yrxxch511xhhxxhxxxxxoptions.setR6xxuv50bvxxxxxxxxxxvalue50("");
// 51 shipping type 
      yrxxch511xhhxxhxxxxxoptions.setR7xxuo51bvxxxxxxxxxxoptions51("SS");
      yrxxch511xhhxxhxxxxxoptions.setR8xxup51bvxxxxxxxxxxpurpose51("Standard Shipping/Small Item");
      yrxxch511xhhxxhxxxxxoptions.setR9xxuv51bvxxxxxxxxxxvalue51("");
// 52 item misc1 values used in item criteria search
      yrxxch511xhhxxhxxxxxoptions.setS1xxuo52bvxxxxxxxxxxoptions52("FRE");
      yrxxch511xhhxxhxxxxxoptions.setS2xxup52bvxxxxxxxxxxpurpose52("Fund Raising Event");
      yrxxch511xhhxxhxxxxxoptions.setS3xxuv52bvxxxxxxxxxxvalue52("");
// 53 item misc2 values type search
      yrxxch511xhhxxhxxxxxoptions.setS4xxuo53bvxxxxxxxxxxoptions53("CEOEC");
      yrxxch511xhhxxhxxxxxoptions.setS5xxup53bvxxxxxxxxxxpurpose53("Cultural Event(s) One Ethnic Community");
      yrxxch511xhhxxhxxxxxoptions.setS6xxuv53bvxxxxxxxxxxvalue53("");
// 54,55,56,57,58,59,60,61 item variants need 8 options. 4 pairs to hold label and values
//    subcodesn2 holds values as 4 times 4ch ex:Small   White   Cotton  House    
//    suncodesn3 holds 4 labels as : delimeted ex:size    :colour  :material:brand  :
      yrxxch511xhhxxhxxxxxoptions.setS7xxuo54bvxxxxxxxxxxoptions54("Size");
      yrxxch511xhhxxhxxxxxoptions.setS8xxup54bvxxxxxxxxxxpurpose54("Size");
      yrxxch511xhhxxhxxxxxoptions.setS9xxuv54bvxxxxxxxxxxvalue54("");
      yrxxch511xhhxxhxxxxxoptions.setT1xxuo55bvxxxxxxxxxxoptions55("Fits All");
      yrxxch511xhhxxhxxxxxoptions.setT2xxup55bvxxxxxxxxxxpurpose55("One Size Fits All");
      yrxxch511xhhxxhxxxxxoptions.setT3xxuv55bvxxxxxxxxxxvalue55("");
      yrxxch511xhhxxhxxxxxoptions.setT4xxuo56bvxxxxxxxxxxoptions56("Colour");
      yrxxch511xhhxxhxxxxxoptions.setT5xxup56bvxxxxxxxxxxpurpose56("Colour");
      yrxxch511xhhxxhxxxxxoptions.setT6xxuv56bvxxxxxxxxxxvalue56("");
      yrxxch511xhhxxhxxxxxoptions.setT7xxuo57bvxxxxxxxxxxoptions57("Varies");
      yrxxch511xhhxxhxxxxxoptions.setT8xxup57bvxxxxxxxxxxpurpose57("Varies");
      yrxxch511xhhxxhxxxxxoptions.setT9xxuv57bvxxxxxxxxxxvalue57("");
      yrxxch511xhhxxhxxxxxoptions.setU1xxuo58bvxxxxxxxxxxoptions58("Material");
      yrxxch511xhhxxhxxxxxoptions.setU2xxup58bvxxxxxxxxxxpurpose58("Material");
      yrxxch511xhhxxhxxxxxoptions.setU3xxuv58bvxxxxxxxxxxvalue58("");
      yrxxch511xhhxxhxxxxxoptions.setU4xxuo59bvxxxxxxxxxxoptions59("Varies");
      yrxxch511xhhxxhxxxxxoptions.setU5xxup59bvxxxxxxxxxxpurpose59("Varies");
      yrxxch511xhhxxhxxxxxoptions.setU6xxuv59bvxxxxxxxxxxvalue59("");
      yrxxch511xhhxxhxxxxxoptions.setU7xxuo60bvxxxxxxxxxxoptions60("Brand");
      yrxxch511xhhxxhxxxxxoptions.setU8xxup60bvxxxxxxxxxxpurpose60("Brand");
      yrxxch511xhhxxhxxxxxoptions.setU9xxuv60bvxxxxxxxxxxvalue60("");
      yrxxch511xhhxxhxxxxxoptions.setV1xxuo61bvxxxxxxxxxxoptions61("House");
      yrxxch511xhhxxhxxxxxoptions.setV2xxup61bvxxxxxxxxxxpurpose61("House");
      yrxxch511xhhxxhxxxxxoptions.setV3xxuv61bvxxxxxxxxxxvalue61("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptionsHome.persist(client);
      yrxxch511xhhxxhxxxxxoptionsHome.clearInstance();


      //row 2
      yrxxch511xhhxxhxxxxxoptions=yrxxch511xhhxxhxxxxxoptionsHome.getInstance();
      yrxxch511xhhxxhxxxxxoptions.setA0xxukcxbvxxxxxxxxxxrow("02");
      yrxxch511xhhxxhxxxxxoptions.setB1xxuo01bvxxxxxxxxxxoptions01("L");
      yrxxch511xhhxxhxxxxxoptions.setB2xxup01bvxxxxxxxxxxpurpose01("Liability");
      yrxxch511xhhxxhxxxxxoptions.setB3xxuv01bvxxxxxxxxxxvalue01("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptions.setB4xxuo02bvxxxxxxxxxxoptions02("B");
      yrxxch511xhhxxhxxxxxoptions.setB5xxup02bvxxxxxxxxxxpurpose02("SubHeader/BlockHeader");
      yrxxch511xhhxxhxxxxxoptions.setB6xxuv02bvxxxxxxxxxxvalue02("");
      yrxxch511xhhxxhxxxxxoptions.setB7xxuo03bvxxxxxxxxxxoptions03("P");
      yrxxch511xhhxxhxxxxxoptions.setB8xxup03bvxxxxxxxxxxpurpose03("Payable");
      yrxxch511xhhxxhxxxxxoptions.setB9xxuv03bvxxxxxxxxxxvalue03("");
      yrxxch511xhhxxhxxxxxoptions.setC1xxuo04bvxxxxxxxxxxoptions04("FST");
      yrxxch511xhhxxhxxxxxoptions.setC2xxup04bvxxxxxxxxxxpurpose04("Federal Tax(on Shipment)");
      yrxxch511xhhxxhxxxxxoptions.setC3xxuv04bvxxxxxxxxxxvalue04("13");
      yrxxch511xhhxxhxxxxxoptions.setC4xxuo05bvxxxxxxxxxxoptions05("PST");
      yrxxch511xhhxxhxxxxxoptions.setC5xxup05bvxxxxxxxxxxpurpose05("Province/State Tax(Shipment)");
      yrxxch511xhhxxhxxxxxoptions.setC6xxuv05bvxxxxxxxxxxvalue05("05");
      yrxxch511xhhxxhxxxxxoptions.setC7xxuo06bvxxxxxxxxxxoptions06("");
      yrxxch511xhhxxhxxxxxoptions.setC8xxup06bvxxxxxxxxxxpurpose06("");
      yrxxch511xhhxxhxxxxxoptions.setC9xxuv06bvxxxxxxxxxxvalue06("");
      yrxxch511xhhxxhxxxxxoptions.setD1xxuo07bvxxxxxxxxxxoptions07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD2xxup07bvxxxxxxxxxxpurpose07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD3xxuv07bvxxxxxxxxxxvalue07("");
      yrxxch511xhhxxhxxxxxoptions.setD4xxuo08bvxxxxxxxxxxoptions08("L");
      yrxxch511xhhxxhxxxxxoptions.setD5xxup08bvxxxxxxxxxxpurpose08("Low");
      yrxxch511xhhxxhxxxxxoptions.setD6xxuv08bvxxxxxxxxxxvalue08("");
      yrxxch511xhhxxhxxxxxoptions.setD7xxuo09bvxxxxxxxxxxoptions09("30");
      yrxxch511xhhxxhxxxxxoptions.setD8xxup09bvxxxxxxxxxxpurpose09("-30 days");
      yrxxch511xhhxxhxxxxxoptions.setD9xxuv09bvxxxxxxxxxxvalue09("");
      yrxxch511xhhxxhxxxxxoptions.setE1xxuo10bvxxxxxxxxxxoptions10("c");
      yrxxch511xhhxxhxxxxxoptions.setE2xxup10bvxxxxxxxxxxpurpose10("-cash");
      yrxxch511xhhxxhxxxxxoptions.setE3xxuv10bvxxxxxxxxxxvalue10("");
      yrxxch511xhhxxhxxxxxoptions.setE4xxuo11bvxxxxxxxxxxoptions11("Montreal");
      yrxxch511xhhxxhxxxxxoptions.setE5xxup11bvxxxxxxxxxxpurpose11("ca=Montreal; us=Boston de=Munich fr=Marseille in=Mumbai");
      yrxxch511xhhxxhxxxxxoptions.setE6xxuv11bvxxxxxxxxxxvalue11("ca=Montreal; us=Boston de=Munich fr=Marseille in=Mumbai");
      yrxxch511xhhxxhxxxxxoptions.setE7xxuo12bvxxxxxxxxxxoptions12("QE");
      yrxxch511xhhxxhxxxxxoptions.setE8xxup12bvxxxxxxxxxxpurpose12("ca=British Columbia us=Alaska de=Bavaria fr=Aquitaine in=Maharashtra");
      yrxxch511xhhxxhxxxxxoptions.setE9xxuv12bvxxxxxxxxxxvalue12("ca=British Columbia us=Alaska de=Bavaria fr=Aquitaine in=Maharashtra");
      yrxxch511xhhxxhxxxxxoptions.setF1xxuo13bvxxxxxxxxxxoptions13("");
      yrxxch511xhhxxhxxxxxoptions.setF2xxup13bvxxxxxxxxxxpurpose13("gb=UK in=IN");
      yrxxch511xhhxxhxxxxxoptions.setF3xxuv13bvxxxxxxxxxxvalue13("gb=United Kingdom in=India");
      yrxxch511xhhxxhxxxxxoptions.setF4xxuo14bvxxxxxxxxxxoptions14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF5xxup14bvxxxxxxxxxxpurpose14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF6xxuv14bvxxxxxxxxxxvalue14("ca=M4L3Z8 us=10003-2131 in=700031");
      yrxxch511xhhxxhxxxxxoptions.setF7xxuo15bvxxxxxxxxxxoptions15("Y");
      yrxxch511xhhxxhxxxxxoptions.setF8xxup15bvxxxxxxxxxxpurpose15("Yes");
      yrxxch511xhhxxhxxxxxoptions.setF9xxuv15bvxxxxxxxxxxvalue15("");
      yrxxch511xhhxxhxxxxxoptions.setG1xxuo16bvxxxxxxxxxxoptions16("IB");
      yrxxch511xhhxxhxxxxxoptions.setG2xxup16bvxxxxxxxxxxpurpose16("Issue-Bug");
      yrxxch511xhhxxhxxxxxoptions.setG3xxuv16bvxxxxxxxxxxvalue16("sp=fs; sp=fb");
      yrxxch511xhhxxhxxxxxoptions.setG4xxuo17bvxxxxxxxxxxoptions17("?");
      yrxxch511xhhxxhxxxxxoptions.setG5xxup17bvxxxxxxxxxxpurpose17("?");
      yrxxch511xhhxxhxxxxxoptions.setG6xxuv17bvxxxxxxxxxxvalue17("");
      yrxxch511xhhxxhxxxxxoptions.setG7xxuo18bvxxxxxxxxxxoptions18("WL");
      yrxxch511xhhxxhxxxxxoptions.setG8xxup18bvxxxxxxxxxxpurpose18("Weight-lb");
      yrxxch511xhhxxhxxxxxoptions.setG9xxuv18bvxxxxxxxxxxvalue18("h=18");
      yrxxch511xhhxxhxxxxxoptions.setH1xxuo19bvxxxxxxxxxxoptions19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH2xxup19bvxxxxxxxxxxpurpose19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH3xxuv19bvxxxxxxxxxxvalue19("");
      yrxxch511xhhxxhxxxxxoptions.setH4xxuo20bvxxxxxxxxxxoptions20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH5xxup20bvxxxxxxxxxxpurpose20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH6xxuv20bvxxxxxxxxxxvalue20("");
      yrxxch511xhhxxhxxxxxoptions.setH7xxuo21bvxxxxxxxxxxoptions21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH8xxup21bvxxxxxxxxxxpurpose21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH9xxuv21bvxxxxxxxxxxvalue21("");
      yrxxch511xhhxxhxxxxxoptions.setI1xxuo22bvxxxxxxxxxxoptions22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI2xxup22bvxxxxxxxxxxpurpose22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI3xxuv22bvxxxxxxxxxxvalue22("");
      yrxxch511xhhxxhxxxxxoptions.setI4xxuo23bvxxxxxxxxxxoptions23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI5xxup23bvxxxxxxxxxxpurpose23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI6xxuv23bvxxxxxxxxxxvalue23("");
      yrxxch511xhhxxhxxxxxoptions.setI7xxuo24bvxxxxxxxxxxoptions24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI8xxup24bvxxxxxxxxxxpurpose24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI9xxuv24bvxxxxxxxxxxvalue24("");
      yrxxch511xhhxxhxxxxxoptions.setJ1xxuo25bvxxxxxxxxxxoptions25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ2xxup25bvxxxxxxxxxxpurpose25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ3xxuv25bvxxxxxxxxxxvalue25("");
      yrxxch511xhhxxhxxxxxoptions.setJ4xxuo26bvxxxxxxxxxxoptions26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ5xxup26bvxxxxxxxxxxpurpose26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ6xxuv26bvxxxxxxxxxxvalue26("");
      yrxxch511xhhxxhxxxxxoptions.setJ7xxuo27bvxxxxxxxxxxoptions27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ8xxup27bvxxxxxxxxxxpurpose27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ9xxuv27bvxxxxxxxxxxvalue27("");
      yrxxch511xhhxxhxxxxxoptions.setK1xxuo28bvxxxxxxxxxxoptions28("CS");
      yrxxch511xhhxxhxxxxxoptions.setK2xxup28bvxxxxxxxxxxpurpose28("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK3xxuv28bvxxxxxxxxxxvalue28("");
      yrxxch511xhhxxhxxxxxoptions.setK4xxuo29bvxxxxxxxxxxoptions29("CS");
      yrxxch511xhhxxhxxxxxoptions.setK5xxup29bvxxxxxxxxxxpurpose29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK6xxuv29bvxxxxxxxxxxvalue29("");
      yrxxch511xhhxxhxxxxxoptions.setK7xxuo30bvxxxxxxxxxxoptions30("EM");
      yrxxch511xhhxxhxxxxxoptions.setK8xxup30bvxxxxxxxxxxpurpose30("EMail");
      yrxxch511xhhxxhxxxxxoptions.setK9xxuv30bvxxxxxxxxxxvalue30("");
      yrxxch511xhhxxhxxxxxoptions.setL1xxuo31bvxxxxxxxxxxoptions31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL2xxup31bvxxxxxxxxxxpurpose31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL3xxuv31bvxxxxxxxxxxvalue31("");
      yrxxch511xhhxxhxxxxxoptions.setL4xxuo32bvxxxxxxxxxxoptions32("Room 201");
      yrxxch511xhhxxhxxxxxoptions.setL5xxup32bvxxxxxxxxxxpurpose32("Room 201");
      yrxxch511xhhxxhxxxxxoptions.setL6xxuv32bvxxxxxxxxxxvalue32("");
      yrxxch511xhhxxhxxxxxoptions.setL7xxuo33bvxxxxxxxxxxoptions33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL8xxup33bvxxxxxxxxxxpurpose33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL9xxuv33bvxxxxxxxxxxvalue33("");
      yrxxch511xhhxxhxxxxxoptions.setM1xxuo34bvxxxxxxxxxxoptions34("USD");
      yrxxch511xhhxxhxxxxxoptions.setM2xxup34bvxxxxxxxxxxpurpose34("US $");
      yrxxch511xhhxxhxxxxxoptions.setM3xxuv34bvxxxxxxxxxxvalue34("840");
      yrxxch511xhhxxhxxxxxoptions.setM4xxuo35bvxxxxxxxxxxoptions35("");
      yrxxch511xhhxxhxxxxxoptions.setM5xxup35bvxxxxxxxxxxpurpose35("");
      yrxxch511xhhxxhxxxxxoptions.setM6xxuv35bvxxxxxxxxxxvalue35("840");
      yrxxch511xhhxxhxxxxxoptions.setM7xxuo36bvxxxxxxxxxxoptions36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM8xxup36bvxxxxxxxxxxpurpose36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM9xxuv36bvxxxxxxxxxxvalue36("");
      yrxxch511xhhxxhxxxxxoptions.setN1xxuo37bvxxxxxxxxxxoptions37("H");
      yrxxch511xhhxxhxxxxxoptions.setN2xxup37bvxxxxxxxxxxpurpose37("High");
      yrxxch511xhhxxhxxxxxoptions.setN3xxuv37bvxxxxxxxxxxvalue37("");
      yrxxch511xhhxxhxxxxxoptions.setN4xxuo38bvxxxxxxxxxxoptions38("I");
      yrxxch511xhhxxhxxxxxoptions.setN5xxup38bvxxxxxxxxxxpurpose38("Admin");
      yrxxch511xhhxxhxxxxxoptions.setN6xxuv38bvxxxxxxxxxxvalue38("");
      yrxxch511xhhxxhxxxxxoptions.setN7xxuo39bvxxxxxxxxxxoptions39("H");
      yrxxch511xhhxxhxxxxxoptions.setN8xxup39bvxxxxxxxxxxpurpose39("High");
      yrxxch511xhhxxhxxxxxoptions.setN9xxuv39bvxxxxxxxxxxvalue39("");
      yrxxch511xhhxxhxxxxxoptions.setO1xxuo40bvxxxxxxxxxxoptions40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO2xxup40bvxxxxxxxxxxpurpose40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO3xxuv40bvxxxxxxxxxxvalue40("");
      yrxxch511xhhxxhxxxxxoptions.setO4xxuo41bvxxxxxxxxxxoptions41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO5xxup41bvxxxxxxxxxxpurpose41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO6xxuv41bvxxxxxxxxxxvalue41("");
      yrxxch511xhhxxhxxxxxoptions.setO7xxuo42bvxxxxxxxxxxoptions42("P");
      yrxxch511xhhxxhxxxxxoptions.setO8xxup42bvxxxxxxxxxxpurpose42("Permanent");
      yrxxch511xhhxxhxxxxxoptions.setO9xxuv42bvxxxxxxxxxxvalue42("");
      yrxxch511xhhxxhxxxxxoptions.setP1xxuo43bvxxxxxxxxxxoptions43("New");
      yrxxch511xhhxxhxxxxxoptions.setP2xxup43bvxxxxxxxxxxpurpose43("New");
      yrxxch511xhhxxhxxxxxoptions.setP3xxuv43bvxxxxxxxxxxvalue43("");
      yrxxch511xhhxxhxxxxxoptions.setP4xxuo44bvxxxxxxxxxxoptions44("xx@corp");
      yrxxch511xhhxxhxxxxxoptions.setP5xxup44bvxxxxxxxxxxpurpose44("xx@corp");
      yrxxch511xhhxxhxxxxxoptions.setP6xxuv44bvxxxxxxxxxxvalue44("");
      yrxxch511xhhxxhxxxxxoptions.setP7xxuo45bvxxxxxxxxxxoptions45("T");
      yrxxch511xhhxxhxxxxxoptions.setP8xxup45bvxxxxxxxxxxpurpose45("Temporary/Part Time");
      yrxxch511xhhxxhxxxxxoptions.setP9xxuv45bvxxxxxxxxxxvalue45("");
      yrxxch511xhhxxhxxxxxoptions.setQ1xxuo46bvxxxxxxxxxxoptions46("L");
      yrxxch511xhhxxhxxxxxoptions.setQ2xxup46bvxxxxxxxxxxpurpose46("LifeTime");
      yrxxch511xhhxxhxxxxxoptions.setQ3xxuv46bvxxxxxxxxxxvalue46("");
      yrxxch511xhhxxhxxxxxoptions.setQ4xxuo47bvxxxxxxxxxxoptions47("02");
      yrxxch511xhhxxhxxxxxoptions.setQ5xxup47bvxxxxxxxxxxpurpose47("02");
      yrxxch511xhhxxhxxxxxoptions.setQ6xxuv47bvxxxxxxxxxxvalue47("");
      yrxxch511xhhxxhxxxxxoptions.setQ7xxuo48bvxxxxxxxxxxoptions48("P");
      yrxxch511xhhxxhxxxxxoptions.setQ8xxup48bvxxxxxxxxxxpurpose48("Prov-State");
      yrxxch511xhhxxhxxxxxoptions.setQ9xxuv48bvxxxxxxxxxxvalue48("");
      yrxxch511xhhxxhxxxxxoptions.setR1xxuo49bvxxxxxxxxxxoptions49("3R-MID-TOP-C");
      yrxxch511xhhxxhxxxxxoptions.setR2xxup49bvxxxxxxxxxxpurpose49("MIDDLE TOP");
      yrxxch511xhhxxhxxxxxoptions.setR3xxuv49bvxxxxxxxxxxvalue49("");
      yrxxch511xhhxxhxxxxxoptions.setR4xxuo50bvxxxxxxxxxxoptions50("HDR");
      yrxxch511xhhxxhxxxxxoptions.setR5xxup50bvxxxxxxxxxxpurpose50("TEXT HEADER");
      yrxxch511xhhxxhxxxxxoptions.setR6xxuv50bvxxxxxxxxxxvalue50("");
      yrxxch511xhhxxhxxxxxoptions.setR7xxuo51bvxxxxxxxxxxoptions51("ES");
      yrxxch511xhhxxhxxxxxoptions.setR8xxup51bvxxxxxxxxxxpurpose51("Express Shipping/Small Item");
      yrxxch511xhhxxhxxxxxoptions.setR9xxuv51bvxxxxxxxxxxvalue51("");
      yrxxch511xhhxxhxxxxxoptions.setS1xxuo52bvxxxxxxxxxxoptions52("CFRE");
      yrxxch511xhhxxhxxxxxoptions.setS2xxup52bvxxxxxxxxxxpurpose52("Charitable Fund Raising Event");
      yrxxch511xhhxxhxxxxxoptions.setS3xxuv52bvxxxxxxxxxxvalue52("");
      yrxxch511xhhxxhxxxxxoptions.setS4xxuo53bvxxxxxxxxxxoptions53("CEMEC");
      yrxxch511xhhxxhxxxxxoptions.setS5xxup53bvxxxxxxxxxxpurpose53("Cultural Event(s) Multi Ethnic Community");
      yrxxch511xhhxxhxxxxxoptions.setS6xxuv53bvxxxxxxxxxxvalue53("");
      yrxxch511xhhxxhxxxxxoptions.setS7xxuo54bvxxxxxxxxxxoptions54("Type");
      yrxxch511xhhxxhxxxxxoptions.setS8xxup54bvxxxxxxxxxxpurpose54("Type");
      yrxxch511xhhxxhxxxxxoptions.setS9xxuv54bvxxxxxxxxxxvalue54("");
      yrxxch511xhhxxhxxxxxoptions.setT1xxuo55bvxxxxxxxxxxoptions55("Small");
      yrxxch511xhhxxhxxxxxoptions.setT2xxup55bvxxxxxxxxxxpurpose55("Small");
      yrxxch511xhhxxhxxxxxoptions.setT3xxuv55bvxxxxxxxxxxvalue55("");
      yrxxch511xhhxxhxxxxxoptions.setT4xxuo56bvxxxxxxxxxxoptions56("Shape");
      yrxxch511xhhxxhxxxxxoptions.setT5xxup56bvxxxxxxxxxxpurpose56("Shape");
      yrxxch511xhhxxhxxxxxoptions.setT6xxuv56bvxxxxxxxxxxvalue56("");
      yrxxch511xhhxxhxxxxxoptions.setT7xxuo57bvxxxxxxxxxxoptions57("White");
      yrxxch511xhhxxhxxxxxoptions.setT8xxup57bvxxxxxxxxxxpurpose57("White");
      yrxxch511xhhxxhxxxxxoptions.setT9xxuv57bvxxxxxxxxxxvalue57("");
      yrxxch511xhhxxhxxxxxoptions.setU1xxuo58bvxxxxxxxxxxoptions58("Origin");
      yrxxch511xhhxxhxxxxxoptions.setU2xxup58bvxxxxxxxxxxpurpose58("Origin");
      yrxxch511xhhxxhxxxxxoptions.setU3xxuv58bvxxxxxxxxxxvalue58("");
      yrxxch511xhhxxhxxxxxoptions.setU4xxuo59bvxxxxxxxxxxoptions59("Cotton");
      yrxxch511xhhxxhxxxxxoptions.setU5xxup59bvxxxxxxxxxxpurpose59("Cotton");
      yrxxch511xhhxxhxxxxxoptions.setU6xxuv59bvxxxxxxxxxxvalue59("");
      yrxxch511xhhxxhxxxxxoptions.setU7xxuo60bvxxxxxxxxxxoptions60("Made By");
      yrxxch511xhhxxhxxxxxoptions.setU8xxup60bvxxxxxxxxxxpurpose60("Made By");
      yrxxch511xhhxxhxxxxxoptions.setU9xxuv60bvxxxxxxxxxxvalue60("");
      yrxxch511xhhxxhxxxxxoptions.setV1xxuo61bvxxxxxxxxxxoptions61("No Name");
      yrxxch511xhhxxhxxxxxoptions.setV2xxup61bvxxxxxxxxxxpurpose61("No Name");
      yrxxch511xhhxxhxxxxxoptions.setV3xxuv61bvxxxxxxxxxxvalue61("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptionsHome.persist(client);
      yrxxch511xhhxxhxxxxxoptionsHome.clearInstance();

      yrxxch511xhhxxhxxxxxoptions=yrxxch511xhhxxhxxxxxoptionsHome.getInstance();
      yrxxch511xhhxxhxxxxxoptions.setA0xxukcxbvxxxxxxxxxxrow("03");
      yrxxch511xhhxxhxxxxxoptions.setB1xxuo01bvxxxxxxxxxxoptions01("QR");
      yrxxch511xhhxxhxxxxxoptions.setB2xxup01bvxxxxxxxxxxpurpose01("Retained Earning");
      yrxxch511xhhxxhxxxxxoptions.setB3xxuv01bvxxxxxxxxxxvalue01("");
      yrxxch511xhhxxhxxxxxoptions.setB4xxuo02bvxxxxxxxxxxoptions02("D");
      yrxxch511xhhxxhxxxxxoptions.setB5xxup02bvxxxxxxxxxxpurpose02("Detail");
      yrxxch511xhhxxhxxxxxoptions.setB6xxuv02bvxxxxxxxxxxvalue02("");
      yrxxch511xhhxxhxxxxxoptions.setB7xxuo03bvxxxxxxxxxxoptions03("P");
      yrxxch511xhhxxhxxxxxoptions.setB8xxup03bvxxxxxxxxxxpurpose03("Payable");
      yrxxch511xhhxxhxxxxxoptions.setB9xxuv03bvxxxxxxxxxxvalue03("");
      yrxxch511xhhxxhxxxxxoptions.setC1xxuo04bvxxxxxxxxxxoptions04("FST");
      yrxxch511xhhxxhxxxxxoptions.setC2xxup04bvxxxxxxxxxxpurpose04("Federal Tax(Handling)");
      yrxxch511xhhxxhxxxxxoptions.setC3xxuv04bvxxxxxxxxxxvalue04("13");
      yrxxch511xhhxxhxxxxxoptions.setC4xxuo05bvxxxxxxxxxxoptions05("PST");
      yrxxch511xhhxxhxxxxxoptions.setC5xxup05bvxxxxxxxxxxpurpose05("Province/State Tax(on Handling)");
      yrxxch511xhhxxhxxxxxoptions.setC6xxuv05bvxxxxxxxxxxvalue05("5");
      yrxxch511xhhxxhxxxxxoptions.setC7xxuo06bvxxxxxxxxxxoptions06("");
      yrxxch511xhhxxhxxxxxoptions.setC8xxup06bvxxxxxxxxxxpurpose06("");
      yrxxch511xhhxxhxxxxxoptions.setC9xxuv06bvxxxxxxxxxxvalue06("");
      yrxxch511xhhxxhxxxxxoptions.setD1xxuo07bvxxxxxxxxxxoptions07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD2xxup07bvxxxxxxxxxxpurpose07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD3xxuv07bvxxxxxxxxxxvalue07("");
      yrxxch511xhhxxhxxxxxoptions.setD4xxuo08bvxxxxxxxxxxoptions08("H");
      yrxxch511xhhxxhxxxxxoptions.setD5xxup08bvxxxxxxxxxxpurpose08("High");
      yrxxch511xhhxxhxxxxxoptions.setD6xxuv08bvxxxxxxxxxxvalue08("");
      yrxxch511xhhxxhxxxxxoptions.setD7xxuo09bvxxxxxxxxxxoptions09("30");
      yrxxch511xhhxxhxxxxxoptions.setD8xxup09bvxxxxxxxxxxpurpose09("-30 days");
      yrxxch511xhhxxhxxxxxoptions.setD9xxuv09bvxxxxxxxxxxvalue09("");
      yrxxch511xhhxxhxxxxxoptions.setE1xxuo10bvxxxxxxxxxxoptions10("cash");
      yrxxch511xhhxxhxxxxxoptions.setE2xxup10bvxxxxxxxxxxpurpose10("ca=manual-cheque us=manual-check");
      yrxxch511xhhxxhxxxxxoptions.setE3xxuv10bvxxxxxxxxxxvalue10("ca=m us=m");
      yrxxch511xhhxxhxxxxxoptions.setE4xxuo11bvxxxxxxxxxxoptions11("Montreal");
      yrxxch511xhhxxhxxxxxoptions.setE5xxup11bvxxxxxxxxxxpurpose11("ca=Montreal; us=Boston");
      yrxxch511xhhxxhxxxxxoptions.setE6xxuv11bvxxxxxxxxxxvalue11("ca=Montreal; us=Boston");
      yrxxch511xhhxxhxxxxxoptions.setE7xxuo12bvxxxxxxxxxxoptions12("QE");
      yrxxch511xhhxxhxxxxxoptions.setE8xxup12bvxxxxxxxxxxpurpose12("ca=Manitoba us=Arizona");
      yrxxch511xhhxxhxxxxxoptions.setE9xxuv12bvxxxxxxxxxxvalue12("ca=MB us=AZ");
      yrxxch511xhhxxhxxxxxoptions.setF1xxuo13bvxxxxxxxxxxoptions13("");
      yrxxch511xhhxxhxxxxxoptions.setF2xxup13bvxxxxxxxxxxpurpose13("");
      yrxxch511xhhxxhxxxxxoptions.setF3xxuv13bvxxxxxxxxxxvalue13("");
      yrxxch511xhhxxhxxxxxoptions.setF4xxuo14bvxxxxxxxxxxoptions14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF5xxup14bvxxxxxxxxxxpurpose14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF6xxuv14bvxxxxxxxxxxvalue14("ca=M4L3Z8 us=10003 in=70003");
      yrxxch511xhhxxhxxxxxoptions.setF7xxuo15bvxxxxxxxxxxoptions15("Y");
      yrxxch511xhhxxhxxxxxoptions.setF8xxup15bvxxxxxxxxxxpurpose15("Yes");
      yrxxch511xhhxxhxxxxxoptions.setF9xxuv15bvxxxxxxxxxxvalue15("");
      yrxxch511xhhxxhxxxxxoptions.setG1xxuo16bvxxxxxxxxxxoptions16("IH");
      yrxxch511xhhxxhxxxxxoptions.setG2xxup16bvxxxxxxxxxxpurpose16("Inventory-HW");
      yrxxch511xhhxxhxxxxxoptions.setG3xxuv16bvxxxxxxxxxxvalue16("");
      yrxxch511xhhxxhxxxxxoptions.setG4xxuo17bvxxxxxxxxxxoptions17("?");
      yrxxch511xhhxxhxxxxxoptions.setG5xxup17bvxxxxxxxxxxpurpose17("?");
      yrxxch511xhhxxhxxxxxoptions.setG6xxuv17bvxxxxxxxxxxvalue17("");
      yrxxch511xhhxxhxxxxxoptions.setG7xxuo18bvxxxxxxxxxxoptions18("PI");
      yrxxch511xhhxxhxxxxxoptions.setG8xxup18bvxxxxxxxxxxpurpose18("Piece");
      yrxxch511xhhxxhxxxxxoptions.setG9xxuv18bvxxxxxxxxxxvalue18("h=18");
      yrxxch511xhhxxhxxxxxoptions.setH1xxuo19bvxxxxxxxxxxoptions19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH2xxup19bvxxxxxxxxxxpurpose19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH3xxuv19bvxxxxxxxxxxvalue19("");
      yrxxch511xhhxxhxxxxxoptions.setH4xxuo20bvxxxxxxxxxxoptions20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH5xxup20bvxxxxxxxxxxpurpose20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH6xxuv20bvxxxxxxxxxxvalue20("");
      yrxxch511xhhxxhxxxxxoptions.setH7xxuo21bvxxxxxxxxxxoptions21("Ms");
      yrxxch511xhhxxhxxxxxoptions.setH8xxup21bvxxxxxxxxxxpurpose21("Ms");
      yrxxch511xhhxxhxxxxxoptions.setH9xxuv21bvxxxxxxxxxxvalue21("");
      yrxxch511xhhxxhxxxxxoptions.setI1xxuo22bvxxxxxxxxxxoptions22("DI");
      yrxxch511xhhxxhxxxxxoptions.setI2xxup22bvxxxxxxxxxxpurpose22("Director");
      yrxxch511xhhxxhxxxxxoptions.setI3xxuv22bvxxxxxxxxxxvalue22("");
      yrxxch511xhhxxhxxxxxoptions.setI4xxuo23bvxxxxxxxxxxoptions23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI5xxup23bvxxxxxxxxxxpurpose23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI6xxuv23bvxxxxxxxxxxvalue23("");
      yrxxch511xhhxxhxxxxxoptions.setI7xxuo24bvxxxxxxxxxxoptions24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI8xxup24bvxxxxxxxxxxpurpose24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI9xxuv24bvxxxxxxxxxxvalue24("");
      yrxxch511xhhxxhxxxxxoptions.setJ1xxuo25bvxxxxxxxxxxoptions25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ2xxup25bvxxxxxxxxxxpurpose25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ3xxuv25bvxxxxxxxxxxvalue25("");
      yrxxch511xhhxxhxxxxxoptions.setJ4xxuo26bvxxxxxxxxxxoptions26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ5xxup26bvxxxxxxxxxxpurpose26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ6xxuv26bvxxxxxxxxxxvalue26("");
      yrxxch511xhhxxhxxxxxoptions.setJ7xxuo27bvxxxxxxxxxxoptions27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ8xxup27bvxxxxxxxxxxpurpose27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ9xxuv27bvxxxxxxxxxxvalue27("");
      yrxxch511xhhxxhxxxxxoptions.setK1xxuo28bvxxxxxxxxxxoptions28("PI");
      yrxxch511xhhxxhxxxxxoptions.setK2xxup28bvxxxxxxxxxxpurpose28("Person-Individual");
      yrxxch511xhhxxhxxxxxoptions.setK3xxuv28bvxxxxxxxxxxvalue28("");
      yrxxch511xhhxxhxxxxxoptions.setK4xxuo29bvxxxxxxxxxxoptions29("PI");
      yrxxch511xhhxxhxxxxxoptions.setK5xxup29bvxxxxxxxxxxpurpose29("Person-Individual");
      yrxxch511xhhxxhxxxxxoptions.setK6xxuv29bvxxxxxxxxxxvalue29("");
      yrxxch511xhhxxhxxxxxoptions.setK7xxuo30bvxxxxxxxxxxoptions30("EM");
      yrxxch511xhhxxhxxxxxoptions.setK8xxup30bvxxxxxxxxxxpurpose30("EMail");
      yrxxch511xhhxxhxxxxxoptions.setK9xxuv30bvxxxxxxxxxxvalue30("");
      yrxxch511xhhxxhxxxxxoptions.setL1xxuo31bvxxxxxxxxxxoptions31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL2xxup31bvxxxxxxxxxxpurpose31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL3xxuv31bvxxxxxxxxxxvalue31("");
      yrxxch511xhhxxhxxxxxoptions.setL4xxuo32bvxxxxxxxxxxoptions32("Room 301");
      yrxxch511xhhxxhxxxxxoptions.setL5xxup32bvxxxxxxxxxxpurpose32("Room 301");
      yrxxch511xhhxxhxxxxxoptions.setL6xxuv32bvxxxxxxxxxxvalue32("");
      yrxxch511xhhxxhxxxxxoptions.setL7xxuo33bvxxxxxxxxxxoptions33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL8xxup33bvxxxxxxxxxxpurpose33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL9xxuv33bvxxxxxxxxxxvalue33("");
      yrxxch511xhhxxhxxxxxoptions.setM1xxuo34bvxxxxxxxxxxoptions34("EUR");
      yrxxch511xhhxxhxxxxxoptions.setM2xxup34bvxxxxxxxxxxpurpose34("Euro");
      yrxxch511xhhxxhxxxxxoptions.setM3xxuv34bvxxxxxxxxxxvalue34("978");
      yrxxch511xhhxxhxxxxxoptions.setM4xxuo35bvxxxxxxxxxxoptions35("Lunch Appontment");
      yrxxch511xhhxxhxxxxxoptions.setM5xxup35bvxxxxxxxxxxpurpose35("c$88.90");
      yrxxch511xhhxxhxxxxxoptions.setM6xxuv35bvxxxxxxxxxxvalue35("");
      yrxxch511xhhxxhxxxxxoptions.setM7xxuo36bvxxxxxxxxxxoptions36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM8xxup36bvxxxxxxxxxxpurpose36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM9xxuv36bvxxxxxxxxxxvalue36("");
      yrxxch511xhhxxhxxxxxoptions.setN1xxuo37bvxxxxxxxxxxoptions37("L");
      yrxxch511xhhxxhxxxxxoptions.setN2xxup37bvxxxxxxxxxxpurpose37("Low");
      yrxxch511xhhxxhxxxxxoptions.setN3xxuv37bvxxxxxxxxxxvalue37("");
      yrxxch511xhhxxhxxxxxoptions.setN4xxuo38bvxxxxxxxxxxoptions38("V");
      yrxxch511xhhxxhxxxxxoptions.setN5xxup38bvxxxxxxxxxxpurpose38("Visitor");
      yrxxch511xhhxxhxxxxxoptions.setN6xxuv38bvxxxxxxxxxxvalue38("");
      yrxxch511xhhxxhxxxxxoptions.setN7xxuo39bvxxxxxxxxxxoptions39("W");
      yrxxch511xhhxxhxxxxxoptions.setN8xxup39bvxxxxxxxxxxpurpose39("Low");
      yrxxch511xhhxxhxxxxxoptions.setN9xxuv39bvxxxxxxxxxxvalue39("");
      yrxxch511xhhxxhxxxxxoptions.setO1xxuo40bvxxxxxxxxxxoptions40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO2xxup40bvxxxxxxxxxxpurpose40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO3xxuv40bvxxxxxxxxxxvalue40("");
      yrxxch511xhhxxhxxxxxoptions.setO4xxuo41bvxxxxxxxxxxoptions41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO5xxup41bvxxxxxxxxxxpurpose41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO6xxuv41bvxxxxxxxxxxvalue41("");
      yrxxch511xhhxxhxxxxxoptions.setO7xxuo42bvxxxxxxxxxxoptions42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO8xxup42bvxxxxxxxxxxpurpose42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO9xxuv42bvxxxxxxxxxxvalue42("");
      yrxxch511xhhxxhxxxxxoptions.setP1xxuo43bvxxxxxxxxxxoptions43("New");
      yrxxch511xhhxxhxxxxxoptions.setP2xxup43bvxxxxxxxxxxpurpose43("New");
      yrxxch511xhhxxhxxxxxoptions.setP3xxuv43bvxxxxxxxxxxvalue43("");
      yrxxch511xhhxxhxxxxxoptions.setP4xxuo44bvxxxxxxxxxxoptions44("");
      yrxxch511xhhxxhxxxxxoptions.setP5xxup44bvxxxxxxxxxxpurpose44("");
      yrxxch511xhhxxhxxxxxoptions.setP6xxuv44bvxxxxxxxxxxvalue44("");
      yrxxch511xhhxxhxxxxxoptions.setP7xxuo45bvxxxxxxxxxxoptions45("D");
      yrxxch511xhhxxhxxxxxoptions.setP8xxup45bvxxxxxxxxxxpurpose45("");
      yrxxch511xhhxxhxxxxxoptions.setP9xxuv45bvxxxxxxxxxxvalue45("");
      yrxxch511xhhxxhxxxxxoptions.setQ1xxuo46bvxxxxxxxxxxoptions46("T");
      yrxxch511xhhxxhxxxxxoptions.setQ2xxup46bvxxxxxxxxxxpurpose46("Temporary");
      yrxxch511xhhxxhxxxxxoptions.setQ3xxuv46bvxxxxxxxxxxvalue46("");
      yrxxch511xhhxxhxxxxxoptions.setQ4xxuo47bvxxxxxxxxxxoptions47("03");
      yrxxch511xhhxxhxxxxxoptions.setQ5xxup47bvxxxxxxxxxxpurpose47("03");
      yrxxch511xhhxxhxxxxxoptions.setQ6xxuv47bvxxxxxxxxxxvalue47("");
      yrxxch511xhhxxhxxxxxoptions.setQ7xxuo48bvxxxxxxxxxxoptions48("O");
      yrxxch511xhhxxhxxxxxoptions.setQ8xxup48bvxxxxxxxxxxpurpose48("Other");
      yrxxch511xhhxxhxxxxxoptions.setQ9xxuv48bvxxxxxxxxxxvalue48("");
      yrxxch511xhhxxhxxxxxoptions.setR1xxuo49bvxxxxxxxxxxoptions49("3R-LEFT-TOP-C");
      yrxxch511xhhxxhxxxxxoptions.setR2xxup49bvxxxxxxxxxxpurpose49("LEFT TOP");
      yrxxch511xhhxxhxxxxxoptions.setR3xxuv49bvxxxxxxxxxxvalue49("");
      yrxxch511xhhxxhxxxxxoptions.setR4xxuo50bvxxxxxxxxxxoptions50("TXT");
      yrxxch511xhhxxhxxxxxoptions.setR5xxup50bvxxxxxxxxxxpurpose50("TEXT BODY");
      yrxxch511xhhxxhxxxxxoptions.setR6xxuv50bvxxxxxxxxxxvalue50("");
      //51 shipment type
      yrxxch511xhhxxhxxxxxoptions.setR7xxuo51bvxxxxxxxxxxoptions51("PS");
      yrxxch511xhhxxhxxxxxoptions.setR8xxup51bvxxxxxxxxxxpurpose51("PickUp/Small Item");
      yrxxch511xhhxxhxxxxxoptions.setR9xxuv51bvxxxxxxxxxxvalue51("");
      yrxxch511xhhxxhxxxxxoptions.setS1xxuo52bvxxxxxxxxxxoptions52("CCE");
      yrxxch511xhhxxhxxxxxoptions.setS2xxup52bvxxxxxxxxxxpurpose52("Cover Cost of Event");
      yrxxch511xhhxxhxxxxxoptions.setS3xxuv52bvxxxxxxxxxxvalue52("");
      yrxxch511xhhxxhxxxxxoptions.setS4xxuo53bvxxxxxxxxxxoptions53("SC");
      yrxxch511xhhxxhxxxxxoptions.setS5xxup53bvxxxxxxxxxxpurpose53("Social Cause ");
      yrxxch511xhhxxhxxxxxoptions.setS6xxuv53bvxxxxxxxxxxvalue53("");
      yrxxch511xhhxxhxxxxxoptions.setS7xxuo54bvxxxxxxxxxxoptions54("Trend");
      yrxxch511xhhxxhxxxxxoptions.setS8xxup54bvxxxxxxxxxxpurpose54("Trend");
      yrxxch511xhhxxhxxxxxoptions.setS9xxuv54bvxxxxxxxxxxvalue54("");
      yrxxch511xhhxxhxxxxxoptions.setT1xxuo55bvxxxxxxxxxxoptions55("Medium");
      yrxxch511xhhxxhxxxxxoptions.setT2xxup55bvxxxxxxxxxxpurpose55("Medium");
      yrxxch511xhhxxhxxxxxoptions.setT3xxuv55bvxxxxxxxxxxvalue55("");
      yrxxch511xhhxxhxxxxxoptions.setT4xxuo56bvxxxxxxxxxxoptions56("");
      yrxxch511xhhxxhxxxxxoptions.setT5xxup56bvxxxxxxxxxxpurpose56("");
      yrxxch511xhhxxhxxxxxoptions.setT6xxuv56bvxxxxxxxxxxvalue56("");
      yrxxch511xhhxxhxxxxxoptions.setT7xxuo57bvxxxxxxxxxxoptions57("Black");
      yrxxch511xhhxxhxxxxxoptions.setT8xxup57bvxxxxxxxxxxpurpose57("Black");
      yrxxch511xhhxxhxxxxxoptions.setT9xxuv57bvxxxxxxxxxxvalue57("");
      yrxxch511xhhxxhxxxxxoptions.setU1xxuo58bvxxxxxxxxxxoptions58("Country");
      yrxxch511xhhxxhxxxxxoptions.setU2xxup58bvxxxxxxxxxxpurpose58("Country");
      yrxxch511xhhxxhxxxxxoptions.setU3xxuv58bvxxxxxxxxxxvalue58("");
      yrxxch511xhhxxhxxxxxoptions.setU4xxuo59bvxxxxxxxxxxoptions59("Nylon");
      yrxxch511xhhxxhxxxxxoptions.setU5xxup59bvxxxxxxxxxxpurpose59("Nylon");
      yrxxch511xhhxxhxxxxxoptions.setU6xxuv59bvxxxxxxxxxxvalue59("");
      yrxxch511xhhxxhxxxxxoptions.setU7xxuo60bvxxxxxxxxxxoptions60("Company");
      yrxxch511xhhxxhxxxxxoptions.setU8xxup60bvxxxxxxxxxxpurpose60("Company");
      yrxxch511xhhxxhxxxxxoptions.setU9xxuv60bvxxxxxxxxxxvalue60("");
      yrxxch511xhhxxhxxxxxoptions.setV1xxuo61bvxxxxxxxxxxoptions61("Custom");
      yrxxch511xhhxxhxxxxxoptions.setV2xxup61bvxxxxxxxxxxpurpose61("Custom");
      yrxxch511xhhxxhxxxxxoptions.setV3xxuv61bvxxxxxxxxxxvalue61("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptionsHome.persist(client);
      yrxxch511xhhxxhxxxxxoptionsHome.clearInstance();

      yrxxch511xhhxxhxxxxxoptions=yrxxch511xhhxxhxxxxxoptionsHome.getInstance();
      yrxxch511xhhxxhxxxxxoptions.setA0xxukcxbvxxxxxxxxxxrow("04");
      yrxxch511xhhxxhxxxxxoptions.setB1xxuo01bvxxxxxxxxxxoptions01("QD");
      yrxxch511xhhxxhxxxxxoptions.setB2xxup01bvxxxxxxxxxxpurpose01("Dividend");
      yrxxch511xhhxxhxxxxxoptions.setB3xxuv01bvxxxxxxxxxxvalue01("");
      yrxxch511xhhxxhxxxxxoptions.setB4xxuo02bvxxxxxxxxxxoptions02("S");
      yrxxch511xhhxxhxxxxxoptions.setB5xxup02bvxxxxxxxxxxpurpose02("SubTotal");
      yrxxch511xhhxxhxxxxxoptions.setB6xxuv02bvxxxxxxxxxxvalue02("");
      yrxxch511xhhxxhxxxxxoptions.setB7xxuo03bvxxxxxxxxxxoptions03("P");
      yrxxch511xhhxxhxxxxxoptions.setB8xxup03bvxxxxxxxxxxpurpose03("Payable");
      yrxxch511xhhxxhxxxxxoptions.setB9xxuv03bvxxxxxxxxxxvalue03("");
      yrxxch511xhhxxhxxxxxoptions.setC1xxuo04bvxxxxxxxxxxoptions04("");
      yrxxch511xhhxxhxxxxxoptions.setC2xxup04bvxxxxxxxxxxpurpose04("");
      yrxxch511xhhxxhxxxxxoptions.setC3xxuv04bvxxxxxxxxxxvalue04("");
      yrxxch511xhhxxhxxxxxoptions.setC4xxuo05bvxxxxxxxxxxoptions05("");
      yrxxch511xhhxxhxxxxxoptions.setC5xxup05bvxxxxxxxxxxpurpose05("");
      yrxxch511xhhxxhxxxxxoptions.setC6xxuv05bvxxxxxxxxxxvalue05("");
      yrxxch511xhhxxhxxxxxoptions.setC7xxuo06bvxxxxxxxxxxoptions06("");
      yrxxch511xhhxxhxxxxxoptions.setC8xxup06bvxxxxxxxxxxpurpose06("");
      yrxxch511xhhxxhxxxxxoptions.setC9xxuv06bvxxxxxxxxxxvalue06("");
      yrxxch511xhhxxhxxxxxoptions.setD1xxuo07bvxxxxxxxxxxoptions07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD2xxup07bvxxxxxxxxxxpurpose07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD3xxuv07bvxxxxxxxxxxvalue07("");
      yrxxch511xhhxxhxxxxxoptions.setD4xxuo08bvxxxxxxxxxxoptions08("F");
      yrxxch511xhhxxhxxxxxoptions.setD5xxup08bvxxxxxxxxxxpurpose08("Flexible");
      yrxxch511xhhxxhxxxxxoptions.setD6xxuv08bvxxxxxxxxxxvalue08("");
      yrxxch511xhhxxhxxxxxoptions.setD7xxuo09bvxxxxxxxxxxoptions09("30");
      yrxxch511xhhxxhxxxxxoptions.setD8xxup09bvxxxxxxxxxxpurpose09("-30 days");
      yrxxch511xhhxxhxxxxxoptions.setD9xxuv09bvxxxxxxxxxxvalue09("");
      yrxxch511xhhxxhxxxxxoptions.setE1xxuo10bvxxxxxxxxxxoptions10("cash");
      yrxxch511xhhxxhxxxxxoptions.setE2xxup10bvxxxxxxxxxxpurpose10("-cash");
      yrxxch511xhhxxhxxxxxoptions.setE3xxuv10bvxxxxxxxxxxvalue10("");
      yrxxch511xhhxxhxxxxxoptions.setE4xxuo11bvxxxxxxxxxxoptions11("Montreal");
      yrxxch511xhhxxhxxxxxoptions.setE5xxup11bvxxxxxxxxxxpurpose11("Toronto");
      yrxxch511xhhxxhxxxxxoptions.setE6xxuv11bvxxxxxxxxxxvalue11("ca=Montreal; us=Boston");
      yrxxch511xhhxxhxxxxxoptions.setE7xxuo12bvxxxxxxxxxxoptions12("QE");
      yrxxch511xhhxxhxxxxxoptions.setE8xxup12bvxxxxxxxxxxpurpose12("ca=NewBrunswick us=Arkansas");
      yrxxch511xhhxxhxxxxxoptions.setE9xxuv12bvxxxxxxxxxxvalue12("ca=NB us=AR");
      yrxxch511xhhxxhxxxxxoptions.setF1xxuo13bvxxxxxxxxxxoptions13("");
      yrxxch511xhhxxhxxxxxoptions.setF2xxup13bvxxxxxxxxxxpurpose13("");
      yrxxch511xhhxxhxxxxxoptions.setF3xxuv13bvxxxxxxxxxxvalue13("");
      yrxxch511xhhxxhxxxxxoptions.setF4xxuo14bvxxxxxxxxxxoptions14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF5xxup14bvxxxxxxxxxxpurpose14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF6xxuv14bvxxxxxxxxxxvalue14("ca=M4L3Z8 us=10003 in=70003");
      yrxxch511xhhxxhxxxxxoptions.setF7xxuo15bvxxxxxxxxxxoptions15("Y");
      yrxxch511xhhxxhxxxxxoptions.setF8xxup15bvxxxxxxxxxxpurpose15("Yes");
      yrxxch511xhhxxhxxxxxoptions.setF9xxuv15bvxxxxxxxxxxvalue15("");
      yrxxch511xhhxxhxxxxxoptions.setG1xxuo16bvxxxxxxxxxxoptions16("IQ");
      yrxxch511xhhxxhxxxxxoptions.setG2xxup16bvxxxxxxxxxxpurpose16("Issue-Question");
      yrxxch511xhhxxhxxxxxoptions.setG3xxuv16bvxxxxxxxxxxvalue16("");
      yrxxch511xhhxxhxxxxxoptions.setG4xxuo17bvxxxxxxxxxxoptions17("?");
      yrxxch511xhhxxhxxxxxoptions.setG5xxup17bvxxxxxxxxxxpurpose17("?");
      yrxxch511xhhxxhxxxxxoptions.setG6xxuv17bvxxxxxxxxxxvalue17("");
      yrxxch511xhhxxhxxxxxoptions.setG7xxuo18bvxxxxxxxxxxoptions18("DO");
      yrxxch511xhhxxhxxxxxoptions.setG8xxup18bvxxxxxxxxxxpurpose18("Dozen");
      yrxxch511xhhxxhxxxxxoptions.setG9xxuv18bvxxxxxxxxxxvalue18("h=18");
      yrxxch511xhhxxhxxxxxoptions.setH1xxuo19bvxxxxxxxxxxoptions19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH2xxup19bvxxxxxxxxxxpurpose19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH3xxuv19bvxxxxxxxxxxvalue19("");
      yrxxch511xhhxxhxxxxxoptions.setH4xxuo20bvxxxxxxxxxxoptions20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH5xxup20bvxxxxxxxxxxpurpose20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH6xxuv20bvxxxxxxxxxxvalue20("");
      yrxxch511xhhxxhxxxxxoptions.setH7xxuo21bvxxxxxxxxxxoptions21("Mrs");
      yrxxch511xhhxxhxxxxxoptions.setH8xxup21bvxxxxxxxxxxpurpose21("Mrs");
      yrxxch511xhhxxhxxxxxoptions.setH9xxuv21bvxxxxxxxxxxvalue21("");
      yrxxch511xhhxxhxxxxxoptions.setI1xxuo22bvxxxxxxxxxxoptions22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI2xxup22bvxxxxxxxxxxpurpose22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI3xxuv22bvxxxxxxxxxxvalue22("");
      yrxxch511xhhxxhxxxxxoptions.setI4xxuo23bvxxxxxxxxxxoptions23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI5xxup23bvxxxxxxxxxxpurpose23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI6xxuv23bvxxxxxxxxxxvalue23("");
      yrxxch511xhhxxhxxxxxoptions.setI7xxuo24bvxxxxxxxxxxoptions24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI8xxup24bvxxxxxxxxxxpurpose24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI9xxuv24bvxxxxxxxxxxvalue24("");
      yrxxch511xhhxxhxxxxxoptions.setJ1xxuo25bvxxxxxxxxxxoptions25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ2xxup25bvxxxxxxxxxxpurpose25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ3xxuv25bvxxxxxxxxxxvalue25("");
      yrxxch511xhhxxhxxxxxoptions.setJ4xxuo26bvxxxxxxxxxxoptions26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ5xxup26bvxxxxxxxxxxpurpose26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ6xxuv26bvxxxxxxxxxxvalue26("");
      yrxxch511xhhxxhxxxxxoptions.setJ7xxuo27bvxxxxxxxxxxoptions27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ8xxup27bvxxxxxxxxxxpurpose27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ9xxuv27bvxxxxxxxxxxvalue27("");
      yrxxch511xhhxxhxxxxxoptions.setK1xxuo28bvxxxxxxxxxxoptions28("PF");
      yrxxch511xhhxxhxxxxxoptions.setK2xxup28bvxxxxxxxxxxpurpose28("Persons-Family");
      yrxxch511xhhxxhxxxxxoptions.setK3xxuv28bvxxxxxxxxxxvalue28("");
      yrxxch511xhhxxhxxxxxoptions.setK4xxuo29bvxxxxxxxxxxoptions29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK5xxup29bvxxxxxxxxxxpurpose29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK6xxuv29bvxxxxxxxxxxvalue29("");
      yrxxch511xhhxxhxxxxxoptions.setK7xxuo30bvxxxxxxxxxxoptions30("EM");
      yrxxch511xhhxxhxxxxxoptions.setK8xxup30bvxxxxxxxxxxpurpose30("EMail");
      yrxxch511xhhxxhxxxxxoptions.setK9xxuv30bvxxxxxxxxxxvalue30("");
      yrxxch511xhhxxhxxxxxoptions.setL1xxuo31bvxxxxxxxxxxoptions31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL2xxup31bvxxxxxxxxxxpurpose31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL3xxuv31bvxxxxxxxxxxvalue31("");
      yrxxch511xhhxxhxxxxxoptions.setL4xxuo32bvxxxxxxxxxxoptions32("Room 401");
      yrxxch511xhhxxhxxxxxoptions.setL5xxup32bvxxxxxxxxxxpurpose32("Room 401");
      yrxxch511xhhxxhxxxxxoptions.setL6xxuv32bvxxxxxxxxxxvalue32("");
      yrxxch511xhhxxhxxxxxoptions.setL7xxuo33bvxxxxxxxxxxoptions33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL8xxup33bvxxxxxxxxxxpurpose33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL9xxuv33bvxxxxxxxxxxvalue33("");
      yrxxch511xhhxxhxxxxxoptions.setM1xxuo34bvxxxxxxxxxxoptions34("GBP");
      yrxxch511xhhxxhxxxxxoptions.setM2xxup34bvxxxxxxxxxxpurpose34("Pound Sterling");
      yrxxch511xhhxxhxxxxxoptions.setM3xxuv34bvxxxxxxxxxxvalue34("826");
      yrxxch511xhhxxhxxxxxoptions.setM4xxuo35bvxxxxxxxxxxoptions35("Lunch Appontment");
      yrxxch511xhhxxhxxxxxoptions.setM5xxup35bvxxxxxxxxxxpurpose35("c$88.90");
      yrxxch511xhhxxhxxxxxoptions.setM6xxuv35bvxxxxxxxxxxvalue35("");
      yrxxch511xhhxxhxxxxxoptions.setM7xxuo36bvxxxxxxxxxxoptions36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM8xxup36bvxxxxxxxxxxpurpose36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM9xxuv36bvxxxxxxxxxxvalue36("");
      yrxxch511xhhxxhxxxxxoptions.setN1xxuo37bvxxxxxxxxxxoptions37("P");
      yrxxch511xhhxxhxxxxxoptions.setN2xxup37bvxxxxxxxxxxpurpose37("Postponed ");
      yrxxch511xhhxxhxxxxxoptions.setN3xxuv37bvxxxxxxxxxxvalue37("");
      yrxxch511xhhxxhxxxxxoptions.setN4xxuo38bvxxxxxxxxxxoptions38("S");
      yrxxch511xhhxxhxxxxxoptions.setN5xxup38bvxxxxxxxxxxpurpose38("System Admin");
      yrxxch511xhhxxhxxxxxoptions.setN6xxuv38bvxxxxxxxxxxvalue38("");
      yrxxch511xhhxxhxxxxxoptions.setN7xxuo39bvxxxxxxxxxxoptions39("H");
      yrxxch511xhhxxhxxxxxoptions.setN8xxup39bvxxxxxxxxxxpurpose39("High");
      yrxxch511xhhxxhxxxxxoptions.setN9xxuv39bvxxxxxxxxxxvalue39("");
      yrxxch511xhhxxhxxxxxoptions.setO1xxuo40bvxxxxxxxxxxoptions40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO2xxup40bvxxxxxxxxxxpurpose40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO3xxuv40bvxxxxxxxxxxvalue40("");
      yrxxch511xhhxxhxxxxxoptions.setO4xxuo41bvxxxxxxxxxxoptions41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO5xxup41bvxxxxxxxxxxpurpose41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO6xxuv41bvxxxxxxxxxxvalue41("");
      yrxxch511xhhxxhxxxxxoptions.setO7xxuo42bvxxxxxxxxxxoptions42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO8xxup42bvxxxxxxxxxxpurpose42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO9xxuv42bvxxxxxxxxxxvalue42("");
      yrxxch511xhhxxhxxxxxoptions.setP1xxuo43bvxxxxxxxxxxoptions43("New");
      yrxxch511xhhxxhxxxxxoptions.setP2xxup43bvxxxxxxxxxxpurpose43("New");
      yrxxch511xhhxxhxxxxxoptions.setP3xxuv43bvxxxxxxxxxxvalue43("");
      yrxxch511xhhxxhxxxxxoptions.setP4xxuo44bvxxxxxxxxxxoptions44("");
      yrxxch511xhhxxhxxxxxoptions.setP5xxup44bvxxxxxxxxxxpurpose44("");
      yrxxch511xhhxxhxxxxxoptions.setP6xxuv44bvxxxxxxxxxxvalue44("");
      yrxxch511xhhxxhxxxxxoptions.setP7xxuo45bvxxxxxxxxxxoptions45("D");
      yrxxch511xhhxxhxxxxxoptions.setP8xxup45bvxxxxxxxxxxpurpose45("");
      yrxxch511xhhxxhxxxxxoptions.setP9xxuv45bvxxxxxxxxxxvalue45("");
      yrxxch511xhhxxhxxxxxoptions.setQ1xxuo46bvxxxxxxxxxxoptions46("F");
      yrxxch511xhhxxhxxxxxoptions.setQ2xxup46bvxxxxxxxxxxpurpose46("Family");
      yrxxch511xhhxxhxxxxxoptions.setQ3xxuv46bvxxxxxxxxxxvalue46("");
      yrxxch511xhhxxhxxxxxoptions.setQ4xxuo47bvxxxxxxxxxxoptions47("04");
      yrxxch511xhhxxhxxxxxoptions.setQ5xxup47bvxxxxxxxxxxpurpose47("04");
      yrxxch511xhhxxhxxxxxoptions.setQ6xxuv47bvxxxxxxxxxxvalue47("E");
      yrxxch511xhhxxhxxxxxoptions.setQ7xxuo48bvxxxxxxxxxxoptions48("Personal");
      yrxxch511xhhxxhxxxxxoptions.setQ8xxup48bvxxxxxxxxxxpurpose48("");
      yrxxch511xhhxxhxxxxxoptions.setQ9xxuv48bvxxxxxxxxxxvalue48("");
      yrxxch511xhhxxhxxxxxoptions.setR1xxuo49bvxxxxxxxxxxoptions49("3R-RIGHT-TOP-C");
      yrxxch511xhhxxhxxxxxoptions.setR2xxup49bvxxxxxxxxxxpurpose49("RIGHT-TOP");
      yrxxch511xhhxxhxxxxxoptions.setR3xxuv49bvxxxxxxxxxxvalue49("");
      yrxxch511xhhxxhxxxxxoptions.setR4xxuo50bvxxxxxxxxxxoptions50("VID");
      yrxxch511xhhxxhxxxxxoptions.setR5xxup50bvxxxxxxxxxxpurpose50("VIDEO SRC");
      yrxxch511xhhxxhxxxxxoptions.setR6xxuv50bvxxxxxxxxxxvalue50("");
      yrxxch511xhhxxhxxxxxoptions.setR7xxuo51bvxxxxxxxxxxoptions51("SM");
      yrxxch511xhhxxhxxxxxoptions.setR8xxup51bvxxxxxxxxxxpurpose51("Standard Shipping/Medium Item");
      yrxxch511xhhxxhxxxxxoptions.setR9xxuv51bvxxxxxxxxxxvalue51("");
      yrxxch511xhhxxhxxxxxoptions.setS1xxuo52bvxxxxxxxxxxoptions52("");
      yrxxch511xhhxxhxxxxxoptions.setS2xxup52bvxxxxxxxxxxpurpose52("");
      yrxxch511xhhxxhxxxxxoptions.setS3xxuv52bvxxxxxxxxxxvalue52("");
      yrxxch511xhhxxhxxxxxoptions.setS4xxuo53bvxxxxxxxxxxoptions53("");
      yrxxch511xhhxxhxxxxxoptions.setS5xxup53bvxxxxxxxxxxpurpose53("");
      yrxxch511xhhxxhxxxxxoptions.setS6xxuv53bvxxxxxxxxxxvalue53("");
      yrxxch511xhhxxhxxxxxoptions.setS7xxuo54bvxxxxxxxxxxoptions54("Select this/override ");
      yrxxch511xhhxxhxxxxxoptions.setS8xxup54bvxxxxxxxxxxpurpose54("keyin");
      yrxxch511xhhxxhxxxxxoptions.setS9xxuv54bvxxxxxxxxxxvalue54("");
      yrxxch511xhhxxhxxxxxoptions.setT1xxuo55bvxxxxxxxxxxoptions55("Large");
      yrxxch511xhhxxhxxxxxoptions.setT2xxup55bvxxxxxxxxxxpurpose55("Large");
      yrxxch511xhhxxhxxxxxoptions.setT3xxuv55bvxxxxxxxxxxvalue55("");
      yrxxch511xhhxxhxxxxxoptions.setT4xxuo56bvxxxxxxxxxxoptions56("");
      yrxxch511xhhxxhxxxxxoptions.setT5xxup56bvxxxxxxxxxxpurpose56("");
      yrxxch511xhhxxhxxxxxoptions.setT6xxuv56bvxxxxxxxxxxvalue56("");
      yrxxch511xhhxxhxxxxxoptions.setT7xxuo57bvxxxxxxxxxxoptions57("Red");
      yrxxch511xhhxxhxxxxxoptions.setT8xxup57bvxxxxxxxxxxpurpose57("Red");
      yrxxch511xhhxxhxxxxxoptions.setT9xxuv57bvxxxxxxxxxxvalue57("");
      yrxxch511xhhxxhxxxxxoptions.setU1xxuo58bvxxxxxxxxxxoptions58("Food");
      yrxxch511xhhxxhxxxxxoptions.setU2xxup58bvxxxxxxxxxxpurpose58("Food Typ");
      yrxxch511xhhxxhxxxxxoptions.setU3xxuv58bvxxxxxxxxxxvalue58("");
      yrxxch511xhhxxhxxxxxoptions.setU4xxuo59bvxxxxxxxxxxoptions59("Wool");
      yrxxch511xhhxxhxxxxxoptions.setU5xxup59bvxxxxxxxxxxpurpose59("Wool");
      yrxxch511xhhxxhxxxxxoptions.setU6xxuv59bvxxxxxxxxxxvalue59("");
      yrxxch511xhhxxhxxxxxoptions.setU7xxuo60bvxxxxxxxxxxoptions60("");
      yrxxch511xhhxxhxxxxxoptions.setU8xxup60bvxxxxxxxxxxpurpose60("");
      yrxxch511xhhxxhxxxxxoptions.setU9xxuv60bvxxxxxxxxxxvalue60("");
      yrxxch511xhhxxhxxxxxoptions.setV1xxuo61bvxxxxxxxxxxoptions61("");
      yrxxch511xhhxxhxxxxxoptions.setV2xxup61bvxxxxxxxxxxpurpose61("");
      yrxxch511xhhxxhxxxxxoptions.setV3xxuv61bvxxxxxxxxxxvalue61("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptionsHome.persist(client);
      yrxxch511xhhxxhxxxxxoptionsHome.clearInstance();


      yrxxch511xhhxxhxxxxxoptionsHome.clearInstance();
      yrxxch511xhhxxhxxxxxoptions=yrxxch511xhhxxhxxxxxoptionsHome.getInstance();
      yrxxch511xhhxxhxxxxxoptions.setA0xxukcxbvxxxxxxxxxxrow("05");
      yrxxch511xhhxxhxxxxxoptions.setB1xxuo01bvxxxxxxxxxxoptions01("E");
      yrxxch511xhhxxhxxxxxoptions.setB2xxup01bvxxxxxxxxxxpurpose01("Expense");
      yrxxch511xhhxxhxxxxxoptions.setB3xxuv01bvxxxxxxxxxxvalue01("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptions.setB4xxuo02bvxxxxxxxxxxoptions02("T");
      yrxxch511xhhxxhxxxxxoptions.setB5xxup02bvxxxxxxxxxxpurpose02("Total");
      yrxxch511xhhxxhxxxxxoptions.setB6xxuv02bvxxxxxxxxxxvalue02("");
      yrxxch511xhhxxhxxxxxoptions.setB7xxuo03bvxxxxxxxxxxoptions03("P");
      yrxxch511xhhxxhxxxxxoptions.setB8xxup03bvxxxxxxxxxxpurpose03("Payable");
      yrxxch511xhhxxhxxxxxoptions.setB9xxuv03bvxxxxxxxxxxvalue03("");
      yrxxch511xhhxxhxxxxxoptions.setC1xxuo04bvxxxxxxxxxxoptions04("");
      yrxxch511xhhxxhxxxxxoptions.setC2xxup04bvxxxxxxxxxxpurpose04("");
      yrxxch511xhhxxhxxxxxoptions.setC3xxuv04bvxxxxxxxxxxvalue04("");
      yrxxch511xhhxxhxxxxxoptions.setC4xxuo05bvxxxxxxxxxxoptions05("");
      yrxxch511xhhxxhxxxxxoptions.setC5xxup05bvxxxxxxxxxxpurpose05("");
      yrxxch511xhhxxhxxxxxoptions.setC6xxuv05bvxxxxxxxxxxvalue05("");
      yrxxch511xhhxxhxxxxxoptions.setC7xxuo06bvxxxxxxxxxxoptions06("");
      yrxxch511xhhxxhxxxxxoptions.setC8xxup06bvxxxxxxxxxxpurpose06("");
      yrxxch511xhhxxhxxxxxoptions.setC9xxuv06bvxxxxxxxxxxvalue06("");
      yrxxch511xhhxxhxxxxxoptions.setD1xxuo07bvxxxxxxxxxxoptions07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD2xxup07bvxxxxxxxxxxpurpose07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD3xxuv07bvxxxxxxxxxxvalue07("");
      yrxxch511xhhxxhxxxxxoptions.setD4xxuo08bvxxxxxxxxxxoptions08("C");
      yrxxch511xhhxxhxxxxxoptions.setD5xxup08bvxxxxxxxxxxpurpose08("Cancelled");
      yrxxch511xhhxxhxxxxxoptions.setD6xxuv08bvxxxxxxxxxxvalue08("");
      yrxxch511xhhxxhxxxxxoptions.setD7xxuo09bvxxxxxxxxxxoptions09("ToPay and Delivery");
      yrxxch511xhhxxhxxxxxoptions.setD8xxup09bvxxxxxxxxxxpurpose09("ToPay and Delivery");
      yrxxch511xhhxxhxxxxxoptions.setD9xxuv09bvxxxxxxxxxxvalue09("");
      yrxxch511xhhxxhxxxxxoptions.setE1xxuo10bvxxxxxxxxxxoptions10("cd");
      yrxxch511xhhxxhxxxxxoptions.setE2xxup10bvxxxxxxxxxxpurpose10("-draft/direct debit");
      yrxxch511xhhxxhxxxxxoptions.setE3xxuv10bvxxxxxxxxxxvalue10("");
      yrxxch511xhhxxhxxxxxoptions.setE4xxuo11bvxxxxxxxxxxoptions11("Montreal");
      yrxxch511xhhxxhxxxxxoptions.setE5xxup11bvxxxxxxxxxxpurpose11("Toronto");
      yrxxch511xhhxxhxxxxxoptions.setE6xxuv11bvxxxxxxxxxxvalue11("ca=Montreal; us=Boston");
      yrxxch511xhhxxhxxxxxoptions.setE7xxuo12bvxxxxxxxxxxoptions12("QE");
      yrxxch511xhhxxhxxxxxoptions.setE8xxup12bvxxxxxxxxxxpurpose12("ca=New Found Land us=California");
      yrxxch511xhhxxhxxxxxoptions.setE9xxuv12bvxxxxxxxxxxvalue12("ca=NL us=CA");
      yrxxch511xhhxxhxxxxxoptions.setF1xxuo13bvxxxxxxxxxxoptions13("");
      yrxxch511xhhxxhxxxxxoptions.setF2xxup13bvxxxxxxxxxxpurpose13("");
      yrxxch511xhhxxhxxxxxoptions.setF3xxuv13bvxxxxxxxxxxvalue13("");
      yrxxch511xhhxxhxxxxxoptions.setF4xxuo14bvxxxxxxxxxxoptions14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF5xxup14bvxxxxxxxxxxpurpose14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF6xxuv14bvxxxxxxxxxxvalue14("ca=M4L3Z8 us=10003 in=70003");
      yrxxch511xhhxxhxxxxxoptions.setF7xxuo15bvxxxxxxxxxxoptions15("Y");
      yrxxch511xhhxxhxxxxxoptions.setF8xxup15bvxxxxxxxxxxpurpose15("Yes");
      yrxxch511xhhxxhxxxxxoptions.setF9xxuv15bvxxxxxxxxxxvalue15("");
      yrxxch511xhhxxhxxxxxoptions.setG1xxuo16bvxxxxxxxxxxoptions16("SI-D");
      yrxxch511xhhxxhxxxxxoptions.setG2xxup16bvxxxxxxxxxxpurpose16("Shopping-Item");
      yrxxch511xhhxxhxxxxxoptions.setG3xxuv16bvxxxxxxxxxxvalue16("");
      yrxxch511xhhxxhxxxxxoptions.setG4xxuo17bvxxxxxxxxxxoptions17("?");
      yrxxch511xhhxxhxxxxxoptions.setG5xxup17bvxxxxxxxxxxpurpose17("?");
      yrxxch511xhhxxhxxxxxoptions.setG6xxuv17bvxxxxxxxxxxvalue17("");
      yrxxch511xhhxxhxxxxxoptions.setG7xxuo18bvxxxxxxxxxxoptions18("LI");
      yrxxch511xhhxxhxxxxxoptions.setG8xxup18bvxxxxxxxxxxpurpose18("Length-inch");
      yrxxch511xhhxxhxxxxxoptions.setG9xxuv18bvxxxxxxxxxxvalue18("h=18");
      yrxxch511xhhxxhxxxxxoptions.setH1xxuo19bvxxxxxxxxxxoptions19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH2xxup19bvxxxxxxxxxxpurpose19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH3xxuv19bvxxxxxxxxxxvalue19("");
      yrxxch511xhhxxhxxxxxoptions.setH4xxuo20bvxxxxxxxxxxoptions20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH5xxup20bvxxxxxxxxxxpurpose20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH6xxuv20bvxxxxxxxxxxvalue20("");
      yrxxch511xhhxxhxxxxxoptions.setH7xxuo21bvxxxxxxxxxxoptions21("Miss");
      yrxxch511xhhxxhxxxxxoptions.setH8xxup21bvxxxxxxxxxxpurpose21("Miss");
      yrxxch511xhhxxhxxxxxoptions.setH9xxuv21bvxxxxxxxxxxvalue21("");
      yrxxch511xhhxxhxxxxxoptions.setI1xxuo22bvxxxxxxxxxxoptions22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI2xxup22bvxxxxxxxxxxpurpose22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI3xxuv22bvxxxxxxxxxxvalue22("");
      yrxxch511xhhxxhxxxxxoptions.setI4xxuo23bvxxxxxxxxxxoptions23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI5xxup23bvxxxxxxxxxxpurpose23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI6xxuv23bvxxxxxxxxxxvalue23("");
      yrxxch511xhhxxhxxxxxoptions.setI7xxuo24bvxxxxxxxxxxoptions24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI8xxup24bvxxxxxxxxxxpurpose24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI9xxuv24bvxxxxxxxxxxvalue24("");
      yrxxch511xhhxxhxxxxxoptions.setJ1xxuo25bvxxxxxxxxxxoptions25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ2xxup25bvxxxxxxxxxxpurpose25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ3xxuv25bvxxxxxxxxxxvalue25("");
      yrxxch511xhhxxhxxxxxoptions.setJ4xxuo26bvxxxxxxxxxxoptions26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ5xxup26bvxxxxxxxxxxpurpose26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ6xxuv26bvxxxxxxxxxxvalue26("");
      yrxxch511xhhxxhxxxxxoptions.setJ7xxuo27bvxxxxxxxxxxoptions27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ8xxup27bvxxxxxxxxxxpurpose27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ9xxuv27bvxxxxxxxxxxvalue27("");
      yrxxch511xhhxxhxxxxxoptions.setK1xxuo28bvxxxxxxxxxxoptions28("PF");
      yrxxch511xhhxxhxxxxxoptions.setK2xxup28bvxxxxxxxxxxpurpose28("Persons-Family");
      yrxxch511xhhxxhxxxxxoptions.setK3xxuv28bvxxxxxxxxxxvalue28("");
      yrxxch511xhhxxhxxxxxoptions.setK4xxuo29bvxxxxxxxxxxoptions29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK5xxup29bvxxxxxxxxxxpurpose29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK6xxuv29bvxxxxxxxxxxvalue29("");
      yrxxch511xhhxxhxxxxxoptions.setK7xxuo30bvxxxxxxxxxxoptions30("EM");
      yrxxch511xhhxxhxxxxxoptions.setK8xxup30bvxxxxxxxxxxpurpose30("EMail");
      yrxxch511xhhxxhxxxxxoptions.setK9xxuv30bvxxxxxxxxxxvalue30("");
      yrxxch511xhhxxhxxxxxoptions.setL1xxuo31bvxxxxxxxxxxoptions31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL2xxup31bvxxxxxxxxxxpurpose31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL3xxuv31bvxxxxxxxxxxvalue31("");
      yrxxch511xhhxxhxxxxxoptions.setL4xxuo32bvxxxxxxxxxxoptions32("Room 501");
      yrxxch511xhhxxhxxxxxoptions.setL5xxup32bvxxxxxxxxxxpurpose32("Room 501");
      yrxxch511xhhxxhxxxxxoptions.setL6xxuv32bvxxxxxxxxxxvalue32("");
      yrxxch511xhhxxhxxxxxoptions.setL7xxuo33bvxxxxxxxxxxoptions33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL8xxup33bvxxxxxxxxxxpurpose33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL9xxuv33bvxxxxxxxxxxvalue33("");
      yrxxch511xhhxxhxxxxxoptions.setM1xxuo34bvxxxxxxxxxxoptions34("INR");
      yrxxch511xhhxxhxxxxxoptions.setM2xxup34bvxxxxxxxxxxpurpose34("Indian Rupee");
      yrxxch511xhhxxhxxxxxoptions.setM3xxuv34bvxxxxxxxxxxvalue34("364");
      yrxxch511xhhxxhxxxxxoptions.setM4xxuo35bvxxxxxxxxxxoptions35("Lunch Appontment");
      yrxxch511xhhxxhxxxxxoptions.setM5xxup35bvxxxxxxxxxxpurpose35("c$88.90");
      yrxxch511xhhxxhxxxxxoptions.setM6xxuv35bvxxxxxxxxxxvalue35("");
      yrxxch511xhhxxhxxxxxoptions.setM7xxuo36bvxxxxxxxxxxoptions36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM8xxup36bvxxxxxxxxxxpurpose36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM9xxuv36bvxxxxxxxxxxvalue36("");
      yrxxch511xhhxxhxxxxxoptions.setN1xxuo37bvxxxxxxxxxxoptions37("C");
      yrxxch511xhhxxhxxxxxoptions.setN2xxup37bvxxxxxxxxxxpurpose37("Cancelled");
      yrxxch511xhhxxhxxxxxoptions.setN3xxuv37bvxxxxxxxxxxvalue37("");
      yrxxch511xhhxxhxxxxxoptions.setN4xxuo38bvxxxxxxxxxxoptions38("P");
      yrxxch511xhhxxhxxxxxoptions.setN5xxup38bvxxxxxxxxxxpurpose38("Vendor");
      yrxxch511xhhxxhxxxxxoptions.setN6xxuv38bvxxxxxxxxxxvalue38("");
      yrxxch511xhhxxhxxxxxoptions.setN7xxuo39bvxxxxxxxxxxoptions39("H");
      yrxxch511xhhxxhxxxxxoptions.setN8xxup39bvxxxxxxxxxxpurpose39("High");
      yrxxch511xhhxxhxxxxxoptions.setN9xxuv39bvxxxxxxxxxxvalue39("");
      yrxxch511xhhxxhxxxxxoptions.setO1xxuo40bvxxxxxxxxxxoptions40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO2xxup40bvxxxxxxxxxxpurpose40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO3xxuv40bvxxxxxxxxxxvalue40("");
      yrxxch511xhhxxhxxxxxoptions.setO4xxuo41bvxxxxxxxxxxoptions41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO5xxup41bvxxxxxxxxxxpurpose41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO6xxuv41bvxxxxxxxxxxvalue41("");
      yrxxch511xhhxxhxxxxxoptions.setO7xxuo42bvxxxxxxxxxxoptions42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO8xxup42bvxxxxxxxxxxpurpose42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO9xxuv42bvxxxxxxxxxxvalue42("");
      yrxxch511xhhxxhxxxxxoptions.setP1xxuo43bvxxxxxxxxxxoptions43("New");
      yrxxch511xhhxxhxxxxxoptions.setP2xxup43bvxxxxxxxxxxpurpose43("New");
      yrxxch511xhhxxhxxxxxoptions.setP3xxuv43bvxxxxxxxxxxvalue43("");
      yrxxch511xhhxxhxxxxxoptions.setP4xxuo44bvxxxxxxxxxxoptions44("");
      yrxxch511xhhxxhxxxxxoptions.setP5xxup44bvxxxxxxxxxxpurpose44("");
      yrxxch511xhhxxhxxxxxoptions.setP6xxuv44bvxxxxxxxxxxvalue44("");
      yrxxch511xhhxxhxxxxxoptions.setP7xxuo45bvxxxxxxxxxxoptions45("D");
      yrxxch511xhhxxhxxxxxoptions.setP8xxup45bvxxxxxxxxxxpurpose45("");
      yrxxch511xhhxxhxxxxxoptions.setP9xxuv45bvxxxxxxxxxxvalue45("");
      yrxxch511xhhxxhxxxxxoptions.setQ1xxuo46bvxxxxxxxxxxoptions46("O");
      yrxxch511xhhxxhxxxxxoptions.setQ2xxup46bvxxxxxxxxxxpurpose46("Other");
      yrxxch511xhhxxhxxxxxoptions.setQ3xxuv46bvxxxxxxxxxxvalue46("");
      yrxxch511xhhxxhxxxxxoptions.setQ4xxuo47bvxxxxxxxxxxoptions47("05");
      yrxxch511xhhxxhxxxxxoptions.setQ5xxup47bvxxxxxxxxxxpurpose47("05");
      yrxxch511xhhxxhxxxxxoptions.setQ6xxuv47bvxxxxxxxxxxvalue47("");
      yrxxch511xhhxxhxxxxxoptions.setQ7xxuo48bvxxxxxxxxxxoptions48("");
      yrxxch511xhhxxhxxxxxoptions.setQ8xxup48bvxxxxxxxxxxpurpose48("");
      yrxxch511xhhxxhxxxxxoptions.setQ9xxuv48bvxxxxxxxxxxvalue48("");
      yrxxch511xhhxxhxxxxxoptions.setR1xxuo49bvxxxxxxxxxxoptions49("3R-ATTACHMENT-1-C");
      yrxxch511xhhxxhxxxxxoptions.setR2xxup49bvxxxxxxxxxxpurpose49("Attachment");
      yrxxch511xhhxxhxxxxxoptions.setR3xxuv49bvxxxxxxxxxxvalue49("");
      yrxxch511xhhxxhxxxxxoptions.setR4xxuo50bvxxxxxxxxxxoptions50("AUD");
      yrxxch511xhhxxhxxxxxoptions.setR5xxup50bvxxxxxxxxxxpurpose50("Audio Source");
      yrxxch511xhhxxhxxxxxoptions.setR6xxuv50bvxxxxxxxxxxvalue50("");
      yrxxch511xhhxxhxxxxxoptions.setR7xxuo51bvxxxxxxxxxxoptions51("EM");
      yrxxch511xhhxxhxxxxxoptions.setR8xxup51bvxxxxxxxxxxpurpose51("Express Shipping/Medium Item");
      yrxxch511xhhxxhxxxxxoptions.setR9xxuv51bvxxxxxxxxxxvalue51("");
      yrxxch511xhhxxhxxxxxoptions.setS1xxuo52bvxxxxxxxxxxoptions52("");
      yrxxch511xhhxxhxxxxxoptions.setS2xxup52bvxxxxxxxxxxpurpose52("");
      yrxxch511xhhxxhxxxxxoptions.setS3xxuv52bvxxxxxxxxxxvalue52("");
      yrxxch511xhhxxhxxxxxoptions.setS4xxuo53bvxxxxxxxxxxoptions53("");
      yrxxch511xhhxxhxxxxxoptions.setS5xxup53bvxxxxxxxxxxpurpose53("");
      yrxxch511xhhxxhxxxxxoptions.setS6xxuv53bvxxxxxxxxxxvalue53("");
      yrxxch511xhhxxhxxxxxoptions.setS7xxuo54bvxxxxxxxxxxoptions54("");
      yrxxch511xhhxxhxxxxxoptions.setS8xxup54bvxxxxxxxxxxpurpose54("");
      yrxxch511xhhxxhxxxxxoptions.setS9xxuv54bvxxxxxxxxxxvalue54("");
      yrxxch511xhhxxhxxxxxoptions.setT1xxuo55bvxxxxxxxxxxoptions55("Xtra Large");
      yrxxch511xhhxxhxxxxxoptions.setT2xxup55bvxxxxxxxxxxpurpose55("X Large");
      yrxxch511xhhxxhxxxxxoptions.setT3xxuv55bvxxxxxxxxxxvalue55("");
      yrxxch511xhhxxhxxxxxoptions.setT4xxuo56bvxxxxxxxxxxoptions56("");
      yrxxch511xhhxxhxxxxxoptions.setT5xxup56bvxxxxxxxxxxpurpose56("");
      yrxxch511xhhxxhxxxxxoptions.setT6xxuv56bvxxxxxxxxxxvalue56("");
      yrxxch511xhhxxhxxxxxoptions.setT7xxuo57bvxxxxxxxxxxoptions57("Yellow");
      yrxxch511xhhxxhxxxxxoptions.setT8xxup57bvxxxxxxxxxxpurpose57("Yellow");
      yrxxch511xhhxxhxxxxxoptions.setT9xxuv57bvxxxxxxxxxxvalue57("");
      yrxxch511xhhxxhxxxxxoptions.setU1xxuo58bvxxxxxxxxxxoptions58("");
      yrxxch511xhhxxhxxxxxoptions.setU2xxup58bvxxxxxxxxxxpurpose58("");
      yrxxch511xhhxxhxxxxxoptions.setU3xxuv58bvxxxxxxxxxxvalue58("");
      yrxxch511xhhxxhxxxxxoptions.setU4xxuo59bvxxxxxxxxxxoptions59("Polyster");
      yrxxch511xhhxxhxxxxxoptions.setU5xxup59bvxxxxxxxxxxpurpose59("Polyster");
      yrxxch511xhhxxhxxxxxoptions.setU6xxuv59bvxxxxxxxxxxvalue59("");
      yrxxch511xhhxxhxxxxxoptions.setU7xxuo60bvxxxxxxxxxxoptions60("");
      yrxxch511xhhxxhxxxxxoptions.setU8xxup60bvxxxxxxxxxxpurpose60("");
      yrxxch511xhhxxhxxxxxoptions.setU9xxuv60bvxxxxxxxxxxvalue60("");
      yrxxch511xhhxxhxxxxxoptions.setV1xxuo61bvxxxxxxxxxxoptions61("");
      yrxxch511xhhxxhxxxxxoptions.setV2xxup61bvxxxxxxxxxxpurpose61("");
      yrxxch511xhhxxhxxxxxoptions.setV3xxuv61bvxxxxxxxxxxvalue61("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptionsHome.persist(client);
      yrxxch511xhhxxhxxxxxoptionsHome.clearInstance();


      yrxxch511xhhxxhxxxxxoptionsHome.clearInstance();
      yrxxch511xhhxxhxxxxxoptions=yrxxch511xhhxxhxxxxxoptionsHome.getInstance();
      yrxxch511xhhxxhxxxxxoptions.setA0xxukcxbvxxxxxxxxxxrow("06");
      yrxxch511xhhxxhxxxxxoptions.setB1xxuo01bvxxxxxxxxxxoptions01("QD");
      yrxxch511xhhxxhxxxxxoptions.setB2xxup01bvxxxxxxxxxxpurpose01("Dividend");
      yrxxch511xhhxxhxxxxxoptions.setB3xxuv01bvxxxxxxxxxxvalue01("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptions.setB4xxuo02bvxxxxxxxxxxoptions02("S");
      yrxxch511xhhxxhxxxxxoptions.setB5xxup02bvxxxxxxxxxxpurpose02("Subheader");
      yrxxch511xhhxxhxxxxxoptions.setB6xxuv02bvxxxxxxxxxxvalue02("");
      yrxxch511xhhxxhxxxxxoptions.setB7xxuo03bvxxxxxxxxxxoptions03("P");
      yrxxch511xhhxxhxxxxxoptions.setB8xxup03bvxxxxxxxxxxpurpose03("Payable");
      yrxxch511xhhxxhxxxxxoptions.setB9xxuv03bvxxxxxxxxxxvalue03("");
      yrxxch511xhhxxhxxxxxoptions.setC1xxuo04bvxxxxxxxxxxoptions04("");
      yrxxch511xhhxxhxxxxxoptions.setC2xxup04bvxxxxxxxxxxpurpose04("");
      yrxxch511xhhxxhxxxxxoptions.setC3xxuv04bvxxxxxxxxxxvalue04("");
      yrxxch511xhhxxhxxxxxoptions.setC4xxuo05bvxxxxxxxxxxoptions05("");
      yrxxch511xhhxxhxxxxxoptions.setC5xxup05bvxxxxxxxxxxpurpose05("");
      yrxxch511xhhxxhxxxxxoptions.setC6xxuv05bvxxxxxxxxxxvalue05("");
      yrxxch511xhhxxhxxxxxoptions.setC7xxuo06bvxxxxxxxxxxoptions06("");
      yrxxch511xhhxxhxxxxxoptions.setC8xxup06bvxxxxxxxxxxpurpose06("");
      yrxxch511xhhxxhxxxxxoptions.setC9xxuv06bvxxxxxxxxxxvalue06("");
      yrxxch511xhhxxhxxxxxoptions.setD1xxuo07bvxxxxxxxxxxoptions07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD2xxup07bvxxxxxxxxxxpurpose07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD3xxuv07bvxxxxxxxxxxvalue07("");
      yrxxch511xhhxxhxxxxxoptions.setD4xxuo08bvxxxxxxxxxxoptions08("R");
      yrxxch511xhhxxhxxxxxoptions.setD5xxup08bvxxxxxxxxxxpurpose08("Rescheduled");
      yrxxch511xhhxxhxxxxxoptions.setD6xxuv08bvxxxxxxxxxxvalue08("");
      yrxxch511xhhxxhxxxxxoptions.setD7xxuo09bvxxxxxxxxxxoptions09("ToPay and PickUp");
      yrxxch511xhhxxhxxxxxoptions.setD8xxup09bvxxxxxxxxxxpurpose09("ToPay and PickUp");
      yrxxch511xhhxxhxxxxxoptions.setD9xxuv09bvxxxxxxxxxxvalue09("");
      yrxxch511xhhxxhxxxxxoptions.setE1xxuo10bvxxxxxxxxxxoptions10("cash");
      yrxxch511xhhxxhxxxxxoptions.setE2xxup10bvxxxxxxxxxxpurpose10("-cash");
      yrxxch511xhhxxhxxxxxoptions.setE3xxuv10bvxxxxxxxxxxvalue10("");
      yrxxch511xhhxxhxxxxxoptions.setE4xxuo11bvxxxxxxxxxxoptions11("Montreal");
      yrxxch511xhhxxhxxxxxoptions.setE5xxup11bvxxxxxxxxxxpurpose11("Toronto");
      yrxxch511xhhxxhxxxxxoptions.setE6xxuv11bvxxxxxxxxxxvalue11("ca=Montreal; us=Boston");
      yrxxch511xhhxxhxxxxxoptions.setE7xxuo12bvxxxxxxxxxxoptions12("QE");
      yrxxch511xhhxxhxxxxxoptions.setE8xxup12bvxxxxxxxxxxpurpose12("ca=Northern Territories us=Colorado");
      yrxxch511xhhxxhxxxxxoptions.setE9xxuv12bvxxxxxxxxxxvalue12("ca=NT us=CO");
      yrxxch511xhhxxhxxxxxoptions.setF1xxuo13bvxxxxxxxxxxoptions13("");
      yrxxch511xhhxxhxxxxxoptions.setF2xxup13bvxxxxxxxxxxpurpose13("");
      yrxxch511xhhxxhxxxxxoptions.setF3xxuv13bvxxxxxxxxxxvalue13("");
      yrxxch511xhhxxhxxxxxoptions.setF4xxuo14bvxxxxxxxxxxoptions14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF5xxup14bvxxxxxxxxxxpurpose14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF6xxuv14bvxxxxxxxxxxvalue14("ca=M4L3Z8 us=10003 in=70003");
      yrxxch511xhhxxhxxxxxoptions.setF7xxuo15bvxxxxxxxxxxoptions15("Y");
      yrxxch511xhhxxhxxxxxoptions.setF8xxup15bvxxxxxxxxxxpurpose15("Yes");
      yrxxch511xhhxxhxxxxxoptions.setF9xxuv15bvxxxxxxxxxxvalue15("");
      yrxxch511xhhxxhxxxxxoptions.setG1xxuo16bvxxxxxxxxxxoptions16("SI-L1");
      yrxxch511xhhxxhxxxxxoptions.setG2xxup16bvxxxxxxxxxxpurpose16("Shopping-Category");
      yrxxch511xhhxxhxxxxxoptions.setG3xxuv16bvxxxxxxxxxxvalue16("");
      yrxxch511xhhxxhxxxxxoptions.setG4xxuo17bvxxxxxxxxxxoptions17("?");
      yrxxch511xhhxxhxxxxxoptions.setG5xxup17bvxxxxxxxxxxpurpose17("?");
      yrxxch511xhhxxhxxxxxoptions.setG6xxuv17bvxxxxxxxxxxvalue17("");
      yrxxch511xhhxxhxxxxxoptions.setG7xxuo18bvxxxxxxxxxxoptions18("LF");
      yrxxch511xhhxxhxxxxxoptions.setG8xxup18bvxxxxxxxxxxpurpose18("Length-ft");
      yrxxch511xhhxxhxxxxxoptions.setG9xxuv18bvxxxxxxxxxxvalue18("h=18");
      yrxxch511xhhxxhxxxxxoptions.setH1xxuo19bvxxxxxxxxxxoptions19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH2xxup19bvxxxxxxxxxxpurpose19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH3xxuv19bvxxxxxxxxxxvalue19("");
      yrxxch511xhhxxhxxxxxoptions.setH4xxuo20bvxxxxxxxxxxoptions20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH5xxup20bvxxxxxxxxxxpurpose20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH6xxuv20bvxxxxxxxxxxvalue20("");
      yrxxch511xhhxxhxxxxxoptions.setH7xxuo21bvxxxxxxxxxxoptions21("Sir");
      yrxxch511xhhxxhxxxxxoptions.setH8xxup21bvxxxxxxxxxxpurpose21("Sir");
      yrxxch511xhhxxhxxxxxoptions.setH9xxuv21bvxxxxxxxxxxvalue21("");
      yrxxch511xhhxxhxxxxxoptions.setI1xxuo22bvxxxxxxxxxxoptions22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI2xxup22bvxxxxxxxxxxpurpose22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI3xxuv22bvxxxxxxxxxxvalue22("");
      yrxxch511xhhxxhxxxxxoptions.setI4xxuo23bvxxxxxxxxxxoptions23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI5xxup23bvxxxxxxxxxxpurpose23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI6xxuv23bvxxxxxxxxxxvalue23("");
      yrxxch511xhhxxhxxxxxoptions.setI7xxuo24bvxxxxxxxxxxoptions24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI8xxup24bvxxxxxxxxxxpurpose24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI9xxuv24bvxxxxxxxxxxvalue24("");
      yrxxch511xhhxxhxxxxxoptions.setJ1xxuo25bvxxxxxxxxxxoptions25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ2xxup25bvxxxxxxxxxxpurpose25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ3xxuv25bvxxxxxxxxxxvalue25("");
      yrxxch511xhhxxhxxxxxoptions.setJ4xxuo26bvxxxxxxxxxxoptions26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ5xxup26bvxxxxxxxxxxpurpose26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ6xxuv26bvxxxxxxxxxxvalue26("");
      yrxxch511xhhxxhxxxxxoptions.setJ7xxuo27bvxxxxxxxxxxoptions27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ8xxup27bvxxxxxxxxxxpurpose27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ9xxuv27bvxxxxxxxxxxvalue27("");
      yrxxch511xhhxxhxxxxxoptions.setK1xxuo28bvxxxxxxxxxxoptions28("PF");
      yrxxch511xhhxxhxxxxxoptions.setK2xxup28bvxxxxxxxxxxpurpose28("Persons-Family");
      yrxxch511xhhxxhxxxxxoptions.setK3xxuv28bvxxxxxxxxxxvalue28("");
      yrxxch511xhhxxhxxxxxoptions.setK4xxuo29bvxxxxxxxxxxoptions29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK5xxup29bvxxxxxxxxxxpurpose29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK6xxuv29bvxxxxxxxxxxvalue29("");
      yrxxch511xhhxxhxxxxxoptions.setK7xxuo30bvxxxxxxxxxxoptions30("EM");
      yrxxch511xhhxxhxxxxxoptions.setK8xxup30bvxxxxxxxxxxpurpose30("EMail");
      yrxxch511xhhxxhxxxxxoptions.setK9xxuv30bvxxxxxxxxxxvalue30("");
      yrxxch511xhhxxhxxxxxoptions.setL1xxuo31bvxxxxxxxxxxoptions31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL2xxup31bvxxxxxxxxxxpurpose31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL3xxuv31bvxxxxxxxxxxvalue31("");
      yrxxch511xhhxxhxxxxxoptions.setL4xxuo32bvxxxxxxxxxxoptions32("Room 102");
      yrxxch511xhhxxhxxxxxoptions.setL5xxup32bvxxxxxxxxxxpurpose32("Room 102");
      yrxxch511xhhxxhxxxxxoptions.setL6xxuv32bvxxxxxxxxxxvalue32("");
      yrxxch511xhhxxhxxxxxoptions.setL7xxuo33bvxxxxxxxxxxoptions33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL8xxup33bvxxxxxxxxxxpurpose33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL9xxuv33bvxxxxxxxxxxvalue33("");
      yrxxch511xhhxxhxxxxxoptions.setM1xxuo34bvxxxxxxxxxxoptions34("CNY");
      yrxxch511xhhxxhxxxxxoptions.setM2xxup34bvxxxxxxxxxxpurpose34("China");
      yrxxch511xhhxxhxxxxxoptions.setM3xxuv34bvxxxxxxxxxxvalue34("156");
      yrxxch511xhhxxhxxxxxoptions.setM4xxuo35bvxxxxxxxxxxoptions35("Lunch Appontment");
      yrxxch511xhhxxhxxxxxoptions.setM5xxup35bvxxxxxxxxxxpurpose35("c$88.90");
      yrxxch511xhhxxhxxxxxoptions.setM6xxuv35bvxxxxxxxxxxvalue35("");
      yrxxch511xhhxxhxxxxxoptions.setM7xxuo36bvxxxxxxxxxxoptions36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM8xxup36bvxxxxxxxxxxpurpose36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM9xxuv36bvxxxxxxxxxxvalue36("");
      yrxxch511xhhxxhxxxxxoptions.setN1xxuo37bvxxxxxxxxxxoptions37("R");
      yrxxch511xhhxxhxxxxxoptions.setN2xxup37bvxxxxxxxxxxpurpose37("Rescheduled");
      yrxxch511xhhxxhxxxxxoptions.setN3xxuv37bvxxxxxxxxxxvalue37("");
      yrxxch511xhhxxhxxxxxoptions.setN4xxuo38bvxxxxxxxxxxoptions38("S");
      yrxxch511xhhxxhxxxxxoptions.setN5xxup38bvxxxxxxxxxxpurpose38("System Admin");
      yrxxch511xhhxxhxxxxxoptions.setN6xxuv38bvxxxxxxxxxxvalue38("");
      yrxxch511xhhxxhxxxxxoptions.setN7xxuo39bvxxxxxxxxxxoptions39("H");
      yrxxch511xhhxxhxxxxxoptions.setN8xxup39bvxxxxxxxxxxpurpose39("High");
      yrxxch511xhhxxhxxxxxoptions.setN9xxuv39bvxxxxxxxxxxvalue39("");
      yrxxch511xhhxxhxxxxxoptions.setO1xxuo40bvxxxxxxxxxxoptions40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO2xxup40bvxxxxxxxxxxpurpose40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO3xxuv40bvxxxxxxxxxxvalue40("");
      yrxxch511xhhxxhxxxxxoptions.setO4xxuo41bvxxxxxxxxxxoptions41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO5xxup41bvxxxxxxxxxxpurpose41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO6xxuv41bvxxxxxxxxxxvalue41("");
      yrxxch511xhhxxhxxxxxoptions.setO7xxuo42bvxxxxxxxxxxoptions42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO8xxup42bvxxxxxxxxxxpurpose42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO9xxuv42bvxxxxxxxxxxvalue42("");
      yrxxch511xhhxxhxxxxxoptions.setP1xxuo43bvxxxxxxxxxxoptions43("New");
      yrxxch511xhhxxhxxxxxoptions.setP2xxup43bvxxxxxxxxxxpurpose43("New");
      yrxxch511xhhxxhxxxxxoptions.setP3xxuv43bvxxxxxxxxxxvalue43("");
      yrxxch511xhhxxhxxxxxoptions.setP4xxuo44bvxxxxxxxxxxoptions44("");
      yrxxch511xhhxxhxxxxxoptions.setP5xxup44bvxxxxxxxxxxpurpose44("");
      yrxxch511xhhxxhxxxxxoptions.setP6xxuv44bvxxxxxxxxxxvalue44("");
      yrxxch511xhhxxhxxxxxoptions.setP7xxuo45bvxxxxxxxxxxoptions45("D");
      yrxxch511xhhxxhxxxxxoptions.setP8xxup45bvxxxxxxxxxxpurpose45("");
      yrxxch511xhhxxhxxxxxoptions.setP9xxuv45bvxxxxxxxxxxvalue45("");
      yrxxch511xhhxxhxxxxxoptions.setQ1xxuo46bvxxxxxxxxxxoptions46("E");
      yrxxch511xhhxxhxxxxxoptions.setQ2xxup46bvxxxxxxxxxxpurpose46("Executive");
      yrxxch511xhhxxhxxxxxoptions.setQ3xxuv46bvxxxxxxxxxxvalue46("");
      yrxxch511xhhxxhxxxxxoptions.setQ4xxuo47bvxxxxxxxxxxoptions47("06");
      yrxxch511xhhxxhxxxxxoptions.setQ5xxup47bvxxxxxxxxxxpurpose47("06");
      yrxxch511xhhxxhxxxxxoptions.setQ6xxuv47bvxxxxxxxxxxvalue47("");
      yrxxch511xhhxxhxxxxxoptions.setQ7xxuo48bvxxxxxxxxxxoptions48("");
      yrxxch511xhhxxhxxxxxoptions.setQ8xxup48bvxxxxxxxxxxpurpose48("");
      yrxxch511xhhxxhxxxxxoptions.setQ9xxuv48bvxxxxxxxxxxvalue48("");
      yrxxch511xhhxxhxxxxxoptions.setR1xxuo49bvxxxxxxxxxxoptions49("3R-NEWS-1-C");
      yrxxch511xhhxxhxxxxxoptions.setR2xxup49bvxxxxxxxxxxpurpose49("NEWS Panel 1");
      yrxxch511xhhxxhxxxxxoptions.setR3xxuv49bvxxxxxxxxxxvalue49("");
      yrxxch511xhhxxhxxxxxoptions.setR4xxuo50bvxxxxxxxxxxoptions50("OTH");
      yrxxch511xhhxxhxxxxxoptions.setR5xxup50bvxxxxxxxxxxpurpose50("Other");
      yrxxch511xhhxxhxxxxxoptions.setR6xxuv50bvxxxxxxxxxxvalue50("");
      yrxxch511xhhxxhxxxxxoptions.setR7xxuo51bvxxxxxxxxxxoptions51("PM");
      yrxxch511xhhxxhxxxxxoptions.setR8xxup51bvxxxxxxxxxxpurpose51("PickUp/Medium Item");
      yrxxch511xhhxxhxxxxxoptions.setR9xxuv51bvxxxxxxxxxxvalue51("");
      yrxxch511xhhxxhxxxxxoptions.setS1xxuo52bvxxxxxxxxxxoptions52("");
      yrxxch511xhhxxhxxxxxoptions.setS2xxup52bvxxxxxxxxxxpurpose52("");
      yrxxch511xhhxxhxxxxxoptions.setS3xxuv52bvxxxxxxxxxxvalue52("");
      yrxxch511xhhxxhxxxxxoptions.setS4xxuo53bvxxxxxxxxxxoptions53("");
      yrxxch511xhhxxhxxxxxoptions.setS5xxup53bvxxxxxxxxxxpurpose53("");
      yrxxch511xhhxxhxxxxxoptions.setS6xxuv53bvxxxxxxxxxxvalue53("");

      yrxxch511xhhxxhxxxxxoptions.setS7xxuo54bvxxxxxxxxxxoptions54("");
      yrxxch511xhhxxhxxxxxoptions.setS8xxup54bvxxxxxxxxxxpurpose54("");
      yrxxch511xhhxxhxxxxxoptions.setS9xxuv54bvxxxxxxxxxxvalue54("");
      yrxxch511xhhxxhxxxxxoptions.setT1xxuo55bvxxxxxxxxxxoptions55("Xtra Xtra Large");
      yrxxch511xhhxxhxxxxxoptions.setT2xxup55bvxxxxxxxxxxpurpose55("X X Large");
      yrxxch511xhhxxhxxxxxoptions.setT3xxuv55bvxxxxxxxxxxvalue55("");
      yrxxch511xhhxxhxxxxxoptions.setT4xxuo56bvxxxxxxxxxxoptions56("");
      yrxxch511xhhxxhxxxxxoptions.setT5xxup56bvxxxxxxxxxxpurpose56("");
      yrxxch511xhhxxhxxxxxoptions.setT6xxuv56bvxxxxxxxxxxvalue56("");
      yrxxch511xhhxxhxxxxxoptions.setT7xxuo57bvxxxxxxxxxxoptions57("Blue");
      yrxxch511xhhxxhxxxxxoptions.setT8xxup57bvxxxxxxxxxxpurpose57("Blue");
      yrxxch511xhhxxhxxxxxoptions.setT9xxuv57bvxxxxxxxxxxvalue57("");
      yrxxch511xhhxxhxxxxxoptions.setU1xxuo58bvxxxxxxxxxxoptions58("");
      yrxxch511xhhxxhxxxxxoptions.setU2xxup58bvxxxxxxxxxxpurpose58("");
      yrxxch511xhhxxhxxxxxoptions.setU3xxuv58bvxxxxxxxxxxvalue58("");
      yrxxch511xhhxxhxxxxxoptions.setU4xxuo59bvxxxxxxxxxxoptions59("Custom");
      yrxxch511xhhxxhxxxxxoptions.setU5xxup59bvxxxxxxxxxxpurpose59("Custom");
      yrxxch511xhhxxhxxxxxoptions.setU6xxuv59bvxxxxxxxxxxvalue59("");
      yrxxch511xhhxxhxxxxxoptions.setU7xxuo60bvxxxxxxxxxxoptions60("");
      yrxxch511xhhxxhxxxxxoptions.setU8xxup60bvxxxxxxxxxxpurpose60("");
      yrxxch511xhhxxhxxxxxoptions.setU9xxuv60bvxxxxxxxxxxvalue60("");
      yrxxch511xhhxxhxxxxxoptions.setV1xxuo61bvxxxxxxxxxxoptions61("");
      yrxxch511xhhxxhxxxxxoptions.setV2xxup61bvxxxxxxxxxxpurpose61("");
      yrxxch511xhhxxhxxxxxoptions.setV3xxuv61bvxxxxxxxxxxvalue61("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptionsHome.persist(client);
      yrxxch511xhhxxhxxxxxoptionsHome.clearInstance();


      yrxxch511xhhxxhxxxxxoptions=yrxxch511xhhxxhxxxxxoptionsHome.getInstance();
      yrxxch511xhhxxhxxxxxoptions.setA0xxukcxbvxxxxxxxxxxrow("07");
      yrxxch511xhhxxhxxxxxoptions.setB1xxuo01bvxxxxxxxxxxoptions01("QC");
      yrxxch511xhhxxhxxxxxoptions.setB2xxup01bvxxxxxxxxxxpurpose01("Current Earning");
      yrxxch511xhhxxhxxxxxoptions.setB3xxuv01bvxxxxxxxxxxvalue01("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptions.setB4xxuo02bvxxxxxxxxxxoptions02("S");
      yrxxch511xhhxxhxxxxxoptions.setB5xxup02bvxxxxxxxxxxpurpose02("Subheader");
      yrxxch511xhhxxhxxxxxoptions.setB6xxuv02bvxxxxxxxxxxvalue02("");
      yrxxch511xhhxxhxxxxxoptions.setB7xxuo03bvxxxxxxxxxxoptions03("P");
      yrxxch511xhhxxhxxxxxoptions.setB8xxup03bvxxxxxxxxxxpurpose03("Payable");
      yrxxch511xhhxxhxxxxxoptions.setB9xxuv03bvxxxxxxxxxxvalue03("");
      yrxxch511xhhxxhxxxxxoptions.setC1xxuo04bvxxxxxxxxxxoptions04("");
      yrxxch511xhhxxhxxxxxoptions.setC2xxup04bvxxxxxxxxxxpurpose04("");
      yrxxch511xhhxxhxxxxxoptions.setC3xxuv04bvxxxxxxxxxxvalue04("");
      yrxxch511xhhxxhxxxxxoptions.setC4xxuo05bvxxxxxxxxxxoptions05("");
      yrxxch511xhhxxhxxxxxoptions.setC5xxup05bvxxxxxxxxxxpurpose05("");
      yrxxch511xhhxxhxxxxxoptions.setC6xxuv05bvxxxxxxxxxxvalue05("");
      yrxxch511xhhxxhxxxxxoptions.setC7xxuo06bvxxxxxxxxxxoptions06("");
      yrxxch511xhhxxhxxxxxoptions.setC8xxup06bvxxxxxxxxxxpurpose06("");
      yrxxch511xhhxxhxxxxxoptions.setC9xxuv06bvxxxxxxxxxxvalue06("");
      yrxxch511xhhxxhxxxxxoptions.setD1xxuo07bvxxxxxxxxxxoptions07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD2xxup07bvxxxxxxxxxxpurpose07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD3xxuv07bvxxxxxxxxxxvalue07("");
      yrxxch511xhhxxhxxxxxoptions.setD4xxuo08bvxxxxxxxxxxoptions08("P");
      yrxxch511xhhxxhxxxxxoptions.setD5xxup08bvxxxxxxxxxxpurpose08("Postponed");
      yrxxch511xhhxxhxxxxxoptions.setD6xxuv08bvxxxxxxxxxxvalue08("");
      yrxxch511xhhxxhxxxxxoptions.setD7xxuo09bvxxxxxxxxxxoptions09("POS");
      yrxxch511xhhxxhxxxxxoptions.setD8xxup09bvxxxxxxxxxxpurpose09("POS");
      yrxxch511xhhxxhxxxxxoptions.setD9xxuv09bvxxxxxxxxxxvalue09("");
      yrxxch511xhhxxhxxxxxoptions.setE1xxuo10bvxxxxxxxxxxoptions10("cash");
      yrxxch511xhhxxhxxxxxoptions.setE2xxup10bvxxxxxxxxxxpurpose10("-cash");
      yrxxch511xhhxxhxxxxxoptions.setE3xxuv10bvxxxxxxxxxxvalue10("");
      yrxxch511xhhxxhxxxxxoptions.setE4xxuo11bvxxxxxxxxxxoptions11("Montreal");
      yrxxch511xhhxxhxxxxxoptions.setE5xxup11bvxxxxxxxxxxpurpose11("Toronto");
      yrxxch511xhhxxhxxxxxoptions.setE6xxuv11bvxxxxxxxxxxvalue11("ca=Montreal; us=Boston");
      yrxxch511xhhxxhxxxxxoptions.setE7xxuo12bvxxxxxxxxxxoptions12("QE");
      yrxxch511xhhxxhxxxxxoptions.setE8xxup12bvxxxxxxxxxxpurpose12("ca=Nova Scotia us=Conneticut");
      yrxxch511xhhxxhxxxxxoptions.setE9xxuv12bvxxxxxxxxxxvalue12("ca=NS us=CT");
      yrxxch511xhhxxhxxxxxoptions.setF1xxuo13bvxxxxxxxxxxoptions13("");
      yrxxch511xhhxxhxxxxxoptions.setF2xxup13bvxxxxxxxxxxpurpose13("");
      yrxxch511xhhxxhxxxxxoptions.setF3xxuv13bvxxxxxxxxxxvalue13("");
      yrxxch511xhhxxhxxxxxoptions.setF4xxuo14bvxxxxxxxxxxoptions14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF5xxup14bvxxxxxxxxxxpurpose14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF6xxuv14bvxxxxxxxxxxvalue14("ca=M4L3Z8 us=10003 in=70003");
      yrxxch511xhhxxhxxxxxoptions.setF7xxuo15bvxxxxxxxxxxoptions15("Y");
      yrxxch511xhhxxhxxxxxoptions.setF8xxup15bvxxxxxxxxxxpurpose15("Yes");
      yrxxch511xhhxxhxxxxxoptions.setF9xxuv15bvxxxxxxxxxxvalue15("");
      yrxxch511xhhxxhxxxxxoptions.setG1xxuo16bvxxxxxxxxxxoptions16("SI-L*");
      yrxxch511xhhxxhxxxxxoptions.setG2xxup16bvxxxxxxxxxxpurpose16("Shopping-SubCategories");
      yrxxch511xhhxxhxxxxxoptions.setG3xxuv16bvxxxxxxxxxxvalue16("");
      yrxxch511xhhxxhxxxxxoptions.setG4xxuo17bvxxxxxxxxxxoptions17("?");
      yrxxch511xhhxxhxxxxxoptions.setG5xxup17bvxxxxxxxxxxpurpose17("?");
      yrxxch511xhhxxhxxxxxoptions.setG6xxuv17bvxxxxxxxxxxvalue17("");
      yrxxch511xhhxxhxxxxxoptions.setG7xxuo18bvxxxxxxxxxxoptions18("LM");
      yrxxch511xhhxxhxxxxxoptions.setG8xxup18bvxxxxxxxxxxpurpose18("Length-meter");
      yrxxch511xhhxxhxxxxxoptions.setG9xxuv18bvxxxxxxxxxxvalue18("h=18");
      yrxxch511xhhxxhxxxxxoptions.setH1xxuo19bvxxxxxxxxxxoptions19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH2xxup19bvxxxxxxxxxxpurpose19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH3xxuv19bvxxxxxxxxxxvalue19("");
      yrxxch511xhhxxhxxxxxoptions.setH4xxuo20bvxxxxxxxxxxoptions20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH5xxup20bvxxxxxxxxxxpurpose20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH6xxuv20bvxxxxxxxxxxvalue20("");
      yrxxch511xhhxxhxxxxxoptions.setH7xxuo21bvxxxxxxxxxxoptions21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH8xxup21bvxxxxxxxxxxpurpose21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH9xxuv21bvxxxxxxxxxxvalue21("");
      yrxxch511xhhxxhxxxxxoptions.setI1xxuo22bvxxxxxxxxxxoptions22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI2xxup22bvxxxxxxxxxxpurpose22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI3xxuv22bvxxxxxxxxxxvalue22("");
      yrxxch511xhhxxhxxxxxoptions.setI4xxuo23bvxxxxxxxxxxoptions23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI5xxup23bvxxxxxxxxxxpurpose23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI6xxuv23bvxxxxxxxxxxvalue23("");
      yrxxch511xhhxxhxxxxxoptions.setI7xxuo24bvxxxxxxxxxxoptions24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI8xxup24bvxxxxxxxxxxpurpose24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI9xxuv24bvxxxxxxxxxxvalue24("");
      yrxxch511xhhxxhxxxxxoptions.setJ1xxuo25bvxxxxxxxxxxoptions25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ2xxup25bvxxxxxxxxxxpurpose25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ3xxuv25bvxxxxxxxxxxvalue25("");
      yrxxch511xhhxxhxxxxxoptions.setJ4xxuo26bvxxxxxxxxxxoptions26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ5xxup26bvxxxxxxxxxxpurpose26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ6xxuv26bvxxxxxxxxxxvalue26("");
      yrxxch511xhhxxhxxxxxoptions.setJ7xxuo27bvxxxxxxxxxxoptions27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ8xxup27bvxxxxxxxxxxpurpose27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ9xxuv27bvxxxxxxxxxxvalue27("");
      yrxxch511xhhxxhxxxxxoptions.setK1xxuo28bvxxxxxxxxxxoptions28("PF");
      yrxxch511xhhxxhxxxxxoptions.setK2xxup28bvxxxxxxxxxxpurpose28("Persons-Family");
      yrxxch511xhhxxhxxxxxoptions.setK3xxuv28bvxxxxxxxxxxvalue28("");
      yrxxch511xhhxxhxxxxxoptions.setK4xxuo29bvxxxxxxxxxxoptions29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK5xxup29bvxxxxxxxxxxpurpose29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK6xxuv29bvxxxxxxxxxxvalue29("");
      yrxxch511xhhxxhxxxxxoptions.setK7xxuo30bvxxxxxxxxxxoptions30("EM");
      yrxxch511xhhxxhxxxxxoptions.setK8xxup30bvxxxxxxxxxxpurpose30("EMail");
      yrxxch511xhhxxhxxxxxoptions.setK9xxuv30bvxxxxxxxxxxvalue30("");
      yrxxch511xhhxxhxxxxxoptions.setL1xxuo31bvxxxxxxxxxxoptions31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL2xxup31bvxxxxxxxxxxpurpose31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL3xxuv31bvxxxxxxxxxxvalue31("");
      yrxxch511xhhxxhxxxxxoptions.setL4xxuo32bvxxxxxxxxxxoptions32("Room 103");
      yrxxch511xhhxxhxxxxxoptions.setL5xxup32bvxxxxxxxxxxpurpose32("Room 103");
      yrxxch511xhhxxhxxxxxoptions.setL6xxuv32bvxxxxxxxxxxvalue32("");
      yrxxch511xhhxxhxxxxxoptions.setL7xxuo33bvxxxxxxxxxxoptions33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL8xxup33bvxxxxxxxxxxpurpose33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL9xxuv33bvxxxxxxxxxxvalue33("");
      yrxxch511xhhxxhxxxxxoptions.setM1xxuo34bvxxxxxxxxxxoptions34("JPY");
      yrxxch511xhhxxhxxxxxoptions.setM2xxup34bvxxxxxxxxxxpurpose34("Japan");
      yrxxch511xhhxxhxxxxxoptions.setM3xxuv34bvxxxxxxxxxxvalue34("396");
      yrxxch511xhhxxhxxxxxoptions.setM4xxuo35bvxxxxxxxxxxoptions35("Lunch Appontment");
      yrxxch511xhhxxhxxxxxoptions.setM5xxup35bvxxxxxxxxxxpurpose35("c$88.90");
      yrxxch511xhhxxhxxxxxoptions.setM6xxuv35bvxxxxxxxxxxvalue35("");
      yrxxch511xhhxxhxxxxxoptions.setM7xxuo36bvxxxxxxxxxxoptions36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM8xxup36bvxxxxxxxxxxpurpose36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM9xxuv36bvxxxxxxxxxxvalue36("");
      yrxxch511xhhxxhxxxxxoptions.setN1xxuo37bvxxxxxxxxxxoptions37("F");
      yrxxch511xhhxxhxxxxxoptions.setN2xxup37bvxxxxxxxxxxpurpose37("Flexible");
      yrxxch511xhhxxhxxxxxoptions.setN3xxuv37bvxxxxxxxxxxvalue37("");
      yrxxch511xhhxxhxxxxxoptions.setN4xxuo38bvxxxxxxxxxxoptions38("S");
      yrxxch511xhhxxhxxxxxoptions.setN5xxup38bvxxxxxxxxxxpurpose38("System Admin");
      yrxxch511xhhxxhxxxxxoptions.setN6xxuv38bvxxxxxxxxxxvalue38("");
      yrxxch511xhhxxhxxxxxoptions.setN7xxuo39bvxxxxxxxxxxoptions39("H");
      yrxxch511xhhxxhxxxxxoptions.setN8xxup39bvxxxxxxxxxxpurpose39("High");
      yrxxch511xhhxxhxxxxxoptions.setN9xxuv39bvxxxxxxxxxxvalue39("");
      yrxxch511xhhxxhxxxxxoptions.setO1xxuo40bvxxxxxxxxxxoptions40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO2xxup40bvxxxxxxxxxxpurpose40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO3xxuv40bvxxxxxxxxxxvalue40("");
      yrxxch511xhhxxhxxxxxoptions.setO4xxuo41bvxxxxxxxxxxoptions41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO5xxup41bvxxxxxxxxxxpurpose41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO6xxuv41bvxxxxxxxxxxvalue41("");
      yrxxch511xhhxxhxxxxxoptions.setO7xxuo42bvxxxxxxxxxxoptions42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO8xxup42bvxxxxxxxxxxpurpose42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO9xxuv42bvxxxxxxxxxxvalue42("");
      yrxxch511xhhxxhxxxxxoptions.setP1xxuo43bvxxxxxxxxxxoptions43("New");
      yrxxch511xhhxxhxxxxxoptions.setP2xxup43bvxxxxxxxxxxpurpose43("New");
      yrxxch511xhhxxhxxxxxoptions.setP3xxuv43bvxxxxxxxxxxvalue43("");
      yrxxch511xhhxxhxxxxxoptions.setP4xxuo44bvxxxxxxxxxxoptions44("");
      yrxxch511xhhxxhxxxxxoptions.setP5xxup44bvxxxxxxxxxxpurpose44("");
      yrxxch511xhhxxhxxxxxoptions.setP6xxuv44bvxxxxxxxxxxvalue44("");
      yrxxch511xhhxxhxxxxxoptions.setP7xxuo45bvxxxxxxxxxxoptions45("D");
      yrxxch511xhhxxhxxxxxoptions.setP8xxup45bvxxxxxxxxxxpurpose45("");
      yrxxch511xhhxxhxxxxxoptions.setP9xxuv45bvxxxxxxxxxxvalue45("");
      yrxxch511xhhxxhxxxxxoptions.setQ1xxuo46bvxxxxxxxxxxoptions46(" ");
      yrxxch511xhhxxhxxxxxoptions.setQ2xxup46bvxxxxxxxxxxpurpose46(" ");
      yrxxch511xhhxxhxxxxxoptions.setQ3xxuv46bvxxxxxxxxxxvalue46("");
      yrxxch511xhhxxhxxxxxoptions.setQ4xxuo47bvxxxxxxxxxxoptions47("07");
      yrxxch511xhhxxhxxxxxoptions.setQ5xxup47bvxxxxxxxxxxpurpose47("07");
      yrxxch511xhhxxhxxxxxoptions.setQ6xxuv47bvxxxxxxxxxxvalue47("");
      yrxxch511xhhxxhxxxxxoptions.setQ7xxuo48bvxxxxxxxxxxoptions48("");
      yrxxch511xhhxxhxxxxxoptions.setQ8xxup48bvxxxxxxxxxxpurpose48("");
      yrxxch511xhhxxhxxxxxoptions.setQ9xxuv48bvxxxxxxxxxxvalue48("");
      yrxxch511xhhxxhxxxxxoptions.setR1xxuo49bvxxxxxxxxxxoptions49("3R-ABOUT-1-C");
      yrxxch511xhhxxhxxxxxoptions.setR2xxup49bvxxxxxxxxxxpurpose49("ABOUT Panel 1");
      yrxxch511xhhxxhxxxxxoptions.setR3xxuv49bvxxxxxxxxxxvalue49("");
      yrxxch511xhhxxhxxxxxoptions.setR4xxuo50bvxxxxxxxxxxoptions50("HDRM");
      yrxxch511xhhxxhxxxxxoptions.setR5xxup50bvxxxxxxxxxxpurpose50("Mobile TEXT HEADER ");
      yrxxch511xhhxxhxxxxxoptions.setR6xxuv50bvxxxxxxxxxxvalue50("");
      yrxxch511xhhxxhxxxxxoptions.setR7xxuo51bvxxxxxxxxxxoptions51("SL");
      yrxxch511xhhxxhxxxxxoptions.setR8xxup51bvxxxxxxxxxxpurpose51("Standard Shipping/Large Item");
      yrxxch511xhhxxhxxxxxoptions.setR9xxuv51bvxxxxxxxxxxvalue51("");
      yrxxch511xhhxxhxxxxxoptions.setS1xxuo52bvxxxxxxxxxxoptions52("");
      yrxxch511xhhxxhxxxxxoptions.setS2xxup52bvxxxxxxxxxxpurpose52("");
      yrxxch511xhhxxhxxxxxoptions.setS3xxuv52bvxxxxxxxxxxvalue52("");
      yrxxch511xhhxxhxxxxxoptions.setS4xxuo53bvxxxxxxxxxxoptions53("");
      yrxxch511xhhxxhxxxxxoptions.setS5xxup53bvxxxxxxxxxxpurpose53("");
      yrxxch511xhhxxhxxxxxoptions.setS6xxuv53bvxxxxxxxxxxvalue53("");

      yrxxch511xhhxxhxxxxxoptions.setS7xxuo54bvxxxxxxxxxxoptions54("");
      yrxxch511xhhxxhxxxxxoptions.setS8xxup54bvxxxxxxxxxxpurpose54("");
      yrxxch511xhhxxhxxxxxoptions.setS9xxuv54bvxxxxxxxxxxvalue54("");
      yrxxch511xhhxxhxxxxxoptions.setT1xxuo55bvxxxxxxxxxxoptions55("Custom");
      yrxxch511xhhxxhxxxxxoptions.setT2xxup55bvxxxxxxxxxxpurpose55("Custom");
      yrxxch511xhhxxhxxxxxoptions.setT3xxuv55bvxxxxxxxxxxvalue55("");
      yrxxch511xhhxxhxxxxxoptions.setT4xxuo56bvxxxxxxxxxxoptions56("");
      yrxxch511xhhxxhxxxxxoptions.setT5xxup56bvxxxxxxxxxxpurpose56("");
      yrxxch511xhhxxhxxxxxoptions.setT6xxuv56bvxxxxxxxxxxvalue56("");
      yrxxch511xhhxxhxxxxxoptions.setT7xxuo57bvxxxxxxxxxxoptions57("Green");
      yrxxch511xhhxxhxxxxxoptions.setT8xxup57bvxxxxxxxxxxpurpose57("Green");
      yrxxch511xhhxxhxxxxxoptions.setT9xxuv57bvxxxxxxxxxxvalue57("");
      yrxxch511xhhxxhxxxxxoptions.setU1xxuo58bvxxxxxxxxxxoptions58("");
      yrxxch511xhhxxhxxxxxoptions.setU2xxup58bvxxxxxxxxxxpurpose58("");
      yrxxch511xhhxxhxxxxxoptions.setU3xxuv58bvxxxxxxxxxxvalue58("");
      yrxxch511xhhxxhxxxxxoptions.setU4xxuo59bvxxxxxxxxxxoptions59("");
      yrxxch511xhhxxhxxxxxoptions.setU5xxup59bvxxxxxxxxxxpurpose59("");
      yrxxch511xhhxxhxxxxxoptions.setU6xxuv59bvxxxxxxxxxxvalue59("");
      yrxxch511xhhxxhxxxxxoptions.setU7xxuo60bvxxxxxxxxxxoptions60("");
      yrxxch511xhhxxhxxxxxoptions.setU8xxup60bvxxxxxxxxxxpurpose60("");
      yrxxch511xhhxxhxxxxxoptions.setU9xxuv60bvxxxxxxxxxxvalue60("");
      yrxxch511xhhxxhxxxxxoptions.setV1xxuo61bvxxxxxxxxxxoptions61("");
      yrxxch511xhhxxhxxxxxoptions.setV2xxup61bvxxxxxxxxxxpurpose61("");
      yrxxch511xhhxxhxxxxxoptions.setV3xxuv61bvxxxxxxxxxxvalue61("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptionsHome.persist(client);
      yrxxch511xhhxxhxxxxxoptionsHome.clearInstance();

      yrxxch511xhhxxhxxxxxoptions=yrxxch511xhhxxhxxxxxoptionsHome.getInstance();
      yrxxch511xhhxxhxxxxxoptions.setA0xxukcxbvxxxxxxxxxxrow("08");
      yrxxch511xhhxxhxxxxxoptions.setB1xxuo01bvxxxxxxxxxxoptions01("Q");
      yrxxch511xhhxxhxxxxxoptions.setB2xxup01bvxxxxxxxxxxpurpose01("Equity");
      yrxxch511xhhxxhxxxxxoptions.setB3xxuv01bvxxxxxxxxxxvalue01("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptions.setB4xxuo02bvxxxxxxxxxxoptions02("S");
      yrxxch511xhhxxhxxxxxoptions.setB5xxup02bvxxxxxxxxxxpurpose02("Subheader");
      yrxxch511xhhxxhxxxxxoptions.setB6xxuv02bvxxxxxxxxxxvalue02("");
      yrxxch511xhhxxhxxxxxoptions.setB7xxuo03bvxxxxxxxxxxoptions03("P");
      yrxxch511xhhxxhxxxxxoptions.setB8xxup03bvxxxxxxxxxxpurpose03("Payable");
      yrxxch511xhhxxhxxxxxoptions.setB9xxuv03bvxxxxxxxxxxvalue03("");
      yrxxch511xhhxxhxxxxxoptions.setC1xxuo04bvxxxxxxxxxxoptions04("");
      yrxxch511xhhxxhxxxxxoptions.setC2xxup04bvxxxxxxxxxxpurpose04("");
      yrxxch511xhhxxhxxxxxoptions.setC3xxuv04bvxxxxxxxxxxvalue04("");
      yrxxch511xhhxxhxxxxxoptions.setC4xxuo05bvxxxxxxxxxxoptions05("");
      yrxxch511xhhxxhxxxxxoptions.setC5xxup05bvxxxxxxxxxxpurpose05("");
      yrxxch511xhhxxhxxxxxoptions.setC6xxuv05bvxxxxxxxxxxvalue05("");
      yrxxch511xhhxxhxxxxxoptions.setC7xxuo06bvxxxxxxxxxxoptions06("");
      yrxxch511xhhxxhxxxxxoptions.setC8xxup06bvxxxxxxxxxxpurpose06("");
      yrxxch511xhhxxhxxxxxoptions.setC9xxuv06bvxxxxxxxxxxvalue06("");
      yrxxch511xhhxxhxxxxxoptions.setD1xxuo07bvxxxxxxxxxxoptions07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD2xxup07bvxxxxxxxxxxpurpose07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD3xxuv07bvxxxxxxxxxxvalue07("");
      yrxxch511xhhxxhxxxxxoptions.setD4xxuo08bvxxxxxxxxxxoptions08("H");
      yrxxch511xhhxxhxxxxxoptions.setD5xxup08bvxxxxxxxxxxpurpose08("High");
      yrxxch511xhhxxhxxxxxoptions.setD6xxuv08bvxxxxxxxxxxvalue08("");
      yrxxch511xhhxxhxxxxxoptions.setD7xxuo09bvxxxxxxxxxxoptions09("30");
      yrxxch511xhhxxhxxxxxoptions.setD8xxup09bvxxxxxxxxxxpurpose09("-30 days");
      yrxxch511xhhxxhxxxxxoptions.setD9xxuv09bvxxxxxxxxxxvalue09("");
      yrxxch511xhhxxhxxxxxoptions.setE1xxuo10bvxxxxxxxxxxoptions10("cash");
      yrxxch511xhhxxhxxxxxoptions.setE2xxup10bvxxxxxxxxxxpurpose10("-cash");
      yrxxch511xhhxxhxxxxxoptions.setE3xxuv10bvxxxxxxxxxxvalue10("");
      yrxxch511xhhxxhxxxxxoptions.setE4xxuo11bvxxxxxxxxxxoptions11("Montreal");
      yrxxch511xhhxxhxxxxxoptions.setE5xxup11bvxxxxxxxxxxpurpose11("Toronto");
      yrxxch511xhhxxhxxxxxoptions.setE6xxuv11bvxxxxxxxxxxvalue11("ca=Montreal; us=Boston");
      yrxxch511xhhxxhxxxxxoptions.setE7xxuo12bvxxxxxxxxxxoptions12("QE");
      yrxxch511xhhxxhxxxxxoptions.setE8xxup12bvxxxxxxxxxxpurpose12("ca=Nunavut us=Delware");
      yrxxch511xhhxxhxxxxxoptions.setE9xxuv12bvxxxxxxxxxxvalue12("ca=NU us=DE");
      yrxxch511xhhxxhxxxxxoptions.setF1xxuo13bvxxxxxxxxxxoptions13("");
      yrxxch511xhhxxhxxxxxoptions.setF2xxup13bvxxxxxxxxxxpurpose13("");
      yrxxch511xhhxxhxxxxxoptions.setF3xxuv13bvxxxxxxxxxxvalue13("");
      yrxxch511xhhxxhxxxxxoptions.setF4xxuo14bvxxxxxxxxxxoptions14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF5xxup14bvxxxxxxxxxxpurpose14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF6xxuv14bvxxxxxxxxxxvalue14("ca=M4L3Z8 us=10003 in=70003");
      yrxxch511xhhxxhxxxxxoptions.setF7xxuo15bvxxxxxxxxxxoptions15("Y");
      yrxxch511xhhxxhxxxxxoptions.setF8xxup15bvxxxxxxxxxxpurpose15("Yes");
      yrxxch511xhhxxhxxxxxoptions.setF9xxuv15bvxxxxxxxxxxvalue15("");
      yrxxch511xhhxxhxxxxxoptions.setG1xxuo16bvxxxxxxxxxxoptions16("SI-(q)");
      yrxxch511xhhxxhxxxxxoptions.setG2xxup16bvxxxxxxxxxxpurpose16("Shopping-Quotation Item");
      yrxxch511xhhxxhxxxxxoptions.setG3xxuv16bvxxxxxxxxxxvalue16("");
      yrxxch511xhhxxhxxxxxoptions.setG4xxuo17bvxxxxxxxxxxoptions17("?");
      yrxxch511xhhxxhxxxxxoptions.setG5xxup17bvxxxxxxxxxxpurpose17("?");
      yrxxch511xhhxxhxxxxxoptions.setG6xxuv17bvxxxxxxxxxxvalue17("");
      yrxxch511xhhxxhxxxxxoptions.setG7xxuo18bvxxxxxxxxxxoptions18("LF");
      yrxxch511xhhxxhxxxxxoptions.setG8xxup18bvxxxxxxxxxxpurpose18("Length-ft");
      yrxxch511xhhxxhxxxxxoptions.setG9xxuv18bvxxxxxxxxxxvalue18("h=18");
      yrxxch511xhhxxhxxxxxoptions.setH1xxuo19bvxxxxxxxxxxoptions19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH2xxup19bvxxxxxxxxxxpurpose19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH3xxuv19bvxxxxxxxxxxvalue19("");
      yrxxch511xhhxxhxxxxxoptions.setH4xxuo20bvxxxxxxxxxxoptions20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH5xxup20bvxxxxxxxxxxpurpose20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH6xxuv20bvxxxxxxxxxxvalue20("");
      yrxxch511xhhxxhxxxxxoptions.setH7xxuo21bvxxxxxxxxxxoptions21("Dr");
      yrxxch511xhhxxhxxxxxoptions.setH8xxup21bvxxxxxxxxxxpurpose21("Dr");
      yrxxch511xhhxxhxxxxxoptions.setH9xxuv21bvxxxxxxxxxxvalue21("");
      yrxxch511xhhxxhxxxxxoptions.setI1xxuo22bvxxxxxxxxxxoptions22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI2xxup22bvxxxxxxxxxxpurpose22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI3xxuv22bvxxxxxxxxxxvalue22("");
      yrxxch511xhhxxhxxxxxoptions.setI4xxuo23bvxxxxxxxxxxoptions23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI5xxup23bvxxxxxxxxxxpurpose23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI6xxuv23bvxxxxxxxxxxvalue23("");
      yrxxch511xhhxxhxxxxxoptions.setI7xxuo24bvxxxxxxxxxxoptions24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI8xxup24bvxxxxxxxxxxpurpose24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI9xxuv24bvxxxxxxxxxxvalue24("");
      yrxxch511xhhxxhxxxxxoptions.setJ1xxuo25bvxxxxxxxxxxoptions25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ2xxup25bvxxxxxxxxxxpurpose25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ3xxuv25bvxxxxxxxxxxvalue25("");
      yrxxch511xhhxxhxxxxxoptions.setJ4xxuo26bvxxxxxxxxxxoptions26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ5xxup26bvxxxxxxxxxxpurpose26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ6xxuv26bvxxxxxxxxxxvalue26("");
      yrxxch511xhhxxhxxxxxoptions.setJ7xxuo27bvxxxxxxxxxxoptions27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ8xxup27bvxxxxxxxxxxpurpose27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ9xxuv27bvxxxxxxxxxxvalue27("");
      yrxxch511xhhxxhxxxxxoptions.setK1xxuo28bvxxxxxxxxxxoptions28("PF");
      yrxxch511xhhxxhxxxxxoptions.setK2xxup28bvxxxxxxxxxxpurpose28("Persons-Family");
      yrxxch511xhhxxhxxxxxoptions.setK3xxuv28bvxxxxxxxxxxvalue28("");
      yrxxch511xhhxxhxxxxxoptions.setK4xxuo29bvxxxxxxxxxxoptions29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK5xxup29bvxxxxxxxxxxpurpose29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK6xxuv29bvxxxxxxxxxxvalue29("");
      yrxxch511xhhxxhxxxxxoptions.setK7xxuo30bvxxxxxxxxxxoptions30("EM");
      yrxxch511xhhxxhxxxxxoptions.setK8xxup30bvxxxxxxxxxxpurpose30("EMail");
      yrxxch511xhhxxhxxxxxoptions.setK9xxuv30bvxxxxxxxxxxvalue30("");
      yrxxch511xhhxxhxxxxxoptions.setL1xxuo31bvxxxxxxxxxxoptions31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL2xxup31bvxxxxxxxxxxpurpose31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL3xxuv31bvxxxxxxxxxxvalue31("");
      yrxxch511xhhxxhxxxxxoptions.setL4xxuo32bvxxxxxxxxxxoptions32("Room 104");
      yrxxch511xhhxxhxxxxxoptions.setL5xxup32bvxxxxxxxxxxpurpose32("Room 104");
      yrxxch511xhhxxhxxxxxoptions.setL6xxuv32bvxxxxxxxxxxvalue32("");
      yrxxch511xhhxxhxxxxxoptions.setL7xxuo33bvxxxxxxxxxxoptions33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL8xxup33bvxxxxxxxxxxpurpose33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL9xxuv33bvxxxxxxxxxxvalue33("");
      yrxxch511xhhxxhxxxxxoptions.setM1xxuo34bvxxxxxxxxxxoptions34(" ");
      yrxxch511xhhxxhxxxxxoptions.setM2xxup34bvxxxxxxxxxxpurpose34(" ");
      yrxxch511xhhxxhxxxxxoptions.setM3xxuv34bvxxxxxxxxxxvalue34("");
      yrxxch511xhhxxhxxxxxoptions.setM4xxuo35bvxxxxxxxxxxoptions35("Lunch Appontment");
      yrxxch511xhhxxhxxxxxoptions.setM5xxup35bvxxxxxxxxxxpurpose35("c$88.90");
      yrxxch511xhhxxhxxxxxoptions.setM6xxuv35bvxxxxxxxxxxvalue35("");
      yrxxch511xhhxxhxxxxxoptions.setM7xxuo36bvxxxxxxxxxxoptions36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM8xxup36bvxxxxxxxxxxpurpose36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM9xxuv36bvxxxxxxxxxxvalue36("");
      yrxxch511xhhxxhxxxxxoptions.setN1xxuo37bvxxxxxxxxxxoptions37("High");
      yrxxch511xhhxxhxxxxxoptions.setN2xxup37bvxxxxxxxxxxpurpose37("High");
      yrxxch511xhhxxhxxxxxoptions.setN3xxuv37bvxxxxxxxxxxvalue37("");
      yrxxch511xhhxxhxxxxxoptions.setN4xxuo38bvxxxxxxxxxxoptions38("S");
      yrxxch511xhhxxhxxxxxoptions.setN5xxup38bvxxxxxxxxxxpurpose38("System Admin");
      yrxxch511xhhxxhxxxxxoptions.setN6xxuv38bvxxxxxxxxxxvalue38("");
      yrxxch511xhhxxhxxxxxoptions.setN7xxuo39bvxxxxxxxxxxoptions39("H");
      yrxxch511xhhxxhxxxxxoptions.setN8xxup39bvxxxxxxxxxxpurpose39("High");
      yrxxch511xhhxxhxxxxxoptions.setN9xxuv39bvxxxxxxxxxxvalue39("");
      yrxxch511xhhxxhxxxxxoptions.setO1xxuo40bvxxxxxxxxxxoptions40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO2xxup40bvxxxxxxxxxxpurpose40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO3xxuv40bvxxxxxxxxxxvalue40("");
      yrxxch511xhhxxhxxxxxoptions.setO4xxuo41bvxxxxxxxxxxoptions41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO5xxup41bvxxxxxxxxxxpurpose41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO6xxuv41bvxxxxxxxxxxvalue41("");
      yrxxch511xhhxxhxxxxxoptions.setO7xxuo42bvxxxxxxxxxxoptions42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO8xxup42bvxxxxxxxxxxpurpose42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO9xxuv42bvxxxxxxxxxxvalue42("");
      yrxxch511xhhxxhxxxxxoptions.setP1xxuo43bvxxxxxxxxxxoptions43("New");
      yrxxch511xhhxxhxxxxxoptions.setP2xxup43bvxxxxxxxxxxpurpose43("New");
      yrxxch511xhhxxhxxxxxoptions.setP3xxuv43bvxxxxxxxxxxvalue43("");
      yrxxch511xhhxxhxxxxxoptions.setP4xxuo44bvxxxxxxxxxxoptions44("");
      yrxxch511xhhxxhxxxxxoptions.setP5xxup44bvxxxxxxxxxxpurpose44("");
      yrxxch511xhhxxhxxxxxoptions.setP6xxuv44bvxxxxxxxxxxvalue44("");
      yrxxch511xhhxxhxxxxxoptions.setP7xxuo45bvxxxxxxxxxxoptions45("D");
      yrxxch511xhhxxhxxxxxoptions.setP8xxup45bvxxxxxxxxxxpurpose45("");
      yrxxch511xhhxxhxxxxxoptions.setP9xxuv45bvxxxxxxxxxxvalue45("");
      yrxxch511xhhxxhxxxxxoptions.setQ1xxuo46bvxxxxxxxxxxoptions46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ2xxup46bvxxxxxxxxxxpurpose46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ3xxuv46bvxxxxxxxxxxvalue46("");
      yrxxch511xhhxxhxxxxxoptions.setQ4xxuo47bvxxxxxxxxxxoptions47("08");
      yrxxch511xhhxxhxxxxxoptions.setQ5xxup47bvxxxxxxxxxxpurpose47("08");
      yrxxch511xhhxxhxxxxxoptions.setQ6xxuv47bvxxxxxxxxxxvalue47("");
      yrxxch511xhhxxhxxxxxoptions.setQ7xxuo48bvxxxxxxxxxxoptions48("");
      yrxxch511xhhxxhxxxxxoptions.setQ8xxup48bvxxxxxxxxxxpurpose48("");
      yrxxch511xhhxxhxxxxxoptions.setQ9xxuv48bvxxxxxxxxxxvalue48("");
      yrxxch511xhhxxhxxxxxoptions.setR1xxuo49bvxxxxxxxxxxoptions49("3R-CONTACTUS-1-C");
      yrxxch511xhhxxhxxxxxoptions.setR2xxup49bvxxxxxxxxxxpurpose49("CONTACTUS Panel 1");
      yrxxch511xhhxxhxxxxxoptions.setR3xxuv49bvxxxxxxxxxxvalue49("");
      yrxxch511xhhxxhxxxxxoptions.setR4xxuo50bvxxxxxxxxxxoptions50("TXTM");
      yrxxch511xhhxxhxxxxxoptions.setR5xxup50bvxxxxxxxxxxpurpose50("Mobile TEXT BODY");
      yrxxch511xhhxxhxxxxxoptions.setR6xxuv50bvxxxxxxxxxxvalue50("");
      yrxxch511xhhxxhxxxxxoptions.setR7xxuo51bvxxxxxxxxxxoptions51("EL");
      yrxxch511xhhxxhxxxxxoptions.setR8xxup51bvxxxxxxxxxxpurpose51("Express Shipping/Large Item");
      yrxxch511xhhxxhxxxxxoptions.setR9xxuv51bvxxxxxxxxxxvalue51("");
      yrxxch511xhhxxhxxxxxoptions.setS1xxuo52bvxxxxxxxxxxoptions52("");
      yrxxch511xhhxxhxxxxxoptions.setS2xxup52bvxxxxxxxxxxpurpose52("");
      yrxxch511xhhxxhxxxxxoptions.setS3xxuv52bvxxxxxxxxxxvalue52("");
      yrxxch511xhhxxhxxxxxoptions.setS4xxuo53bvxxxxxxxxxxoptions53("");
      yrxxch511xhhxxhxxxxxoptions.setS5xxup53bvxxxxxxxxxxpurpose53("");
      yrxxch511xhhxxhxxxxxoptions.setS6xxuv53bvxxxxxxxxxxvalue53("");

      yrxxch511xhhxxhxxxxxoptions.setS7xxuo54bvxxxxxxxxxxoptions54("");
      yrxxch511xhhxxhxxxxxoptions.setS8xxup54bvxxxxxxxxxxpurpose54("");
      yrxxch511xhhxxhxxxxxoptions.setS9xxuv54bvxxxxxxxxxxvalue54("");
      yrxxch511xhhxxhxxxxxoptions.setT1xxuo55bvxxxxxxxxxxoptions55("");
      yrxxch511xhhxxhxxxxxoptions.setT2xxup55bvxxxxxxxxxxpurpose55("");
      yrxxch511xhhxxhxxxxxoptions.setT3xxuv55bvxxxxxxxxxxvalue55("");
      yrxxch511xhhxxhxxxxxoptions.setT4xxuo56bvxxxxxxxxxxoptions56("");
      yrxxch511xhhxxhxxxxxoptions.setT5xxup56bvxxxxxxxxxxpurpose56("");
      yrxxch511xhhxxhxxxxxoptions.setT6xxuv56bvxxxxxxxxxxvalue56("");
      yrxxch511xhhxxhxxxxxoptions.setT7xxuo57bvxxxxxxxxxxoptions57("Custom");
      yrxxch511xhhxxhxxxxxoptions.setT8xxup57bvxxxxxxxxxxpurpose57("Custom");
      yrxxch511xhhxxhxxxxxoptions.setT9xxuv57bvxxxxxxxxxxvalue57("");
      yrxxch511xhhxxhxxxxxoptions.setU1xxuo58bvxxxxxxxxxxoptions58("");
      yrxxch511xhhxxhxxxxxoptions.setU2xxup58bvxxxxxxxxxxpurpose58("");
      yrxxch511xhhxxhxxxxxoptions.setU3xxuv58bvxxxxxxxxxxvalue58("");
      yrxxch511xhhxxhxxxxxoptions.setU4xxuo59bvxxxxxxxxxxoptions59("");
      yrxxch511xhhxxhxxxxxoptions.setU5xxup59bvxxxxxxxxxxpurpose59("");
      yrxxch511xhhxxhxxxxxoptions.setU6xxuv59bvxxxxxxxxxxvalue59("");
      yrxxch511xhhxxhxxxxxoptions.setU7xxuo60bvxxxxxxxxxxoptions60("");
      yrxxch511xhhxxhxxxxxoptions.setU8xxup60bvxxxxxxxxxxpurpose60("");
      yrxxch511xhhxxhxxxxxoptions.setU9xxuv60bvxxxxxxxxxxvalue60("");
      yrxxch511xhhxxhxxxxxoptions.setV1xxuo61bvxxxxxxxxxxoptions61("");
      yrxxch511xhhxxhxxxxxoptions.setV2xxup61bvxxxxxxxxxxpurpose61("");
      yrxxch511xhhxxhxxxxxoptions.setV3xxuv61bvxxxxxxxxxxvalue61("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptionsHome.persist(client);
      yrxxch511xhhxxhxxxxxoptionsHome.clearInstance();

      yrxxch511xhhxxhxxxxxoptions=yrxxch511xhhxxhxxxxxoptionsHome.getInstance();
      yrxxch511xhhxxhxxxxxoptions.setA0xxukcxbvxxxxxxxxxxrow("09");
      yrxxch511xhhxxhxxxxxoptions.setB1xxuo01bvxxxxxxxxxxoptions01("R");
      yrxxch511xhhxxhxxxxxoptions.setB2xxup01bvxxxxxxxxxxpurpose01("Retained Earning");
      yrxxch511xhhxxhxxxxxoptions.setB3xxuv01bvxxxxxxxxxxvalue01("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptions.setB4xxuo02bvxxxxxxxxxxoptions02("S");
      yrxxch511xhhxxhxxxxxoptions.setB5xxup02bvxxxxxxxxxxpurpose02("Subheader");
      yrxxch511xhhxxhxxxxxoptions.setB6xxuv02bvxxxxxxxxxxvalue02("");
      yrxxch511xhhxxhxxxxxoptions.setB7xxuo03bvxxxxxxxxxxoptions03("P");
      yrxxch511xhhxxhxxxxxoptions.setB8xxup03bvxxxxxxxxxxpurpose03("Payable");
      yrxxch511xhhxxhxxxxxoptions.setB9xxuv03bvxxxxxxxxxxvalue03("");
      yrxxch511xhhxxhxxxxxoptions.setC1xxuo04bvxxxxxxxxxxoptions04("");
      yrxxch511xhhxxhxxxxxoptions.setC2xxup04bvxxxxxxxxxxpurpose04("");
      yrxxch511xhhxxhxxxxxoptions.setC3xxuv04bvxxxxxxxxxxvalue04("");
      yrxxch511xhhxxhxxxxxoptions.setC4xxuo05bvxxxxxxxxxxoptions05("");
      yrxxch511xhhxxhxxxxxoptions.setC5xxup05bvxxxxxxxxxxpurpose05("");
      yrxxch511xhhxxhxxxxxoptions.setC6xxuv05bvxxxxxxxxxxvalue05("");
      yrxxch511xhhxxhxxxxxoptions.setC7xxuo06bvxxxxxxxxxxoptions06("");
      yrxxch511xhhxxhxxxxxoptions.setC8xxup06bvxxxxxxxxxxpurpose06("");
      yrxxch511xhhxxhxxxxxoptions.setC9xxuv06bvxxxxxxxxxxvalue06("");
      yrxxch511xhhxxhxxxxxoptions.setD1xxuo07bvxxxxxxxxxxoptions07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD2xxup07bvxxxxxxxxxxpurpose07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD3xxuv07bvxxxxxxxxxxvalue07("");
      yrxxch511xhhxxhxxxxxoptions.setD4xxuo08bvxxxxxxxxxxoptions08("H");
      yrxxch511xhhxxhxxxxxoptions.setD5xxup08bvxxxxxxxxxxpurpose08("High");
      yrxxch511xhhxxhxxxxxoptions.setD6xxuv08bvxxxxxxxxxxvalue08("");
      yrxxch511xhhxxhxxxxxoptions.setD7xxuo09bvxxxxxxxxxxoptions09("30");
      yrxxch511xhhxxhxxxxxoptions.setD8xxup09bvxxxxxxxxxxpurpose09("-30 days");
      yrxxch511xhhxxhxxxxxoptions.setD9xxuv09bvxxxxxxxxxxvalue09("");
      yrxxch511xhhxxhxxxxxoptions.setE1xxuo10bvxxxxxxxxxxoptions10("cash");
      yrxxch511xhhxxhxxxxxoptions.setE2xxup10bvxxxxxxxxxxpurpose10("-cash");
      yrxxch511xhhxxhxxxxxoptions.setE3xxuv10bvxxxxxxxxxxvalue10("");
      yrxxch511xhhxxhxxxxxoptions.setE4xxuo11bvxxxxxxxxxxoptions11("Montreal");
      yrxxch511xhhxxhxxxxxoptions.setE5xxup11bvxxxxxxxxxxpurpose11("Toronto");
      yrxxch511xhhxxhxxxxxoptions.setE6xxuv11bvxxxxxxxxxxvalue11("ca=Montreal; us=Boston");
      yrxxch511xhhxxhxxxxxoptions.setE7xxuo12bvxxxxxxxxxxoptions12("QE");
      yrxxch511xhhxxhxxxxxoptions.setE8xxup12bvxxxxxxxxxxpurpose12("ca=Ontario us=Dist. of Columbia");
      yrxxch511xhhxxhxxxxxoptions.setE9xxuv12bvxxxxxxxxxxvalue12("ca=ON us=DC");
      yrxxch511xhhxxhxxxxxoptions.setF1xxuo13bvxxxxxxxxxxoptions13("");
      yrxxch511xhhxxhxxxxxoptions.setF2xxup13bvxxxxxxxxxxpurpose13("");
      yrxxch511xhhxxhxxxxxoptions.setF3xxuv13bvxxxxxxxxxxvalue13("");
      yrxxch511xhhxxhxxxxxoptions.setF4xxuo14bvxxxxxxxxxxoptions14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF5xxup14bvxxxxxxxxxxpurpose14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF6xxuv14bvxxxxxxxxxxvalue14("ca=M4L3Z8 us=10003 in=70003");
      yrxxch511xhhxxhxxxxxoptions.setF7xxuo15bvxxxxxxxxxxoptions15("Y");
      yrxxch511xhhxxhxxxxxoptions.setF8xxup15bvxxxxxxxxxxpurpose15("Yes");
      yrxxch511xhhxxhxxxxxoptions.setF9xxuv15bvxxxxxxxxxxvalue15("");
      yrxxch511xhhxxhxxxxxoptions.setG1xxuo16bvxxxxxxxxxxoptions16("PI-D");
      yrxxch511xhhxxhxxxxxoptions.setG2xxup16bvxxxxxxxxxxpurpose16("Image-Item");
      yrxxch511xhhxxhxxxxxoptions.setG3xxuv16bvxxxxxxxxxxvalue16("");
      yrxxch511xhhxxhxxxxxoptions.setG4xxuo17bvxxxxxxxxxxoptions17("?");
      yrxxch511xhhxxhxxxxxoptions.setG5xxup17bvxxxxxxxxxxpurpose17("?");
      yrxxch511xhhxxhxxxxxoptions.setG6xxuv17bvxxxxxxxxxxvalue17("");
      yrxxch511xhhxxhxxxxxoptions.setG7xxuo18bvxxxxxxxxxxoptions18("LX");
      yrxxch511xhhxxhxxxxxoptions.setG8xxup18bvxxxxxxxxxxpurpose18("Length");
      yrxxch511xhhxxhxxxxxoptions.setG9xxuv18bvxxxxxxxxxxvalue18("h=18");
      yrxxch511xhhxxhxxxxxoptions.setH1xxuo19bvxxxxxxxxxxoptions19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH2xxup19bvxxxxxxxxxxpurpose19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH3xxuv19bvxxxxxxxxxxvalue19("");
      yrxxch511xhhxxhxxxxxoptions.setH4xxuo20bvxxxxxxxxxxoptions20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH5xxup20bvxxxxxxxxxxpurpose20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH6xxuv20bvxxxxxxxxxxvalue20("");
      yrxxch511xhhxxhxxxxxoptions.setH7xxuo21bvxxxxxxxxxxoptions21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH8xxup21bvxxxxxxxxxxpurpose21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH9xxuv21bvxxxxxxxxxxvalue21("");
      yrxxch511xhhxxhxxxxxoptions.setI1xxuo22bvxxxxxxxxxxoptions22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI2xxup22bvxxxxxxxxxxpurpose22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI3xxuv22bvxxxxxxxxxxvalue22("");
      yrxxch511xhhxxhxxxxxoptions.setI4xxuo23bvxxxxxxxxxxoptions23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI5xxup23bvxxxxxxxxxxpurpose23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI6xxuv23bvxxxxxxxxxxvalue23("");
      yrxxch511xhhxxhxxxxxoptions.setI7xxuo24bvxxxxxxxxxxoptions24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI8xxup24bvxxxxxxxxxxpurpose24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI9xxuv24bvxxxxxxxxxxvalue24("");
      yrxxch511xhhxxhxxxxxoptions.setJ1xxuo25bvxxxxxxxxxxoptions25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ2xxup25bvxxxxxxxxxxpurpose25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ3xxuv25bvxxxxxxxxxxvalue25("");
      yrxxch511xhhxxhxxxxxoptions.setJ4xxuo26bvxxxxxxxxxxoptions26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ5xxup26bvxxxxxxxxxxpurpose26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ6xxuv26bvxxxxxxxxxxvalue26("");
      yrxxch511xhhxxhxxxxxoptions.setJ7xxuo27bvxxxxxxxxxxoptions27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ8xxup27bvxxxxxxxxxxpurpose27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ9xxuv27bvxxxxxxxxxxvalue27("");
      yrxxch511xhhxxhxxxxxoptions.setK1xxuo28bvxxxxxxxxxxoptions28("PF");
      yrxxch511xhhxxhxxxxxoptions.setK2xxup28bvxxxxxxxxxxpurpose28("Persons-Family");
      yrxxch511xhhxxhxxxxxoptions.setK3xxuv28bvxxxxxxxxxxvalue28("");
      yrxxch511xhhxxhxxxxxoptions.setK4xxuo29bvxxxxxxxxxxoptions29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK5xxup29bvxxxxxxxxxxpurpose29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK6xxuv29bvxxxxxxxxxxvalue29("");
      yrxxch511xhhxxhxxxxxoptions.setK7xxuo30bvxxxxxxxxxxoptions30("EM");
      yrxxch511xhhxxhxxxxxoptions.setK8xxup30bvxxxxxxxxxxpurpose30("EMail");
      yrxxch511xhhxxhxxxxxoptions.setK9xxuv30bvxxxxxxxxxxvalue30("");
      yrxxch511xhhxxhxxxxxoptions.setL1xxuo31bvxxxxxxxxxxoptions31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL2xxup31bvxxxxxxxxxxpurpose31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL3xxuv31bvxxxxxxxxxxvalue31("");
      yrxxch511xhhxxhxxxxxoptions.setL4xxuo32bvxxxxxxxxxxoptions32("Room 105");
      yrxxch511xhhxxhxxxxxoptions.setL5xxup32bvxxxxxxxxxxpurpose32("Room 105");
      yrxxch511xhhxxhxxxxxoptions.setL6xxuv32bvxxxxxxxxxxvalue32("");
      yrxxch511xhhxxhxxxxxoptions.setL7xxuo33bvxxxxxxxxxxoptions33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL8xxup33bvxxxxxxxxxxpurpose33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL9xxuv33bvxxxxxxxxxxvalue33("");
      yrxxch511xhhxxhxxxxxoptions.setM1xxuo34bvxxxxxxxxxxoptions34(" ");
      yrxxch511xhhxxhxxxxxoptions.setM2xxup34bvxxxxxxxxxxpurpose34("");
      yrxxch511xhhxxhxxxxxoptions.setM3xxuv34bvxxxxxxxxxxvalue34("");
      yrxxch511xhhxxhxxxxxoptions.setM4xxuo35bvxxxxxxxxxxoptions35("Lunch Appontment");
      yrxxch511xhhxxhxxxxxoptions.setM5xxup35bvxxxxxxxxxxpurpose35("c$88.90");
      yrxxch511xhhxxhxxxxxoptions.setM6xxuv35bvxxxxxxxxxxvalue35("");
      yrxxch511xhhxxhxxxxxoptions.setM7xxuo36bvxxxxxxxxxxoptions36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM8xxup36bvxxxxxxxxxxpurpose36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM9xxuv36bvxxxxxxxxxxvalue36("");
      yrxxch511xhhxxhxxxxxoptions.setN1xxuo37bvxxxxxxxxxxoptions37("High");
      yrxxch511xhhxxhxxxxxoptions.setN2xxup37bvxxxxxxxxxxpurpose37("High");
      yrxxch511xhhxxhxxxxxoptions.setN3xxuv37bvxxxxxxxxxxvalue37("");
      yrxxch511xhhxxhxxxxxoptions.setN4xxuo38bvxxxxxxxxxxoptions38("S");
      yrxxch511xhhxxhxxxxxoptions.setN5xxup38bvxxxxxxxxxxpurpose38("System Admin");
      yrxxch511xhhxxhxxxxxoptions.setN6xxuv38bvxxxxxxxxxxvalue38("");
      yrxxch511xhhxxhxxxxxoptions.setN7xxuo39bvxxxxxxxxxxoptions39("H");
      yrxxch511xhhxxhxxxxxoptions.setN8xxup39bvxxxxxxxxxxpurpose39("High");
      yrxxch511xhhxxhxxxxxoptions.setN9xxuv39bvxxxxxxxxxxvalue39("");
      yrxxch511xhhxxhxxxxxoptions.setO1xxuo40bvxxxxxxxxxxoptions40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO2xxup40bvxxxxxxxxxxpurpose40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO3xxuv40bvxxxxxxxxxxvalue40("");
      yrxxch511xhhxxhxxxxxoptions.setO4xxuo41bvxxxxxxxxxxoptions41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO5xxup41bvxxxxxxxxxxpurpose41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO6xxuv41bvxxxxxxxxxxvalue41("");
      yrxxch511xhhxxhxxxxxoptions.setO7xxuo42bvxxxxxxxxxxoptions42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO8xxup42bvxxxxxxxxxxpurpose42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO9xxuv42bvxxxxxxxxxxvalue42("");
      yrxxch511xhhxxhxxxxxoptions.setP1xxuo43bvxxxxxxxxxxoptions43("New");
      yrxxch511xhhxxhxxxxxoptions.setP2xxup43bvxxxxxxxxxxpurpose43("New");
      yrxxch511xhhxxhxxxxxoptions.setP3xxuv43bvxxxxxxxxxxvalue43("");
      yrxxch511xhhxxhxxxxxoptions.setP4xxuo44bvxxxxxxxxxxoptions44("");
      yrxxch511xhhxxhxxxxxoptions.setP5xxup44bvxxxxxxxxxxpurpose44("");
      yrxxch511xhhxxhxxxxxoptions.setP6xxuv44bvxxxxxxxxxxvalue44("");
      yrxxch511xhhxxhxxxxxoptions.setP7xxuo45bvxxxxxxxxxxoptions45("D");
      yrxxch511xhhxxhxxxxxoptions.setP8xxup45bvxxxxxxxxxxpurpose45("");
      yrxxch511xhhxxhxxxxxoptions.setP9xxuv45bvxxxxxxxxxxvalue45("");
      yrxxch511xhhxxhxxxxxoptions.setQ1xxuo46bvxxxxxxxxxxoptions46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ2xxup46bvxxxxxxxxxxpurpose46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ3xxuv46bvxxxxxxxxxxvalue46("");
      yrxxch511xhhxxhxxxxxoptions.setQ4xxuo47bvxxxxxxxxxxoptions47("09");
      yrxxch511xhhxxhxxxxxoptions.setQ5xxup47bvxxxxxxxxxxpurpose47("09");
      yrxxch511xhhxxhxxxxxoptions.setQ6xxuv47bvxxxxxxxxxxvalue47("");
      yrxxch511xhhxxhxxxxxoptions.setQ7xxuo48bvxxxxxxxxxxoptions48("");
      yrxxch511xhhxxhxxxxxoptions.setQ8xxup48bvxxxxxxxxxxpurpose48("");
      yrxxch511xhhxxhxxxxxoptions.setQ9xxuv48bvxxxxxxxxxxvalue48("");
      yrxxch511xhhxxhxxxxxoptions.setR1xxuo49bvxxxxxxxxxxoptions49("accounts");
      yrxxch511xhhxxhxxxxxoptions.setR2xxup49bvxxxxxxxxxxpurpose49("Accounts Data");
      yrxxch511xhhxxhxxxxxoptions.setR3xxuv49bvxxxxxxxxxxvalue49("");
      yrxxch511xhhxxhxxxxxoptions.setR4xxuo50bvxxxxxxxxxxoptions50("csv");
      yrxxch511xhhxxhxxxxxoptions.setR5xxup50bvxxxxxxxxxxpurpose50("Data Type CSV");
      yrxxch511xhhxxhxxxxxoptions.setR6xxuv50bvxxxxxxxxxxvalue50("");
      yrxxch511xhhxxhxxxxxoptions.setR7xxuo51bvxxxxxxxxxxoptions51("PL");
      yrxxch511xhhxxhxxxxxoptions.setR8xxup51bvxxxxxxxxxxpurpose51("PickUp/Large Item");
      yrxxch511xhhxxhxxxxxoptions.setR9xxuv51bvxxxxxxxxxxvalue51("");
      yrxxch511xhhxxhxxxxxoptions.setS1xxuo52bvxxxxxxxxxxoptions52("");
      yrxxch511xhhxxhxxxxxoptions.setS2xxup52bvxxxxxxxxxxpurpose52("");
      yrxxch511xhhxxhxxxxxoptions.setS3xxuv52bvxxxxxxxxxxvalue52("");
      yrxxch511xhhxxhxxxxxoptions.setS4xxuo53bvxxxxxxxxxxoptions53("");
      yrxxch511xhhxxhxxxxxoptions.setS5xxup53bvxxxxxxxxxxpurpose53("");
      yrxxch511xhhxxhxxxxxoptions.setS6xxuv53bvxxxxxxxxxxvalue53("");

      yrxxch511xhhxxhxxxxxoptions.setS7xxuo54bvxxxxxxxxxxoptions54("");
      yrxxch511xhhxxhxxxxxoptions.setS8xxup54bvxxxxxxxxxxpurpose54("");
      yrxxch511xhhxxhxxxxxoptions.setS9xxuv54bvxxxxxxxxxxvalue54("");
      yrxxch511xhhxxhxxxxxoptions.setT1xxuo55bvxxxxxxxxxxoptions55("");
      yrxxch511xhhxxhxxxxxoptions.setT2xxup55bvxxxxxxxxxxpurpose55("");
      yrxxch511xhhxxhxxxxxoptions.setT3xxuv55bvxxxxxxxxxxvalue55("");
      yrxxch511xhhxxhxxxxxoptions.setT4xxuo56bvxxxxxxxxxxoptions56("");
      yrxxch511xhhxxhxxxxxoptions.setT5xxup56bvxxxxxxxxxxpurpose56("");
      yrxxch511xhhxxhxxxxxoptions.setT6xxuv56bvxxxxxxxxxxvalue56("");
      yrxxch511xhhxxhxxxxxoptions.setT7xxuo57bvxxxxxxxxxxoptions57("");
      yrxxch511xhhxxhxxxxxoptions.setT8xxup57bvxxxxxxxxxxpurpose57("");
      yrxxch511xhhxxhxxxxxoptions.setT9xxuv57bvxxxxxxxxxxvalue57("");
      yrxxch511xhhxxhxxxxxoptions.setU1xxuo58bvxxxxxxxxxxoptions58("");
      yrxxch511xhhxxhxxxxxoptions.setU2xxup58bvxxxxxxxxxxpurpose58("");
      yrxxch511xhhxxhxxxxxoptions.setU3xxuv58bvxxxxxxxxxxvalue58("");
      yrxxch511xhhxxhxxxxxoptions.setU4xxuo59bvxxxxxxxxxxoptions59("");
      yrxxch511xhhxxhxxxxxoptions.setU5xxup59bvxxxxxxxxxxpurpose59("");
      yrxxch511xhhxxhxxxxxoptions.setU6xxuv59bvxxxxxxxxxxvalue59("");
      yrxxch511xhhxxhxxxxxoptions.setU7xxuo60bvxxxxxxxxxxoptions60("");
      yrxxch511xhhxxhxxxxxoptions.setU8xxup60bvxxxxxxxxxxpurpose60("");
      yrxxch511xhhxxhxxxxxoptions.setU9xxuv60bvxxxxxxxxxxvalue60("");
      yrxxch511xhhxxhxxxxxoptions.setV1xxuo61bvxxxxxxxxxxoptions61("");
      yrxxch511xhhxxhxxxxxoptions.setV2xxup61bvxxxxxxxxxxpurpose61("");
      yrxxch511xhhxxhxxxxxoptions.setV3xxuv61bvxxxxxxxxxxvalue61("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptionsHome.persist(client);
      yrxxch511xhhxxhxxxxxoptionsHome.clearInstance();

      yrxxch511xhhxxhxxxxxoptions=yrxxch511xhhxxhxxxxxoptionsHome.getInstance();
      yrxxch511xhhxxhxxxxxoptions.setA0xxukcxbvxxxxxxxxxxrow("10");
      yrxxch511xhhxxhxxxxxoptions.setB1xxuo01bvxxxxxxxxxxoptions01("R");
      yrxxch511xhhxxhxxxxxoptions.setB2xxup01bvxxxxxxxxxxpurpose01("Retained Earning");
      yrxxch511xhhxxhxxxxxoptions.setB3xxuv01bvxxxxxxxxxxvalue01("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptions.setB4xxuo02bvxxxxxxxxxxoptions02("S");
      yrxxch511xhhxxhxxxxxoptions.setB5xxup02bvxxxxxxxxxxpurpose02("Subheader");
      yrxxch511xhhxxhxxxxxoptions.setB6xxuv02bvxxxxxxxxxxvalue02("");
      yrxxch511xhhxxhxxxxxoptions.setB7xxuo03bvxxxxxxxxxxoptions03("P");
      yrxxch511xhhxxhxxxxxoptions.setB8xxup03bvxxxxxxxxxxpurpose03("Payable");
      yrxxch511xhhxxhxxxxxoptions.setB9xxuv03bvxxxxxxxxxxvalue03("");
      yrxxch511xhhxxhxxxxxoptions.setC1xxuo04bvxxxxxxxxxxoptions04("");
      yrxxch511xhhxxhxxxxxoptions.setC2xxup04bvxxxxxxxxxxpurpose04("");
      yrxxch511xhhxxhxxxxxoptions.setC3xxuv04bvxxxxxxxxxxvalue04("");
      yrxxch511xhhxxhxxxxxoptions.setC4xxuo05bvxxxxxxxxxxoptions05("");
      yrxxch511xhhxxhxxxxxoptions.setC5xxup05bvxxxxxxxxxxpurpose05("");
      yrxxch511xhhxxhxxxxxoptions.setC6xxuv05bvxxxxxxxxxxvalue05("");
      yrxxch511xhhxxhxxxxxoptions.setC7xxuo06bvxxxxxxxxxxoptions06("");
      yrxxch511xhhxxhxxxxxoptions.setC8xxup06bvxxxxxxxxxxpurpose06("");
      yrxxch511xhhxxhxxxxxoptions.setC9xxuv06bvxxxxxxxxxxvalue06("");
      yrxxch511xhhxxhxxxxxoptions.setD1xxuo07bvxxxxxxxxxxoptions07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD2xxup07bvxxxxxxxxxxpurpose07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD3xxuv07bvxxxxxxxxxxvalue07("");
      yrxxch511xhhxxhxxxxxoptions.setD4xxuo08bvxxxxxxxxxxoptions08("H");
      yrxxch511xhhxxhxxxxxoptions.setD5xxup08bvxxxxxxxxxxpurpose08("High");
      yrxxch511xhhxxhxxxxxoptions.setD6xxuv08bvxxxxxxxxxxvalue08("");
      yrxxch511xhhxxhxxxxxoptions.setD7xxuo09bvxxxxxxxxxxoptions09("30");
      yrxxch511xhhxxhxxxxxoptions.setD8xxup09bvxxxxxxxxxxpurpose09("-30 days");
      yrxxch511xhhxxhxxxxxoptions.setD9xxuv09bvxxxxxxxxxxvalue09("");
      yrxxch511xhhxxhxxxxxoptions.setE1xxuo10bvxxxxxxxxxxoptions10("cash");
      yrxxch511xhhxxhxxxxxoptions.setE2xxup10bvxxxxxxxxxxpurpose10("-cash");
      yrxxch511xhhxxhxxxxxoptions.setE3xxuv10bvxxxxxxxxxxvalue10("");
      yrxxch511xhhxxhxxxxxoptions.setE4xxuo11bvxxxxxxxxxxoptions11("Montreal");
      yrxxch511xhhxxhxxxxxoptions.setE5xxup11bvxxxxxxxxxxpurpose11("ca=Montreal; us=Boston");
      yrxxch511xhhxxhxxxxxoptions.setE6xxuv11bvxxxxxxxxxxvalue11("ca=Montreal; us=Boston");
      yrxxch511xhhxxhxxxxxoptions.setE7xxuo12bvxxxxxxxxxxoptions12("QE");
      yrxxch511xhhxxhxxxxxoptions.setE8xxup12bvxxxxxxxxxxpurpose12("ca=Prince Edward Island us=Florida");
      yrxxch511xhhxxhxxxxxoptions.setE9xxuv12bvxxxxxxxxxxvalue12("ca=PE us=FL");
      yrxxch511xhhxxhxxxxxoptions.setF1xxuo13bvxxxxxxxxxxoptions13("");
      yrxxch511xhhxxhxxxxxoptions.setF2xxup13bvxxxxxxxxxxpurpose13("");
      yrxxch511xhhxxhxxxxxoptions.setF3xxuv13bvxxxxxxxxxxvalue13("");
      yrxxch511xhhxxhxxxxxoptions.setF4xxuo14bvxxxxxxxxxxoptions14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF5xxup14bvxxxxxxxxxxpurpose14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF6xxuv14bvxxxxxxxxxxvalue14("ca=M4L3Z8 us=10003 in=70003");
      yrxxch511xhhxxhxxxxxoptions.setF7xxuo15bvxxxxxxxxxxoptions15("Y");
      yrxxch511xhhxxhxxxxxoptions.setF8xxup15bvxxxxxxxxxxpurpose15("Yes");
      yrxxch511xhhxxhxxxxxoptions.setF9xxuv15bvxxxxxxxxxxvalue15("");
      yrxxch511xhhxxhxxxxxoptions.setG1xxuo16bvxxxxxxxxxxoptions16("PI-L1");
      yrxxch511xhhxxhxxxxxoptions.setG2xxup16bvxxxxxxxxxxpurpose16("Image-Category");
      yrxxch511xhhxxhxxxxxoptions.setG3xxuv16bvxxxxxxxxxxvalue16("");
      yrxxch511xhhxxhxxxxxoptions.setG4xxuo17bvxxxxxxxxxxoptions17("?");
      yrxxch511xhhxxhxxxxxoptions.setG5xxup17bvxxxxxxxxxxpurpose17("?");
      yrxxch511xhhxxhxxxxxoptions.setG6xxuv17bvxxxxxxxxxxvalue17("");
      yrxxch511xhhxxhxxxxxoptions.setG7xxuo18bvxxxxxxxxxxoptions18("LX");
      yrxxch511xhhxxhxxxxxoptions.setG8xxup18bvxxxxxxxxxxpurpose18("Length");
      yrxxch511xhhxxhxxxxxoptions.setG9xxuv18bvxxxxxxxxxxvalue18("h=18");
      yrxxch511xhhxxhxxxxxoptions.setH1xxuo19bvxxxxxxxxxxoptions19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH2xxup19bvxxxxxxxxxxpurpose19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH3xxuv19bvxxxxxxxxxxvalue19("");
      yrxxch511xhhxxhxxxxxoptions.setH4xxuo20bvxxxxxxxxxxoptions20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH5xxup20bvxxxxxxxxxxpurpose20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH6xxuv20bvxxxxxxxxxxvalue20("");
      yrxxch511xhhxxhxxxxxoptions.setH7xxuo21bvxxxxxxxxxxoptions21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH8xxup21bvxxxxxxxxxxpurpose21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH9xxuv21bvxxxxxxxxxxvalue21("");
      yrxxch511xhhxxhxxxxxoptions.setI1xxuo22bvxxxxxxxxxxoptions22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI2xxup22bvxxxxxxxxxxpurpose22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI3xxuv22bvxxxxxxxxxxvalue22("");
      yrxxch511xhhxxhxxxxxoptions.setI4xxuo23bvxxxxxxxxxxoptions23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI5xxup23bvxxxxxxxxxxpurpose23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI6xxuv23bvxxxxxxxxxxvalue23("");
      yrxxch511xhhxxhxxxxxoptions.setI7xxuo24bvxxxxxxxxxxoptions24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI8xxup24bvxxxxxxxxxxpurpose24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI9xxuv24bvxxxxxxxxxxvalue24("");
      yrxxch511xhhxxhxxxxxoptions.setJ1xxuo25bvxxxxxxxxxxoptions25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ2xxup25bvxxxxxxxxxxpurpose25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ3xxuv25bvxxxxxxxxxxvalue25("");
      yrxxch511xhhxxhxxxxxoptions.setJ4xxuo26bvxxxxxxxxxxoptions26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ5xxup26bvxxxxxxxxxxpurpose26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ6xxuv26bvxxxxxxxxxxvalue26("");
      yrxxch511xhhxxhxxxxxoptions.setJ7xxuo27bvxxxxxxxxxxoptions27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ8xxup27bvxxxxxxxxxxpurpose27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ9xxuv27bvxxxxxxxxxxvalue27("");
      yrxxch511xhhxxhxxxxxoptions.setK1xxuo28bvxxxxxxxxxxoptions28("PF");
      yrxxch511xhhxxhxxxxxoptions.setK2xxup28bvxxxxxxxxxxpurpose28("Persons-Family");
      yrxxch511xhhxxhxxxxxoptions.setK3xxuv28bvxxxxxxxxxxvalue28("");
      yrxxch511xhhxxhxxxxxoptions.setK4xxuo29bvxxxxxxxxxxoptions29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK5xxup29bvxxxxxxxxxxpurpose29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK6xxuv29bvxxxxxxxxxxvalue29("");
      yrxxch511xhhxxhxxxxxoptions.setK7xxuo30bvxxxxxxxxxxoptions30("EM");
      yrxxch511xhhxxhxxxxxoptions.setK8xxup30bvxxxxxxxxxxpurpose30("EMail");
      yrxxch511xhhxxhxxxxxoptions.setK9xxuv30bvxxxxxxxxxxvalue30("");
      yrxxch511xhhxxhxxxxxoptions.setL1xxuo31bvxxxxxxxxxxoptions31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL2xxup31bvxxxxxxxxxxpurpose31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL3xxuv31bvxxxxxxxxxxvalue31("");
      yrxxch511xhhxxhxxxxxoptions.setL4xxuo32bvxxxxxxxxxxoptions32("Room 106");
      yrxxch511xhhxxhxxxxxoptions.setL5xxup32bvxxxxxxxxxxpurpose32("Room 106");
      yrxxch511xhhxxhxxxxxoptions.setL6xxuv32bvxxxxxxxxxxvalue32("");
      yrxxch511xhhxxhxxxxxoptions.setL7xxuo33bvxxxxxxxxxxoptions33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL8xxup33bvxxxxxxxxxxpurpose33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL9xxuv33bvxxxxxxxxxxvalue33("");
      yrxxch511xhhxxhxxxxxoptions.setM1xxuo34bvxxxxxxxxxxoptions34("");
      yrxxch511xhhxxhxxxxxoptions.setM2xxup34bvxxxxxxxxxxpurpose34("");
      yrxxch511xhhxxhxxxxxoptions.setM3xxuv34bvxxxxxxxxxxvalue34("");
      yrxxch511xhhxxhxxxxxoptions.setM4xxuo35bvxxxxxxxxxxoptions35("Lunch Appontment");
      yrxxch511xhhxxhxxxxxoptions.setM5xxup35bvxxxxxxxxxxpurpose35("c$88.90");
      yrxxch511xhhxxhxxxxxoptions.setM6xxuv35bvxxxxxxxxxxvalue35("");
      yrxxch511xhhxxhxxxxxoptions.setM7xxuo36bvxxxxxxxxxxoptions36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM8xxup36bvxxxxxxxxxxpurpose36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM9xxuv36bvxxxxxxxxxxvalue36("");
      yrxxch511xhhxxhxxxxxoptions.setN1xxuo37bvxxxxxxxxxxoptions37("High");
      yrxxch511xhhxxhxxxxxoptions.setN2xxup37bvxxxxxxxxxxpurpose37("High");
      yrxxch511xhhxxhxxxxxoptions.setN3xxuv37bvxxxxxxxxxxvalue37("");
      yrxxch511xhhxxhxxxxxoptions.setN4xxuo38bvxxxxxxxxxxoptions38("S");
      yrxxch511xhhxxhxxxxxoptions.setN5xxup38bvxxxxxxxxxxpurpose38("System Admin");
      yrxxch511xhhxxhxxxxxoptions.setN6xxuv38bvxxxxxxxxxxvalue38("");
      yrxxch511xhhxxhxxxxxoptions.setN7xxuo39bvxxxxxxxxxxoptions39("H");
      yrxxch511xhhxxhxxxxxoptions.setN8xxup39bvxxxxxxxxxxpurpose39("High");
      yrxxch511xhhxxhxxxxxoptions.setN9xxuv39bvxxxxxxxxxxvalue39("");
      yrxxch511xhhxxhxxxxxoptions.setO1xxuo40bvxxxxxxxxxxoptions40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO2xxup40bvxxxxxxxxxxpurpose40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO3xxuv40bvxxxxxxxxxxvalue40("");
      yrxxch511xhhxxhxxxxxoptions.setO4xxuo41bvxxxxxxxxxxoptions41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO5xxup41bvxxxxxxxxxxpurpose41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO6xxuv41bvxxxxxxxxxxvalue41("");
      yrxxch511xhhxxhxxxxxoptions.setO7xxuo42bvxxxxxxxxxxoptions42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO8xxup42bvxxxxxxxxxxpurpose42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO9xxuv42bvxxxxxxxxxxvalue42("");
      yrxxch511xhhxxhxxxxxoptions.setP1xxuo43bvxxxxxxxxxxoptions43("New");
      yrxxch511xhhxxhxxxxxoptions.setP2xxup43bvxxxxxxxxxxpurpose43("New");
      yrxxch511xhhxxhxxxxxoptions.setP3xxuv43bvxxxxxxxxxxvalue43("");
      yrxxch511xhhxxhxxxxxoptions.setP4xxuo44bvxxxxxxxxxxoptions44("");
      yrxxch511xhhxxhxxxxxoptions.setP5xxup44bvxxxxxxxxxxpurpose44("");
      yrxxch511xhhxxhxxxxxoptions.setP6xxuv44bvxxxxxxxxxxvalue44("");
      yrxxch511xhhxxhxxxxxoptions.setP7xxuo45bvxxxxxxxxxxoptions45("D");
      yrxxch511xhhxxhxxxxxoptions.setP8xxup45bvxxxxxxxxxxpurpose45("");
      yrxxch511xhhxxhxxxxxoptions.setP9xxuv45bvxxxxxxxxxxvalue45("");
      yrxxch511xhhxxhxxxxxoptions.setQ1xxuo46bvxxxxxxxxxxoptions46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ2xxup46bvxxxxxxxxxxpurpose46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ3xxuv46bvxxxxxxxxxxvalue46("");
      yrxxch511xhhxxhxxxxxoptions.setQ4xxuo47bvxxxxxxxxxxoptions47("10");
      yrxxch511xhhxxhxxxxxoptions.setQ5xxup47bvxxxxxxxxxxpurpose47("10");
      yrxxch511xhhxxhxxxxxoptions.setQ6xxuv47bvxxxxxxxxxxvalue47("");
      yrxxch511xhhxxhxxxxxoptions.setQ7xxuo48bvxxxxxxxxxxoptions48("");
      yrxxch511xhhxxhxxxxxoptions.setQ8xxup48bvxxxxxxxxxxpurpose48("");
      yrxxch511xhhxxhxxxxxoptions.setQ9xxuv48bvxxxxxxxxxxvalue48("");
      yrxxch511xhhxxhxxxxxoptions.setR1xxuo49bvxxxxxxxxxxoptions49("customer");
      yrxxch511xhhxxhxxxxxoptions.setR2xxup49bvxxxxxxxxxxpurpose49("Customer Data");
      yrxxch511xhhxxhxxxxxoptions.setR3xxuv49bvxxxxxxxxxxvalue49("");
      yrxxch511xhhxxhxxxxxoptions.setR4xxuo50bvxxxxxxxxxxoptions50("1");
      yrxxch511xhhxxhxxxxxoptions.setR5xxup50bvxxxxxxxxxxpurpose50("Linked to Item/Customer...");
      yrxxch511xhhxxhxxxxxoptions.setR6xxuv50bvxxxxxxxxxxvalue50("");
      yrxxch511xhhxxhxxxxxoptions.setR7xxuo51bvxxxxxxxxxxoptions51("CS");
      yrxxch511xhhxxhxxxxxoptions.setR8xxup51bvxxxxxxxxxxpurpose51("COD small");
      yrxxch511xhhxxhxxxxxoptions.setR9xxuv51bvxxxxxxxxxxvalue51("");
      yrxxch511xhhxxhxxxxxoptions.setS1xxuo52bvxxxxxxxxxxoptions52("");
      yrxxch511xhhxxhxxxxxoptions.setS2xxup52bvxxxxxxxxxxpurpose52("");
      yrxxch511xhhxxhxxxxxoptions.setS3xxuv52bvxxxxxxxxxxvalue52("");
      yrxxch511xhhxxhxxxxxoptions.setS4xxuo53bvxxxxxxxxxxoptions53("");
      yrxxch511xhhxxhxxxxxoptions.setS5xxup53bvxxxxxxxxxxpurpose53("");
      yrxxch511xhhxxhxxxxxoptions.setS6xxuv53bvxxxxxxxxxxvalue53("");

      yrxxch511xhhxxhxxxxxoptions.setS7xxuo54bvxxxxxxxxxxoptions54("");
      yrxxch511xhhxxhxxxxxoptions.setS8xxup54bvxxxxxxxxxxpurpose54("");
      yrxxch511xhhxxhxxxxxoptions.setS9xxuv54bvxxxxxxxxxxvalue54("");
      yrxxch511xhhxxhxxxxxoptions.setT1xxuo55bvxxxxxxxxxxoptions55("");
      yrxxch511xhhxxhxxxxxoptions.setT2xxup55bvxxxxxxxxxxpurpose55("");
      yrxxch511xhhxxhxxxxxoptions.setT3xxuv55bvxxxxxxxxxxvalue55("");
      yrxxch511xhhxxhxxxxxoptions.setT4xxuo56bvxxxxxxxxxxoptions56("");
      yrxxch511xhhxxhxxxxxoptions.setT5xxup56bvxxxxxxxxxxpurpose56("");
      yrxxch511xhhxxhxxxxxoptions.setT6xxuv56bvxxxxxxxxxxvalue56("");
      yrxxch511xhhxxhxxxxxoptions.setT7xxuo57bvxxxxxxxxxxoptions57("");
      yrxxch511xhhxxhxxxxxoptions.setT8xxup57bvxxxxxxxxxxpurpose57("");
      yrxxch511xhhxxhxxxxxoptions.setT9xxuv57bvxxxxxxxxxxvalue57("");
      yrxxch511xhhxxhxxxxxoptions.setU1xxuo58bvxxxxxxxxxxoptions58("");
      yrxxch511xhhxxhxxxxxoptions.setU2xxup58bvxxxxxxxxxxpurpose58("");
      yrxxch511xhhxxhxxxxxoptions.setU3xxuv58bvxxxxxxxxxxvalue58("");
      yrxxch511xhhxxhxxxxxoptions.setU4xxuo59bvxxxxxxxxxxoptions59("");
      yrxxch511xhhxxhxxxxxoptions.setU5xxup59bvxxxxxxxxxxpurpose59("");
      yrxxch511xhhxxhxxxxxoptions.setU6xxuv59bvxxxxxxxxxxvalue59("");
      yrxxch511xhhxxhxxxxxoptions.setU7xxuo60bvxxxxxxxxxxoptions60("");
      yrxxch511xhhxxhxxxxxoptions.setU8xxup60bvxxxxxxxxxxpurpose60("");
      yrxxch511xhhxxhxxxxxoptions.setU9xxuv60bvxxxxxxxxxxvalue60("");
      yrxxch511xhhxxhxxxxxoptions.setV1xxuo61bvxxxxxxxxxxoptions61("");
      yrxxch511xhhxxhxxxxxoptions.setV2xxup61bvxxxxxxxxxxpurpose61("");
      yrxxch511xhhxxhxxxxxoptions.setV3xxuv61bvxxxxxxxxxxvalue61("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptionsHome.persist(client);
      yrxxch511xhhxxhxxxxxoptionsHome.clearInstance();

      yrxxch511xhhxxhxxxxxoptions=yrxxch511xhhxxhxxxxxoptionsHome.getInstance();
      yrxxch511xhhxxhxxxxxoptions.setA0xxukcxbvxxxxxxxxxxrow("11");
      yrxxch511xhhxxhxxxxxoptions.setB1xxuo01bvxxxxxxxxxxoptions01("R");
      yrxxch511xhhxxhxxxxxoptions.setB2xxup01bvxxxxxxxxxxpurpose01("Retained Earning");
      yrxxch511xhhxxhxxxxxoptions.setB3xxuv01bvxxxxxxxxxxvalue01("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptions.setB4xxuo02bvxxxxxxxxxxoptions02("S");
      yrxxch511xhhxxhxxxxxoptions.setB5xxup02bvxxxxxxxxxxpurpose02("Subheader");
      yrxxch511xhhxxhxxxxxoptions.setB6xxuv02bvxxxxxxxxxxvalue02("");
      yrxxch511xhhxxhxxxxxoptions.setB7xxuo03bvxxxxxxxxxxoptions03("P");
      yrxxch511xhhxxhxxxxxoptions.setB8xxup03bvxxxxxxxxxxpurpose03("Payable");
      yrxxch511xhhxxhxxxxxoptions.setB9xxuv03bvxxxxxxxxxxvalue03("");
      yrxxch511xhhxxhxxxxxoptions.setC1xxuo04bvxxxxxxxxxxoptions04("");
      yrxxch511xhhxxhxxxxxoptions.setC2xxup04bvxxxxxxxxxxpurpose04("");
      yrxxch511xhhxxhxxxxxoptions.setC3xxuv04bvxxxxxxxxxxvalue04("");
      yrxxch511xhhxxhxxxxxoptions.setC4xxuo05bvxxxxxxxxxxoptions05("");
      yrxxch511xhhxxhxxxxxoptions.setC5xxup05bvxxxxxxxxxxpurpose05("");
      yrxxch511xhhxxhxxxxxoptions.setC6xxuv05bvxxxxxxxxxxvalue05("");
      yrxxch511xhhxxhxxxxxoptions.setC7xxuo06bvxxxxxxxxxxoptions06("");
      yrxxch511xhhxxhxxxxxoptions.setC8xxup06bvxxxxxxxxxxpurpose06("");
      yrxxch511xhhxxhxxxxxoptions.setC9xxuv06bvxxxxxxxxxxvalue06("");
      yrxxch511xhhxxhxxxxxoptions.setD1xxuo07bvxxxxxxxxxxoptions07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD2xxup07bvxxxxxxxxxxpurpose07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD3xxuv07bvxxxxxxxxxxvalue07("");
      yrxxch511xhhxxhxxxxxoptions.setD4xxuo08bvxxxxxxxxxxoptions08("H");
      yrxxch511xhhxxhxxxxxoptions.setD5xxup08bvxxxxxxxxxxpurpose08("High");
      yrxxch511xhhxxhxxxxxoptions.setD6xxuv08bvxxxxxxxxxxvalue08("");
      yrxxch511xhhxxhxxxxxoptions.setD7xxuo09bvxxxxxxxxxxoptions09("30");
      yrxxch511xhhxxhxxxxxoptions.setD8xxup09bvxxxxxxxxxxpurpose09("-30 days");
      yrxxch511xhhxxhxxxxxoptions.setD9xxuv09bvxxxxxxxxxxvalue09("");
      yrxxch511xhhxxhxxxxxoptions.setE1xxuo10bvxxxxxxxxxxoptions10("cash");
      yrxxch511xhhxxhxxxxxoptions.setE2xxup10bvxxxxxxxxxxpurpose10("-cash");
      yrxxch511xhhxxhxxxxxoptions.setE3xxuv10bvxxxxxxxxxxvalue10("");
      yrxxch511xhhxxhxxxxxoptions.setE4xxuo11bvxxxxxxxxxxoptions11("Montreal");
      yrxxch511xhhxxhxxxxxoptions.setE5xxup11bvxxxxxxxxxxpurpose11("Toronto");
      yrxxch511xhhxxhxxxxxoptions.setE6xxuv11bvxxxxxxxxxxvalue11("ca=Montreal; us=Boston");
      yrxxch511xhhxxhxxxxxoptions.setE7xxuo12bvxxxxxxxxxxoptions12("QE");
      yrxxch511xhhxxhxxxxxoptions.setE8xxup12bvxxxxxxxxxxpurpose12("ca=Quebec us=Georgia");
      yrxxch511xhhxxhxxxxxoptions.setE9xxuv12bvxxxxxxxxxxvalue12("ca=QC us=GA");
      yrxxch511xhhxxhxxxxxoptions.setF1xxuo13bvxxxxxxxxxxoptions13("");
      yrxxch511xhhxxhxxxxxoptions.setF2xxup13bvxxxxxxxxxxpurpose13("");
      yrxxch511xhhxxhxxxxxoptions.setF3xxuv13bvxxxxxxxxxxvalue13("");
      yrxxch511xhhxxhxxxxxoptions.setF4xxuo14bvxxxxxxxxxxoptions14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF5xxup14bvxxxxxxxxxxpurpose14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF6xxuv14bvxxxxxxxxxxvalue14("ca=M4L3Z8 us=10003 in=70003");
      yrxxch511xhhxxhxxxxxoptions.setF7xxuo15bvxxxxxxxxxxoptions15("Y");
      yrxxch511xhhxxhxxxxxoptions.setF8xxup15bvxxxxxxxxxxpurpose15("Yes");
      yrxxch511xhhxxhxxxxxoptions.setF9xxuv15bvxxxxxxxxxxvalue15("");
      yrxxch511xhhxxhxxxxxoptions.setG1xxuo16bvxxxxxxxxxxoptions16("PI-L*");
      yrxxch511xhhxxhxxxxxoptions.setG2xxup16bvxxxxxxxxxxpurpose16("Image-SubCategories");
      yrxxch511xhhxxhxxxxxoptions.setG3xxuv16bvxxxxxxxxxxvalue16("");
      yrxxch511xhhxxhxxxxxoptions.setG4xxuo17bvxxxxxxxxxxoptions17("?");
      yrxxch511xhhxxhxxxxxoptions.setG5xxup17bvxxxxxxxxxxpurpose17("?");
      yrxxch511xhhxxhxxxxxoptions.setG6xxuv17bvxxxxxxxxxxvalue17("");
      yrxxch511xhhxxhxxxxxoptions.setG7xxuo18bvxxxxxxxxxxoptions18("DM");
      yrxxch511xhhxxhxxxxxoptions.setG8xxup18bvxxxxxxxxxxpurpose18("Digital Media");
      yrxxch511xhhxxhxxxxxoptions.setG9xxuv18bvxxxxxxxxxxvalue18("h=18");
      yrxxch511xhhxxhxxxxxoptions.setH1xxuo19bvxxxxxxxxxxoptions19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH2xxup19bvxxxxxxxxxxpurpose19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH3xxuv19bvxxxxxxxxxxvalue19("");
      yrxxch511xhhxxhxxxxxoptions.setH4xxuo20bvxxxxxxxxxxoptions20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH5xxup20bvxxxxxxxxxxpurpose20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH6xxuv20bvxxxxxxxxxxvalue20("");
      yrxxch511xhhxxhxxxxxoptions.setH7xxuo21bvxxxxxxxxxxoptions21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH8xxup21bvxxxxxxxxxxpurpose21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH9xxuv21bvxxxxxxxxxxvalue21("");
      yrxxch511xhhxxhxxxxxoptions.setI1xxuo22bvxxxxxxxxxxoptions22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI2xxup22bvxxxxxxxxxxpurpose22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI3xxuv22bvxxxxxxxxxxvalue22("");
      yrxxch511xhhxxhxxxxxoptions.setI4xxuo23bvxxxxxxxxxxoptions23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI5xxup23bvxxxxxxxxxxpurpose23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI6xxuv23bvxxxxxxxxxxvalue23("");
      yrxxch511xhhxxhxxxxxoptions.setI7xxuo24bvxxxxxxxxxxoptions24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI8xxup24bvxxxxxxxxxxpurpose24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI9xxuv24bvxxxxxxxxxxvalue24("");
      yrxxch511xhhxxhxxxxxoptions.setJ1xxuo25bvxxxxxxxxxxoptions25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ2xxup25bvxxxxxxxxxxpurpose25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ3xxuv25bvxxxxxxxxxxvalue25("");
      yrxxch511xhhxxhxxxxxoptions.setJ4xxuo26bvxxxxxxxxxxoptions26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ5xxup26bvxxxxxxxxxxpurpose26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ6xxuv26bvxxxxxxxxxxvalue26("");
      yrxxch511xhhxxhxxxxxoptions.setJ7xxuo27bvxxxxxxxxxxoptions27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ8xxup27bvxxxxxxxxxxpurpose27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ9xxuv27bvxxxxxxxxxxvalue27("");
      yrxxch511xhhxxhxxxxxoptions.setK1xxuo28bvxxxxxxxxxxoptions28("PF");
      yrxxch511xhhxxhxxxxxoptions.setK2xxup28bvxxxxxxxxxxpurpose28("Persons-Family");
      yrxxch511xhhxxhxxxxxoptions.setK3xxuv28bvxxxxxxxxxxvalue28("");
      yrxxch511xhhxxhxxxxxoptions.setK4xxuo29bvxxxxxxxxxxoptions29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK5xxup29bvxxxxxxxxxxpurpose29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK6xxuv29bvxxxxxxxxxxvalue29("");
      yrxxch511xhhxxhxxxxxoptions.setK7xxuo30bvxxxxxxxxxxoptions30("EM");
      yrxxch511xhhxxhxxxxxoptions.setK8xxup30bvxxxxxxxxxxpurpose30("EMail");
      yrxxch511xhhxxhxxxxxoptions.setK9xxuv30bvxxxxxxxxxxvalue30("");
      yrxxch511xhhxxhxxxxxoptions.setL1xxuo31bvxxxxxxxxxxoptions31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL2xxup31bvxxxxxxxxxxpurpose31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL3xxuv31bvxxxxxxxxxxvalue31("");
      yrxxch511xhhxxhxxxxxoptions.setL4xxuo32bvxxxxxxxxxxoptions32("Room 107");
      yrxxch511xhhxxhxxxxxoptions.setL5xxup32bvxxxxxxxxxxpurpose32("Room 107");
      yrxxch511xhhxxhxxxxxoptions.setL6xxuv32bvxxxxxxxxxxvalue32("");
      yrxxch511xhhxxhxxxxxoptions.setL7xxuo33bvxxxxxxxxxxoptions33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL8xxup33bvxxxxxxxxxxpurpose33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL9xxuv33bvxxxxxxxxxxvalue33("");
      yrxxch511xhhxxhxxxxxoptions.setM1xxuo34bvxxxxxxxxxxoptions34("");
      yrxxch511xhhxxhxxxxxoptions.setM2xxup34bvxxxxxxxxxxpurpose34("");
      yrxxch511xhhxxhxxxxxoptions.setM3xxuv34bvxxxxxxxxxxvalue34("");
      yrxxch511xhhxxhxxxxxoptions.setM4xxuo35bvxxxxxxxxxxoptions35("Lunch Appontment");
      yrxxch511xhhxxhxxxxxoptions.setM5xxup35bvxxxxxxxxxxpurpose35("c$88.90");
      yrxxch511xhhxxhxxxxxoptions.setM6xxuv35bvxxxxxxxxxxvalue35("");
      yrxxch511xhhxxhxxxxxoptions.setM7xxuo36bvxxxxxxxxxxoptions36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM8xxup36bvxxxxxxxxxxpurpose36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM9xxuv36bvxxxxxxxxxxvalue36("");
      yrxxch511xhhxxhxxxxxoptions.setN1xxuo37bvxxxxxxxxxxoptions37("High");
      yrxxch511xhhxxhxxxxxoptions.setN2xxup37bvxxxxxxxxxxpurpose37("High");
      yrxxch511xhhxxhxxxxxoptions.setN3xxuv37bvxxxxxxxxxxvalue37("");
      yrxxch511xhhxxhxxxxxoptions.setN4xxuo38bvxxxxxxxxxxoptions38("S");
      yrxxch511xhhxxhxxxxxoptions.setN5xxup38bvxxxxxxxxxxpurpose38("System Admin");
      yrxxch511xhhxxhxxxxxoptions.setN6xxuv38bvxxxxxxxxxxvalue38("");
      yrxxch511xhhxxhxxxxxoptions.setN7xxuo39bvxxxxxxxxxxoptions39("H");
      yrxxch511xhhxxhxxxxxoptions.setN8xxup39bvxxxxxxxxxxpurpose39("High");
      yrxxch511xhhxxhxxxxxoptions.setN9xxuv39bvxxxxxxxxxxvalue39("");
      yrxxch511xhhxxhxxxxxoptions.setO1xxuo40bvxxxxxxxxxxoptions40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO2xxup40bvxxxxxxxxxxpurpose40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO3xxuv40bvxxxxxxxxxxvalue40("");
      yrxxch511xhhxxhxxxxxoptions.setO4xxuo41bvxxxxxxxxxxoptions41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO5xxup41bvxxxxxxxxxxpurpose41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO6xxuv41bvxxxxxxxxxxvalue41("");
      yrxxch511xhhxxhxxxxxoptions.setO7xxuo42bvxxxxxxxxxxoptions42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO8xxup42bvxxxxxxxxxxpurpose42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO9xxuv42bvxxxxxxxxxxvalue42("");
      yrxxch511xhhxxhxxxxxoptions.setP1xxuo43bvxxxxxxxxxxoptions43("New");
      yrxxch511xhhxxhxxxxxoptions.setP2xxup43bvxxxxxxxxxxpurpose43("New");
      yrxxch511xhhxxhxxxxxoptions.setP3xxuv43bvxxxxxxxxxxvalue43("");
      yrxxch511xhhxxhxxxxxoptions.setP4xxuo44bvxxxxxxxxxxoptions44("");
      yrxxch511xhhxxhxxxxxoptions.setP5xxup44bvxxxxxxxxxxpurpose44("");
      yrxxch511xhhxxhxxxxxoptions.setP6xxuv44bvxxxxxxxxxxvalue44("");
      yrxxch511xhhxxhxxxxxoptions.setP7xxuo45bvxxxxxxxxxxoptions45("D");
      yrxxch511xhhxxhxxxxxoptions.setP8xxup45bvxxxxxxxxxxpurpose45("");
      yrxxch511xhhxxhxxxxxoptions.setP9xxuv45bvxxxxxxxxxxvalue45("");
      yrxxch511xhhxxhxxxxxoptions.setQ1xxuo46bvxxxxxxxxxxoptions46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ2xxup46bvxxxxxxxxxxpurpose46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ3xxuv46bvxxxxxxxxxxvalue46("");
      yrxxch511xhhxxhxxxxxoptions.setQ4xxuo47bvxxxxxxxxxxoptions47("11");
      yrxxch511xhhxxhxxxxxoptions.setQ5xxup47bvxxxxxxxxxxpurpose47("11");
      yrxxch511xhhxxhxxxxxoptions.setQ6xxuv47bvxxxxxxxxxxvalue47("");
      yrxxch511xhhxxhxxxxxoptions.setQ7xxuo48bvxxxxxxxxxxoptions48("");
      yrxxch511xhhxxhxxxxxoptions.setQ8xxup48bvxxxxxxxxxxpurpose48("");
      yrxxch511xhhxxhxxxxxoptions.setQ9xxuv48bvxxxxxxxxxxvalue48("");
      yrxxch511xhhxxhxxxxxoptions.setR1xxuo49bvxxxxxxxxxxoptions49("vendor");
      yrxxch511xhhxxhxxxxxoptions.setR2xxup49bvxxxxxxxxxxpurpose49("Vendor CSV Data");
      yrxxch511xhhxxhxxxxxoptions.setR3xxuv49bvxxxxxxxxxxvalue49("");
      yrxxch511xhhxxhxxxxxoptions.setR4xxuo50bvxxxxxxxxxxoptions50("0");
      yrxxch511xhhxxhxxxxxoptions.setR5xxup50bvxxxxxxxxxxpurpose50("0");
      yrxxch511xhhxxhxxxxxoptions.setR6xxuv50bvxxxxxxxxxxvalue50("");
      yrxxch511xhhxxhxxxxxoptions.setR7xxuo51bvxxxxxxxxxxoptions51("CM");
      yrxxch511xhhxxhxxxxxoptions.setR8xxup51bvxxxxxxxxxxpurpose51("COD Medium");
      yrxxch511xhhxxhxxxxxoptions.setR9xxuv51bvxxxxxxxxxxvalue51("");
      yrxxch511xhhxxhxxxxxoptions.setS1xxuo52bvxxxxxxxxxxoptions52("");
      yrxxch511xhhxxhxxxxxoptions.setS2xxup52bvxxxxxxxxxxpurpose52("");
      yrxxch511xhhxxhxxxxxoptions.setS3xxuv52bvxxxxxxxxxxvalue52("");
      yrxxch511xhhxxhxxxxxoptions.setS4xxuo53bvxxxxxxxxxxoptions53("");
      yrxxch511xhhxxhxxxxxoptions.setS5xxup53bvxxxxxxxxxxpurpose53("");
      yrxxch511xhhxxhxxxxxoptions.setS6xxuv53bvxxxxxxxxxxvalue53("");

      yrxxch511xhhxxhxxxxxoptions.setS7xxuo54bvxxxxxxxxxxoptions54("");
      yrxxch511xhhxxhxxxxxoptions.setS8xxup54bvxxxxxxxxxxpurpose54("");
      yrxxch511xhhxxhxxxxxoptions.setS9xxuv54bvxxxxxxxxxxvalue54("");
      yrxxch511xhhxxhxxxxxoptions.setT1xxuo55bvxxxxxxxxxxoptions55("");
      yrxxch511xhhxxhxxxxxoptions.setT2xxup55bvxxxxxxxxxxpurpose55("");
      yrxxch511xhhxxhxxxxxoptions.setT3xxuv55bvxxxxxxxxxxvalue55("");
      yrxxch511xhhxxhxxxxxoptions.setT4xxuo56bvxxxxxxxxxxoptions56("");
      yrxxch511xhhxxhxxxxxoptions.setT5xxup56bvxxxxxxxxxxpurpose56("");
      yrxxch511xhhxxhxxxxxoptions.setT6xxuv56bvxxxxxxxxxxvalue56("");
      yrxxch511xhhxxhxxxxxoptions.setT7xxuo57bvxxxxxxxxxxoptions57("");
      yrxxch511xhhxxhxxxxxoptions.setT8xxup57bvxxxxxxxxxxpurpose57("");
      yrxxch511xhhxxhxxxxxoptions.setT9xxuv57bvxxxxxxxxxxvalue57("");
      yrxxch511xhhxxhxxxxxoptions.setU1xxuo58bvxxxxxxxxxxoptions58("");
      yrxxch511xhhxxhxxxxxoptions.setU2xxup58bvxxxxxxxxxxpurpose58("");
      yrxxch511xhhxxhxxxxxoptions.setU3xxuv58bvxxxxxxxxxxvalue58("");
      yrxxch511xhhxxhxxxxxoptions.setU4xxuo59bvxxxxxxxxxxoptions59("");
      yrxxch511xhhxxhxxxxxoptions.setU5xxup59bvxxxxxxxxxxpurpose59("");
      yrxxch511xhhxxhxxxxxoptions.setU6xxuv59bvxxxxxxxxxxvalue59("");
      yrxxch511xhhxxhxxxxxoptions.setU7xxuo60bvxxxxxxxxxxoptions60("");
      yrxxch511xhhxxhxxxxxoptions.setU8xxup60bvxxxxxxxxxxpurpose60("");
      yrxxch511xhhxxhxxxxxoptions.setU9xxuv60bvxxxxxxxxxxvalue60("");
      yrxxch511xhhxxhxxxxxoptions.setV1xxuo61bvxxxxxxxxxxoptions61("");
      yrxxch511xhhxxhxxxxxoptions.setV2xxup61bvxxxxxxxxxxpurpose61("");
      yrxxch511xhhxxhxxxxxoptions.setV3xxuv61bvxxxxxxxxxxvalue61("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptionsHome.persist(client);


      yrxxch511xhhxxhxxxxxoptionsHome.clearInstance();
      yrxxch511xhhxxhxxxxxoptions=yrxxch511xhhxxhxxxxxoptionsHome.getInstance();
      yrxxch511xhhxxhxxxxxoptions.setA0xxukcxbvxxxxxxxxxxrow("12");
      yrxxch511xhhxxhxxxxxoptions.setB1xxuo01bvxxxxxxxxxxoptions01("R");
      yrxxch511xhhxxhxxxxxoptions.setB2xxup01bvxxxxxxxxxxpurpose01("Retained Earning");
      yrxxch511xhhxxhxxxxxoptions.setB3xxuv01bvxxxxxxxxxxvalue01("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptions.setB4xxuo02bvxxxxxxxxxxoptions02("S");
      yrxxch511xhhxxhxxxxxoptions.setB5xxup02bvxxxxxxxxxxpurpose02("Subheader");
      yrxxch511xhhxxhxxxxxoptions.setB6xxuv02bvxxxxxxxxxxvalue02("");
      yrxxch511xhhxxhxxxxxoptions.setB7xxuo03bvxxxxxxxxxxoptions03("P");
      yrxxch511xhhxxhxxxxxoptions.setB8xxup03bvxxxxxxxxxxpurpose03("Payable");
      yrxxch511xhhxxhxxxxxoptions.setB9xxuv03bvxxxxxxxxxxvalue03("");
      yrxxch511xhhxxhxxxxxoptions.setC1xxuo04bvxxxxxxxxxxoptions04("");
      yrxxch511xhhxxhxxxxxoptions.setC2xxup04bvxxxxxxxxxxpurpose04("");
      yrxxch511xhhxxhxxxxxoptions.setC3xxuv04bvxxxxxxxxxxvalue04("");
      yrxxch511xhhxxhxxxxxoptions.setC4xxuo05bvxxxxxxxxxxoptions05("");
      yrxxch511xhhxxhxxxxxoptions.setC5xxup05bvxxxxxxxxxxpurpose05("");
      yrxxch511xhhxxhxxxxxoptions.setC6xxuv05bvxxxxxxxxxxvalue05("");
      yrxxch511xhhxxhxxxxxoptions.setC7xxuo06bvxxxxxxxxxxoptions06("");
      yrxxch511xhhxxhxxxxxoptions.setC8xxup06bvxxxxxxxxxxpurpose06("");
      yrxxch511xhhxxhxxxxxoptions.setC9xxuv06bvxxxxxxxxxxvalue06("");
      yrxxch511xhhxxhxxxxxoptions.setD1xxuo07bvxxxxxxxxxxoptions07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD2xxup07bvxxxxxxxxxxpurpose07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD3xxuv07bvxxxxxxxxxxvalue07("");
      yrxxch511xhhxxhxxxxxoptions.setD4xxuo08bvxxxxxxxxxxoptions08("H");
      yrxxch511xhhxxhxxxxxoptions.setD5xxup08bvxxxxxxxxxxpurpose08("High");
      yrxxch511xhhxxhxxxxxoptions.setD6xxuv08bvxxxxxxxxxxvalue08("");
      yrxxch511xhhxxhxxxxxoptions.setD7xxuo09bvxxxxxxxxxxoptions09("30");
      yrxxch511xhhxxhxxxxxoptions.setD8xxup09bvxxxxxxxxxxpurpose09("-30 days");
      yrxxch511xhhxxhxxxxxoptions.setD9xxuv09bvxxxxxxxxxxvalue09("");
      yrxxch511xhhxxhxxxxxoptions.setE1xxuo10bvxxxxxxxxxxoptions10("cash");
      yrxxch511xhhxxhxxxxxoptions.setE2xxup10bvxxxxxxxxxxpurpose10("-cash");
      yrxxch511xhhxxhxxxxxoptions.setE3xxuv10bvxxxxxxxxxxvalue10("");
      yrxxch511xhhxxhxxxxxoptions.setE4xxuo11bvxxxxxxxxxxoptions11("Montreal");
      yrxxch511xhhxxhxxxxxoptions.setE5xxup11bvxxxxxxxxxxpurpose11("Toronto");
      yrxxch511xhhxxhxxxxxoptions.setE6xxuv11bvxxxxxxxxxxvalue11("ca=Montreal; us=Boston");
      yrxxch511xhhxxhxxxxxoptions.setE7xxuo12bvxxxxxxxxxxoptions12("QE");
      yrxxch511xhhxxhxxxxxoptions.setE8xxup12bvxxxxxxxxxxpurpose12("ca=Saskachewan us=Hawaii");
      yrxxch511xhhxxhxxxxxoptions.setE9xxuv12bvxxxxxxxxxxvalue12("ca=SK us=HI");
      yrxxch511xhhxxhxxxxxoptions.setF1xxuo13bvxxxxxxxxxxoptions13("");
      yrxxch511xhhxxhxxxxxoptions.setF2xxup13bvxxxxxxxxxxpurpose13("");
      yrxxch511xhhxxhxxxxxoptions.setF3xxuv13bvxxxxxxxxxxvalue13("");
      yrxxch511xhhxxhxxxxxoptions.setF4xxuo14bvxxxxxxxxxxoptions14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF5xxup14bvxxxxxxxxxxpurpose14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF6xxuv14bvxxxxxxxxxxvalue14("ca=M4L3Z8 us=10003 in=70003");
      yrxxch511xhhxxhxxxxxoptions.setF7xxuo15bvxxxxxxxxxxoptions15("Y");
      yrxxch511xhhxxhxxxxxoptions.setF8xxup15bvxxxxxxxxxxpurpose15("Yes");
      yrxxch511xhhxxhxxxxxoptions.setF9xxuv15bvxxxxxxxxxxvalue15("");
      yrxxch511xhhxxhxxxxxoptions.setG1xxuo16bvxxxxxxxxxxoptions16("SI-L*");
      yrxxch511xhhxxhxxxxxoptions.setG2xxup16bvxxxxxxxxxxpurpose16("Shopping-SubCategories");
      yrxxch511xhhxxhxxxxxoptions.setG3xxuv16bvxxxxxxxxxxvalue16("");
      yrxxch511xhhxxhxxxxxoptions.setG4xxuo17bvxxxxxxxxxxoptions17("?");
      yrxxch511xhhxxhxxxxxoptions.setG5xxup17bvxxxxxxxxxxpurpose17("?");
      yrxxch511xhhxxhxxxxxoptions.setG6xxuv17bvxxxxxxxxxxvalue17("");
      yrxxch511xhhxxhxxxxxoptions.setG7xxuo18bvxxxxxxxxxxoptions18(" ");
      yrxxch511xhhxxhxxxxxoptions.setG8xxup18bvxxxxxxxxxxpurpose18(" ");
      yrxxch511xhhxxhxxxxxoptions.setG9xxuv18bvxxxxxxxxxxvalue18("s=89");
      yrxxch511xhhxxhxxxxxoptions.setH1xxuo19bvxxxxxxxxxxoptions19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH2xxup19bvxxxxxxxxxxpurpose19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH3xxuv19bvxxxxxxxxxxvalue19("");
      yrxxch511xhhxxhxxxxxoptions.setH4xxuo20bvxxxxxxxxxxoptions20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH5xxup20bvxxxxxxxxxxpurpose20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH6xxuv20bvxxxxxxxxxxvalue20("");
      yrxxch511xhhxxhxxxxxoptions.setH7xxuo21bvxxxxxxxxxxoptions21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH8xxup21bvxxxxxxxxxxpurpose21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH9xxuv21bvxxxxxxxxxxvalue21("");
      yrxxch511xhhxxhxxxxxoptions.setI1xxuo22bvxxxxxxxxxxoptions22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI2xxup22bvxxxxxxxxxxpurpose22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI3xxuv22bvxxxxxxxxxxvalue22("");
      yrxxch511xhhxxhxxxxxoptions.setI4xxuo23bvxxxxxxxxxxoptions23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI5xxup23bvxxxxxxxxxxpurpose23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI6xxuv23bvxxxxxxxxxxvalue23("");
      yrxxch511xhhxxhxxxxxoptions.setI7xxuo24bvxxxxxxxxxxoptions24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI8xxup24bvxxxxxxxxxxpurpose24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI9xxuv24bvxxxxxxxxxxvalue24("");
      yrxxch511xhhxxhxxxxxoptions.setJ1xxuo25bvxxxxxxxxxxoptions25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ2xxup25bvxxxxxxxxxxpurpose25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ3xxuv25bvxxxxxxxxxxvalue25("");
      yrxxch511xhhxxhxxxxxoptions.setJ4xxuo26bvxxxxxxxxxxoptions26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ5xxup26bvxxxxxxxxxxpurpose26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ6xxuv26bvxxxxxxxxxxvalue26("");
      yrxxch511xhhxxhxxxxxoptions.setJ7xxuo27bvxxxxxxxxxxoptions27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ8xxup27bvxxxxxxxxxxpurpose27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ9xxuv27bvxxxxxxxxxxvalue27("");
      yrxxch511xhhxxhxxxxxoptions.setK1xxuo28bvxxxxxxxxxxoptions28("PF");
      yrxxch511xhhxxhxxxxxoptions.setK2xxup28bvxxxxxxxxxxpurpose28("Persons-Family");
      yrxxch511xhhxxhxxxxxoptions.setK3xxuv28bvxxxxxxxxxxvalue28("");
      yrxxch511xhhxxhxxxxxoptions.setK4xxuo29bvxxxxxxxxxxoptions29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK5xxup29bvxxxxxxxxxxpurpose29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK6xxuv29bvxxxxxxxxxxvalue29("");
      yrxxch511xhhxxhxxxxxoptions.setK7xxuo30bvxxxxxxxxxxoptions30("EM");
      yrxxch511xhhxxhxxxxxoptions.setK8xxup30bvxxxxxxxxxxpurpose30("EMail");
      yrxxch511xhhxxhxxxxxoptions.setK9xxuv30bvxxxxxxxxxxvalue30("");
      yrxxch511xhhxxhxxxxxoptions.setL1xxuo31bvxxxxxxxxxxoptions31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL2xxup31bvxxxxxxxxxxpurpose31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL3xxuv31bvxxxxxxxxxxvalue31("");
      yrxxch511xhhxxhxxxxxoptions.setL4xxuo32bvxxxxxxxxxxoptions32("Room 107");
      yrxxch511xhhxxhxxxxxoptions.setL5xxup32bvxxxxxxxxxxpurpose32("Room 107");
      yrxxch511xhhxxhxxxxxoptions.setL6xxuv32bvxxxxxxxxxxvalue32("");
      yrxxch511xhhxxhxxxxxoptions.setL7xxuo33bvxxxxxxxxxxoptions33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL8xxup33bvxxxxxxxxxxpurpose33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL9xxuv33bvxxxxxxxxxxvalue33("");
      yrxxch511xhhxxhxxxxxoptions.setM1xxuo34bvxxxxxxxxxxoptions34("");
      yrxxch511xhhxxhxxxxxoptions.setM2xxup34bvxxxxxxxxxxpurpose34("");
      yrxxch511xhhxxhxxxxxoptions.setM3xxuv34bvxxxxxxxxxxvalue34("");
      yrxxch511xhhxxhxxxxxoptions.setM4xxuo35bvxxxxxxxxxxoptions35("Lunch Appontment");
      yrxxch511xhhxxhxxxxxoptions.setM5xxup35bvxxxxxxxxxxpurpose35("c$88.90");
      yrxxch511xhhxxhxxxxxoptions.setM6xxuv35bvxxxxxxxxxxvalue35("");
      yrxxch511xhhxxhxxxxxoptions.setM7xxuo36bvxxxxxxxxxxoptions36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM8xxup36bvxxxxxxxxxxpurpose36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM9xxuv36bvxxxxxxxxxxvalue36("");
      yrxxch511xhhxxhxxxxxoptions.setN1xxuo37bvxxxxxxxxxxoptions37("High");
      yrxxch511xhhxxhxxxxxoptions.setN2xxup37bvxxxxxxxxxxpurpose37("High");
      yrxxch511xhhxxhxxxxxoptions.setN3xxuv37bvxxxxxxxxxxvalue37("");
      yrxxch511xhhxxhxxxxxoptions.setN4xxuo38bvxxxxxxxxxxoptions38("S");
      yrxxch511xhhxxhxxxxxoptions.setN5xxup38bvxxxxxxxxxxpurpose38("System Admin");
      yrxxch511xhhxxhxxxxxoptions.setN6xxuv38bvxxxxxxxxxxvalue38("");
      yrxxch511xhhxxhxxxxxoptions.setN7xxuo39bvxxxxxxxxxxoptions39("H");
      yrxxch511xhhxxhxxxxxoptions.setN8xxup39bvxxxxxxxxxxpurpose39("High");
      yrxxch511xhhxxhxxxxxoptions.setN9xxuv39bvxxxxxxxxxxvalue39("");
      yrxxch511xhhxxhxxxxxoptions.setO1xxuo40bvxxxxxxxxxxoptions40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO2xxup40bvxxxxxxxxxxpurpose40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO3xxuv40bvxxxxxxxxxxvalue40("");
      yrxxch511xhhxxhxxxxxoptions.setO4xxuo41bvxxxxxxxxxxoptions41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO5xxup41bvxxxxxxxxxxpurpose41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO6xxuv41bvxxxxxxxxxxvalue41("");
      yrxxch511xhhxxhxxxxxoptions.setO7xxuo42bvxxxxxxxxxxoptions42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO8xxup42bvxxxxxxxxxxpurpose42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO9xxuv42bvxxxxxxxxxxvalue42("");
      yrxxch511xhhxxhxxxxxoptions.setP1xxuo43bvxxxxxxxxxxoptions43("New");
      yrxxch511xhhxxhxxxxxoptions.setP2xxup43bvxxxxxxxxxxpurpose43("New");
      yrxxch511xhhxxhxxxxxoptions.setP3xxuv43bvxxxxxxxxxxvalue43("");
      yrxxch511xhhxxhxxxxxoptions.setP4xxuo44bvxxxxxxxxxxoptions44("");
      yrxxch511xhhxxhxxxxxoptions.setP5xxup44bvxxxxxxxxxxpurpose44("");
      yrxxch511xhhxxhxxxxxoptions.setP6xxuv44bvxxxxxxxxxxvalue44("");
      yrxxch511xhhxxhxxxxxoptions.setP7xxuo45bvxxxxxxxxxxoptions45("D");
      yrxxch511xhhxxhxxxxxoptions.setP8xxup45bvxxxxxxxxxxpurpose45("");
      yrxxch511xhhxxhxxxxxoptions.setP9xxuv45bvxxxxxxxxxxvalue45("");
      yrxxch511xhhxxhxxxxxoptions.setQ1xxuo46bvxxxxxxxxxxoptions46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ2xxup46bvxxxxxxxxxxpurpose46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ3xxuv46bvxxxxxxxxxxvalue46("");
      yrxxch511xhhxxhxxxxxoptions.setQ4xxuo47bvxxxxxxxxxxoptions47("12");
      yrxxch511xhhxxhxxxxxoptions.setQ5xxup47bvxxxxxxxxxxpurpose47("12");
      yrxxch511xhhxxhxxxxxoptions.setQ6xxuv47bvxxxxxxxxxxvalue47("");
      yrxxch511xhhxxhxxxxxoptions.setQ7xxuo48bvxxxxxxxxxxoptions48("");
      yrxxch511xhhxxhxxxxxoptions.setQ8xxup48bvxxxxxxxxxxpurpose48("");
      yrxxch511xhhxxhxxxxxoptions.setQ9xxuv48bvxxxxxxxxxxvalue48("");
      yrxxch511xhhxxhxxxxxoptions.setR1xxuo49bvxxxxxxxxxxoptions49("3R-LEFT-POP-C");
      yrxxch511xhhxxhxxxxxoptions.setR2xxup49bvxxxxxxxxxxpurpose49("Left PopUp");
      yrxxch511xhhxxhxxxxxoptions.setR3xxuv49bvxxxxxxxxxxvalue49("");
      yrxxch511xhhxxhxxxxxoptions.setR4xxuo50bvxxxxxxxxxxoptions50("1");
      yrxxch511xhhxxhxxxxxoptions.setR5xxup50bvxxxxxxxxxxpurpose50("1");
      yrxxch511xhhxxhxxxxxoptions.setR6xxuv50bvxxxxxxxxxxvalue50("");
      yrxxch511xhhxxhxxxxxoptions.setR7xxuo51bvxxxxxxxxxxoptions51("CL");
      yrxxch511xhhxxhxxxxxoptions.setR8xxup51bvxxxxxxxxxxpurpose51("COD Large");
      yrxxch511xhhxxhxxxxxoptions.setR9xxuv51bvxxxxxxxxxxvalue51("");
      yrxxch511xhhxxhxxxxxoptions.setS1xxuo52bvxxxxxxxxxxoptions52("");
      yrxxch511xhhxxhxxxxxoptions.setS2xxup52bvxxxxxxxxxxpurpose52("");
      yrxxch511xhhxxhxxxxxoptions.setS3xxuv52bvxxxxxxxxxxvalue52("");
      yrxxch511xhhxxhxxxxxoptions.setS4xxuo53bvxxxxxxxxxxoptions53("");
      yrxxch511xhhxxhxxxxxoptions.setS5xxup53bvxxxxxxxxxxpurpose53("");
      yrxxch511xhhxxhxxxxxoptions.setS6xxuv53bvxxxxxxxxxxvalue53("");
      yrxxch511xhhxxhxxxxxoptions.setS7xxuo54bvxxxxxxxxxxoptions54("");
      yrxxch511xhhxxhxxxxxoptions.setS8xxup54bvxxxxxxxxxxpurpose54("");
      yrxxch511xhhxxhxxxxxoptions.setS9xxuv54bvxxxxxxxxxxvalue54("");
      yrxxch511xhhxxhxxxxxoptions.setT1xxuo55bvxxxxxxxxxxoptions55("");
      yrxxch511xhhxxhxxxxxoptions.setT2xxup55bvxxxxxxxxxxpurpose55("");
      yrxxch511xhhxxhxxxxxoptions.setT3xxuv55bvxxxxxxxxxxvalue55("");
      yrxxch511xhhxxhxxxxxoptions.setT4xxuo56bvxxxxxxxxxxoptions56("");
      yrxxch511xhhxxhxxxxxoptions.setT5xxup56bvxxxxxxxxxxpurpose56("");
      yrxxch511xhhxxhxxxxxoptions.setT6xxuv56bvxxxxxxxxxxvalue56("");
      yrxxch511xhhxxhxxxxxoptions.setT7xxuo57bvxxxxxxxxxxoptions57("");
      yrxxch511xhhxxhxxxxxoptions.setT8xxup57bvxxxxxxxxxxpurpose57("");
      yrxxch511xhhxxhxxxxxoptions.setT9xxuv57bvxxxxxxxxxxvalue57("");
      yrxxch511xhhxxhxxxxxoptions.setU1xxuo58bvxxxxxxxxxxoptions58("");
      yrxxch511xhhxxhxxxxxoptions.setU2xxup58bvxxxxxxxxxxpurpose58("");
      yrxxch511xhhxxhxxxxxoptions.setU3xxuv58bvxxxxxxxxxxvalue58("");
      yrxxch511xhhxxhxxxxxoptions.setU4xxuo59bvxxxxxxxxxxoptions59("");
      yrxxch511xhhxxhxxxxxoptions.setU5xxup59bvxxxxxxxxxxpurpose59("");
      yrxxch511xhhxxhxxxxxoptions.setU6xxuv59bvxxxxxxxxxxvalue59("");
      yrxxch511xhhxxhxxxxxoptions.setU7xxuo60bvxxxxxxxxxxoptions60("");
      yrxxch511xhhxxhxxxxxoptions.setU8xxup60bvxxxxxxxxxxpurpose60("");
      yrxxch511xhhxxhxxxxxoptions.setU9xxuv60bvxxxxxxxxxxvalue60("");
      yrxxch511xhhxxhxxxxxoptions.setV1xxuo61bvxxxxxxxxxxoptions61("");
      yrxxch511xhhxxhxxxxxoptions.setV2xxup61bvxxxxxxxxxxpurpose61("");
      yrxxch511xhhxxhxxxxxoptions.setV3xxuv61bvxxxxxxxxxxvalue61("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptionsHome.persist(client);



      yrxxch511xhhxxhxxxxxoptionsHome.clearInstance();
      yrxxch511xhhxxhxxxxxoptions=yrxxch511xhhxxhxxxxxoptionsHome.getInstance();
      yrxxch511xhhxxhxxxxxoptions.setA0xxukcxbvxxxxxxxxxxrow("13");
      yrxxch511xhhxxhxxxxxoptions.setB1xxuo01bvxxxxxxxxxxoptions01("R");
      yrxxch511xhhxxhxxxxxoptions.setB2xxup01bvxxxxxxxxxxpurpose01("Retained Earning");
      yrxxch511xhhxxhxxxxxoptions.setB3xxuv01bvxxxxxxxxxxvalue01("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptions.setB4xxuo02bvxxxxxxxxxxoptions02("S");
      yrxxch511xhhxxhxxxxxoptions.setB5xxup02bvxxxxxxxxxxpurpose02("Subheader");
      yrxxch511xhhxxhxxxxxoptions.setB6xxuv02bvxxxxxxxxxxvalue02("");
      yrxxch511xhhxxhxxxxxoptions.setB7xxuo03bvxxxxxxxxxxoptions03("P");
      yrxxch511xhhxxhxxxxxoptions.setB8xxup03bvxxxxxxxxxxpurpose03("Payable");
      yrxxch511xhhxxhxxxxxoptions.setB9xxuv03bvxxxxxxxxxxvalue03("");
      yrxxch511xhhxxhxxxxxoptions.setC1xxuo04bvxxxxxxxxxxoptions04("");
      yrxxch511xhhxxhxxxxxoptions.setC2xxup04bvxxxxxxxxxxpurpose04("");
      yrxxch511xhhxxhxxxxxoptions.setC3xxuv04bvxxxxxxxxxxvalue04("");
      yrxxch511xhhxxhxxxxxoptions.setC4xxuo05bvxxxxxxxxxxoptions05("");
      yrxxch511xhhxxhxxxxxoptions.setC5xxup05bvxxxxxxxxxxpurpose05("");
      yrxxch511xhhxxhxxxxxoptions.setC6xxuv05bvxxxxxxxxxxvalue05("");
      yrxxch511xhhxxhxxxxxoptions.setC7xxuo06bvxxxxxxxxxxoptions06("");
      yrxxch511xhhxxhxxxxxoptions.setC8xxup06bvxxxxxxxxxxpurpose06("");
      yrxxch511xhhxxhxxxxxoptions.setC9xxuv06bvxxxxxxxxxxvalue06("");
      yrxxch511xhhxxhxxxxxoptions.setD1xxuo07bvxxxxxxxxxxoptions07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD2xxup07bvxxxxxxxxxxpurpose07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD3xxuv07bvxxxxxxxxxxvalue07("");
      yrxxch511xhhxxhxxxxxoptions.setD4xxuo08bvxxxxxxxxxxoptions08("H");
      yrxxch511xhhxxhxxxxxoptions.setD5xxup08bvxxxxxxxxxxpurpose08("High");
      yrxxch511xhhxxhxxxxxoptions.setD6xxuv08bvxxxxxxxxxxvalue08("");
      yrxxch511xhhxxhxxxxxoptions.setD7xxuo09bvxxxxxxxxxxoptions09("30");
      yrxxch511xhhxxhxxxxxoptions.setD8xxup09bvxxxxxxxxxxpurpose09("-30 days");
      yrxxch511xhhxxhxxxxxoptions.setD9xxuv09bvxxxxxxxxxxvalue09("");
      yrxxch511xhhxxhxxxxxoptions.setE1xxuo10bvxxxxxxxxxxoptions10("cash");
      yrxxch511xhhxxhxxxxxoptions.setE2xxup10bvxxxxxxxxxxpurpose10("-cash");
      yrxxch511xhhxxhxxxxxoptions.setE3xxuv10bvxxxxxxxxxxvalue10("");
      yrxxch511xhhxxhxxxxxoptions.setE4xxuo11bvxxxxxxxxxxoptions11("Montreal");
      yrxxch511xhhxxhxxxxxoptions.setE5xxup11bvxxxxxxxxxxpurpose11("Toronto");
      yrxxch511xhhxxhxxxxxoptions.setE6xxuv11bvxxxxxxxxxxvalue11("ca=Montreal; us=Boston");
      yrxxch511xhhxxhxxxxxoptions.setE7xxuo12bvxxxxxxxxxxoptions12("QE");
      yrxxch511xhhxxhxxxxxoptions.setE8xxup12bvxxxxxxxxxxpurpose12("ca=Yukon Territories us=Idaho");
      yrxxch511xhhxxhxxxxxoptions.setE9xxuv12bvxxxxxxxxxxvalue12("ca=YT us=ID");
      yrxxch511xhhxxhxxxxxoptions.setF1xxuo13bvxxxxxxxxxxoptions13("");
      yrxxch511xhhxxhxxxxxoptions.setF2xxup13bvxxxxxxxxxxpurpose13("");
      yrxxch511xhhxxhxxxxxoptions.setF3xxuv13bvxxxxxxxxxxvalue13("");
      yrxxch511xhhxxhxxxxxoptions.setF4xxuo14bvxxxxxxxxxxoptions14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF5xxup14bvxxxxxxxxxxpurpose14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF6xxuv14bvxxxxxxxxxxvalue14("ca=M4L3Z8 us=10003 in=70003");
      yrxxch511xhhxxhxxxxxoptions.setF7xxuo15bvxxxxxxxxxxoptions15("Y");
      yrxxch511xhhxxhxxxxxoptions.setF8xxup15bvxxxxxxxxxxpurpose15("Yes");
      yrxxch511xhhxxhxxxxxoptions.setF9xxuv15bvxxxxxxxxxxvalue15("");
      yrxxch511xhhxxhxxxxxoptions.setG1xxuo16bvxxxxxxxxxxoptions16("R");
      yrxxch511xhhxxhxxxxxoptions.setG2xxup16bvxxxxxxxxxxpurpose16("Rental");
      yrxxch511xhhxxhxxxxxoptions.setG3xxuv16bvxxxxxxxxxxvalue16("s=9e");
      yrxxch511xhhxxhxxxxxoptions.setG4xxuo17bvxxxxxxxxxxoptions17("?");
      yrxxch511xhhxxhxxxxxoptions.setG5xxup17bvxxxxxxxxxxpurpose17("?");
      yrxxch511xhhxxhxxxxxoptions.setG6xxuv17bvxxxxxxxxxxvalue17("");
      yrxxch511xhhxxhxxxxxoptions.setG7xxuo18bvxxxxxxxxxxoptions18("AD");
      yrxxch511xhhxxhxxxxxoptions.setG8xxup18bvxxxxxxxxxxpurpose18("Daily");
      yrxxch511xhhxxhxxxxxoptions.setG9xxuv18bvxxxxxxxxxxvalue18("s=89");
      yrxxch511xhhxxhxxxxxoptions.setH1xxuo19bvxxxxxxxxxxoptions19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH2xxup19bvxxxxxxxxxxpurpose19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH3xxuv19bvxxxxxxxxxxvalue19("");
      yrxxch511xhhxxhxxxxxoptions.setH4xxuo20bvxxxxxxxxxxoptions20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH5xxup20bvxxxxxxxxxxpurpose20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH6xxuv20bvxxxxxxxxxxvalue20("");
      yrxxch511xhhxxhxxxxxoptions.setH7xxuo21bvxxxxxxxxxxoptions21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH8xxup21bvxxxxxxxxxxpurpose21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH9xxuv21bvxxxxxxxxxxvalue21("");
      yrxxch511xhhxxhxxxxxoptions.setI1xxuo22bvxxxxxxxxxxoptions22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI2xxup22bvxxxxxxxxxxpurpose22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI3xxuv22bvxxxxxxxxxxvalue22("");
      yrxxch511xhhxxhxxxxxoptions.setI4xxuo23bvxxxxxxxxxxoptions23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI5xxup23bvxxxxxxxxxxpurpose23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI6xxuv23bvxxxxxxxxxxvalue23("");
      yrxxch511xhhxxhxxxxxoptions.setI7xxuo24bvxxxxxxxxxxoptions24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI8xxup24bvxxxxxxxxxxpurpose24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI9xxuv24bvxxxxxxxxxxvalue24("");
      yrxxch511xhhxxhxxxxxoptions.setJ1xxuo25bvxxxxxxxxxxoptions25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ2xxup25bvxxxxxxxxxxpurpose25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ3xxuv25bvxxxxxxxxxxvalue25("");
      yrxxch511xhhxxhxxxxxoptions.setJ4xxuo26bvxxxxxxxxxxoptions26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ5xxup26bvxxxxxxxxxxpurpose26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ6xxuv26bvxxxxxxxxxxvalue26("");
      yrxxch511xhhxxhxxxxxoptions.setJ7xxuo27bvxxxxxxxxxxoptions27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ8xxup27bvxxxxxxxxxxpurpose27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ9xxuv27bvxxxxxxxxxxvalue27("");
      yrxxch511xhhxxhxxxxxoptions.setK1xxuo28bvxxxxxxxxxxoptions28("PF");
      yrxxch511xhhxxhxxxxxoptions.setK2xxup28bvxxxxxxxxxxpurpose28("Persons-Family");
      yrxxch511xhhxxhxxxxxoptions.setK3xxuv28bvxxxxxxxxxxvalue28("");
      yrxxch511xhhxxhxxxxxoptions.setK4xxuo29bvxxxxxxxxxxoptions29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK5xxup29bvxxxxxxxxxxpurpose29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK6xxuv29bvxxxxxxxxxxvalue29("");
      yrxxch511xhhxxhxxxxxoptions.setK7xxuo30bvxxxxxxxxxxoptions30("EM");
      yrxxch511xhhxxhxxxxxoptions.setK8xxup30bvxxxxxxxxxxpurpose30("EMail");
      yrxxch511xhhxxhxxxxxoptions.setK9xxuv30bvxxxxxxxxxxvalue30("");
      yrxxch511xhhxxhxxxxxoptions.setL1xxuo31bvxxxxxxxxxxoptions31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL2xxup31bvxxxxxxxxxxpurpose31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL3xxuv31bvxxxxxxxxxxvalue31("");
      yrxxch511xhhxxhxxxxxoptions.setL4xxuo32bvxxxxxxxxxxoptions32("Room 107");
      yrxxch511xhhxxhxxxxxoptions.setL5xxup32bvxxxxxxxxxxpurpose32("Room 107");
      yrxxch511xhhxxhxxxxxoptions.setL6xxuv32bvxxxxxxxxxxvalue32("");
      yrxxch511xhhxxhxxxxxoptions.setL7xxuo33bvxxxxxxxxxxoptions33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL8xxup33bvxxxxxxxxxxpurpose33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL9xxuv33bvxxxxxxxxxxvalue33("");
      yrxxch511xhhxxhxxxxxoptions.setM1xxuo34bvxxxxxxxxxxoptions34("");
      yrxxch511xhhxxhxxxxxoptions.setM2xxup34bvxxxxxxxxxxpurpose34("");
      yrxxch511xhhxxhxxxxxoptions.setM3xxuv34bvxxxxxxxxxxvalue34("");
      yrxxch511xhhxxhxxxxxoptions.setM4xxuo35bvxxxxxxxxxxoptions35("Lunch Appontment");
      yrxxch511xhhxxhxxxxxoptions.setM5xxup35bvxxxxxxxxxxpurpose35("c$88.90");
      yrxxch511xhhxxhxxxxxoptions.setM6xxuv35bvxxxxxxxxxxvalue35("");
      yrxxch511xhhxxhxxxxxoptions.setM7xxuo36bvxxxxxxxxxxoptions36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM8xxup36bvxxxxxxxxxxpurpose36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM9xxuv36bvxxxxxxxxxxvalue36("");
      yrxxch511xhhxxhxxxxxoptions.setN1xxuo37bvxxxxxxxxxxoptions37("High");
      yrxxch511xhhxxhxxxxxoptions.setN2xxup37bvxxxxxxxxxxpurpose37("High");
      yrxxch511xhhxxhxxxxxoptions.setN3xxuv37bvxxxxxxxxxxvalue37("");
      yrxxch511xhhxxhxxxxxoptions.setN4xxuo38bvxxxxxxxxxxoptions38("S");
      yrxxch511xhhxxhxxxxxoptions.setN5xxup38bvxxxxxxxxxxpurpose38("System Admin");
      yrxxch511xhhxxhxxxxxoptions.setN6xxuv38bvxxxxxxxxxxvalue38("");
      yrxxch511xhhxxhxxxxxoptions.setN7xxuo39bvxxxxxxxxxxoptions39("H");
      yrxxch511xhhxxhxxxxxoptions.setN8xxup39bvxxxxxxxxxxpurpose39("High");
      yrxxch511xhhxxhxxxxxoptions.setN9xxuv39bvxxxxxxxxxxvalue39("");
      yrxxch511xhhxxhxxxxxoptions.setO1xxuo40bvxxxxxxxxxxoptions40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO2xxup40bvxxxxxxxxxxpurpose40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO3xxuv40bvxxxxxxxxxxvalue40("");
      yrxxch511xhhxxhxxxxxoptions.setO4xxuo41bvxxxxxxxxxxoptions41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO5xxup41bvxxxxxxxxxxpurpose41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO6xxuv41bvxxxxxxxxxxvalue41("");
      yrxxch511xhhxxhxxxxxoptions.setO7xxuo42bvxxxxxxxxxxoptions42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO8xxup42bvxxxxxxxxxxpurpose42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO9xxuv42bvxxxxxxxxxxvalue42("");
      yrxxch511xhhxxhxxxxxoptions.setP1xxuo43bvxxxxxxxxxxoptions43("New");
      yrxxch511xhhxxhxxxxxoptions.setP2xxup43bvxxxxxxxxxxpurpose43("New");
      yrxxch511xhhxxhxxxxxoptions.setP3xxuv43bvxxxxxxxxxxvalue43("");
      yrxxch511xhhxxhxxxxxoptions.setP4xxuo44bvxxxxxxxxxxoptions44("");
      yrxxch511xhhxxhxxxxxoptions.setP5xxup44bvxxxxxxxxxxpurpose44("");
      yrxxch511xhhxxhxxxxxoptions.setP6xxuv44bvxxxxxxxxxxvalue44("");
      yrxxch511xhhxxhxxxxxoptions.setP7xxuo45bvxxxxxxxxxxoptions45("D");
      yrxxch511xhhxxhxxxxxoptions.setP8xxup45bvxxxxxxxxxxpurpose45("");
      yrxxch511xhhxxhxxxxxoptions.setP9xxuv45bvxxxxxxxxxxvalue45("");
      yrxxch511xhhxxhxxxxxoptions.setQ1xxuo46bvxxxxxxxxxxoptions46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ2xxup46bvxxxxxxxxxxpurpose46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ3xxuv46bvxxxxxxxxxxvalue46("");
      yrxxch511xhhxxhxxxxxoptions.setQ4xxuo47bvxxxxxxxxxxoptions47("13");
      yrxxch511xhhxxhxxxxxoptions.setQ5xxup47bvxxxxxxxxxxpurpose47("13");
      yrxxch511xhhxxhxxxxxoptions.setQ6xxuv47bvxxxxxxxxxxvalue47("");
      yrxxch511xhhxxhxxxxxoptions.setQ7xxuo48bvxxxxxxxxxxoptions48("");
      yrxxch511xhhxxhxxxxxoptions.setQ8xxup48bvxxxxxxxxxxpurpose48("");
      yrxxch511xhhxxhxxxxxoptions.setQ9xxuv48bvxxxxxxxxxxvalue48("");
      yrxxch511xhhxxhxxxxxoptions.setR1xxuo49bvxxxxxxxxxxoptions49("3R-RIGHT-POP-C");
      yrxxch511xhhxxhxxxxxoptions.setR2xxup49bvxxxxxxxxxxpurpose49("Right PopUp");
      yrxxch511xhhxxhxxxxxoptions.setR3xxuv49bvxxxxxxxxxxvalue49("");
      yrxxch511xhhxxhxxxxxoptions.setR4xxuo50bvxxxxxxxxxxoptions50("");
      yrxxch511xhhxxhxxxxxoptions.setR5xxup50bvxxxxxxxxxxpurpose50("");
      yrxxch511xhhxxhxxxxxoptions.setR6xxuv50bvxxxxxxxxxxvalue50("");
      yrxxch511xhhxxhxxxxxoptions.setR7xxuo51bvxxxxxxxxxxoptions51("");
      yrxxch511xhhxxhxxxxxoptions.setR8xxup51bvxxxxxxxxxxpurpose51("");
      yrxxch511xhhxxhxxxxxoptions.setR9xxuv51bvxxxxxxxxxxvalue51("");
      yrxxch511xhhxxhxxxxxoptions.setS1xxuo52bvxxxxxxxxxxoptions52("");
      yrxxch511xhhxxhxxxxxoptions.setS2xxup52bvxxxxxxxxxxpurpose52("");
      yrxxch511xhhxxhxxxxxoptions.setS3xxuv52bvxxxxxxxxxxvalue52("");
      yrxxch511xhhxxhxxxxxoptions.setS4xxuo53bvxxxxxxxxxxoptions53("");
      yrxxch511xhhxxhxxxxxoptions.setS5xxup53bvxxxxxxxxxxpurpose53("");
      yrxxch511xhhxxhxxxxxoptions.setS6xxuv53bvxxxxxxxxxxvalue53("");

      yrxxch511xhhxxhxxxxxoptions.setS7xxuo54bvxxxxxxxxxxoptions54("");
      yrxxch511xhhxxhxxxxxoptions.setS8xxup54bvxxxxxxxxxxpurpose54("");
      yrxxch511xhhxxhxxxxxoptions.setS9xxuv54bvxxxxxxxxxxvalue54("");
      yrxxch511xhhxxhxxxxxoptions.setT1xxuo55bvxxxxxxxxxxoptions55("");
      yrxxch511xhhxxhxxxxxoptions.setT2xxup55bvxxxxxxxxxxpurpose55("");
      yrxxch511xhhxxhxxxxxoptions.setT3xxuv55bvxxxxxxxxxxvalue55("");
      yrxxch511xhhxxhxxxxxoptions.setT4xxuo56bvxxxxxxxxxxoptions56("");
      yrxxch511xhhxxhxxxxxoptions.setT5xxup56bvxxxxxxxxxxpurpose56("");
      yrxxch511xhhxxhxxxxxoptions.setT6xxuv56bvxxxxxxxxxxvalue56("");
      yrxxch511xhhxxhxxxxxoptions.setT7xxuo57bvxxxxxxxxxxoptions57("");
      yrxxch511xhhxxhxxxxxoptions.setT8xxup57bvxxxxxxxxxxpurpose57("");
      yrxxch511xhhxxhxxxxxoptions.setT9xxuv57bvxxxxxxxxxxvalue57("");
      yrxxch511xhhxxhxxxxxoptions.setU1xxuo58bvxxxxxxxxxxoptions58("");
      yrxxch511xhhxxhxxxxxoptions.setU2xxup58bvxxxxxxxxxxpurpose58("");
      yrxxch511xhhxxhxxxxxoptions.setU3xxuv58bvxxxxxxxxxxvalue58("");
      yrxxch511xhhxxhxxxxxoptions.setU4xxuo59bvxxxxxxxxxxoptions59("");
      yrxxch511xhhxxhxxxxxoptions.setU5xxup59bvxxxxxxxxxxpurpose59("");
      yrxxch511xhhxxhxxxxxoptions.setU6xxuv59bvxxxxxxxxxxvalue59("");
      yrxxch511xhhxxhxxxxxoptions.setU7xxuo60bvxxxxxxxxxxoptions60("");
      yrxxch511xhhxxhxxxxxoptions.setU8xxup60bvxxxxxxxxxxpurpose60("");
      yrxxch511xhhxxhxxxxxoptions.setU9xxuv60bvxxxxxxxxxxvalue60("");
      yrxxch511xhhxxhxxxxxoptions.setV1xxuo61bvxxxxxxxxxxoptions61("");
      yrxxch511xhhxxhxxxxxoptions.setV2xxup61bvxxxxxxxxxxpurpose61("");
      yrxxch511xhhxxhxxxxxoptions.setV3xxuv61bvxxxxxxxxxxvalue61("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptionsHome.persist(client);

      yrxxch511xhhxxhxxxxxoptionsHome.clearInstance();
      yrxxch511xhhxxhxxxxxoptions=yrxxch511xhhxxhxxxxxoptionsHome.getInstance();
      yrxxch511xhhxxhxxxxxoptions.setA0xxukcxbvxxxxxxxxxxrow("14");
      yrxxch511xhhxxhxxxxxoptions.setB1xxuo01bvxxxxxxxxxxoptions01("R");
      yrxxch511xhhxxhxxxxxoptions.setB2xxup01bvxxxxxxxxxxpurpose01("Retained Earning");
      yrxxch511xhhxxhxxxxxoptions.setB3xxuv01bvxxxxxxxxxxvalue01("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptions.setB4xxuo02bvxxxxxxxxxxoptions02("S");
      yrxxch511xhhxxhxxxxxoptions.setB5xxup02bvxxxxxxxxxxpurpose02("Subheader");
      yrxxch511xhhxxhxxxxxoptions.setB6xxuv02bvxxxxxxxxxxvalue02("");
      yrxxch511xhhxxhxxxxxoptions.setB7xxuo03bvxxxxxxxxxxoptions03("P");
      yrxxch511xhhxxhxxxxxoptions.setB8xxup03bvxxxxxxxxxxpurpose03("Payable");
      yrxxch511xhhxxhxxxxxoptions.setB9xxuv03bvxxxxxxxxxxvalue03("");
      yrxxch511xhhxxhxxxxxoptions.setC1xxuo04bvxxxxxxxxxxoptions04("");
      yrxxch511xhhxxhxxxxxoptions.setC2xxup04bvxxxxxxxxxxpurpose04("");
      yrxxch511xhhxxhxxxxxoptions.setC3xxuv04bvxxxxxxxxxxvalue04("");
      yrxxch511xhhxxhxxxxxoptions.setC4xxuo05bvxxxxxxxxxxoptions05("");
      yrxxch511xhhxxhxxxxxoptions.setC5xxup05bvxxxxxxxxxxpurpose05("");
      yrxxch511xhhxxhxxxxxoptions.setC6xxuv05bvxxxxxxxxxxvalue05("");
      yrxxch511xhhxxhxxxxxoptions.setC7xxuo06bvxxxxxxxxxxoptions06("");
      yrxxch511xhhxxhxxxxxoptions.setC8xxup06bvxxxxxxxxxxpurpose06("");
      yrxxch511xhhxxhxxxxxoptions.setC9xxuv06bvxxxxxxxxxxvalue06("");
      yrxxch511xhhxxhxxxxxoptions.setD1xxuo07bvxxxxxxxxxxoptions07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD2xxup07bvxxxxxxxxxxpurpose07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD3xxuv07bvxxxxxxxxxxvalue07("");
      yrxxch511xhhxxhxxxxxoptions.setD4xxuo08bvxxxxxxxxxxoptions08("H");
      yrxxch511xhhxxhxxxxxoptions.setD5xxup08bvxxxxxxxxxxpurpose08("High");
      yrxxch511xhhxxhxxxxxoptions.setD6xxuv08bvxxxxxxxxxxvalue08("");
      yrxxch511xhhxxhxxxxxoptions.setD7xxuo09bvxxxxxxxxxxoptions09("30");
      yrxxch511xhhxxhxxxxxoptions.setD8xxup09bvxxxxxxxxxxpurpose09("-30 days");
      yrxxch511xhhxxhxxxxxoptions.setD9xxuv09bvxxxxxxxxxxvalue09("");
      yrxxch511xhhxxhxxxxxoptions.setE1xxuo10bvxxxxxxxxxxoptions10("cash");
      yrxxch511xhhxxhxxxxxoptions.setE2xxup10bvxxxxxxxxxxpurpose10("-cash");
      yrxxch511xhhxxhxxxxxoptions.setE3xxuv10bvxxxxxxxxxxvalue10("");
      yrxxch511xhhxxhxxxxxoptions.setE4xxuo11bvxxxxxxxxxxoptions11("Montreal");
      yrxxch511xhhxxhxxxxxoptions.setE5xxup11bvxxxxxxxxxxpurpose11("Toronto");
      yrxxch511xhhxxhxxxxxoptions.setE6xxuv11bvxxxxxxxxxxvalue11("ca=Montreal; us=Boston");
      yrxxch511xhhxxhxxxxxoptions.setE7xxuo12bvxxxxxxxxxxoptions12("QE");
      yrxxch511xhhxxhxxxxxoptions.setE8xxup12bvxxxxxxxxxxpurpose12("ca=Quebec us=California");
      yrxxch511xhhxxhxxxxxoptions.setE9xxuv12bvxxxxxxxxxxvalue12("ca=QE us=CA");
      yrxxch511xhhxxhxxxxxoptions.setF1xxuo13bvxxxxxxxxxxoptions13("");
      yrxxch511xhhxxhxxxxxoptions.setF2xxup13bvxxxxxxxxxxpurpose13("");
      yrxxch511xhhxxhxxxxxoptions.setF3xxuv13bvxxxxxxxxxxvalue13("");
      yrxxch511xhhxxhxxxxxoptions.setF4xxuo14bvxxxxxxxxxxoptions14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF5xxup14bvxxxxxxxxxxpurpose14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF6xxuv14bvxxxxxxxxxxvalue14("ca=M4L3Z8 us=10003 in=70003");
      yrxxch511xhhxxhxxxxxoptions.setF7xxuo15bvxxxxxxxxxxoptions15("Y");
      yrxxch511xhhxxhxxxxxoptions.setF8xxup15bvxxxxxxxxxxpurpose15("Yes");
      yrxxch511xhhxxhxxxxxoptions.setF9xxuv15bvxxxxxxxxxxvalue15("");
      yrxxch511xhhxxhxxxxxoptions.setG1xxuo16bvxxxxxxxxxxoptions16("SI-L*");
      yrxxch511xhhxxhxxxxxoptions.setG2xxup16bvxxxxxxxxxxpurpose16("Shopping-SubCategories");
      yrxxch511xhhxxhxxxxxoptions.setG3xxuv16bvxxxxxxxxxxvalue16("");
      yrxxch511xhhxxhxxxxxoptions.setG4xxuo17bvxxxxxxxxxxoptions17("?");
      yrxxch511xhhxxhxxxxxoptions.setG5xxup17bvxxxxxxxxxxpurpose17("?");
      yrxxch511xhhxxhxxxxxoptions.setG6xxuv17bvxxxxxxxxxxvalue17("");
      yrxxch511xhhxxhxxxxxoptions.setG7xxuo18bvxxxxxxxxxxoptions18("AO");
      yrxxch511xhhxxhxxxxxoptions.setG8xxup18bvxxxxxxxxxxpurpose18("One Time");
      yrxxch511xhhxxhxxxxxoptions.setG9xxuv18bvxxxxxxxxxxvalue18("s=89");
      yrxxch511xhhxxhxxxxxoptions.setH1xxuo19bvxxxxxxxxxxoptions19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH2xxup19bvxxxxxxxxxxpurpose19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH3xxuv19bvxxxxxxxxxxvalue19("");
      yrxxch511xhhxxhxxxxxoptions.setH4xxuo20bvxxxxxxxxxxoptions20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH5xxup20bvxxxxxxxxxxpurpose20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH6xxuv20bvxxxxxxxxxxvalue20("");
      yrxxch511xhhxxhxxxxxoptions.setH7xxuo21bvxxxxxxxxxxoptions21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH8xxup21bvxxxxxxxxxxpurpose21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH9xxuv21bvxxxxxxxxxxvalue21("");
      yrxxch511xhhxxhxxxxxoptions.setI1xxuo22bvxxxxxxxxxxoptions22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI2xxup22bvxxxxxxxxxxpurpose22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI3xxuv22bvxxxxxxxxxxvalue22("");
      yrxxch511xhhxxhxxxxxoptions.setI4xxuo23bvxxxxxxxxxxoptions23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI5xxup23bvxxxxxxxxxxpurpose23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI6xxuv23bvxxxxxxxxxxvalue23("");
      yrxxch511xhhxxhxxxxxoptions.setI7xxuo24bvxxxxxxxxxxoptions24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI8xxup24bvxxxxxxxxxxpurpose24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI9xxuv24bvxxxxxxxxxxvalue24("");
      yrxxch511xhhxxhxxxxxoptions.setJ1xxuo25bvxxxxxxxxxxoptions25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ2xxup25bvxxxxxxxxxxpurpose25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ3xxuv25bvxxxxxxxxxxvalue25("");
      yrxxch511xhhxxhxxxxxoptions.setJ4xxuo26bvxxxxxxxxxxoptions26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ5xxup26bvxxxxxxxxxxpurpose26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ6xxuv26bvxxxxxxxxxxvalue26("");
      yrxxch511xhhxxhxxxxxoptions.setJ7xxuo27bvxxxxxxxxxxoptions27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ8xxup27bvxxxxxxxxxxpurpose27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ9xxuv27bvxxxxxxxxxxvalue27("");
      yrxxch511xhhxxhxxxxxoptions.setK1xxuo28bvxxxxxxxxxxoptions28("PF");
      yrxxch511xhhxxhxxxxxoptions.setK2xxup28bvxxxxxxxxxxpurpose28("Persons-Family");
      yrxxch511xhhxxhxxxxxoptions.setK3xxuv28bvxxxxxxxxxxvalue28("");
      yrxxch511xhhxxhxxxxxoptions.setK4xxuo29bvxxxxxxxxxxoptions29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK5xxup29bvxxxxxxxxxxpurpose29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK6xxuv29bvxxxxxxxxxxvalue29("");
      yrxxch511xhhxxhxxxxxoptions.setK7xxuo30bvxxxxxxxxxxoptions30("EM");
      yrxxch511xhhxxhxxxxxoptions.setK8xxup30bvxxxxxxxxxxpurpose30("EMail");
      yrxxch511xhhxxhxxxxxoptions.setK9xxuv30bvxxxxxxxxxxvalue30("");
      yrxxch511xhhxxhxxxxxoptions.setL1xxuo31bvxxxxxxxxxxoptions31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL2xxup31bvxxxxxxxxxxpurpose31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL3xxuv31bvxxxxxxxxxxvalue31("");
      yrxxch511xhhxxhxxxxxoptions.setL4xxuo32bvxxxxxxxxxxoptions32("Room 107");
      yrxxch511xhhxxhxxxxxoptions.setL5xxup32bvxxxxxxxxxxpurpose32("Room 107");
      yrxxch511xhhxxhxxxxxoptions.setL6xxuv32bvxxxxxxxxxxvalue32("");
      yrxxch511xhhxxhxxxxxoptions.setL7xxuo33bvxxxxxxxxxxoptions33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL8xxup33bvxxxxxxxxxxpurpose33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL9xxuv33bvxxxxxxxxxxvalue33("");
      yrxxch511xhhxxhxxxxxoptions.setM1xxuo34bvxxxxxxxxxxoptions34("");
      yrxxch511xhhxxhxxxxxoptions.setM2xxup34bvxxxxxxxxxxpurpose34("");
      yrxxch511xhhxxhxxxxxoptions.setM3xxuv34bvxxxxxxxxxxvalue34("");
      yrxxch511xhhxxhxxxxxoptions.setM4xxuo35bvxxxxxxxxxxoptions35("Lunch Appontment");
      yrxxch511xhhxxhxxxxxoptions.setM5xxup35bvxxxxxxxxxxpurpose35("c$88.90");
      yrxxch511xhhxxhxxxxxoptions.setM6xxuv35bvxxxxxxxxxxvalue35("");
      yrxxch511xhhxxhxxxxxoptions.setM7xxuo36bvxxxxxxxxxxoptions36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM8xxup36bvxxxxxxxxxxpurpose36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM9xxuv36bvxxxxxxxxxxvalue36("");
      yrxxch511xhhxxhxxxxxoptions.setN1xxuo37bvxxxxxxxxxxoptions37("High");
      yrxxch511xhhxxhxxxxxoptions.setN2xxup37bvxxxxxxxxxxpurpose37("High");
      yrxxch511xhhxxhxxxxxoptions.setN3xxuv37bvxxxxxxxxxxvalue37("");
      yrxxch511xhhxxhxxxxxoptions.setN4xxuo38bvxxxxxxxxxxoptions38("S");
      yrxxch511xhhxxhxxxxxoptions.setN5xxup38bvxxxxxxxxxxpurpose38("System Admin");
      yrxxch511xhhxxhxxxxxoptions.setN6xxuv38bvxxxxxxxxxxvalue38("");
      yrxxch511xhhxxhxxxxxoptions.setN7xxuo39bvxxxxxxxxxxoptions39("H");
      yrxxch511xhhxxhxxxxxoptions.setN8xxup39bvxxxxxxxxxxpurpose39("High");
      yrxxch511xhhxxhxxxxxoptions.setN9xxuv39bvxxxxxxxxxxvalue39("");
      yrxxch511xhhxxhxxxxxoptions.setO1xxuo40bvxxxxxxxxxxoptions40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO2xxup40bvxxxxxxxxxxpurpose40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO3xxuv40bvxxxxxxxxxxvalue40("");
      yrxxch511xhhxxhxxxxxoptions.setO4xxuo41bvxxxxxxxxxxoptions41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO5xxup41bvxxxxxxxxxxpurpose41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO6xxuv41bvxxxxxxxxxxvalue41("");
      yrxxch511xhhxxhxxxxxoptions.setO7xxuo42bvxxxxxxxxxxoptions42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO8xxup42bvxxxxxxxxxxpurpose42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO9xxuv42bvxxxxxxxxxxvalue42("");
      yrxxch511xhhxxhxxxxxoptions.setP1xxuo43bvxxxxxxxxxxoptions43("New");
      yrxxch511xhhxxhxxxxxoptions.setP2xxup43bvxxxxxxxxxxpurpose43("New");
      yrxxch511xhhxxhxxxxxoptions.setP3xxuv43bvxxxxxxxxxxvalue43("");
      yrxxch511xhhxxhxxxxxoptions.setP4xxuo44bvxxxxxxxxxxoptions44("");
      yrxxch511xhhxxhxxxxxoptions.setP5xxup44bvxxxxxxxxxxpurpose44("");
      yrxxch511xhhxxhxxxxxoptions.setP6xxuv44bvxxxxxxxxxxvalue44("");
      yrxxch511xhhxxhxxxxxoptions.setP7xxuo45bvxxxxxxxxxxoptions45("D");
      yrxxch511xhhxxhxxxxxoptions.setP8xxup45bvxxxxxxxxxxpurpose45("");
      yrxxch511xhhxxhxxxxxoptions.setP9xxuv45bvxxxxxxxxxxvalue45("");
      yrxxch511xhhxxhxxxxxoptions.setQ1xxuo46bvxxxxxxxxxxoptions46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ2xxup46bvxxxxxxxxxxpurpose46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ3xxuv46bvxxxxxxxxxxvalue46("");
      yrxxch511xhhxxhxxxxxoptions.setQ4xxuo47bvxxxxxxxxxxoptions47("14");
      yrxxch511xhhxxhxxxxxoptions.setQ5xxup47bvxxxxxxxxxxpurpose47("14");
      yrxxch511xhhxxhxxxxxoptions.setQ6xxuv47bvxxxxxxxxxxvalue47("");
      yrxxch511xhhxxhxxxxxoptions.setQ7xxuo48bvxxxxxxxxxxoptions48("");
      yrxxch511xhhxxhxxxxxoptions.setQ8xxup48bvxxxxxxxxxxpurpose48("");
      yrxxch511xhhxxhxxxxxoptions.setQ9xxuv48bvxxxxxxxxxxvalue48("");
      yrxxch511xhhxxhxxxxxoptions.setR1xxuo49bvxxxxxxxxxxoptions49("3R-LEFT-POP-C");
      yrxxch511xhhxxhxxxxxoptions.setR2xxup49bvxxxxxxxxxxpurpose49("Left PopUp");
      yrxxch511xhhxxhxxxxxoptions.setR3xxuv49bvxxxxxxxxxxvalue49("");
      yrxxch511xhhxxhxxxxxoptions.setR4xxuo50bvxxxxxxxxxxoptions50("");
      yrxxch511xhhxxhxxxxxoptions.setR5xxup50bvxxxxxxxxxxpurpose50("");
      yrxxch511xhhxxhxxxxxoptions.setR6xxuv50bvxxxxxxxxxxvalue50("");
      yrxxch511xhhxxhxxxxxoptions.setR7xxuo51bvxxxxxxxxxxoptions51("");
      yrxxch511xhhxxhxxxxxoptions.setR8xxup51bvxxxxxxxxxxpurpose51("");
      yrxxch511xhhxxhxxxxxoptions.setR9xxuv51bvxxxxxxxxxxvalue51("");
      yrxxch511xhhxxhxxxxxoptions.setS1xxuo52bvxxxxxxxxxxoptions52("");
      yrxxch511xhhxxhxxxxxoptions.setS2xxup52bvxxxxxxxxxxpurpose52("");
      yrxxch511xhhxxhxxxxxoptions.setS3xxuv52bvxxxxxxxxxxvalue52("");
      yrxxch511xhhxxhxxxxxoptions.setS4xxuo53bvxxxxxxxxxxoptions53("");
      yrxxch511xhhxxhxxxxxoptions.setS5xxup53bvxxxxxxxxxxpurpose53("");
      yrxxch511xhhxxhxxxxxoptions.setS6xxuv53bvxxxxxxxxxxvalue53("");

      yrxxch511xhhxxhxxxxxoptions.setS7xxuo54bvxxxxxxxxxxoptions54("");
      yrxxch511xhhxxhxxxxxoptions.setS8xxup54bvxxxxxxxxxxpurpose54("");
      yrxxch511xhhxxhxxxxxoptions.setS9xxuv54bvxxxxxxxxxxvalue54("");
      yrxxch511xhhxxhxxxxxoptions.setT1xxuo55bvxxxxxxxxxxoptions55("");
      yrxxch511xhhxxhxxxxxoptions.setT2xxup55bvxxxxxxxxxxpurpose55("");
      yrxxch511xhhxxhxxxxxoptions.setT3xxuv55bvxxxxxxxxxxvalue55("");
      yrxxch511xhhxxhxxxxxoptions.setT4xxuo56bvxxxxxxxxxxoptions56("");
      yrxxch511xhhxxhxxxxxoptions.setT5xxup56bvxxxxxxxxxxpurpose56("");
      yrxxch511xhhxxhxxxxxoptions.setT6xxuv56bvxxxxxxxxxxvalue56("");
      yrxxch511xhhxxhxxxxxoptions.setT7xxuo57bvxxxxxxxxxxoptions57("");
      yrxxch511xhhxxhxxxxxoptions.setT8xxup57bvxxxxxxxxxxpurpose57("");
      yrxxch511xhhxxhxxxxxoptions.setT9xxuv57bvxxxxxxxxxxvalue57("");
      yrxxch511xhhxxhxxxxxoptions.setU1xxuo58bvxxxxxxxxxxoptions58("");
      yrxxch511xhhxxhxxxxxoptions.setU2xxup58bvxxxxxxxxxxpurpose58("");
      yrxxch511xhhxxhxxxxxoptions.setU3xxuv58bvxxxxxxxxxxvalue58("");
      yrxxch511xhhxxhxxxxxoptions.setU4xxuo59bvxxxxxxxxxxoptions59("");
      yrxxch511xhhxxhxxxxxoptions.setU5xxup59bvxxxxxxxxxxpurpose59("");
      yrxxch511xhhxxhxxxxxoptions.setU6xxuv59bvxxxxxxxxxxvalue59("");
      yrxxch511xhhxxhxxxxxoptions.setU7xxuo60bvxxxxxxxxxxoptions60("");
      yrxxch511xhhxxhxxxxxoptions.setU8xxup60bvxxxxxxxxxxpurpose60("");
      yrxxch511xhhxxhxxxxxoptions.setU9xxuv60bvxxxxxxxxxxvalue60("");
      yrxxch511xhhxxhxxxxxoptions.setV1xxuo61bvxxxxxxxxxxoptions61("");
      yrxxch511xhhxxhxxxxxoptions.setV2xxup61bvxxxxxxxxxxpurpose61("");
      yrxxch511xhhxxhxxxxxoptions.setV3xxuv61bvxxxxxxxxxxvalue61("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptionsHome.persist(client);


      yrxxch511xhhxxhxxxxxoptionsHome.clearInstance();
      yrxxch511xhhxxhxxxxxoptions=yrxxch511xhhxxhxxxxxoptionsHome.getInstance();
      yrxxch511xhhxxhxxxxxoptions.setA0xxukcxbvxxxxxxxxxxrow("15");
      yrxxch511xhhxxhxxxxxoptions.setB1xxuo01bvxxxxxxxxxxoptions01("R");
      yrxxch511xhhxxhxxxxxoptions.setB2xxup01bvxxxxxxxxxxpurpose01("Retained Earning");
      yrxxch511xhhxxhxxxxxoptions.setB3xxuv01bvxxxxxxxxxxvalue01("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptions.setB4xxuo02bvxxxxxxxxxxoptions02("S");
      yrxxch511xhhxxhxxxxxoptions.setB5xxup02bvxxxxxxxxxxpurpose02("Subheader");
      yrxxch511xhhxxhxxxxxoptions.setB6xxuv02bvxxxxxxxxxxvalue02("");
      yrxxch511xhhxxhxxxxxoptions.setB7xxuo03bvxxxxxxxxxxoptions03("P");
      yrxxch511xhhxxhxxxxxoptions.setB8xxup03bvxxxxxxxxxxpurpose03("Payable");
      yrxxch511xhhxxhxxxxxoptions.setB9xxuv03bvxxxxxxxxxxvalue03("");
      yrxxch511xhhxxhxxxxxoptions.setC1xxuo04bvxxxxxxxxxxoptions04("");
      yrxxch511xhhxxhxxxxxoptions.setC2xxup04bvxxxxxxxxxxpurpose04("");
      yrxxch511xhhxxhxxxxxoptions.setC3xxuv04bvxxxxxxxxxxvalue04("");
      yrxxch511xhhxxhxxxxxoptions.setC4xxuo05bvxxxxxxxxxxoptions05("");
      yrxxch511xhhxxhxxxxxoptions.setC5xxup05bvxxxxxxxxxxpurpose05("");
      yrxxch511xhhxxhxxxxxoptions.setC6xxuv05bvxxxxxxxxxxvalue05("");
      yrxxch511xhhxxhxxxxxoptions.setC7xxuo06bvxxxxxxxxxxoptions06("");
      yrxxch511xhhxxhxxxxxoptions.setC8xxup06bvxxxxxxxxxxpurpose06("");
      yrxxch511xhhxxhxxxxxoptions.setC9xxuv06bvxxxxxxxxxxvalue06("");
      yrxxch511xhhxxhxxxxxoptions.setD1xxuo07bvxxxxxxxxxxoptions07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD2xxup07bvxxxxxxxxxxpurpose07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD3xxuv07bvxxxxxxxxxxvalue07("");
      yrxxch511xhhxxhxxxxxoptions.setD4xxuo08bvxxxxxxxxxxoptions08("H");
      yrxxch511xhhxxhxxxxxoptions.setD5xxup08bvxxxxxxxxxxpurpose08("High");
      yrxxch511xhhxxhxxxxxoptions.setD6xxuv08bvxxxxxxxxxxvalue08("");
      yrxxch511xhhxxhxxxxxoptions.setD7xxuo09bvxxxxxxxxxxoptions09("30");
      yrxxch511xhhxxhxxxxxoptions.setD8xxup09bvxxxxxxxxxxpurpose09("-30 days");
      yrxxch511xhhxxhxxxxxoptions.setD9xxuv09bvxxxxxxxxxxvalue09("");
      yrxxch511xhhxxhxxxxxoptions.setE1xxuo10bvxxxxxxxxxxoptions10("cash");
      yrxxch511xhhxxhxxxxxoptions.setE2xxup10bvxxxxxxxxxxpurpose10("-cash");
      yrxxch511xhhxxhxxxxxoptions.setE3xxuv10bvxxxxxxxxxxvalue10("");
      yrxxch511xhhxxhxxxxxoptions.setE4xxuo11bvxxxxxxxxxxoptions11("Montreal");
      yrxxch511xhhxxhxxxxxoptions.setE5xxup11bvxxxxxxxxxxpurpose11("Toronto");
      yrxxch511xhhxxhxxxxxoptions.setE6xxuv11bvxxxxxxxxxxvalue11("ca=Montreal; us=Boston");
      yrxxch511xhhxxhxxxxxoptions.setE7xxuo12bvxxxxxxxxxxoptions12("QE");
      yrxxch511xhhxxhxxxxxoptions.setE8xxup12bvxxxxxxxxxxpurpose12("Quebec");
      yrxxch511xhhxxhxxxxxoptions.setE9xxuv12bvxxxxxxxxxxvalue12("ca=QE us=CA");
      yrxxch511xhhxxhxxxxxoptions.setF1xxuo13bvxxxxxxxxxxoptions13("");
      yrxxch511xhhxxhxxxxxoptions.setF2xxup13bvxxxxxxxxxxpurpose13("");
      yrxxch511xhhxxhxxxxxoptions.setF3xxuv13bvxxxxxxxxxxvalue13("");
      yrxxch511xhhxxhxxxxxoptions.setF4xxuo14bvxxxxxxxxxxoptions14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF5xxup14bvxxxxxxxxxxpurpose14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF6xxuv14bvxxxxxxxxxxvalue14("ca=M4L3Z8 us=10003 in=70003");
      yrxxch511xhhxxhxxxxxoptions.setF7xxuo15bvxxxxxxxxxxoptions15("Y");
      yrxxch511xhhxxhxxxxxoptions.setF8xxup15bvxxxxxxxxxxpurpose15("Yes");
      yrxxch511xhhxxhxxxxxoptions.setF9xxuv15bvxxxxxxxxxxvalue15("");
      yrxxch511xhhxxhxxxxxoptions.setG1xxuo16bvxxxxxxxxxxoptions16("SI-L*");
      yrxxch511xhhxxhxxxxxoptions.setG2xxup16bvxxxxxxxxxxpurpose16("Shopping-SubCategories");
      yrxxch511xhhxxhxxxxxoptions.setG3xxuv16bvxxxxxxxxxxvalue16("");
      yrxxch511xhhxxhxxxxxoptions.setG4xxuo17bvxxxxxxxxxxoptions17("?");
      yrxxch511xhhxxhxxxxxoptions.setG5xxup17bvxxxxxxxxxxpurpose17("?");
      yrxxch511xhhxxhxxxxxoptions.setG6xxuv17bvxxxxxxxxxxvalue17("");
      yrxxch511xhhxxhxxxxxoptions.setG7xxuo18bvxxxxxxxxxxoptions18("AH");
      yrxxch511xhhxxhxxxxxoptions.setG8xxup18bvxxxxxxxxxxpurpose18("Hourly");
      yrxxch511xhhxxhxxxxxoptions.setG9xxuv18bvxxxxxxxxxxvalue18("s=89");
      yrxxch511xhhxxhxxxxxoptions.setH1xxuo19bvxxxxxxxxxxoptions19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH2xxup19bvxxxxxxxxxxpurpose19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH3xxuv19bvxxxxxxxxxxvalue19("");
      yrxxch511xhhxxhxxxxxoptions.setH4xxuo20bvxxxxxxxxxxoptions20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH5xxup20bvxxxxxxxxxxpurpose20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH6xxuv20bvxxxxxxxxxxvalue20("");
      yrxxch511xhhxxhxxxxxoptions.setH7xxuo21bvxxxxxxxxxxoptions21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH8xxup21bvxxxxxxxxxxpurpose21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH9xxuv21bvxxxxxxxxxxvalue21("");
      yrxxch511xhhxxhxxxxxoptions.setI1xxuo22bvxxxxxxxxxxoptions22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI2xxup22bvxxxxxxxxxxpurpose22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI3xxuv22bvxxxxxxxxxxvalue22("");
      yrxxch511xhhxxhxxxxxoptions.setI4xxuo23bvxxxxxxxxxxoptions23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI5xxup23bvxxxxxxxxxxpurpose23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI6xxuv23bvxxxxxxxxxxvalue23("");
      yrxxch511xhhxxhxxxxxoptions.setI7xxuo24bvxxxxxxxxxxoptions24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI8xxup24bvxxxxxxxxxxpurpose24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI9xxuv24bvxxxxxxxxxxvalue24("");
      yrxxch511xhhxxhxxxxxoptions.setJ1xxuo25bvxxxxxxxxxxoptions25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ2xxup25bvxxxxxxxxxxpurpose25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ3xxuv25bvxxxxxxxxxxvalue25("");
      yrxxch511xhhxxhxxxxxoptions.setJ4xxuo26bvxxxxxxxxxxoptions26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ5xxup26bvxxxxxxxxxxpurpose26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ6xxuv26bvxxxxxxxxxxvalue26("");
      yrxxch511xhhxxhxxxxxoptions.setJ7xxuo27bvxxxxxxxxxxoptions27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ8xxup27bvxxxxxxxxxxpurpose27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ9xxuv27bvxxxxxxxxxxvalue27("");
      yrxxch511xhhxxhxxxxxoptions.setK1xxuo28bvxxxxxxxxxxoptions28("PF");
      yrxxch511xhhxxhxxxxxoptions.setK2xxup28bvxxxxxxxxxxpurpose28("Persons-Family");
      yrxxch511xhhxxhxxxxxoptions.setK3xxuv28bvxxxxxxxxxxvalue28("");
      yrxxch511xhhxxhxxxxxoptions.setK4xxuo29bvxxxxxxxxxxoptions29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK5xxup29bvxxxxxxxxxxpurpose29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK6xxuv29bvxxxxxxxxxxvalue29("");
      yrxxch511xhhxxhxxxxxoptions.setK7xxuo30bvxxxxxxxxxxoptions30("EM");
      yrxxch511xhhxxhxxxxxoptions.setK8xxup30bvxxxxxxxxxxpurpose30("EMail");
      yrxxch511xhhxxhxxxxxoptions.setK9xxuv30bvxxxxxxxxxxvalue30("");
      yrxxch511xhhxxhxxxxxoptions.setL1xxuo31bvxxxxxxxxxxoptions31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL2xxup31bvxxxxxxxxxxpurpose31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL3xxuv31bvxxxxxxxxxxvalue31("");
      yrxxch511xhhxxhxxxxxoptions.setL4xxuo32bvxxxxxxxxxxoptions32("Room 107");
      yrxxch511xhhxxhxxxxxoptions.setL5xxup32bvxxxxxxxxxxpurpose32("Room 107");
      yrxxch511xhhxxhxxxxxoptions.setL6xxuv32bvxxxxxxxxxxvalue32("");
      yrxxch511xhhxxhxxxxxoptions.setL7xxuo33bvxxxxxxxxxxoptions33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL8xxup33bvxxxxxxxxxxpurpose33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL9xxuv33bvxxxxxxxxxxvalue33("");
      yrxxch511xhhxxhxxxxxoptions.setM1xxuo34bvxxxxxxxxxxoptions34("");
      yrxxch511xhhxxhxxxxxoptions.setM2xxup34bvxxxxxxxxxxpurpose34("");
      yrxxch511xhhxxhxxxxxoptions.setM3xxuv34bvxxxxxxxxxxvalue34("");
      yrxxch511xhhxxhxxxxxoptions.setM4xxuo35bvxxxxxxxxxxoptions35("Lunch Appontment");
      yrxxch511xhhxxhxxxxxoptions.setM5xxup35bvxxxxxxxxxxpurpose35("c$88.90");
      yrxxch511xhhxxhxxxxxoptions.setM6xxuv35bvxxxxxxxxxxvalue35("");
      yrxxch511xhhxxhxxxxxoptions.setM7xxuo36bvxxxxxxxxxxoptions36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM8xxup36bvxxxxxxxxxxpurpose36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM9xxuv36bvxxxxxxxxxxvalue36("");
      yrxxch511xhhxxhxxxxxoptions.setN1xxuo37bvxxxxxxxxxxoptions37("High");
      yrxxch511xhhxxhxxxxxoptions.setN2xxup37bvxxxxxxxxxxpurpose37("High");
      yrxxch511xhhxxhxxxxxoptions.setN3xxuv37bvxxxxxxxxxxvalue37("");
      yrxxch511xhhxxhxxxxxoptions.setN4xxuo38bvxxxxxxxxxxoptions38("S");
      yrxxch511xhhxxhxxxxxoptions.setN5xxup38bvxxxxxxxxxxpurpose38("System Admin");
      yrxxch511xhhxxhxxxxxoptions.setN6xxuv38bvxxxxxxxxxxvalue38("");
      yrxxch511xhhxxhxxxxxoptions.setN7xxuo39bvxxxxxxxxxxoptions39("H");
      yrxxch511xhhxxhxxxxxoptions.setN8xxup39bvxxxxxxxxxxpurpose39("High");
      yrxxch511xhhxxhxxxxxoptions.setN9xxuv39bvxxxxxxxxxxvalue39("");
      yrxxch511xhhxxhxxxxxoptions.setO1xxuo40bvxxxxxxxxxxoptions40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO2xxup40bvxxxxxxxxxxpurpose40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO3xxuv40bvxxxxxxxxxxvalue40("");
      yrxxch511xhhxxhxxxxxoptions.setO4xxuo41bvxxxxxxxxxxoptions41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO5xxup41bvxxxxxxxxxxpurpose41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO6xxuv41bvxxxxxxxxxxvalue41("");
      yrxxch511xhhxxhxxxxxoptions.setO7xxuo42bvxxxxxxxxxxoptions42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO8xxup42bvxxxxxxxxxxpurpose42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO9xxuv42bvxxxxxxxxxxvalue42("");
      yrxxch511xhhxxhxxxxxoptions.setP1xxuo43bvxxxxxxxxxxoptions43("New");
      yrxxch511xhhxxhxxxxxoptions.setP2xxup43bvxxxxxxxxxxpurpose43("New");
      yrxxch511xhhxxhxxxxxoptions.setP3xxuv43bvxxxxxxxxxxvalue43("");
      yrxxch511xhhxxhxxxxxoptions.setP4xxuo44bvxxxxxxxxxxoptions44("");
      yrxxch511xhhxxhxxxxxoptions.setP5xxup44bvxxxxxxxxxxpurpose44("");
      yrxxch511xhhxxhxxxxxoptions.setP6xxuv44bvxxxxxxxxxxvalue44("");
      yrxxch511xhhxxhxxxxxoptions.setP7xxuo45bvxxxxxxxxxxoptions45("D");
      yrxxch511xhhxxhxxxxxoptions.setP8xxup45bvxxxxxxxxxxpurpose45("");
      yrxxch511xhhxxhxxxxxoptions.setP9xxuv45bvxxxxxxxxxxvalue45("");
      yrxxch511xhhxxhxxxxxoptions.setQ1xxuo46bvxxxxxxxxxxoptions46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ2xxup46bvxxxxxxxxxxpurpose46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ3xxuv46bvxxxxxxxxxxvalue46("");
      yrxxch511xhhxxhxxxxxoptions.setQ4xxuo47bvxxxxxxxxxxoptions47("04");
      yrxxch511xhhxxhxxxxxoptions.setQ5xxup47bvxxxxxxxxxxpurpose47("04");
      yrxxch511xhhxxhxxxxxoptions.setQ6xxuv47bvxxxxxxxxxxvalue47("");
      yrxxch511xhhxxhxxxxxoptions.setQ7xxuo48bvxxxxxxxxxxoptions48("");
      yrxxch511xhhxxhxxxxxoptions.setQ8xxup48bvxxxxxxxxxxpurpose48("");
      yrxxch511xhhxxhxxxxxoptions.setQ9xxuv48bvxxxxxxxxxxvalue48("");
      yrxxch511xhhxxhxxxxxoptions.setR1xxuo49bvxxxxxxxxxxoptions49("acintegr");
      yrxxch511xhhxxhxxxxxoptions.setR2xxup49bvxxxxxxxxxxpurpose49("Accounts Integration");
      yrxxch511xhhxxhxxxxxoptions.setR3xxuv49bvxxxxxxxxxxvalue49("");
      yrxxch511xhhxxhxxxxxoptions.setR4xxuo50bvxxxxxxxxxxoptions50("");
      yrxxch511xhhxxhxxxxxoptions.setR5xxup50bvxxxxxxxxxxpurpose50("");
      yrxxch511xhhxxhxxxxxoptions.setR6xxuv50bvxxxxxxxxxxvalue50("");
      yrxxch511xhhxxhxxxxxoptions.setR7xxuo51bvxxxxxxxxxxoptions51("");
      yrxxch511xhhxxhxxxxxoptions.setR8xxup51bvxxxxxxxxxxpurpose51("");
      yrxxch511xhhxxhxxxxxoptions.setR9xxuv51bvxxxxxxxxxxvalue51("");
      yrxxch511xhhxxhxxxxxoptions.setS1xxuo52bvxxxxxxxxxxoptions52("");
      yrxxch511xhhxxhxxxxxoptions.setS2xxup52bvxxxxxxxxxxpurpose52("");
      yrxxch511xhhxxhxxxxxoptions.setS3xxuv52bvxxxxxxxxxxvalue52("");
      yrxxch511xhhxxhxxxxxoptions.setS4xxuo53bvxxxxxxxxxxoptions53("");
      yrxxch511xhhxxhxxxxxoptions.setS5xxup53bvxxxxxxxxxxpurpose53("");
      yrxxch511xhhxxhxxxxxoptions.setS6xxuv53bvxxxxxxxxxxvalue53("");

      yrxxch511xhhxxhxxxxxoptions.setS7xxuo54bvxxxxxxxxxxoptions54("");
      yrxxch511xhhxxhxxxxxoptions.setS8xxup54bvxxxxxxxxxxpurpose54("");
      yrxxch511xhhxxhxxxxxoptions.setS9xxuv54bvxxxxxxxxxxvalue54("");
      yrxxch511xhhxxhxxxxxoptions.setT1xxuo55bvxxxxxxxxxxoptions55("");
      yrxxch511xhhxxhxxxxxoptions.setT2xxup55bvxxxxxxxxxxpurpose55("");
      yrxxch511xhhxxhxxxxxoptions.setT3xxuv55bvxxxxxxxxxxvalue55("");
      yrxxch511xhhxxhxxxxxoptions.setT4xxuo56bvxxxxxxxxxxoptions56("");
      yrxxch511xhhxxhxxxxxoptions.setT5xxup56bvxxxxxxxxxxpurpose56("");
      yrxxch511xhhxxhxxxxxoptions.setT6xxuv56bvxxxxxxxxxxvalue56("");
      yrxxch511xhhxxhxxxxxoptions.setT7xxuo57bvxxxxxxxxxxoptions57("");
      yrxxch511xhhxxhxxxxxoptions.setT8xxup57bvxxxxxxxxxxpurpose57("");
      yrxxch511xhhxxhxxxxxoptions.setT9xxuv57bvxxxxxxxxxxvalue57("");
      yrxxch511xhhxxhxxxxxoptions.setU1xxuo58bvxxxxxxxxxxoptions58("");
      yrxxch511xhhxxhxxxxxoptions.setU2xxup58bvxxxxxxxxxxpurpose58("");
      yrxxch511xhhxxhxxxxxoptions.setU3xxuv58bvxxxxxxxxxxvalue58("");
      yrxxch511xhhxxhxxxxxoptions.setU4xxuo59bvxxxxxxxxxxoptions59("");
      yrxxch511xhhxxhxxxxxoptions.setU5xxup59bvxxxxxxxxxxpurpose59("");
      yrxxch511xhhxxhxxxxxoptions.setU6xxuv59bvxxxxxxxxxxvalue59("");
      yrxxch511xhhxxhxxxxxoptions.setU7xxuo60bvxxxxxxxxxxoptions60("");
      yrxxch511xhhxxhxxxxxoptions.setU8xxup60bvxxxxxxxxxxpurpose60("");
      yrxxch511xhhxxhxxxxxoptions.setU9xxuv60bvxxxxxxxxxxvalue60("");
      yrxxch511xhhxxhxxxxxoptions.setV1xxuo61bvxxxxxxxxxxoptions61("");
      yrxxch511xhhxxhxxxxxoptions.setV2xxup61bvxxxxxxxxxxpurpose61("");
      yrxxch511xhhxxhxxxxxoptions.setV3xxuv61bvxxxxxxxxxxvalue61("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptionsHome.persist(client);


      yrxxch511xhhxxhxxxxxoptionsHome.clearInstance();
      yrxxch511xhhxxhxxxxxoptions=yrxxch511xhhxxhxxxxxoptionsHome.getInstance();
      yrxxch511xhhxxhxxxxxoptions.setA0xxukcxbvxxxxxxxxxxrow("16");
      yrxxch511xhhxxhxxxxxoptions.setB1xxuo01bvxxxxxxxxxxoptions01("R");
      yrxxch511xhhxxhxxxxxoptions.setB2xxup01bvxxxxxxxxxxpurpose01("Retained Earning");
      yrxxch511xhhxxhxxxxxoptions.setB3xxuv01bvxxxxxxxxxxvalue01("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptions.setB4xxuo02bvxxxxxxxxxxoptions02("S");
      yrxxch511xhhxxhxxxxxoptions.setB5xxup02bvxxxxxxxxxxpurpose02("Subheader");
      yrxxch511xhhxxhxxxxxoptions.setB6xxuv02bvxxxxxxxxxxvalue02("");
      yrxxch511xhhxxhxxxxxoptions.setB7xxuo03bvxxxxxxxxxxoptions03("P");
      yrxxch511xhhxxhxxxxxoptions.setB8xxup03bvxxxxxxxxxxpurpose03("Payable");
      yrxxch511xhhxxhxxxxxoptions.setB9xxuv03bvxxxxxxxxxxvalue03("");
      yrxxch511xhhxxhxxxxxoptions.setC1xxuo04bvxxxxxxxxxxoptions04("");
      yrxxch511xhhxxhxxxxxoptions.setC2xxup04bvxxxxxxxxxxpurpose04("");
      yrxxch511xhhxxhxxxxxoptions.setC3xxuv04bvxxxxxxxxxxvalue04("");
      yrxxch511xhhxxhxxxxxoptions.setC4xxuo05bvxxxxxxxxxxoptions05("");
      yrxxch511xhhxxhxxxxxoptions.setC5xxup05bvxxxxxxxxxxpurpose05("");
      yrxxch511xhhxxhxxxxxoptions.setC6xxuv05bvxxxxxxxxxxvalue05("");
      yrxxch511xhhxxhxxxxxoptions.setC7xxuo06bvxxxxxxxxxxoptions06("");
      yrxxch511xhhxxhxxxxxoptions.setC8xxup06bvxxxxxxxxxxpurpose06("");
      yrxxch511xhhxxhxxxxxoptions.setC9xxuv06bvxxxxxxxxxxvalue06("");
      yrxxch511xhhxxhxxxxxoptions.setD1xxuo07bvxxxxxxxxxxoptions07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD2xxup07bvxxxxxxxxxxpurpose07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD3xxuv07bvxxxxxxxxxxvalue07("");
      yrxxch511xhhxxhxxxxxoptions.setD4xxuo08bvxxxxxxxxxxoptions08("H");
      yrxxch511xhhxxhxxxxxoptions.setD5xxup08bvxxxxxxxxxxpurpose08("High");
      yrxxch511xhhxxhxxxxxoptions.setD6xxuv08bvxxxxxxxxxxvalue08("");
      yrxxch511xhhxxhxxxxxoptions.setD7xxuo09bvxxxxxxxxxxoptions09("30");
      yrxxch511xhhxxhxxxxxoptions.setD8xxup09bvxxxxxxxxxxpurpose09("-30 days");
      yrxxch511xhhxxhxxxxxoptions.setD9xxuv09bvxxxxxxxxxxvalue09("");
      yrxxch511xhhxxhxxxxxoptions.setE1xxuo10bvxxxxxxxxxxoptions10("cash");
      yrxxch511xhhxxhxxxxxoptions.setE2xxup10bvxxxxxxxxxxpurpose10("-cash");
      yrxxch511xhhxxhxxxxxoptions.setE3xxuv10bvxxxxxxxxxxvalue10("");
      yrxxch511xhhxxhxxxxxoptions.setE4xxuo11bvxxxxxxxxxxoptions11("Montreal");
      yrxxch511xhhxxhxxxxxoptions.setE5xxup11bvxxxxxxxxxxpurpose11("Toronto");
      yrxxch511xhhxxhxxxxxoptions.setE6xxuv11bvxxxxxxxxxxvalue11("ca=Montreal; us=Boston");
      yrxxch511xhhxxhxxxxxoptions.setE7xxuo12bvxxxxxxxxxxoptions12("QE");
      yrxxch511xhhxxhxxxxxoptions.setE8xxup12bvxxxxxxxxxxpurpose12("Quebec");
      yrxxch511xhhxxhxxxxxoptions.setE9xxuv12bvxxxxxxxxxxvalue12("ca=QE us=CA");
      yrxxch511xhhxxhxxxxxoptions.setF1xxuo13bvxxxxxxxxxxoptions13("");
      yrxxch511xhhxxhxxxxxoptions.setF2xxup13bvxxxxxxxxxxpurpose13("");
      yrxxch511xhhxxhxxxxxoptions.setF3xxuv13bvxxxxxxxxxxvalue13("");
      yrxxch511xhhxxhxxxxxoptions.setF4xxuo14bvxxxxxxxxxxoptions14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF5xxup14bvxxxxxxxxxxpurpose14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF6xxuv14bvxxxxxxxxxxvalue14("ca=M4L3Z8 us=10003 in=70003");
      yrxxch511xhhxxhxxxxxoptions.setF7xxuo15bvxxxxxxxxxxoptions15("Y");
      yrxxch511xhhxxhxxxxxoptions.setF8xxup15bvxxxxxxxxxxpurpose15("Yes");
      yrxxch511xhhxxhxxxxxoptions.setF9xxuv15bvxxxxxxxxxxvalue15("");
      yrxxch511xhhxxhxxxxxoptions.setG1xxuo16bvxxxxxxxxxxoptions16("FI-L*");
      yrxxch511xhhxxhxxxxxoptions.setG2xxup16bvxxxxxxxxxxpurpose16("Review(Fees based)-SubCategories");
      yrxxch511xhhxxhxxxxxoptions.setG3xxuv16bvxxxxxxxxxxvalue16("");
      yrxxch511xhhxxhxxxxxoptions.setG4xxuo17bvxxxxxxxxxxoptions17("?");
      yrxxch511xhhxxhxxxxxoptions.setG5xxup17bvxxxxxxxxxxpurpose17("?");
      yrxxch511xhhxxhxxxxxoptions.setG6xxuv17bvxxxxxxxxxxvalue17("");
      yrxxch511xhhxxhxxxxxoptions.setG7xxuo18bvxxxxxxxxxxoptions18("");
      yrxxch511xhhxxhxxxxxoptions.setG8xxup18bvxxxxxxxxxxpurpose18("");
      yrxxch511xhhxxhxxxxxoptions.setG9xxuv18bvxxxxxxxxxxvalue18("s=89");
      yrxxch511xhhxxhxxxxxoptions.setH1xxuo19bvxxxxxxxxxxoptions19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH2xxup19bvxxxxxxxxxxpurpose19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH3xxuv19bvxxxxxxxxxxvalue19("");
      yrxxch511xhhxxhxxxxxoptions.setH4xxuo20bvxxxxxxxxxxoptions20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH5xxup20bvxxxxxxxxxxpurpose20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH6xxuv20bvxxxxxxxxxxvalue20("");
      yrxxch511xhhxxhxxxxxoptions.setH7xxuo21bvxxxxxxxxxxoptions21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH8xxup21bvxxxxxxxxxxpurpose21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH9xxuv21bvxxxxxxxxxxvalue21("");
      yrxxch511xhhxxhxxxxxoptions.setI1xxuo22bvxxxxxxxxxxoptions22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI2xxup22bvxxxxxxxxxxpurpose22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI3xxuv22bvxxxxxxxxxxvalue22("");
      yrxxch511xhhxxhxxxxxoptions.setI4xxuo23bvxxxxxxxxxxoptions23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI5xxup23bvxxxxxxxxxxpurpose23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI6xxuv23bvxxxxxxxxxxvalue23("");
      yrxxch511xhhxxhxxxxxoptions.setI7xxuo24bvxxxxxxxxxxoptions24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI8xxup24bvxxxxxxxxxxpurpose24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI9xxuv24bvxxxxxxxxxxvalue24("");
      yrxxch511xhhxxhxxxxxoptions.setJ1xxuo25bvxxxxxxxxxxoptions25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ2xxup25bvxxxxxxxxxxpurpose25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ3xxuv25bvxxxxxxxxxxvalue25("");
      yrxxch511xhhxxhxxxxxoptions.setJ4xxuo26bvxxxxxxxxxxoptions26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ5xxup26bvxxxxxxxxxxpurpose26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ6xxuv26bvxxxxxxxxxxvalue26("");
      yrxxch511xhhxxhxxxxxoptions.setJ7xxuo27bvxxxxxxxxxxoptions27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ8xxup27bvxxxxxxxxxxpurpose27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ9xxuv27bvxxxxxxxxxxvalue27("");
      yrxxch511xhhxxhxxxxxoptions.setK1xxuo28bvxxxxxxxxxxoptions28("PF");
      yrxxch511xhhxxhxxxxxoptions.setK2xxup28bvxxxxxxxxxxpurpose28("Persons-Family");
      yrxxch511xhhxxhxxxxxoptions.setK3xxuv28bvxxxxxxxxxxvalue28("");
      yrxxch511xhhxxhxxxxxoptions.setK4xxuo29bvxxxxxxxxxxoptions29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK5xxup29bvxxxxxxxxxxpurpose29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK6xxuv29bvxxxxxxxxxxvalue29("");
      yrxxch511xhhxxhxxxxxoptions.setK7xxuo30bvxxxxxxxxxxoptions30("EM");
      yrxxch511xhhxxhxxxxxoptions.setK8xxup30bvxxxxxxxxxxpurpose30("EMail");
      yrxxch511xhhxxhxxxxxoptions.setK9xxuv30bvxxxxxxxxxxvalue30("");
      yrxxch511xhhxxhxxxxxoptions.setL1xxuo31bvxxxxxxxxxxoptions31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL2xxup31bvxxxxxxxxxxpurpose31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL3xxuv31bvxxxxxxxxxxvalue31("");
      yrxxch511xhhxxhxxxxxoptions.setL4xxuo32bvxxxxxxxxxxoptions32("Room 107");
      yrxxch511xhhxxhxxxxxoptions.setL5xxup32bvxxxxxxxxxxpurpose32("Room 107");
      yrxxch511xhhxxhxxxxxoptions.setL6xxuv32bvxxxxxxxxxxvalue32("");
      yrxxch511xhhxxhxxxxxoptions.setL7xxuo33bvxxxxxxxxxxoptions33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL8xxup33bvxxxxxxxxxxpurpose33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL9xxuv33bvxxxxxxxxxxvalue33("");
      yrxxch511xhhxxhxxxxxoptions.setM1xxuo34bvxxxxxxxxxxoptions34("");
      yrxxch511xhhxxhxxxxxoptions.setM2xxup34bvxxxxxxxxxxpurpose34("");
      yrxxch511xhhxxhxxxxxoptions.setM3xxuv34bvxxxxxxxxxxvalue34("");
      yrxxch511xhhxxhxxxxxoptions.setM4xxuo35bvxxxxxxxxxxoptions35("Lunch Appontment");
      yrxxch511xhhxxhxxxxxoptions.setM5xxup35bvxxxxxxxxxxpurpose35("c$88.90");
      yrxxch511xhhxxhxxxxxoptions.setM6xxuv35bvxxxxxxxxxxvalue35("");
      yrxxch511xhhxxhxxxxxoptions.setM7xxuo36bvxxxxxxxxxxoptions36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM8xxup36bvxxxxxxxxxxpurpose36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM9xxuv36bvxxxxxxxxxxvalue36("");
      yrxxch511xhhxxhxxxxxoptions.setN1xxuo37bvxxxxxxxxxxoptions37("FP");
      yrxxch511xhhxxhxxxxxoptions.setN2xxup37bvxxxxxxxxxxpurpose37("Public View");
      yrxxch511xhhxxhxxxxxoptions.setN3xxuv37bvxxxxxxxxxxvalue37("");
      yrxxch511xhhxxhxxxxxoptions.setN4xxuo38bvxxxxxxxxxxoptions38("S");
      yrxxch511xhhxxhxxxxxoptions.setN5xxup38bvxxxxxxxxxxpurpose38("System Admin");
      yrxxch511xhhxxhxxxxxoptions.setN6xxuv38bvxxxxxxxxxxvalue38("");
      yrxxch511xhhxxhxxxxxoptions.setN7xxuo39bvxxxxxxxxxxoptions39("H");
      yrxxch511xhhxxhxxxxxoptions.setN8xxup39bvxxxxxxxxxxpurpose39("High");
      yrxxch511xhhxxhxxxxxoptions.setN9xxuv39bvxxxxxxxxxxvalue39("");
      yrxxch511xhhxxhxxxxxoptions.setO1xxuo40bvxxxxxxxxxxoptions40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO2xxup40bvxxxxxxxxxxpurpose40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO3xxuv40bvxxxxxxxxxxvalue40("");
      yrxxch511xhhxxhxxxxxoptions.setO4xxuo41bvxxxxxxxxxxoptions41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO5xxup41bvxxxxxxxxxxpurpose41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO6xxuv41bvxxxxxxxxxxvalue41("");
      yrxxch511xhhxxhxxxxxoptions.setO7xxuo42bvxxxxxxxxxxoptions42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO8xxup42bvxxxxxxxxxxpurpose42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO9xxuv42bvxxxxxxxxxxvalue42("");
      yrxxch511xhhxxhxxxxxoptions.setP1xxuo43bvxxxxxxxxxxoptions43("New");
      yrxxch511xhhxxhxxxxxoptions.setP2xxup43bvxxxxxxxxxxpurpose43("New");
      yrxxch511xhhxxhxxxxxoptions.setP3xxuv43bvxxxxxxxxxxvalue43("");
      yrxxch511xhhxxhxxxxxoptions.setP4xxuo44bvxxxxxxxxxxoptions44("");
      yrxxch511xhhxxhxxxxxoptions.setP5xxup44bvxxxxxxxxxxpurpose44("");
      yrxxch511xhhxxhxxxxxoptions.setP6xxuv44bvxxxxxxxxxxvalue44("");
      yrxxch511xhhxxhxxxxxoptions.setP7xxuo45bvxxxxxxxxxxoptions45("D");
      yrxxch511xhhxxhxxxxxoptions.setP8xxup45bvxxxxxxxxxxpurpose45("");
      yrxxch511xhhxxhxxxxxoptions.setP9xxuv45bvxxxxxxxxxxvalue45("");
      yrxxch511xhhxxhxxxxxoptions.setQ1xxuo46bvxxxxxxxxxxoptions46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ2xxup46bvxxxxxxxxxxpurpose46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ3xxuv46bvxxxxxxxxxxvalue46("");
      yrxxch511xhhxxhxxxxxoptions.setQ4xxuo47bvxxxxxxxxxxoptions47("04");
      yrxxch511xhhxxhxxxxxoptions.setQ5xxup47bvxxxxxxxxxxpurpose47("04");
      yrxxch511xhhxxhxxxxxoptions.setQ6xxuv47bvxxxxxxxxxxvalue47("");
      yrxxch511xhhxxhxxxxxoptions.setQ7xxuo48bvxxxxxxxxxxoptions48("");
      yrxxch511xhhxxhxxxxxoptions.setQ8xxup48bvxxxxxxxxxxpurpose48("");
      yrxxch511xhhxxhxxxxxoptions.setQ9xxuv48bvxxxxxxxxxxvalue48("");
      yrxxch511xhhxxhxxxxxoptions.setR1xxuo49bvxxxxxxxxxxoptions49("3E-CAR-1-C");
      yrxxch511xhhxxhxxxxxoptions.setR2xxup49bvxxxxxxxxxxpurpose49("Shopping Page slides-seq 0,1,2..");
      yrxxch511xhhxxhxxxxxoptions.setR3xxuv49bvxxxxxxxxxxvalue49("");
      yrxxch511xhhxxhxxxxxoptions.setR4xxuo50bvxxxxxxxxxxoptions50("");
      yrxxch511xhhxxhxxxxxoptions.setR5xxup50bvxxxxxxxxxxpurpose50("");
      yrxxch511xhhxxhxxxxxoptions.setR6xxuv50bvxxxxxxxxxxvalue50("");
      yrxxch511xhhxxhxxxxxoptions.setR7xxuo51bvxxxxxxxxxxoptions51("");
      yrxxch511xhhxxhxxxxxoptions.setR8xxup51bvxxxxxxxxxxpurpose51("");
      yrxxch511xhhxxhxxxxxoptions.setR9xxuv51bvxxxxxxxxxxvalue51("");
      yrxxch511xhhxxhxxxxxoptions.setS1xxuo52bvxxxxxxxxxxoptions52("");
      yrxxch511xhhxxhxxxxxoptions.setS2xxup52bvxxxxxxxxxxpurpose52("");
      yrxxch511xhhxxhxxxxxoptions.setS3xxuv52bvxxxxxxxxxxvalue52("");
      yrxxch511xhhxxhxxxxxoptions.setS4xxuo53bvxxxxxxxxxxoptions53("");
      yrxxch511xhhxxhxxxxxoptions.setS5xxup53bvxxxxxxxxxxpurpose53("");
      yrxxch511xhhxxhxxxxxoptions.setS6xxuv53bvxxxxxxxxxxvalue53("");

      yrxxch511xhhxxhxxxxxoptions.setS7xxuo54bvxxxxxxxxxxoptions54("");
      yrxxch511xhhxxhxxxxxoptions.setS8xxup54bvxxxxxxxxxxpurpose54("");
      yrxxch511xhhxxhxxxxxoptions.setS9xxuv54bvxxxxxxxxxxvalue54("");
      yrxxch511xhhxxhxxxxxoptions.setT1xxuo55bvxxxxxxxxxxoptions55("");
      yrxxch511xhhxxhxxxxxoptions.setT2xxup55bvxxxxxxxxxxpurpose55("");
      yrxxch511xhhxxhxxxxxoptions.setT3xxuv55bvxxxxxxxxxxvalue55("");
      yrxxch511xhhxxhxxxxxoptions.setT4xxuo56bvxxxxxxxxxxoptions56("");
      yrxxch511xhhxxhxxxxxoptions.setT5xxup56bvxxxxxxxxxxpurpose56("");
      yrxxch511xhhxxhxxxxxoptions.setT6xxuv56bvxxxxxxxxxxvalue56("");
      yrxxch511xhhxxhxxxxxoptions.setT7xxuo57bvxxxxxxxxxxoptions57("");
      yrxxch511xhhxxhxxxxxoptions.setT8xxup57bvxxxxxxxxxxpurpose57("");
      yrxxch511xhhxxhxxxxxoptions.setT9xxuv57bvxxxxxxxxxxvalue57("");
      yrxxch511xhhxxhxxxxxoptions.setU1xxuo58bvxxxxxxxxxxoptions58("");
      yrxxch511xhhxxhxxxxxoptions.setU2xxup58bvxxxxxxxxxxpurpose58("");
      yrxxch511xhhxxhxxxxxoptions.setU3xxuv58bvxxxxxxxxxxvalue58("");
      yrxxch511xhhxxhxxxxxoptions.setU4xxuo59bvxxxxxxxxxxoptions59("");
      yrxxch511xhhxxhxxxxxoptions.setU5xxup59bvxxxxxxxxxxpurpose59("");
      yrxxch511xhhxxhxxxxxoptions.setU6xxuv59bvxxxxxxxxxxvalue59("");
      yrxxch511xhhxxhxxxxxoptions.setU7xxuo60bvxxxxxxxxxxoptions60("");
      yrxxch511xhhxxhxxxxxoptions.setU8xxup60bvxxxxxxxxxxpurpose60("");
      yrxxch511xhhxxhxxxxxoptions.setU9xxuv60bvxxxxxxxxxxvalue60("");
      yrxxch511xhhxxhxxxxxoptions.setV1xxuo61bvxxxxxxxxxxoptions61("");
      yrxxch511xhhxxhxxxxxoptions.setV2xxup61bvxxxxxxxxxxpurpose61("");
      yrxxch511xhhxxhxxxxxoptions.setV3xxuv61bvxxxxxxxxxxvalue61("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptionsHome.persist(client);


      yrxxch511xhhxxhxxxxxoptionsHome.clearInstance();
      yrxxch511xhhxxhxxxxxoptions=yrxxch511xhhxxhxxxxxoptionsHome.getInstance();
      yrxxch511xhhxxhxxxxxoptions.setA0xxukcxbvxxxxxxxxxxrow("17");
      yrxxch511xhhxxhxxxxxoptions.setB1xxuo01bvxxxxxxxxxxoptions01("R");
      yrxxch511xhhxxhxxxxxoptions.setB2xxup01bvxxxxxxxxxxpurpose01("Retained Earning");
      yrxxch511xhhxxhxxxxxoptions.setB3xxuv01bvxxxxxxxxxxvalue01("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptions.setB4xxuo02bvxxxxxxxxxxoptions02("S");
      yrxxch511xhhxxhxxxxxoptions.setB5xxup02bvxxxxxxxxxxpurpose02("Subheader");
      yrxxch511xhhxxhxxxxxoptions.setB6xxuv02bvxxxxxxxxxxvalue02("");
      yrxxch511xhhxxhxxxxxoptions.setB7xxuo03bvxxxxxxxxxxoptions03("P");
      yrxxch511xhhxxhxxxxxoptions.setB8xxup03bvxxxxxxxxxxpurpose03("Payable");
      yrxxch511xhhxxhxxxxxoptions.setB9xxuv03bvxxxxxxxxxxvalue03("");
      yrxxch511xhhxxhxxxxxoptions.setC1xxuo04bvxxxxxxxxxxoptions04("");
      yrxxch511xhhxxhxxxxxoptions.setC2xxup04bvxxxxxxxxxxpurpose04("");
      yrxxch511xhhxxhxxxxxoptions.setC3xxuv04bvxxxxxxxxxxvalue04("");
      yrxxch511xhhxxhxxxxxoptions.setC4xxuo05bvxxxxxxxxxxoptions05("");
      yrxxch511xhhxxhxxxxxoptions.setC5xxup05bvxxxxxxxxxxpurpose05("");
      yrxxch511xhhxxhxxxxxoptions.setC6xxuv05bvxxxxxxxxxxvalue05("");
      yrxxch511xhhxxhxxxxxoptions.setC7xxuo06bvxxxxxxxxxxoptions06("");
      yrxxch511xhhxxhxxxxxoptions.setC8xxup06bvxxxxxxxxxxpurpose06("");
      yrxxch511xhhxxhxxxxxoptions.setC9xxuv06bvxxxxxxxxxxvalue06("");
      yrxxch511xhhxxhxxxxxoptions.setD1xxuo07bvxxxxxxxxxxoptions07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD2xxup07bvxxxxxxxxxxpurpose07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD3xxuv07bvxxxxxxxxxxvalue07("");
      yrxxch511xhhxxhxxxxxoptions.setD4xxuo08bvxxxxxxxxxxoptions08("H");
      yrxxch511xhhxxhxxxxxoptions.setD5xxup08bvxxxxxxxxxxpurpose08("High");
      yrxxch511xhhxxhxxxxxoptions.setD6xxuv08bvxxxxxxxxxxvalue08("");
      yrxxch511xhhxxhxxxxxoptions.setD7xxuo09bvxxxxxxxxxxoptions09("30");
      yrxxch511xhhxxhxxxxxoptions.setD8xxup09bvxxxxxxxxxxpurpose09("-30 days");
      yrxxch511xhhxxhxxxxxoptions.setD9xxuv09bvxxxxxxxxxxvalue09("");
      yrxxch511xhhxxhxxxxxoptions.setE1xxuo10bvxxxxxxxxxxoptions10("cash");
      yrxxch511xhhxxhxxxxxoptions.setE2xxup10bvxxxxxxxxxxpurpose10("-cash");
      yrxxch511xhhxxhxxxxxoptions.setE3xxuv10bvxxxxxxxxxxvalue10("");
      yrxxch511xhhxxhxxxxxoptions.setE4xxuo11bvxxxxxxxxxxoptions11("Montreal");
      yrxxch511xhhxxhxxxxxoptions.setE5xxup11bvxxxxxxxxxxpurpose11("Toronto");
      yrxxch511xhhxxhxxxxxoptions.setE6xxuv11bvxxxxxxxxxxvalue11("ca=Montreal; us=Boston");
      yrxxch511xhhxxhxxxxxoptions.setE7xxuo12bvxxxxxxxxxxoptions12("QE");
      yrxxch511xhhxxhxxxxxoptions.setE8xxup12bvxxxxxxxxxxpurpose12("Quebec");
      yrxxch511xhhxxhxxxxxoptions.setE9xxuv12bvxxxxxxxxxxvalue12("ca=QE us=CA");
      yrxxch511xhhxxhxxxxxoptions.setF1xxuo13bvxxxxxxxxxxoptions13("");
      yrxxch511xhhxxhxxxxxoptions.setF2xxup13bvxxxxxxxxxxpurpose13("");
      yrxxch511xhhxxhxxxxxoptions.setF3xxuv13bvxxxxxxxxxxvalue13("");
      yrxxch511xhhxxhxxxxxoptions.setF4xxuo14bvxxxxxxxxxxoptions14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF5xxup14bvxxxxxxxxxxpurpose14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF6xxuv14bvxxxxxxxxxxvalue14("ca=M4L3Z8 us=10003 in=70003");
      yrxxch511xhhxxhxxxxxoptions.setF7xxuo15bvxxxxxxxxxxoptions15("Y");
      yrxxch511xhhxxhxxxxxoptions.setF8xxup15bvxxxxxxxxxxpurpose15("Yes");
      yrxxch511xhhxxhxxxxxoptions.setF9xxuv15bvxxxxxxxxxxvalue15("");
      yrxxch511xhhxxhxxxxxoptions.setG1xxuo16bvxxxxxxxxxxoptions16("FI-L1");
      yrxxch511xhhxxhxxxxxoptions.setG2xxup16bvxxxxxxxxxxpurpose16("Review(Fees based)-Categories");
      yrxxch511xhhxxhxxxxxoptions.setG3xxuv16bvxxxxxxxxxxvalue16("");
      yrxxch511xhhxxhxxxxxoptions.setG4xxuo17bvxxxxxxxxxxoptions17("?");
      yrxxch511xhhxxhxxxxxoptions.setG5xxup17bvxxxxxxxxxxpurpose17("?");
      yrxxch511xhhxxhxxxxxoptions.setG6xxuv17bvxxxxxxxxxxvalue17("");
      yrxxch511xhhxxhxxxxxoptions.setG7xxuo18bvxxxxxxxxxxoptions18("AH");
      yrxxch511xhhxxhxxxxxoptions.setG8xxup18bvxxxxxxxxxxpurpose18("Hourly");
      yrxxch511xhhxxhxxxxxoptions.setG9xxuv18bvxxxxxxxxxxvalue18("s=89");
      yrxxch511xhhxxhxxxxxoptions.setH1xxuo19bvxxxxxxxxxxoptions19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH2xxup19bvxxxxxxxxxxpurpose19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH3xxuv19bvxxxxxxxxxxvalue19("");
      yrxxch511xhhxxhxxxxxoptions.setH4xxuo20bvxxxxxxxxxxoptions20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH5xxup20bvxxxxxxxxxxpurpose20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH6xxuv20bvxxxxxxxxxxvalue20("");
      yrxxch511xhhxxhxxxxxoptions.setH7xxuo21bvxxxxxxxxxxoptions21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH8xxup21bvxxxxxxxxxxpurpose21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH9xxuv21bvxxxxxxxxxxvalue21("");
      yrxxch511xhhxxhxxxxxoptions.setI1xxuo22bvxxxxxxxxxxoptions22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI2xxup22bvxxxxxxxxxxpurpose22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI3xxuv22bvxxxxxxxxxxvalue22("");
      yrxxch511xhhxxhxxxxxoptions.setI4xxuo23bvxxxxxxxxxxoptions23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI5xxup23bvxxxxxxxxxxpurpose23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI6xxuv23bvxxxxxxxxxxvalue23("");
      yrxxch511xhhxxhxxxxxoptions.setI7xxuo24bvxxxxxxxxxxoptions24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI8xxup24bvxxxxxxxxxxpurpose24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI9xxuv24bvxxxxxxxxxxvalue24("");
      yrxxch511xhhxxhxxxxxoptions.setJ1xxuo25bvxxxxxxxxxxoptions25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ2xxup25bvxxxxxxxxxxpurpose25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ3xxuv25bvxxxxxxxxxxvalue25("");
      yrxxch511xhhxxhxxxxxoptions.setJ4xxuo26bvxxxxxxxxxxoptions26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ5xxup26bvxxxxxxxxxxpurpose26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ6xxuv26bvxxxxxxxxxxvalue26("");
      yrxxch511xhhxxhxxxxxoptions.setJ7xxuo27bvxxxxxxxxxxoptions27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ8xxup27bvxxxxxxxxxxpurpose27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ9xxuv27bvxxxxxxxxxxvalue27("");
      yrxxch511xhhxxhxxxxxoptions.setK1xxuo28bvxxxxxxxxxxoptions28("PF");
      yrxxch511xhhxxhxxxxxoptions.setK2xxup28bvxxxxxxxxxxpurpose28("Persons-Family");
      yrxxch511xhhxxhxxxxxoptions.setK3xxuv28bvxxxxxxxxxxvalue28("");
      yrxxch511xhhxxhxxxxxoptions.setK4xxuo29bvxxxxxxxxxxoptions29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK5xxup29bvxxxxxxxxxxpurpose29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK6xxuv29bvxxxxxxxxxxvalue29("");
      yrxxch511xhhxxhxxxxxoptions.setK7xxuo30bvxxxxxxxxxxoptions30("EM");
      yrxxch511xhhxxhxxxxxoptions.setK8xxup30bvxxxxxxxxxxpurpose30("EMail");
      yrxxch511xhhxxhxxxxxoptions.setK9xxuv30bvxxxxxxxxxxvalue30("");
      yrxxch511xhhxxhxxxxxoptions.setL1xxuo31bvxxxxxxxxxxoptions31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL2xxup31bvxxxxxxxxxxpurpose31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL3xxuv31bvxxxxxxxxxxvalue31("");
      yrxxch511xhhxxhxxxxxoptions.setL4xxuo32bvxxxxxxxxxxoptions32("Room 107");
      yrxxch511xhhxxhxxxxxoptions.setL5xxup32bvxxxxxxxxxxpurpose32("Room 107");
      yrxxch511xhhxxhxxxxxoptions.setL6xxuv32bvxxxxxxxxxxvalue32("");
      yrxxch511xhhxxhxxxxxoptions.setL7xxuo33bvxxxxxxxxxxoptions33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL8xxup33bvxxxxxxxxxxpurpose33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL9xxuv33bvxxxxxxxxxxvalue33("");
      yrxxch511xhhxxhxxxxxoptions.setM1xxuo34bvxxxxxxxxxxoptions34("");
      yrxxch511xhhxxhxxxxxoptions.setM2xxup34bvxxxxxxxxxxpurpose34("");
      yrxxch511xhhxxhxxxxxoptions.setM3xxuv34bvxxxxxxxxxxvalue34("");
      yrxxch511xhhxxhxxxxxoptions.setM4xxuo35bvxxxxxxxxxxoptions35("Lunch Appontment");
      yrxxch511xhhxxhxxxxxoptions.setM5xxup35bvxxxxxxxxxxpurpose35("c$88.90");
      yrxxch511xhhxxhxxxxxoptions.setM6xxuv35bvxxxxxxxxxxvalue35("");
      yrxxch511xhhxxhxxxxxoptions.setM7xxuo36bvxxxxxxxxxxoptions36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM8xxup36bvxxxxxxxxxxpurpose36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM9xxuv36bvxxxxxxxxxxvalue36("");
      yrxxch511xhhxxhxxxxxoptions.setN1xxuo37bvxxxxxxxxxxoptions37("High");
      yrxxch511xhhxxhxxxxxoptions.setN2xxup37bvxxxxxxxxxxpurpose37("High");
      yrxxch511xhhxxhxxxxxoptions.setN3xxuv37bvxxxxxxxxxxvalue37("");
      yrxxch511xhhxxhxxxxxoptions.setN4xxuo38bvxxxxxxxxxxoptions38("S");
      yrxxch511xhhxxhxxxxxoptions.setN5xxup38bvxxxxxxxxxxpurpose38("System Admin");
      yrxxch511xhhxxhxxxxxoptions.setN6xxuv38bvxxxxxxxxxxvalue38("");
      yrxxch511xhhxxhxxxxxoptions.setN7xxuo39bvxxxxxxxxxxoptions39("H");
      yrxxch511xhhxxhxxxxxoptions.setN8xxup39bvxxxxxxxxxxpurpose39("High");
      yrxxch511xhhxxhxxxxxoptions.setN9xxuv39bvxxxxxxxxxxvalue39("");
      yrxxch511xhhxxhxxxxxoptions.setO1xxuo40bvxxxxxxxxxxoptions40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO2xxup40bvxxxxxxxxxxpurpose40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO3xxuv40bvxxxxxxxxxxvalue40("");
      yrxxch511xhhxxhxxxxxoptions.setO4xxuo41bvxxxxxxxxxxoptions41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO5xxup41bvxxxxxxxxxxpurpose41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO6xxuv41bvxxxxxxxxxxvalue41("");
      yrxxch511xhhxxhxxxxxoptions.setO7xxuo42bvxxxxxxxxxxoptions42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO8xxup42bvxxxxxxxxxxpurpose42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO9xxuv42bvxxxxxxxxxxvalue42("");
      yrxxch511xhhxxhxxxxxoptions.setP1xxuo43bvxxxxxxxxxxoptions43("New");
      yrxxch511xhhxxhxxxxxoptions.setP2xxup43bvxxxxxxxxxxpurpose43("New");
      yrxxch511xhhxxhxxxxxoptions.setP3xxuv43bvxxxxxxxxxxvalue43("");
      yrxxch511xhhxxhxxxxxoptions.setP4xxuo44bvxxxxxxxxxxoptions44("");
      yrxxch511xhhxxhxxxxxoptions.setP5xxup44bvxxxxxxxxxxpurpose44("");
      yrxxch511xhhxxhxxxxxoptions.setP6xxuv44bvxxxxxxxxxxvalue44("");
      yrxxch511xhhxxhxxxxxoptions.setP7xxuo45bvxxxxxxxxxxoptions45("D");
      yrxxch511xhhxxhxxxxxoptions.setP8xxup45bvxxxxxxxxxxpurpose45("");
      yrxxch511xhhxxhxxxxxoptions.setP9xxuv45bvxxxxxxxxxxvalue45("");
      yrxxch511xhhxxhxxxxxoptions.setQ1xxuo46bvxxxxxxxxxxoptions46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ2xxup46bvxxxxxxxxxxpurpose46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ3xxuv46bvxxxxxxxxxxvalue46("");
      yrxxch511xhhxxhxxxxxoptions.setQ4xxuo47bvxxxxxxxxxxoptions47("04");
      yrxxch511xhhxxhxxxxxoptions.setQ5xxup47bvxxxxxxxxxxpurpose47("04");
      yrxxch511xhhxxhxxxxxoptions.setQ6xxuv47bvxxxxxxxxxxvalue47("");
      yrxxch511xhhxxhxxxxxoptions.setQ7xxuo48bvxxxxxxxxxxoptions48("");
      yrxxch511xhhxxhxxxxxoptions.setQ8xxup48bvxxxxxxxxxxpurpose48("");
      yrxxch511xhhxxhxxxxxoptions.setQ9xxuv48bvxxxxxxxxxxvalue48("");
      yrxxch511xhhxxhxxxxxoptions.setR1xxuo49bvxxxxxxxxxxoptions49("3E-CAI-1-C");
      yrxxch511xhhxxhxxxxxoptions.setR2xxup49bvxxxxxxxxxxpurpose49("Photos page slides seq 0,1,2..");
      yrxxch511xhhxxhxxxxxoptions.setR3xxuv49bvxxxxxxxxxxvalue49("");
      yrxxch511xhhxxhxxxxxoptions.setR4xxuo50bvxxxxxxxxxxoptions50("");
      yrxxch511xhhxxhxxxxxoptions.setR5xxup50bvxxxxxxxxxxpurpose50("");
      yrxxch511xhhxxhxxxxxoptions.setR6xxuv50bvxxxxxxxxxxvalue50("");
      yrxxch511xhhxxhxxxxxoptions.setR7xxuo51bvxxxxxxxxxxoptions51("");
      yrxxch511xhhxxhxxxxxoptions.setR8xxup51bvxxxxxxxxxxpurpose51("");
      yrxxch511xhhxxhxxxxxoptions.setR9xxuv51bvxxxxxxxxxxvalue51("");
      yrxxch511xhhxxhxxxxxoptions.setS1xxuo52bvxxxxxxxxxxoptions52("");
      yrxxch511xhhxxhxxxxxoptions.setS2xxup52bvxxxxxxxxxxpurpose52("");
      yrxxch511xhhxxhxxxxxoptions.setS3xxuv52bvxxxxxxxxxxvalue52("");
      yrxxch511xhhxxhxxxxxoptions.setS4xxuo53bvxxxxxxxxxxoptions53("");
      yrxxch511xhhxxhxxxxxoptions.setS5xxup53bvxxxxxxxxxxpurpose53("");
      yrxxch511xhhxxhxxxxxoptions.setS6xxuv53bvxxxxxxxxxxvalue53("");
      yrxxch511xhhxxhxxxxxoptions.setS7xxuo54bvxxxxxxxxxxoptions54("");
      yrxxch511xhhxxhxxxxxoptions.setS8xxup54bvxxxxxxxxxxpurpose54("");
      yrxxch511xhhxxhxxxxxoptions.setS9xxuv54bvxxxxxxxxxxvalue54("");
      yrxxch511xhhxxhxxxxxoptions.setT1xxuo55bvxxxxxxxxxxoptions55("");
      yrxxch511xhhxxhxxxxxoptions.setT2xxup55bvxxxxxxxxxxpurpose55("");
      yrxxch511xhhxxhxxxxxoptions.setT3xxuv55bvxxxxxxxxxxvalue55("");
      yrxxch511xhhxxhxxxxxoptions.setT4xxuo56bvxxxxxxxxxxoptions56("");
      yrxxch511xhhxxhxxxxxoptions.setT5xxup56bvxxxxxxxxxxpurpose56("");
      yrxxch511xhhxxhxxxxxoptions.setT6xxuv56bvxxxxxxxxxxvalue56("");
      yrxxch511xhhxxhxxxxxoptions.setT7xxuo57bvxxxxxxxxxxoptions57("");
      yrxxch511xhhxxhxxxxxoptions.setT8xxup57bvxxxxxxxxxxpurpose57("");
      yrxxch511xhhxxhxxxxxoptions.setT9xxuv57bvxxxxxxxxxxvalue57("");
      yrxxch511xhhxxhxxxxxoptions.setU1xxuo58bvxxxxxxxxxxoptions58("");
      yrxxch511xhhxxhxxxxxoptions.setU2xxup58bvxxxxxxxxxxpurpose58("");
      yrxxch511xhhxxhxxxxxoptions.setU3xxuv58bvxxxxxxxxxxvalue58("");
      yrxxch511xhhxxhxxxxxoptions.setU4xxuo59bvxxxxxxxxxxoptions59("");
      yrxxch511xhhxxhxxxxxoptions.setU5xxup59bvxxxxxxxxxxpurpose59("");
      yrxxch511xhhxxhxxxxxoptions.setU6xxuv59bvxxxxxxxxxxvalue59("");
      yrxxch511xhhxxhxxxxxoptions.setU7xxuo60bvxxxxxxxxxxoptions60("");
      yrxxch511xhhxxhxxxxxoptions.setU8xxup60bvxxxxxxxxxxpurpose60("");
      yrxxch511xhhxxhxxxxxoptions.setU9xxuv60bvxxxxxxxxxxvalue60("");
      yrxxch511xhhxxhxxxxxoptions.setV1xxuo61bvxxxxxxxxxxoptions61("");
      yrxxch511xhhxxhxxxxxoptions.setV2xxup61bvxxxxxxxxxxpurpose61("");
      yrxxch511xhhxxhxxxxxoptions.setV3xxuv61bvxxxxxxxxxxvalue61("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptionsHome.persist(client);


      yrxxch511xhhxxhxxxxxoptionsHome.clearInstance();
      yrxxch511xhhxxhxxxxxoptions=yrxxch511xhhxxhxxxxxoptionsHome.getInstance();
      yrxxch511xhhxxhxxxxxoptions.setA0xxukcxbvxxxxxxxxxxrow("18");
      yrxxch511xhhxxhxxxxxoptions.setB1xxuo01bvxxxxxxxxxxoptions01("R");
      yrxxch511xhhxxhxxxxxoptions.setB2xxup01bvxxxxxxxxxxpurpose01("Retained Earning");
      yrxxch511xhhxxhxxxxxoptions.setB3xxuv01bvxxxxxxxxxxvalue01("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptions.setB4xxuo02bvxxxxxxxxxxoptions02("S");
      yrxxch511xhhxxhxxxxxoptions.setB5xxup02bvxxxxxxxxxxpurpose02("Subheader");
      yrxxch511xhhxxhxxxxxoptions.setB6xxuv02bvxxxxxxxxxxvalue02("");
      yrxxch511xhhxxhxxxxxoptions.setB7xxuo03bvxxxxxxxxxxoptions03("P");
      yrxxch511xhhxxhxxxxxoptions.setB8xxup03bvxxxxxxxxxxpurpose03("Payable");
      yrxxch511xhhxxhxxxxxoptions.setB9xxuv03bvxxxxxxxxxxvalue03("");
      yrxxch511xhhxxhxxxxxoptions.setC1xxuo04bvxxxxxxxxxxoptions04("");
      yrxxch511xhhxxhxxxxxoptions.setC2xxup04bvxxxxxxxxxxpurpose04("");
      yrxxch511xhhxxhxxxxxoptions.setC3xxuv04bvxxxxxxxxxxvalue04("");
      yrxxch511xhhxxhxxxxxoptions.setC4xxuo05bvxxxxxxxxxxoptions05("");
      yrxxch511xhhxxhxxxxxoptions.setC5xxup05bvxxxxxxxxxxpurpose05("");
      yrxxch511xhhxxhxxxxxoptions.setC6xxuv05bvxxxxxxxxxxvalue05("");
      yrxxch511xhhxxhxxxxxoptions.setC7xxuo06bvxxxxxxxxxxoptions06("");
      yrxxch511xhhxxhxxxxxoptions.setC8xxup06bvxxxxxxxxxxpurpose06("");
      yrxxch511xhhxxhxxxxxoptions.setC9xxuv06bvxxxxxxxxxxvalue06("");
      yrxxch511xhhxxhxxxxxoptions.setD1xxuo07bvxxxxxxxxxxoptions07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD2xxup07bvxxxxxxxxxxpurpose07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD3xxuv07bvxxxxxxxxxxvalue07("");
      yrxxch511xhhxxhxxxxxoptions.setD4xxuo08bvxxxxxxxxxxoptions08("H");
      yrxxch511xhhxxhxxxxxoptions.setD5xxup08bvxxxxxxxxxxpurpose08("High");
      yrxxch511xhhxxhxxxxxoptions.setD6xxuv08bvxxxxxxxxxxvalue08("");
      yrxxch511xhhxxhxxxxxoptions.setD7xxuo09bvxxxxxxxxxxoptions09("30");
      yrxxch511xhhxxhxxxxxoptions.setD8xxup09bvxxxxxxxxxxpurpose09("-30 days");
      yrxxch511xhhxxhxxxxxoptions.setD9xxuv09bvxxxxxxxxxxvalue09("");
      yrxxch511xhhxxhxxxxxoptions.setE1xxuo10bvxxxxxxxxxxoptions10("cash");
      yrxxch511xhhxxhxxxxxoptions.setE2xxup10bvxxxxxxxxxxpurpose10("-cash");
      yrxxch511xhhxxhxxxxxoptions.setE3xxuv10bvxxxxxxxxxxvalue10("");
      yrxxch511xhhxxhxxxxxoptions.setE4xxuo11bvxxxxxxxxxxoptions11("Montreal");
      yrxxch511xhhxxhxxxxxoptions.setE5xxup11bvxxxxxxxxxxpurpose11("Toronto");
      yrxxch511xhhxxhxxxxxoptions.setE6xxuv11bvxxxxxxxxxxvalue11("ca=Montreal; us=Boston");
      yrxxch511xhhxxhxxxxxoptions.setE7xxuo12bvxxxxxxxxxxoptions12("QE");
      yrxxch511xhhxxhxxxxxoptions.setE8xxup12bvxxxxxxxxxxpurpose12("Quebec");
      yrxxch511xhhxxhxxxxxoptions.setE9xxuv12bvxxxxxxxxxxvalue12("ca=QE us=CA");
      yrxxch511xhhxxhxxxxxoptions.setF1xxuo13bvxxxxxxxxxxoptions13("");
      yrxxch511xhhxxhxxxxxoptions.setF2xxup13bvxxxxxxxxxxpurpose13("");
      yrxxch511xhhxxhxxxxxoptions.setF3xxuv13bvxxxxxxxxxxvalue13("");
      yrxxch511xhhxxhxxxxxoptions.setF4xxuo14bvxxxxxxxxxxoptions14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF5xxup14bvxxxxxxxxxxpurpose14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF6xxuv14bvxxxxxxxxxxvalue14("ca=M4L3Z8 us=10003 in=70003");
      yrxxch511xhhxxhxxxxxoptions.setF7xxuo15bvxxxxxxxxxxoptions15("Y");
      yrxxch511xhhxxhxxxxxoptions.setF8xxup15bvxxxxxxxxxxpurpose15("Yes");
      yrxxch511xhhxxhxxxxxoptions.setF9xxuv15bvxxxxxxxxxxvalue15("");
      yrxxch511xhhxxhxxxxxoptions.setG1xxuo16bvxxxxxxxxxxoptions16("FI-D");
      yrxxch511xhhxxhxxxxxoptions.setG2xxup16bvxxxxxxxxxxpurpose16("Review(Fees based)-Item");
      yrxxch511xhhxxhxxxxxoptions.setG3xxuv16bvxxxxxxxxxxvalue16("");
      yrxxch511xhhxxhxxxxxoptions.setG4xxuo17bvxxxxxxxxxxoptions17("?");
      yrxxch511xhhxxhxxxxxoptions.setG5xxup17bvxxxxxxxxxxpurpose17("?");
      yrxxch511xhhxxhxxxxxoptions.setG6xxuv17bvxxxxxxxxxxvalue17("");
      yrxxch511xhhxxhxxxxxoptions.setG7xxuo18bvxxxxxxxxxxoptions18("AH");
      yrxxch511xhhxxhxxxxxoptions.setG8xxup18bvxxxxxxxxxxpurpose18("Hourly");
      yrxxch511xhhxxhxxxxxoptions.setG9xxuv18bvxxxxxxxxxxvalue18("s=89");
      yrxxch511xhhxxhxxxxxoptions.setH1xxuo19bvxxxxxxxxxxoptions19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH2xxup19bvxxxxxxxxxxpurpose19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH3xxuv19bvxxxxxxxxxxvalue19("");
      yrxxch511xhhxxhxxxxxoptions.setH4xxuo20bvxxxxxxxxxxoptions20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH5xxup20bvxxxxxxxxxxpurpose20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH6xxuv20bvxxxxxxxxxxvalue20("");
      yrxxch511xhhxxhxxxxxoptions.setH7xxuo21bvxxxxxxxxxxoptions21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH8xxup21bvxxxxxxxxxxpurpose21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH9xxuv21bvxxxxxxxxxxvalue21("");
      yrxxch511xhhxxhxxxxxoptions.setI1xxuo22bvxxxxxxxxxxoptions22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI2xxup22bvxxxxxxxxxxpurpose22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI3xxuv22bvxxxxxxxxxxvalue22("");
      yrxxch511xhhxxhxxxxxoptions.setI4xxuo23bvxxxxxxxxxxoptions23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI5xxup23bvxxxxxxxxxxpurpose23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI6xxuv23bvxxxxxxxxxxvalue23("");
      yrxxch511xhhxxhxxxxxoptions.setI7xxuo24bvxxxxxxxxxxoptions24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI8xxup24bvxxxxxxxxxxpurpose24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI9xxuv24bvxxxxxxxxxxvalue24("");
      yrxxch511xhhxxhxxxxxoptions.setJ1xxuo25bvxxxxxxxxxxoptions25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ2xxup25bvxxxxxxxxxxpurpose25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ3xxuv25bvxxxxxxxxxxvalue25("");
      yrxxch511xhhxxhxxxxxoptions.setJ4xxuo26bvxxxxxxxxxxoptions26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ5xxup26bvxxxxxxxxxxpurpose26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ6xxuv26bvxxxxxxxxxxvalue26("");
      yrxxch511xhhxxhxxxxxoptions.setJ7xxuo27bvxxxxxxxxxxoptions27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ8xxup27bvxxxxxxxxxxpurpose27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ9xxuv27bvxxxxxxxxxxvalue27("");
      yrxxch511xhhxxhxxxxxoptions.setK1xxuo28bvxxxxxxxxxxoptions28("PF");
      yrxxch511xhhxxhxxxxxoptions.setK2xxup28bvxxxxxxxxxxpurpose28("Persons-Family");
      yrxxch511xhhxxhxxxxxoptions.setK3xxuv28bvxxxxxxxxxxvalue28("");
      yrxxch511xhhxxhxxxxxoptions.setK4xxuo29bvxxxxxxxxxxoptions29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK5xxup29bvxxxxxxxxxxpurpose29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK6xxuv29bvxxxxxxxxxxvalue29("");
      yrxxch511xhhxxhxxxxxoptions.setK7xxuo30bvxxxxxxxxxxoptions30("EM");
      yrxxch511xhhxxhxxxxxoptions.setK8xxup30bvxxxxxxxxxxpurpose30("EMail");
      yrxxch511xhhxxhxxxxxoptions.setK9xxuv30bvxxxxxxxxxxvalue30("");
      yrxxch511xhhxxhxxxxxoptions.setL1xxuo31bvxxxxxxxxxxoptions31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL2xxup31bvxxxxxxxxxxpurpose31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL3xxuv31bvxxxxxxxxxxvalue31("");
      yrxxch511xhhxxhxxxxxoptions.setL4xxuo32bvxxxxxxxxxxoptions32("Room 107");
      yrxxch511xhhxxhxxxxxoptions.setL5xxup32bvxxxxxxxxxxpurpose32("Room 107");
      yrxxch511xhhxxhxxxxxoptions.setL6xxuv32bvxxxxxxxxxxvalue32("");
      yrxxch511xhhxxhxxxxxoptions.setL7xxuo33bvxxxxxxxxxxoptions33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL8xxup33bvxxxxxxxxxxpurpose33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL9xxuv33bvxxxxxxxxxxvalue33("");
      yrxxch511xhhxxhxxxxxoptions.setM1xxuo34bvxxxxxxxxxxoptions34("");
      yrxxch511xhhxxhxxxxxoptions.setM2xxup34bvxxxxxxxxxxpurpose34("");
      yrxxch511xhhxxhxxxxxoptions.setM3xxuv34bvxxxxxxxxxxvalue34("");
      yrxxch511xhhxxhxxxxxoptions.setM4xxuo35bvxxxxxxxxxxoptions35("Lunch Appontment");
      yrxxch511xhhxxhxxxxxoptions.setM5xxup35bvxxxxxxxxxxpurpose35("c$88.90");
      yrxxch511xhhxxhxxxxxoptions.setM6xxuv35bvxxxxxxxxxxvalue35("");
      yrxxch511xhhxxhxxxxxoptions.setM7xxuo36bvxxxxxxxxxxoptions36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM8xxup36bvxxxxxxxxxxpurpose36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM9xxuv36bvxxxxxxxxxxvalue36("");
      yrxxch511xhhxxhxxxxxoptions.setN1xxuo37bvxxxxxxxxxxoptions37("1d");
      yrxxch511xhhxxhxxxxxoptions.setN2xxup37bvxxxxxxxxxxpurpose37("1 day Email Reminder ");
      yrxxch511xhhxxhxxxxxoptions.setN3xxuv37bvxxxxxxxxxxvalue37("");
      yrxxch511xhhxxhxxxxxoptions.setN4xxuo38bvxxxxxxxxxxoptions38("S");
      yrxxch511xhhxxhxxxxxoptions.setN5xxup38bvxxxxxxxxxxpurpose38("System Admin");
      yrxxch511xhhxxhxxxxxoptions.setN6xxuv38bvxxxxxxxxxxvalue38("");
      yrxxch511xhhxxhxxxxxoptions.setN7xxuo39bvxxxxxxxxxxoptions39("H");
      yrxxch511xhhxxhxxxxxoptions.setN8xxup39bvxxxxxxxxxxpurpose39("High");
      yrxxch511xhhxxhxxxxxoptions.setN9xxuv39bvxxxxxxxxxxvalue39("");
      yrxxch511xhhxxhxxxxxoptions.setO1xxuo40bvxxxxxxxxxxoptions40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO2xxup40bvxxxxxxxxxxpurpose40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO3xxuv40bvxxxxxxxxxxvalue40("");
      yrxxch511xhhxxhxxxxxoptions.setO4xxuo41bvxxxxxxxxxxoptions41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO5xxup41bvxxxxxxxxxxpurpose41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO6xxuv41bvxxxxxxxxxxvalue41("");
      yrxxch511xhhxxhxxxxxoptions.setO7xxuo42bvxxxxxxxxxxoptions42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO8xxup42bvxxxxxxxxxxpurpose42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO9xxuv42bvxxxxxxxxxxvalue42("");
      yrxxch511xhhxxhxxxxxoptions.setP1xxuo43bvxxxxxxxxxxoptions43("New");
      yrxxch511xhhxxhxxxxxoptions.setP2xxup43bvxxxxxxxxxxpurpose43("New");
      yrxxch511xhhxxhxxxxxoptions.setP3xxuv43bvxxxxxxxxxxvalue43("");
      yrxxch511xhhxxhxxxxxoptions.setP4xxuo44bvxxxxxxxxxxoptions44("");
      yrxxch511xhhxxhxxxxxoptions.setP5xxup44bvxxxxxxxxxxpurpose44("");
      yrxxch511xhhxxhxxxxxoptions.setP6xxuv44bvxxxxxxxxxxvalue44("");
      yrxxch511xhhxxhxxxxxoptions.setP7xxuo45bvxxxxxxxxxxoptions45("D");
      yrxxch511xhhxxhxxxxxoptions.setP8xxup45bvxxxxxxxxxxpurpose45("");
      yrxxch511xhhxxhxxxxxoptions.setP9xxuv45bvxxxxxxxxxxvalue45("");
      yrxxch511xhhxxhxxxxxoptions.setQ1xxuo46bvxxxxxxxxxxoptions46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ2xxup46bvxxxxxxxxxxpurpose46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ3xxuv46bvxxxxxxxxxxvalue46("");
      yrxxch511xhhxxhxxxxxoptions.setQ4xxuo47bvxxxxxxxxxxoptions47("04");
      yrxxch511xhhxxhxxxxxoptions.setQ5xxup47bvxxxxxxxxxxpurpose47("04");
      yrxxch511xhhxxhxxxxxoptions.setQ6xxuv47bvxxxxxxxxxxvalue47("");
      yrxxch511xhhxxhxxxxxoptions.setQ7xxuo48bvxxxxxxxxxxoptions48("");
      yrxxch511xhhxxhxxxxxoptions.setQ8xxup48bvxxxxxxxxxxpurpose48("");
      yrxxch511xhhxxhxxxxxoptions.setQ9xxuv48bvxxxxxxxxxxvalue48("");
      yrxxch511xhhxxhxxxxxoptions.setR1xxuo49bvxxxxxxxxxxoptions49("3E-CAB-1-C");
      yrxxch511xhhxxhxxxxxoptions.setR2xxup49bvxxxxxxxxxxpurpose49("Blogs page slides seq 0,1.2..");
      yrxxch511xhhxxhxxxxxoptions.setR3xxuv49bvxxxxxxxxxxvalue49("");
      yrxxch511xhhxxhxxxxxoptions.setR4xxuo50bvxxxxxxxxxxoptions50("");
      yrxxch511xhhxxhxxxxxoptions.setR5xxup50bvxxxxxxxxxxpurpose50("");
      yrxxch511xhhxxhxxxxxoptions.setR6xxuv50bvxxxxxxxxxxvalue50("");
      yrxxch511xhhxxhxxxxxoptions.setR7xxuo51bvxxxxxxxxxxoptions51("");
      yrxxch511xhhxxhxxxxxoptions.setR8xxup51bvxxxxxxxxxxpurpose51("");
      yrxxch511xhhxxhxxxxxoptions.setR9xxuv51bvxxxxxxxxxxvalue51("");
      yrxxch511xhhxxhxxxxxoptions.setS1xxuo52bvxxxxxxxxxxoptions52("");
      yrxxch511xhhxxhxxxxxoptions.setS2xxup52bvxxxxxxxxxxpurpose52("");
      yrxxch511xhhxxhxxxxxoptions.setS3xxuv52bvxxxxxxxxxxvalue52("");
      yrxxch511xhhxxhxxxxxoptions.setS4xxuo53bvxxxxxxxxxxoptions53("");
      yrxxch511xhhxxhxxxxxoptions.setS5xxup53bvxxxxxxxxxxpurpose53("");

      yrxxch511xhhxxhxxxxxoptions.setS7xxuo54bvxxxxxxxxxxoptions54("");
      yrxxch511xhhxxhxxxxxoptions.setS8xxup54bvxxxxxxxxxxpurpose54("");
      yrxxch511xhhxxhxxxxxoptions.setS9xxuv54bvxxxxxxxxxxvalue54("");
      yrxxch511xhhxxhxxxxxoptions.setT1xxuo55bvxxxxxxxxxxoptions55("");
      yrxxch511xhhxxhxxxxxoptions.setT2xxup55bvxxxxxxxxxxpurpose55("");
      yrxxch511xhhxxhxxxxxoptions.setT3xxuv55bvxxxxxxxxxxvalue55("");
      yrxxch511xhhxxhxxxxxoptions.setT4xxuo56bvxxxxxxxxxxoptions56("");
      yrxxch511xhhxxhxxxxxoptions.setT5xxup56bvxxxxxxxxxxpurpose56("");
      yrxxch511xhhxxhxxxxxoptions.setT6xxuv56bvxxxxxxxxxxvalue56("");
      yrxxch511xhhxxhxxxxxoptions.setT7xxuo57bvxxxxxxxxxxoptions57("");
      yrxxch511xhhxxhxxxxxoptions.setT8xxup57bvxxxxxxxxxxpurpose57("");
      yrxxch511xhhxxhxxxxxoptions.setT9xxuv57bvxxxxxxxxxxvalue57("");
      yrxxch511xhhxxhxxxxxoptions.setU1xxuo58bvxxxxxxxxxxoptions58("");
      yrxxch511xhhxxhxxxxxoptions.setU2xxup58bvxxxxxxxxxxpurpose58("");
      yrxxch511xhhxxhxxxxxoptions.setU3xxuv58bvxxxxxxxxxxvalue58("");
      yrxxch511xhhxxhxxxxxoptions.setU4xxuo59bvxxxxxxxxxxoptions59("");
      yrxxch511xhhxxhxxxxxoptions.setU5xxup59bvxxxxxxxxxxpurpose59("");
      yrxxch511xhhxxhxxxxxoptions.setU6xxuv59bvxxxxxxxxxxvalue59("");
      yrxxch511xhhxxhxxxxxoptions.setU7xxuo60bvxxxxxxxxxxoptions60("");
      yrxxch511xhhxxhxxxxxoptions.setU8xxup60bvxxxxxxxxxxpurpose60("");
      yrxxch511xhhxxhxxxxxoptions.setU9xxuv60bvxxxxxxxxxxvalue60("");
      yrxxch511xhhxxhxxxxxoptions.setV1xxuo61bvxxxxxxxxxxoptions61("");
      yrxxch511xhhxxhxxxxxoptions.setV2xxup61bvxxxxxxxxxxpurpose61("");
      yrxxch511xhhxxhxxxxxoptions.setV3xxuv61bvxxxxxxxxxxvalue61("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptionsHome.persist(client);


      yrxxch511xhhxxhxxxxxoptionsHome.clearInstance();
      yrxxch511xhhxxhxxxxxoptions=yrxxch511xhhxxhxxxxxoptionsHome.getInstance();
      yrxxch511xhhxxhxxxxxoptions.setA0xxukcxbvxxxxxxxxxxrow("19");
      yrxxch511xhhxxhxxxxxoptions.setB1xxuo01bvxxxxxxxxxxoptions01("R");
      yrxxch511xhhxxhxxxxxoptions.setB2xxup01bvxxxxxxxxxxpurpose01("Retained Earning");
      yrxxch511xhhxxhxxxxxoptions.setB3xxuv01bvxxxxxxxxxxvalue01("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptions.setB4xxuo02bvxxxxxxxxxxoptions02("S");
      yrxxch511xhhxxhxxxxxoptions.setB5xxup02bvxxxxxxxxxxpurpose02("Subheader");
      yrxxch511xhhxxhxxxxxoptions.setB6xxuv02bvxxxxxxxxxxvalue02("");
      yrxxch511xhhxxhxxxxxoptions.setB7xxuo03bvxxxxxxxxxxoptions03("P");
      yrxxch511xhhxxhxxxxxoptions.setB8xxup03bvxxxxxxxxxxpurpose03("Payable");
      yrxxch511xhhxxhxxxxxoptions.setB9xxuv03bvxxxxxxxxxxvalue03("");
      yrxxch511xhhxxhxxxxxoptions.setC1xxuo04bvxxxxxxxxxxoptions04("");
      yrxxch511xhhxxhxxxxxoptions.setC2xxup04bvxxxxxxxxxxpurpose04("");
      yrxxch511xhhxxhxxxxxoptions.setC3xxuv04bvxxxxxxxxxxvalue04("");
      yrxxch511xhhxxhxxxxxoptions.setC4xxuo05bvxxxxxxxxxxoptions05("");
      yrxxch511xhhxxhxxxxxoptions.setC5xxup05bvxxxxxxxxxxpurpose05("");
      yrxxch511xhhxxhxxxxxoptions.setC6xxuv05bvxxxxxxxxxxvalue05("");
      yrxxch511xhhxxhxxxxxoptions.setC7xxuo06bvxxxxxxxxxxoptions06("");
      yrxxch511xhhxxhxxxxxoptions.setC8xxup06bvxxxxxxxxxxpurpose06("");
      yrxxch511xhhxxhxxxxxoptions.setC9xxuv06bvxxxxxxxxxxvalue06("");
      yrxxch511xhhxxhxxxxxoptions.setD1xxuo07bvxxxxxxxxxxoptions07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD2xxup07bvxxxxxxxxxxpurpose07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD3xxuv07bvxxxxxxxxxxvalue07("");
      yrxxch511xhhxxhxxxxxoptions.setD4xxuo08bvxxxxxxxxxxoptions08("H");
      yrxxch511xhhxxhxxxxxoptions.setD5xxup08bvxxxxxxxxxxpurpose08("High");
      yrxxch511xhhxxhxxxxxoptions.setD6xxuv08bvxxxxxxxxxxvalue08("");
      yrxxch511xhhxxhxxxxxoptions.setD7xxuo09bvxxxxxxxxxxoptions09("30");
      yrxxch511xhhxxhxxxxxoptions.setD8xxup09bvxxxxxxxxxxpurpose09("-30 days");
      yrxxch511xhhxxhxxxxxoptions.setD9xxuv09bvxxxxxxxxxxvalue09("");
      yrxxch511xhhxxhxxxxxoptions.setE1xxuo10bvxxxxxxxxxxoptions10("cash");
      yrxxch511xhhxxhxxxxxoptions.setE2xxup10bvxxxxxxxxxxpurpose10("-cash");
      yrxxch511xhhxxhxxxxxoptions.setE3xxuv10bvxxxxxxxxxxvalue10("");
      yrxxch511xhhxxhxxxxxoptions.setE4xxuo11bvxxxxxxxxxxoptions11("Montreal");
      yrxxch511xhhxxhxxxxxoptions.setE5xxup11bvxxxxxxxxxxpurpose11("Toronto");
      yrxxch511xhhxxhxxxxxoptions.setE6xxuv11bvxxxxxxxxxxvalue11("ca=Montreal; us=Boston");
      yrxxch511xhhxxhxxxxxoptions.setE7xxuo12bvxxxxxxxxxxoptions12("QE");
      yrxxch511xhhxxhxxxxxoptions.setE8xxup12bvxxxxxxxxxxpurpose12("Quebec");
      yrxxch511xhhxxhxxxxxoptions.setE9xxuv12bvxxxxxxxxxxvalue12("ca=QE us=CA");
      yrxxch511xhhxxhxxxxxoptions.setF1xxuo13bvxxxxxxxxxxoptions13("");
      yrxxch511xhhxxhxxxxxoptions.setF2xxup13bvxxxxxxxxxxpurpose13("");
      yrxxch511xhhxxhxxxxxoptions.setF3xxuv13bvxxxxxxxxxxvalue13("");
      yrxxch511xhhxxhxxxxxoptions.setF4xxuo14bvxxxxxxxxxxoptions14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF5xxup14bvxxxxxxxxxxpurpose14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF6xxuv14bvxxxxxxxxxxvalue14("ca=M4L3Z8 us=10003 in=70003");
      yrxxch511xhhxxhxxxxxoptions.setF7xxuo15bvxxxxxxxxxxoptions15("Y");
      yrxxch511xhhxxhxxxxxoptions.setF8xxup15bvxxxxxxxxxxpurpose15("Yes");
      yrxxch511xhhxxhxxxxxoptions.setF9xxuv15bvxxxxxxxxxxvalue15("");
      yrxxch511xhhxxhxxxxxoptions.setG1xxuo16bvxxxxxxxxxxoptions16("SI-F");
      yrxxch511xhhxxhxxxxxoptions.setG2xxup16bvxxxxxxxxxxpurpose16("Fees(Review-Fee)-Item");
      yrxxch511xhhxxhxxxxxoptions.setG3xxuv16bvxxxxxxxxxxvalue16("");
      yrxxch511xhhxxhxxxxxoptions.setG4xxuo17bvxxxxxxxxxxoptions17("?");
      yrxxch511xhhxxhxxxxxoptions.setG5xxup17bvxxxxxxxxxxpurpose17("?");
      yrxxch511xhhxxhxxxxxoptions.setG6xxuv17bvxxxxxxxxxxvalue17("");
      yrxxch511xhhxxhxxxxxoptions.setG7xxuo18bvxxxxxxxxxxoptions18("AH");
      yrxxch511xhhxxhxxxxxoptions.setG8xxup18bvxxxxxxxxxxpurpose18("Hourly");
      yrxxch511xhhxxhxxxxxoptions.setG9xxuv18bvxxxxxxxxxxvalue18("s=89");
      yrxxch511xhhxxhxxxxxoptions.setH1xxuo19bvxxxxxxxxxxoptions19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH2xxup19bvxxxxxxxxxxpurpose19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH3xxuv19bvxxxxxxxxxxvalue19("");
      yrxxch511xhhxxhxxxxxoptions.setH4xxuo20bvxxxxxxxxxxoptions20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH5xxup20bvxxxxxxxxxxpurpose20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH6xxuv20bvxxxxxxxxxxvalue20("");
      yrxxch511xhhxxhxxxxxoptions.setH7xxuo21bvxxxxxxxxxxoptions21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH8xxup21bvxxxxxxxxxxpurpose21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH9xxuv21bvxxxxxxxxxxvalue21("");
      yrxxch511xhhxxhxxxxxoptions.setI1xxuo22bvxxxxxxxxxxoptions22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI2xxup22bvxxxxxxxxxxpurpose22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI3xxuv22bvxxxxxxxxxxvalue22("");
      yrxxch511xhhxxhxxxxxoptions.setI4xxuo23bvxxxxxxxxxxoptions23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI5xxup23bvxxxxxxxxxxpurpose23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI6xxuv23bvxxxxxxxxxxvalue23("");
      yrxxch511xhhxxhxxxxxoptions.setI7xxuo24bvxxxxxxxxxxoptions24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI8xxup24bvxxxxxxxxxxpurpose24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI9xxuv24bvxxxxxxxxxxvalue24("");
      yrxxch511xhhxxhxxxxxoptions.setJ1xxuo25bvxxxxxxxxxxoptions25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ2xxup25bvxxxxxxxxxxpurpose25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ3xxuv25bvxxxxxxxxxxvalue25("");
      yrxxch511xhhxxhxxxxxoptions.setJ4xxuo26bvxxxxxxxxxxoptions26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ5xxup26bvxxxxxxxxxxpurpose26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ6xxuv26bvxxxxxxxxxxvalue26("");
      yrxxch511xhhxxhxxxxxoptions.setJ7xxuo27bvxxxxxxxxxxoptions27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ8xxup27bvxxxxxxxxxxpurpose27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ9xxuv27bvxxxxxxxxxxvalue27("");
      yrxxch511xhhxxhxxxxxoptions.setK1xxuo28bvxxxxxxxxxxoptions28("PF");
      yrxxch511xhhxxhxxxxxoptions.setK2xxup28bvxxxxxxxxxxpurpose28("Persons-Family");
      yrxxch511xhhxxhxxxxxoptions.setK3xxuv28bvxxxxxxxxxxvalue28("");
      yrxxch511xhhxxhxxxxxoptions.setK4xxuo29bvxxxxxxxxxxoptions29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK5xxup29bvxxxxxxxxxxpurpose29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK6xxuv29bvxxxxxxxxxxvalue29("");
      yrxxch511xhhxxhxxxxxoptions.setK7xxuo30bvxxxxxxxxxxoptions30("EM");
      yrxxch511xhhxxhxxxxxoptions.setK8xxup30bvxxxxxxxxxxpurpose30("EMail");
      yrxxch511xhhxxhxxxxxoptions.setK9xxuv30bvxxxxxxxxxxvalue30("");
      yrxxch511xhhxxhxxxxxoptions.setL1xxuo31bvxxxxxxxxxxoptions31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL2xxup31bvxxxxxxxxxxpurpose31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL3xxuv31bvxxxxxxxxxxvalue31("");
      yrxxch511xhhxxhxxxxxoptions.setL4xxuo32bvxxxxxxxxxxoptions32("Room 107");
      yrxxch511xhhxxhxxxxxoptions.setL5xxup32bvxxxxxxxxxxpurpose32("Room 107");
      yrxxch511xhhxxhxxxxxoptions.setL6xxuv32bvxxxxxxxxxxvalue32("");
      yrxxch511xhhxxhxxxxxoptions.setL7xxuo33bvxxxxxxxxxxoptions33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL8xxup33bvxxxxxxxxxxpurpose33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL9xxuv33bvxxxxxxxxxxvalue33("");
      yrxxch511xhhxxhxxxxxoptions.setM1xxuo34bvxxxxxxxxxxoptions34("");
      yrxxch511xhhxxhxxxxxoptions.setM2xxup34bvxxxxxxxxxxpurpose34("");
      yrxxch511xhhxxhxxxxxoptions.setM3xxuv34bvxxxxxxxxxxvalue34("");
      yrxxch511xhhxxhxxxxxoptions.setM4xxuo35bvxxxxxxxxxxoptions35("Lunch Appontment");
      yrxxch511xhhxxhxxxxxoptions.setM5xxup35bvxxxxxxxxxxpurpose35("c$88.90");
      yrxxch511xhhxxhxxxxxoptions.setM6xxuv35bvxxxxxxxxxxvalue35("");
      yrxxch511xhhxxhxxxxxoptions.setM7xxuo36bvxxxxxxxxxxoptions36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM8xxup36bvxxxxxxxxxxpurpose36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM9xxuv36bvxxxxxxxxxxvalue36("");
      yrxxch511xhhxxhxxxxxoptions.setN1xxuo37bvxxxxxxxxxxoptions37("High");
      yrxxch511xhhxxhxxxxxoptions.setN2xxup37bvxxxxxxxxxxpurpose37("High");
      yrxxch511xhhxxhxxxxxoptions.setN3xxuv37bvxxxxxxxxxxvalue37("");
      yrxxch511xhhxxhxxxxxoptions.setN4xxuo38bvxxxxxxxxxxoptions38("S");
      yrxxch511xhhxxhxxxxxoptions.setN5xxup38bvxxxxxxxxxxpurpose38("System Admin");
      yrxxch511xhhxxhxxxxxoptions.setN6xxuv38bvxxxxxxxxxxvalue38("");
      yrxxch511xhhxxhxxxxxoptions.setN7xxuo39bvxxxxxxxxxxoptions39("H");
      yrxxch511xhhxxhxxxxxoptions.setN8xxup39bvxxxxxxxxxxpurpose39("High");
      yrxxch511xhhxxhxxxxxoptions.setN9xxuv39bvxxxxxxxxxxvalue39("");
      yrxxch511xhhxxhxxxxxoptions.setO1xxuo40bvxxxxxxxxxxoptions40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO2xxup40bvxxxxxxxxxxpurpose40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO3xxuv40bvxxxxxxxxxxvalue40("");
      yrxxch511xhhxxhxxxxxoptions.setO4xxuo41bvxxxxxxxxxxoptions41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO5xxup41bvxxxxxxxxxxpurpose41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO6xxuv41bvxxxxxxxxxxvalue41("");
      yrxxch511xhhxxhxxxxxoptions.setO7xxuo42bvxxxxxxxxxxoptions42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO8xxup42bvxxxxxxxxxxpurpose42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO9xxuv42bvxxxxxxxxxxvalue42("");
      yrxxch511xhhxxhxxxxxoptions.setP1xxuo43bvxxxxxxxxxxoptions43("New");
      yrxxch511xhhxxhxxxxxoptions.setP2xxup43bvxxxxxxxxxxpurpose43("New");
      yrxxch511xhhxxhxxxxxoptions.setP3xxuv43bvxxxxxxxxxxvalue43("");
      yrxxch511xhhxxhxxxxxoptions.setP4xxuo44bvxxxxxxxxxxoptions44("");
      yrxxch511xhhxxhxxxxxoptions.setP5xxup44bvxxxxxxxxxxpurpose44("");
      yrxxch511xhhxxhxxxxxoptions.setP6xxuv44bvxxxxxxxxxxvalue44("");
      yrxxch511xhhxxhxxxxxoptions.setP7xxuo45bvxxxxxxxxxxoptions45("D");
      yrxxch511xhhxxhxxxxxoptions.setP8xxup45bvxxxxxxxxxxpurpose45("");
      yrxxch511xhhxxhxxxxxoptions.setP9xxuv45bvxxxxxxxxxxvalue45("");
      yrxxch511xhhxxhxxxxxoptions.setQ1xxuo46bvxxxxxxxxxxoptions46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ2xxup46bvxxxxxxxxxxpurpose46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ3xxuv46bvxxxxxxxxxxvalue46("");
      yrxxch511xhhxxhxxxxxoptions.setQ4xxuo47bvxxxxxxxxxxoptions47("04");
      yrxxch511xhhxxhxxxxxoptions.setQ5xxup47bvxxxxxxxxxxpurpose47("04");
      yrxxch511xhhxxhxxxxxoptions.setQ6xxuv47bvxxxxxxxxxxvalue47("");
      yrxxch511xhhxxhxxxxxoptions.setQ7xxuo48bvxxxxxxxxxxoptions48("");
      yrxxch511xhhxxhxxxxxoptions.setQ8xxup48bvxxxxxxxxxxpurpose48("");
      yrxxch511xhhxxhxxxxxoptions.setQ9xxuv48bvxxxxxxxxxxvalue48("");
      yrxxch511xhhxxhxxxxxoptions.setR1xxuo49bvxxxxxxxxxxoptions49("3R-MENU-C");
      yrxxch511xhhxxhxxxxxoptions.setR2xxup49bvxxxxxxxxxxpurpose49("HDR templ1(adds toolbar, TXT replaces default memu) or HDR static(TXT replaces default menu) ");
      yrxxch511xhhxxhxxxxxoptions.setR3xxuv49bvxxxxxxxxxxvalue49("");
      yrxxch511xhhxxhxxxxxoptions.setR4xxuo50bvxxxxxxxxxxoptions50("");
      yrxxch511xhhxxhxxxxxoptions.setR5xxup50bvxxxxxxxxxxpurpose50("");
      yrxxch511xhhxxhxxxxxoptions.setR6xxuv50bvxxxxxxxxxxvalue50("");
      yrxxch511xhhxxhxxxxxoptions.setR7xxuo51bvxxxxxxxxxxoptions51("");
      yrxxch511xhhxxhxxxxxoptions.setR8xxup51bvxxxxxxxxxxpurpose51("");
      yrxxch511xhhxxhxxxxxoptions.setR9xxuv51bvxxxxxxxxxxvalue51("");
      yrxxch511xhhxxhxxxxxoptions.setS1xxuo52bvxxxxxxxxxxoptions52("");
      yrxxch511xhhxxhxxxxxoptions.setS2xxup52bvxxxxxxxxxxpurpose52("");
      yrxxch511xhhxxhxxxxxoptions.setS3xxuv52bvxxxxxxxxxxvalue52("");
      yrxxch511xhhxxhxxxxxoptions.setS4xxuo53bvxxxxxxxxxxoptions53("");
      yrxxch511xhhxxhxxxxxoptions.setS5xxup53bvxxxxxxxxxxpurpose53("");
      yrxxch511xhhxxhxxxxxoptions.setS6xxuv53bvxxxxxxxxxxvalue53("");

      yrxxch511xhhxxhxxxxxoptions.setS7xxuo54bvxxxxxxxxxxoptions54("");
      yrxxch511xhhxxhxxxxxoptions.setS8xxup54bvxxxxxxxxxxpurpose54("");
      yrxxch511xhhxxhxxxxxoptions.setS9xxuv54bvxxxxxxxxxxvalue54("");
      yrxxch511xhhxxhxxxxxoptions.setT1xxuo55bvxxxxxxxxxxoptions55("");
      yrxxch511xhhxxhxxxxxoptions.setT2xxup55bvxxxxxxxxxxpurpose55("");
      yrxxch511xhhxxhxxxxxoptions.setT3xxuv55bvxxxxxxxxxxvalue55("");
      yrxxch511xhhxxhxxxxxoptions.setT4xxuo56bvxxxxxxxxxxoptions56("");
      yrxxch511xhhxxhxxxxxoptions.setT5xxup56bvxxxxxxxxxxpurpose56("");
      yrxxch511xhhxxhxxxxxoptions.setT6xxuv56bvxxxxxxxxxxvalue56("");
      yrxxch511xhhxxhxxxxxoptions.setT7xxuo57bvxxxxxxxxxxoptions57("");
      yrxxch511xhhxxhxxxxxoptions.setT8xxup57bvxxxxxxxxxxpurpose57("");
      yrxxch511xhhxxhxxxxxoptions.setT9xxuv57bvxxxxxxxxxxvalue57("");
      yrxxch511xhhxxhxxxxxoptions.setU1xxuo58bvxxxxxxxxxxoptions58("");
      yrxxch511xhhxxhxxxxxoptions.setU2xxup58bvxxxxxxxxxxpurpose58("");
      yrxxch511xhhxxhxxxxxoptions.setU3xxuv58bvxxxxxxxxxxvalue58("");
      yrxxch511xhhxxhxxxxxoptions.setU4xxuo59bvxxxxxxxxxxoptions59("");
      yrxxch511xhhxxhxxxxxoptions.setU5xxup59bvxxxxxxxxxxpurpose59("");
      yrxxch511xhhxxhxxxxxoptions.setU6xxuv59bvxxxxxxxxxxvalue59("");
      yrxxch511xhhxxhxxxxxoptions.setU7xxuo60bvxxxxxxxxxxoptions60("");
      yrxxch511xhhxxhxxxxxoptions.setU8xxup60bvxxxxxxxxxxpurpose60("");
      yrxxch511xhhxxhxxxxxoptions.setU9xxuv60bvxxxxxxxxxxvalue60("");
      yrxxch511xhhxxhxxxxxoptions.setV1xxuo61bvxxxxxxxxxxoptions61("");
      yrxxch511xhhxxhxxxxxoptions.setV2xxup61bvxxxxxxxxxxpurpose61("");
      yrxxch511xhhxxhxxxxxoptions.setV3xxuv61bvxxxxxxxxxxvalue61("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptionsHome.persist(client);


      } catch (Exception e) {
			//log.severe("Error persisting options"+ e);
			 //FacesMessages.add(FacesMessage.SEVERITY_INFO,
				//	"options initialize failed: " + e.getMessage());
        bcontinue=false;
        return;
      }
        bcontinue=true;
        return;

     }

     //copy default options owner2=owner2 
     public void copy2OptionsDefaultsToOwner2(String client) {
     try   {

      if (yrxxch511xhhxxhxxxxxoptions == null) {
       yrxxch511xhhxxhxxxxxoptions=yrxxch511xhhxxhxxxxxoptionsHome.getInstance();
      }
      //method is now split (64k limit) start from row 20
      yrxxch511xhhxxhxxxxxoptionsHome.clearInstance();
      yrxxch511xhhxxhxxxxxoptions=yrxxch511xhhxxhxxxxxoptionsHome.getInstance();
      yrxxch511xhhxxhxxxxxoptions.setA0xxukcxbvxxxxxxxxxxrow("20");
      yrxxch511xhhxxhxxxxxoptions.setB1xxuo01bvxxxxxxxxxxoptions01("R");
      yrxxch511xhhxxhxxxxxoptions.setB2xxup01bvxxxxxxxxxxpurpose01("Retained Earning");
      yrxxch511xhhxxhxxxxxoptions.setB3xxuv01bvxxxxxxxxxxvalue01("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptions.setB4xxuo02bvxxxxxxxxxxoptions02("S");
      yrxxch511xhhxxhxxxxxoptions.setB5xxup02bvxxxxxxxxxxpurpose02("Subheader");
      yrxxch511xhhxxhxxxxxoptions.setB6xxuv02bvxxxxxxxxxxvalue02("");
      yrxxch511xhhxxhxxxxxoptions.setB7xxuo03bvxxxxxxxxxxoptions03("P");
      yrxxch511xhhxxhxxxxxoptions.setB8xxup03bvxxxxxxxxxxpurpose03("Payable");
      yrxxch511xhhxxhxxxxxoptions.setB9xxuv03bvxxxxxxxxxxvalue03("");
      yrxxch511xhhxxhxxxxxoptions.setC1xxuo04bvxxxxxxxxxxoptions04("");
      yrxxch511xhhxxhxxxxxoptions.setC2xxup04bvxxxxxxxxxxpurpose04("");
      yrxxch511xhhxxhxxxxxoptions.setC3xxuv04bvxxxxxxxxxxvalue04("");
      yrxxch511xhhxxhxxxxxoptions.setC4xxuo05bvxxxxxxxxxxoptions05("");
      yrxxch511xhhxxhxxxxxoptions.setC5xxup05bvxxxxxxxxxxpurpose05("");
      yrxxch511xhhxxhxxxxxoptions.setC6xxuv05bvxxxxxxxxxxvalue05("");
      yrxxch511xhhxxhxxxxxoptions.setC7xxuo06bvxxxxxxxxxxoptions06("");
      yrxxch511xhhxxhxxxxxoptions.setC8xxup06bvxxxxxxxxxxpurpose06("");
      yrxxch511xhhxxhxxxxxoptions.setC9xxuv06bvxxxxxxxxxxvalue06("");
      yrxxch511xhhxxhxxxxxoptions.setD1xxuo07bvxxxxxxxxxxoptions07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD2xxup07bvxxxxxxxxxxpurpose07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD3xxuv07bvxxxxxxxxxxvalue07("");
      yrxxch511xhhxxhxxxxxoptions.setD4xxuo08bvxxxxxxxxxxoptions08("H");
      yrxxch511xhhxxhxxxxxoptions.setD5xxup08bvxxxxxxxxxxpurpose08("High");
      yrxxch511xhhxxhxxxxxoptions.setD6xxuv08bvxxxxxxxxxxvalue08("");
      yrxxch511xhhxxhxxxxxoptions.setD7xxuo09bvxxxxxxxxxxoptions09("30");
      yrxxch511xhhxxhxxxxxoptions.setD8xxup09bvxxxxxxxxxxpurpose09("-30 days");
      yrxxch511xhhxxhxxxxxoptions.setD9xxuv09bvxxxxxxxxxxvalue09("");
      yrxxch511xhhxxhxxxxxoptions.setE1xxuo10bvxxxxxxxxxxoptions10("cash");
      yrxxch511xhhxxhxxxxxoptions.setE2xxup10bvxxxxxxxxxxpurpose10("-cash");
      yrxxch511xhhxxhxxxxxoptions.setE3xxuv10bvxxxxxxxxxxvalue10("");
      yrxxch511xhhxxhxxxxxoptions.setE4xxuo11bvxxxxxxxxxxoptions11("Montreal");
      yrxxch511xhhxxhxxxxxoptions.setE5xxup11bvxxxxxxxxxxpurpose11("Toronto");
      yrxxch511xhhxxhxxxxxoptions.setE6xxuv11bvxxxxxxxxxxvalue11("ca=Montreal; us=Boston");
      yrxxch511xhhxxhxxxxxoptions.setE7xxuo12bvxxxxxxxxxxoptions12("QE");
      yrxxch511xhhxxhxxxxxoptions.setE8xxup12bvxxxxxxxxxxpurpose12("Quebec");
      yrxxch511xhhxxhxxxxxoptions.setE9xxuv12bvxxxxxxxxxxvalue12("ca=QE us=CA");
      yrxxch511xhhxxhxxxxxoptions.setF1xxuo13bvxxxxxxxxxxoptions13("");
      yrxxch511xhhxxhxxxxxoptions.setF2xxup13bvxxxxxxxxxxpurpose13("");
      yrxxch511xhhxxhxxxxxoptions.setF3xxuv13bvxxxxxxxxxxvalue13("");
      yrxxch511xhhxxhxxxxxoptions.setF4xxuo14bvxxxxxxxxxxoptions14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF5xxup14bvxxxxxxxxxxpurpose14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF6xxuv14bvxxxxxxxxxxvalue14("ca=M4L3Z8 us=10003 in=70003");
      yrxxch511xhhxxhxxxxxoptions.setF7xxuo15bvxxxxxxxxxxoptions15("Y");
      yrxxch511xhhxxhxxxxxoptions.setF8xxup15bvxxxxxxxxxxpurpose15("Yes");
      yrxxch511xhhxxhxxxxxoptions.setF9xxuv15bvxxxxxxxxxxvalue15("");
      yrxxch511xhhxxhxxxxxoptions.setG1xxuo16bvxxxxxxxxxxoptions16("F");
      yrxxch511xhhxxhxxxxxoptions.setG2xxup16bvxxxxxxxxxxpurpose16("Misc Fees");
      yrxxch511xhhxxhxxxxxoptions.setG3xxuv16bvxxxxxxxxxxvalue16("");
      yrxxch511xhhxxhxxxxxoptions.setG4xxuo17bvxxxxxxxxxxoptions17("?");
      yrxxch511xhhxxhxxxxxoptions.setG5xxup17bvxxxxxxxxxxpurpose17("?");
      yrxxch511xhhxxhxxxxxoptions.setG6xxuv17bvxxxxxxxxxxvalue17("");
      yrxxch511xhhxxhxxxxxoptions.setG7xxuo18bvxxxxxxxxxxoptions18("AH");
      yrxxch511xhhxxhxxxxxoptions.setG8xxup18bvxxxxxxxxxxpurpose18("Hourly");
      yrxxch511xhhxxhxxxxxoptions.setG9xxuv18bvxxxxxxxxxxvalue18("s=89");
      yrxxch511xhhxxhxxxxxoptions.setH1xxuo19bvxxxxxxxxxxoptions19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH2xxup19bvxxxxxxxxxxpurpose19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH3xxuv19bvxxxxxxxxxxvalue19("");
      yrxxch511xhhxxhxxxxxoptions.setH4xxuo20bvxxxxxxxxxxoptions20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH5xxup20bvxxxxxxxxxxpurpose20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH6xxuv20bvxxxxxxxxxxvalue20("");
      yrxxch511xhhxxhxxxxxoptions.setH7xxuo21bvxxxxxxxxxxoptions21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH8xxup21bvxxxxxxxxxxpurpose21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH9xxuv21bvxxxxxxxxxxvalue21("");
      yrxxch511xhhxxhxxxxxoptions.setI1xxuo22bvxxxxxxxxxxoptions22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI2xxup22bvxxxxxxxxxxpurpose22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI3xxuv22bvxxxxxxxxxxvalue22("");
      yrxxch511xhhxxhxxxxxoptions.setI4xxuo23bvxxxxxxxxxxoptions23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI5xxup23bvxxxxxxxxxxpurpose23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI6xxuv23bvxxxxxxxxxxvalue23("");
      yrxxch511xhhxxhxxxxxoptions.setI7xxuo24bvxxxxxxxxxxoptions24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI8xxup24bvxxxxxxxxxxpurpose24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI9xxuv24bvxxxxxxxxxxvalue24("");
      yrxxch511xhhxxhxxxxxoptions.setJ1xxuo25bvxxxxxxxxxxoptions25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ2xxup25bvxxxxxxxxxxpurpose25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ3xxuv25bvxxxxxxxxxxvalue25("");
      yrxxch511xhhxxhxxxxxoptions.setJ4xxuo26bvxxxxxxxxxxoptions26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ5xxup26bvxxxxxxxxxxpurpose26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ6xxuv26bvxxxxxxxxxxvalue26("");
      yrxxch511xhhxxhxxxxxoptions.setJ7xxuo27bvxxxxxxxxxxoptions27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ8xxup27bvxxxxxxxxxxpurpose27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ9xxuv27bvxxxxxxxxxxvalue27("");
      yrxxch511xhhxxhxxxxxoptions.setK1xxuo28bvxxxxxxxxxxoptions28("PF");
      yrxxch511xhhxxhxxxxxoptions.setK2xxup28bvxxxxxxxxxxpurpose28("Persons-Family");
      yrxxch511xhhxxhxxxxxoptions.setK3xxuv28bvxxxxxxxxxxvalue28("");
      yrxxch511xhhxxhxxxxxoptions.setK4xxuo29bvxxxxxxxxxxoptions29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK5xxup29bvxxxxxxxxxxpurpose29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK6xxuv29bvxxxxxxxxxxvalue29("");
      yrxxch511xhhxxhxxxxxoptions.setK7xxuo30bvxxxxxxxxxxoptions30("EM");
      yrxxch511xhhxxhxxxxxoptions.setK8xxup30bvxxxxxxxxxxpurpose30("EMail");
      yrxxch511xhhxxhxxxxxoptions.setK9xxuv30bvxxxxxxxxxxvalue30("");
      yrxxch511xhhxxhxxxxxoptions.setL1xxuo31bvxxxxxxxxxxoptions31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL2xxup31bvxxxxxxxxxxpurpose31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL3xxuv31bvxxxxxxxxxxvalue31("");
      yrxxch511xhhxxhxxxxxoptions.setL4xxuo32bvxxxxxxxxxxoptions32("Room 107");
      yrxxch511xhhxxhxxxxxoptions.setL5xxup32bvxxxxxxxxxxpurpose32("Room 107");
      yrxxch511xhhxxhxxxxxoptions.setL6xxuv32bvxxxxxxxxxxvalue32("");
      yrxxch511xhhxxhxxxxxoptions.setL7xxuo33bvxxxxxxxxxxoptions33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL8xxup33bvxxxxxxxxxxpurpose33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL9xxuv33bvxxxxxxxxxxvalue33("");
      yrxxch511xhhxxhxxxxxoptions.setM1xxuo34bvxxxxxxxxxxoptions34("");
      yrxxch511xhhxxhxxxxxoptions.setM2xxup34bvxxxxxxxxxxpurpose34("");
      yrxxch511xhhxxhxxxxxoptions.setM3xxuv34bvxxxxxxxxxxvalue34("");
      yrxxch511xhhxxhxxxxxoptions.setM4xxuo35bvxxxxxxxxxxoptions35("Lunch Appontment");
      yrxxch511xhhxxhxxxxxoptions.setM5xxup35bvxxxxxxxxxxpurpose35("c$88.90");
      yrxxch511xhhxxhxxxxxoptions.setM6xxuv35bvxxxxxxxxxxvalue35("");
      yrxxch511xhhxxhxxxxxoptions.setM7xxuo36bvxxxxxxxxxxoptions36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM8xxup36bvxxxxxxxxxxpurpose36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM9xxuv36bvxxxxxxxxxxvalue36("");
      yrxxch511xhhxxhxxxxxoptions.setN1xxuo37bvxxxxxxxxxxoptions37("High");
      yrxxch511xhhxxhxxxxxoptions.setN2xxup37bvxxxxxxxxxxpurpose37("High");
      yrxxch511xhhxxhxxxxxoptions.setN3xxuv37bvxxxxxxxxxxvalue37("");
      yrxxch511xhhxxhxxxxxoptions.setN4xxuo38bvxxxxxxxxxxoptions38("S");
      yrxxch511xhhxxhxxxxxoptions.setN5xxup38bvxxxxxxxxxxpurpose38("System Admin");
      yrxxch511xhhxxhxxxxxoptions.setN6xxuv38bvxxxxxxxxxxvalue38("");
      yrxxch511xhhxxhxxxxxoptions.setN7xxuo39bvxxxxxxxxxxoptions39("H");
      yrxxch511xhhxxhxxxxxoptions.setN8xxup39bvxxxxxxxxxxpurpose39("High");
      yrxxch511xhhxxhxxxxxoptions.setN9xxuv39bvxxxxxxxxxxvalue39("");
      yrxxch511xhhxxhxxxxxoptions.setO1xxuo40bvxxxxxxxxxxoptions40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO2xxup40bvxxxxxxxxxxpurpose40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO3xxuv40bvxxxxxxxxxxvalue40("");
      yrxxch511xhhxxhxxxxxoptions.setO4xxuo41bvxxxxxxxxxxoptions41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO5xxup41bvxxxxxxxxxxpurpose41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO6xxuv41bvxxxxxxxxxxvalue41("");
      yrxxch511xhhxxhxxxxxoptions.setO7xxuo42bvxxxxxxxxxxoptions42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO8xxup42bvxxxxxxxxxxpurpose42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO9xxuv42bvxxxxxxxxxxvalue42("");
      yrxxch511xhhxxhxxxxxoptions.setP1xxuo43bvxxxxxxxxxxoptions43("New");
      yrxxch511xhhxxhxxxxxoptions.setP2xxup43bvxxxxxxxxxxpurpose43("New");
      yrxxch511xhhxxhxxxxxoptions.setP3xxuv43bvxxxxxxxxxxvalue43("");
      yrxxch511xhhxxhxxxxxoptions.setP4xxuo44bvxxxxxxxxxxoptions44("");
      yrxxch511xhhxxhxxxxxoptions.setP5xxup44bvxxxxxxxxxxpurpose44("");
      yrxxch511xhhxxhxxxxxoptions.setP6xxuv44bvxxxxxxxxxxvalue44("");
      yrxxch511xhhxxhxxxxxoptions.setP7xxuo45bvxxxxxxxxxxoptions45("D");
      yrxxch511xhhxxhxxxxxoptions.setP8xxup45bvxxxxxxxxxxpurpose45("");
      yrxxch511xhhxxhxxxxxoptions.setP9xxuv45bvxxxxxxxxxxvalue45("");
      yrxxch511xhhxxhxxxxxoptions.setQ1xxuo46bvxxxxxxxxxxoptions46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ2xxup46bvxxxxxxxxxxpurpose46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ3xxuv46bvxxxxxxxxxxvalue46("");
      yrxxch511xhhxxhxxxxxoptions.setQ4xxuo47bvxxxxxxxxxxoptions47("04");
      yrxxch511xhhxxhxxxxxoptions.setQ5xxup47bvxxxxxxxxxxpurpose47("04");
      yrxxch511xhhxxhxxxxxoptions.setQ6xxuv47bvxxxxxxxxxxvalue47("");
      yrxxch511xhhxxhxxxxxoptions.setQ7xxuo48bvxxxxxxxxxxoptions48("");
      yrxxch511xhhxxhxxxxxoptions.setQ8xxup48bvxxxxxxxxxxpurpose48("");
      yrxxch511xhhxxhxxxxxoptions.setQ9xxuv48bvxxxxxxxxxxvalue48("");
      yrxxch511xhhxxhxxxxxoptions.setR1xxuo49bvxxxxxxxxxxoptions49("3R-PRODUCT-3-C");
      yrxxch511xhhxxhxxxxxoptions.setR2xxup49bvxxxxxxxxxxpurpose49("Product Panel 3");
      yrxxch511xhhxxhxxxxxoptions.setR3xxuv49bvxxxxxxxxxxvalue49("");
      yrxxch511xhhxxhxxxxxoptions.setR4xxuo50bvxxxxxxxxxxoptions50("");
      yrxxch511xhhxxhxxxxxoptions.setR5xxup50bvxxxxxxxxxxpurpose50("");
      yrxxch511xhhxxhxxxxxoptions.setR6xxuv50bvxxxxxxxxxxvalue50("");
      yrxxch511xhhxxhxxxxxoptions.setR7xxuo51bvxxxxxxxxxxoptions51("");
      yrxxch511xhhxxhxxxxxoptions.setR8xxup51bvxxxxxxxxxxpurpose51("");
      yrxxch511xhhxxhxxxxxoptions.setR9xxuv51bvxxxxxxxxxxvalue51("");
      yrxxch511xhhxxhxxxxxoptions.setS1xxuo52bvxxxxxxxxxxoptions52("");
      yrxxch511xhhxxhxxxxxoptions.setS2xxup52bvxxxxxxxxxxpurpose52("");
      yrxxch511xhhxxhxxxxxoptions.setS3xxuv52bvxxxxxxxxxxvalue52("");
      yrxxch511xhhxxhxxxxxoptions.setS4xxuo53bvxxxxxxxxxxoptions53("");
      yrxxch511xhhxxhxxxxxoptions.setS5xxup53bvxxxxxxxxxxpurpose53("");
      yrxxch511xhhxxhxxxxxoptions.setS7xxuo54bvxxxxxxxxxxoptions54("");
      yrxxch511xhhxxhxxxxxoptions.setS8xxup54bvxxxxxxxxxxpurpose54("");
      yrxxch511xhhxxhxxxxxoptions.setS9xxuv54bvxxxxxxxxxxvalue54("");
      yrxxch511xhhxxhxxxxxoptions.setT1xxuo55bvxxxxxxxxxxoptions55("");
      yrxxch511xhhxxhxxxxxoptions.setT2xxup55bvxxxxxxxxxxpurpose55("");
      yrxxch511xhhxxhxxxxxoptions.setT3xxuv55bvxxxxxxxxxxvalue55("");
      yrxxch511xhhxxhxxxxxoptions.setT4xxuo56bvxxxxxxxxxxoptions56("");
      yrxxch511xhhxxhxxxxxoptions.setT5xxup56bvxxxxxxxxxxpurpose56("");
      yrxxch511xhhxxhxxxxxoptions.setT6xxuv56bvxxxxxxxxxxvalue56("");
      yrxxch511xhhxxhxxxxxoptions.setT7xxuo57bvxxxxxxxxxxoptions57("");
      yrxxch511xhhxxhxxxxxoptions.setT8xxup57bvxxxxxxxxxxpurpose57("");
      yrxxch511xhhxxhxxxxxoptions.setT9xxuv57bvxxxxxxxxxxvalue57("");
      yrxxch511xhhxxhxxxxxoptions.setU1xxuo58bvxxxxxxxxxxoptions58("");
      yrxxch511xhhxxhxxxxxoptions.setU2xxup58bvxxxxxxxxxxpurpose58("");
      yrxxch511xhhxxhxxxxxoptions.setU3xxuv58bvxxxxxxxxxxvalue58("");
      yrxxch511xhhxxhxxxxxoptions.setU4xxuo59bvxxxxxxxxxxoptions59("");
      yrxxch511xhhxxhxxxxxoptions.setU5xxup59bvxxxxxxxxxxpurpose59("");
      yrxxch511xhhxxhxxxxxoptions.setU6xxuv59bvxxxxxxxxxxvalue59("");
      yrxxch511xhhxxhxxxxxoptions.setU7xxuo60bvxxxxxxxxxxoptions60("");
      yrxxch511xhhxxhxxxxxoptions.setU8xxup60bvxxxxxxxxxxpurpose60("");
      yrxxch511xhhxxhxxxxxoptions.setU9xxuv60bvxxxxxxxxxxvalue60("");
      yrxxch511xhhxxhxxxxxoptions.setV1xxuo61bvxxxxxxxxxxoptions61("");
      yrxxch511xhhxxhxxxxxoptions.setV2xxup61bvxxxxxxxxxxpurpose61("");
      yrxxch511xhhxxhxxxxxoptions.setV3xxuv61bvxxxxxxxxxxvalue61("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptionsHome.persist(client);


      yrxxch511xhhxxhxxxxxoptionsHome.clearInstance();
      yrxxch511xhhxxhxxxxxoptions=yrxxch511xhhxxhxxxxxoptionsHome.getInstance();
      yrxxch511xhhxxhxxxxxoptions.setA0xxukcxbvxxxxxxxxxxrow("21");
      yrxxch511xhhxxhxxxxxoptions.setB1xxuo01bvxxxxxxxxxxoptions01("R");
      yrxxch511xhhxxhxxxxxoptions.setB2xxup01bvxxxxxxxxxxpurpose01("Retained Earning");
      yrxxch511xhhxxhxxxxxoptions.setB3xxuv01bvxxxxxxxxxxvalue01("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptions.setB4xxuo02bvxxxxxxxxxxoptions02("S");
      yrxxch511xhhxxhxxxxxoptions.setB5xxup02bvxxxxxxxxxxpurpose02("Subheader");
      yrxxch511xhhxxhxxxxxoptions.setB6xxuv02bvxxxxxxxxxxvalue02("");
      yrxxch511xhhxxhxxxxxoptions.setB7xxuo03bvxxxxxxxxxxoptions03("P");
      yrxxch511xhhxxhxxxxxoptions.setB8xxup03bvxxxxxxxxxxpurpose03("Payable");
      yrxxch511xhhxxhxxxxxoptions.setB9xxuv03bvxxxxxxxxxxvalue03("");
      yrxxch511xhhxxhxxxxxoptions.setC1xxuo04bvxxxxxxxxxxoptions04("");
      yrxxch511xhhxxhxxxxxoptions.setC2xxup04bvxxxxxxxxxxpurpose04("");
      yrxxch511xhhxxhxxxxxoptions.setC3xxuv04bvxxxxxxxxxxvalue04("");
      yrxxch511xhhxxhxxxxxoptions.setC4xxuo05bvxxxxxxxxxxoptions05("");
      yrxxch511xhhxxhxxxxxoptions.setC5xxup05bvxxxxxxxxxxpurpose05("");
      yrxxch511xhhxxhxxxxxoptions.setC6xxuv05bvxxxxxxxxxxvalue05("");
      yrxxch511xhhxxhxxxxxoptions.setC7xxuo06bvxxxxxxxxxxoptions06("");
      yrxxch511xhhxxhxxxxxoptions.setC8xxup06bvxxxxxxxxxxpurpose06("");
      yrxxch511xhhxxhxxxxxoptions.setC9xxuv06bvxxxxxxxxxxvalue06("");
      yrxxch511xhhxxhxxxxxoptions.setD1xxuo07bvxxxxxxxxxxoptions07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD2xxup07bvxxxxxxxxxxpurpose07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD3xxuv07bvxxxxxxxxxxvalue07("");
      yrxxch511xhhxxhxxxxxoptions.setD4xxuo08bvxxxxxxxxxxoptions08("H");
      yrxxch511xhhxxhxxxxxoptions.setD5xxup08bvxxxxxxxxxxpurpose08("High");
      yrxxch511xhhxxhxxxxxoptions.setD6xxuv08bvxxxxxxxxxxvalue08("");
      yrxxch511xhhxxhxxxxxoptions.setD7xxuo09bvxxxxxxxxxxoptions09("30");
      yrxxch511xhhxxhxxxxxoptions.setD8xxup09bvxxxxxxxxxxpurpose09("-30 days");
      yrxxch511xhhxxhxxxxxoptions.setD9xxuv09bvxxxxxxxxxxvalue09("");
      yrxxch511xhhxxhxxxxxoptions.setE1xxuo10bvxxxxxxxxxxoptions10("cash");
      yrxxch511xhhxxhxxxxxoptions.setE2xxup10bvxxxxxxxxxxpurpose10("-cash");
      yrxxch511xhhxxhxxxxxoptions.setE3xxuv10bvxxxxxxxxxxvalue10("");
      yrxxch511xhhxxhxxxxxoptions.setE4xxuo11bvxxxxxxxxxxoptions11("Montreal");
      yrxxch511xhhxxhxxxxxoptions.setE5xxup11bvxxxxxxxxxxpurpose11("Toronto");
      yrxxch511xhhxxhxxxxxoptions.setE6xxuv11bvxxxxxxxxxxvalue11("ca=Montreal; us=Boston");
      yrxxch511xhhxxhxxxxxoptions.setE7xxuo12bvxxxxxxxxxxoptions12("QE");
      yrxxch511xhhxxhxxxxxoptions.setE8xxup12bvxxxxxxxxxxpurpose12("Quebec");
      yrxxch511xhhxxhxxxxxoptions.setE9xxuv12bvxxxxxxxxxxvalue12("ca=QE us=CA");
      yrxxch511xhhxxhxxxxxoptions.setF1xxuo13bvxxxxxxxxxxoptions13("");
      yrxxch511xhhxxhxxxxxoptions.setF2xxup13bvxxxxxxxxxxpurpose13("");
      yrxxch511xhhxxhxxxxxoptions.setF3xxuv13bvxxxxxxxxxxvalue13("");
      yrxxch511xhhxxhxxxxxoptions.setF4xxuo14bvxxxxxxxxxxoptions14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF5xxup14bvxxxxxxxxxxpurpose14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF6xxuv14bvxxxxxxxxxxvalue14("ca=M4L3Z8 us=10003 in=70003");
      yrxxch511xhhxxhxxxxxoptions.setF7xxuo15bvxxxxxxxxxxoptions15("Y");
      yrxxch511xhhxxhxxxxxoptions.setF8xxup15bvxxxxxxxxxxpurpose15("Yes");
      yrxxch511xhhxxhxxxxxoptions.setF9xxuv15bvxxxxxxxxxxvalue15("");
      yrxxch511xhhxxhxxxxxoptions.setG1xxuo16bvxxxxxxxxxxoptions16("SI-L*");
      yrxxch511xhhxxhxxxxxoptions.setG2xxup16bvxxxxxxxxxxpurpose16("Shopping-SubCategories");
      yrxxch511xhhxxhxxxxxoptions.setG3xxuv16bvxxxxxxxxxxvalue16("");
      yrxxch511xhhxxhxxxxxoptions.setG4xxuo17bvxxxxxxxxxxoptions17("?");
      yrxxch511xhhxxhxxxxxoptions.setG5xxup17bvxxxxxxxxxxpurpose17("?");
      yrxxch511xhhxxhxxxxxoptions.setG6xxuv17bvxxxxxxxxxxvalue17("");
      yrxxch511xhhxxhxxxxxoptions.setG7xxuo18bvxxxxxxxxxxoptions18("AH");
      yrxxch511xhhxxhxxxxxoptions.setG8xxup18bvxxxxxxxxxxpurpose18("Hourly");
      yrxxch511xhhxxhxxxxxoptions.setG9xxuv18bvxxxxxxxxxxvalue18("s=89");
      yrxxch511xhhxxhxxxxxoptions.setH1xxuo19bvxxxxxxxxxxoptions19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH2xxup19bvxxxxxxxxxxpurpose19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH3xxuv19bvxxxxxxxxxxvalue19("");
      yrxxch511xhhxxhxxxxxoptions.setH4xxuo20bvxxxxxxxxxxoptions20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH5xxup20bvxxxxxxxxxxpurpose20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH6xxuv20bvxxxxxxxxxxvalue20("");
      yrxxch511xhhxxhxxxxxoptions.setH7xxuo21bvxxxxxxxxxxoptions21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH8xxup21bvxxxxxxxxxxpurpose21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH9xxuv21bvxxxxxxxxxxvalue21("");
      yrxxch511xhhxxhxxxxxoptions.setI1xxuo22bvxxxxxxxxxxoptions22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI2xxup22bvxxxxxxxxxxpurpose22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI3xxuv22bvxxxxxxxxxxvalue22("");
      yrxxch511xhhxxhxxxxxoptions.setI4xxuo23bvxxxxxxxxxxoptions23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI5xxup23bvxxxxxxxxxxpurpose23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI6xxuv23bvxxxxxxxxxxvalue23("");
      yrxxch511xhhxxhxxxxxoptions.setI7xxuo24bvxxxxxxxxxxoptions24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI8xxup24bvxxxxxxxxxxpurpose24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI9xxuv24bvxxxxxxxxxxvalue24("");
      yrxxch511xhhxxhxxxxxoptions.setJ1xxuo25bvxxxxxxxxxxoptions25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ2xxup25bvxxxxxxxxxxpurpose25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ3xxuv25bvxxxxxxxxxxvalue25("");
      yrxxch511xhhxxhxxxxxoptions.setJ4xxuo26bvxxxxxxxxxxoptions26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ5xxup26bvxxxxxxxxxxpurpose26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ6xxuv26bvxxxxxxxxxxvalue26("");
      yrxxch511xhhxxhxxxxxoptions.setJ7xxuo27bvxxxxxxxxxxoptions27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ8xxup27bvxxxxxxxxxxpurpose27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ9xxuv27bvxxxxxxxxxxvalue27("");
      yrxxch511xhhxxhxxxxxoptions.setK1xxuo28bvxxxxxxxxxxoptions28("PF");
      yrxxch511xhhxxhxxxxxoptions.setK2xxup28bvxxxxxxxxxxpurpose28("Persons-Family");
      yrxxch511xhhxxhxxxxxoptions.setK3xxuv28bvxxxxxxxxxxvalue28("");
      yrxxch511xhhxxhxxxxxoptions.setK4xxuo29bvxxxxxxxxxxoptions29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK5xxup29bvxxxxxxxxxxpurpose29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK6xxuv29bvxxxxxxxxxxvalue29("");
      yrxxch511xhhxxhxxxxxoptions.setK7xxuo30bvxxxxxxxxxxoptions30("EM");
      yrxxch511xhhxxhxxxxxoptions.setK8xxup30bvxxxxxxxxxxpurpose30("EMail");
      yrxxch511xhhxxhxxxxxoptions.setK9xxuv30bvxxxxxxxxxxvalue30("");
      yrxxch511xhhxxhxxxxxoptions.setL1xxuo31bvxxxxxxxxxxoptions31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL2xxup31bvxxxxxxxxxxpurpose31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL3xxuv31bvxxxxxxxxxxvalue31("");
      yrxxch511xhhxxhxxxxxoptions.setL4xxuo32bvxxxxxxxxxxoptions32("Room 107");
      yrxxch511xhhxxhxxxxxoptions.setL5xxup32bvxxxxxxxxxxpurpose32("Room 107");
      yrxxch511xhhxxhxxxxxoptions.setL6xxuv32bvxxxxxxxxxxvalue32("");
      yrxxch511xhhxxhxxxxxoptions.setL7xxuo33bvxxxxxxxxxxoptions33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL8xxup33bvxxxxxxxxxxpurpose33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL9xxuv33bvxxxxxxxxxxvalue33("");
      yrxxch511xhhxxhxxxxxoptions.setM1xxuo34bvxxxxxxxxxxoptions34("");
      yrxxch511xhhxxhxxxxxoptions.setM2xxup34bvxxxxxxxxxxpurpose34("");
      yrxxch511xhhxxhxxxxxoptions.setM3xxuv34bvxxxxxxxxxxvalue34("");
      yrxxch511xhhxxhxxxxxoptions.setM4xxuo35bvxxxxxxxxxxoptions35("Lunch Appontment");
      yrxxch511xhhxxhxxxxxoptions.setM5xxup35bvxxxxxxxxxxpurpose35("c$88.90");
      yrxxch511xhhxxhxxxxxoptions.setM6xxuv35bvxxxxxxxxxxvalue35("");
      yrxxch511xhhxxhxxxxxoptions.setM7xxuo36bvxxxxxxxxxxoptions36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM8xxup36bvxxxxxxxxxxpurpose36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM9xxuv36bvxxxxxxxxxxvalue36("");
      yrxxch511xhhxxhxxxxxoptions.setN1xxuo37bvxxxxxxxxxxoptions37("High");
      yrxxch511xhhxxhxxxxxoptions.setN2xxup37bvxxxxxxxxxxpurpose37("High");
      yrxxch511xhhxxhxxxxxoptions.setN3xxuv37bvxxxxxxxxxxvalue37("");
      yrxxch511xhhxxhxxxxxoptions.setN4xxuo38bvxxxxxxxxxxoptions38("S");
      yrxxch511xhhxxhxxxxxoptions.setN5xxup38bvxxxxxxxxxxpurpose38("System Admin");
      yrxxch511xhhxxhxxxxxoptions.setN6xxuv38bvxxxxxxxxxxvalue38("");
      yrxxch511xhhxxhxxxxxoptions.setN7xxuo39bvxxxxxxxxxxoptions39("H");
      yrxxch511xhhxxhxxxxxoptions.setN8xxup39bvxxxxxxxxxxpurpose39("High");
      yrxxch511xhhxxhxxxxxoptions.setN9xxuv39bvxxxxxxxxxxvalue39("");
      yrxxch511xhhxxhxxxxxoptions.setO1xxuo40bvxxxxxxxxxxoptions40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO2xxup40bvxxxxxxxxxxpurpose40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO3xxuv40bvxxxxxxxxxxvalue40("");
      yrxxch511xhhxxhxxxxxoptions.setO4xxuo41bvxxxxxxxxxxoptions41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO5xxup41bvxxxxxxxxxxpurpose41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO6xxuv41bvxxxxxxxxxxvalue41("");
      yrxxch511xhhxxhxxxxxoptions.setO7xxuo42bvxxxxxxxxxxoptions42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO8xxup42bvxxxxxxxxxxpurpose42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO9xxuv42bvxxxxxxxxxxvalue42("");
      yrxxch511xhhxxhxxxxxoptions.setP1xxuo43bvxxxxxxxxxxoptions43("New");
      yrxxch511xhhxxhxxxxxoptions.setP2xxup43bvxxxxxxxxxxpurpose43("New");
      yrxxch511xhhxxhxxxxxoptions.setP3xxuv43bvxxxxxxxxxxvalue43("");
      yrxxch511xhhxxhxxxxxoptions.setP4xxuo44bvxxxxxxxxxxoptions44("");
      yrxxch511xhhxxhxxxxxoptions.setP5xxup44bvxxxxxxxxxxpurpose44("");
      yrxxch511xhhxxhxxxxxoptions.setP6xxuv44bvxxxxxxxxxxvalue44("");
      yrxxch511xhhxxhxxxxxoptions.setP7xxuo45bvxxxxxxxxxxoptions45("D");
      yrxxch511xhhxxhxxxxxoptions.setP8xxup45bvxxxxxxxxxxpurpose45("");
      yrxxch511xhhxxhxxxxxoptions.setP9xxuv45bvxxxxxxxxxxvalue45("");
      yrxxch511xhhxxhxxxxxoptions.setQ1xxuo46bvxxxxxxxxxxoptions46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ2xxup46bvxxxxxxxxxxpurpose46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ3xxuv46bvxxxxxxxxxxvalue46("");
      yrxxch511xhhxxhxxxxxoptions.setQ4xxuo47bvxxxxxxxxxxoptions47("04");
      yrxxch511xhhxxhxxxxxoptions.setQ5xxup47bvxxxxxxxxxxpurpose47("04");
      yrxxch511xhhxxhxxxxxoptions.setQ6xxuv47bvxxxxxxxxxxvalue47("");
      yrxxch511xhhxxhxxxxxoptions.setQ7xxuo48bvxxxxxxxxxxoptions48("");
      yrxxch511xhhxxhxxxxxoptions.setQ8xxup48bvxxxxxxxxxxpurpose48("");
      yrxxch511xhhxxhxxxxxoptions.setQ9xxuv48bvxxxxxxxxxxvalue48("");
      yrxxch511xhhxxhxxxxxoptions.setR1xxuo49bvxxxxxxxxxxoptions49("3R-NEWS-3-C");
      yrxxch511xhhxxhxxxxxoptions.setR2xxup49bvxxxxxxxxxxpurpose49("News Panel 3");
      yrxxch511xhhxxhxxxxxoptions.setR3xxuv49bvxxxxxxxxxxvalue49("");
      yrxxch511xhhxxhxxxxxoptions.setR4xxuo50bvxxxxxxxxxxoptions50("");
      yrxxch511xhhxxhxxxxxoptions.setR5xxup50bvxxxxxxxxxxpurpose50("");
      yrxxch511xhhxxhxxxxxoptions.setR6xxuv50bvxxxxxxxxxxvalue50("");
      yrxxch511xhhxxhxxxxxoptions.setR7xxuo51bvxxxxxxxxxxoptions51("");
      yrxxch511xhhxxhxxxxxoptions.setR8xxup51bvxxxxxxxxxxpurpose51("");
      yrxxch511xhhxxhxxxxxoptions.setR9xxuv51bvxxxxxxxxxxvalue51("");
      yrxxch511xhhxxhxxxxxoptions.setS1xxuo52bvxxxxxxxxxxoptions52("");
      yrxxch511xhhxxhxxxxxoptions.setS2xxup52bvxxxxxxxxxxpurpose52("");
      yrxxch511xhhxxhxxxxxoptions.setS3xxuv52bvxxxxxxxxxxvalue52("");
      yrxxch511xhhxxhxxxxxoptions.setS4xxuo53bvxxxxxxxxxxoptions53("");
      yrxxch511xhhxxhxxxxxoptions.setS5xxup53bvxxxxxxxxxxpurpose53("");
      yrxxch511xhhxxhxxxxxoptions.setS6xxuv53bvxxxxxxxxxxvalue53("");

      yrxxch511xhhxxhxxxxxoptions.setS7xxuo54bvxxxxxxxxxxoptions54("");
      yrxxch511xhhxxhxxxxxoptions.setS8xxup54bvxxxxxxxxxxpurpose54("");
      yrxxch511xhhxxhxxxxxoptions.setS9xxuv54bvxxxxxxxxxxvalue54("");
      yrxxch511xhhxxhxxxxxoptions.setT1xxuo55bvxxxxxxxxxxoptions55("");
      yrxxch511xhhxxhxxxxxoptions.setT2xxup55bvxxxxxxxxxxpurpose55("");
      yrxxch511xhhxxhxxxxxoptions.setT3xxuv55bvxxxxxxxxxxvalue55("");
      yrxxch511xhhxxhxxxxxoptions.setT4xxuo56bvxxxxxxxxxxoptions56("");
      yrxxch511xhhxxhxxxxxoptions.setT5xxup56bvxxxxxxxxxxpurpose56("");
      yrxxch511xhhxxhxxxxxoptions.setT6xxuv56bvxxxxxxxxxxvalue56("");
      yrxxch511xhhxxhxxxxxoptions.setT7xxuo57bvxxxxxxxxxxoptions57("");
      yrxxch511xhhxxhxxxxxoptions.setT8xxup57bvxxxxxxxxxxpurpose57("");
      yrxxch511xhhxxhxxxxxoptions.setT9xxuv57bvxxxxxxxxxxvalue57("");
      yrxxch511xhhxxhxxxxxoptions.setU1xxuo58bvxxxxxxxxxxoptions58("");
      yrxxch511xhhxxhxxxxxoptions.setU2xxup58bvxxxxxxxxxxpurpose58("");
      yrxxch511xhhxxhxxxxxoptions.setU3xxuv58bvxxxxxxxxxxvalue58("");
      yrxxch511xhhxxhxxxxxoptions.setU4xxuo59bvxxxxxxxxxxoptions59("");
      yrxxch511xhhxxhxxxxxoptions.setU5xxup59bvxxxxxxxxxxpurpose59("");
      yrxxch511xhhxxhxxxxxoptions.setU6xxuv59bvxxxxxxxxxxvalue59("");
      yrxxch511xhhxxhxxxxxoptions.setU7xxuo60bvxxxxxxxxxxoptions60("");
      yrxxch511xhhxxhxxxxxoptions.setU8xxup60bvxxxxxxxxxxpurpose60("");
      yrxxch511xhhxxhxxxxxoptions.setU9xxuv60bvxxxxxxxxxxvalue60("");
      yrxxch511xhhxxhxxxxxoptions.setV1xxuo61bvxxxxxxxxxxoptions61("");
      yrxxch511xhhxxhxxxxxoptions.setV2xxup61bvxxxxxxxxxxpurpose61("");
      yrxxch511xhhxxhxxxxxoptions.setV3xxuv61bvxxxxxxxxxxvalue61("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptionsHome.persist(client);


      yrxxch511xhhxxhxxxxxoptionsHome.clearInstance();
      yrxxch511xhhxxhxxxxxoptions=yrxxch511xhhxxhxxxxxoptionsHome.getInstance();
      yrxxch511xhhxxhxxxxxoptions.setA0xxukcxbvxxxxxxxxxxrow("22");
      yrxxch511xhhxxhxxxxxoptions.setB1xxuo01bvxxxxxxxxxxoptions01("R");
      yrxxch511xhhxxhxxxxxoptions.setB2xxup01bvxxxxxxxxxxpurpose01("Retained Earning");
      yrxxch511xhhxxhxxxxxoptions.setB3xxuv01bvxxxxxxxxxxvalue01("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptions.setB4xxuo02bvxxxxxxxxxxoptions02("S");
      yrxxch511xhhxxhxxxxxoptions.setB5xxup02bvxxxxxxxxxxpurpose02("Subheader");
      yrxxch511xhhxxhxxxxxoptions.setB6xxuv02bvxxxxxxxxxxvalue02("");
      yrxxch511xhhxxhxxxxxoptions.setB7xxuo03bvxxxxxxxxxxoptions03("P");
      yrxxch511xhhxxhxxxxxoptions.setB8xxup03bvxxxxxxxxxxpurpose03("Payable");
      yrxxch511xhhxxhxxxxxoptions.setB9xxuv03bvxxxxxxxxxxvalue03("");
      yrxxch511xhhxxhxxxxxoptions.setC1xxuo04bvxxxxxxxxxxoptions04("");
      yrxxch511xhhxxhxxxxxoptions.setC2xxup04bvxxxxxxxxxxpurpose04("");
      yrxxch511xhhxxhxxxxxoptions.setC3xxuv04bvxxxxxxxxxxvalue04("");
      yrxxch511xhhxxhxxxxxoptions.setC4xxuo05bvxxxxxxxxxxoptions05("");
      yrxxch511xhhxxhxxxxxoptions.setC5xxup05bvxxxxxxxxxxpurpose05("");
      yrxxch511xhhxxhxxxxxoptions.setC6xxuv05bvxxxxxxxxxxvalue05("");
      yrxxch511xhhxxhxxxxxoptions.setC7xxuo06bvxxxxxxxxxxoptions06("");
      yrxxch511xhhxxhxxxxxoptions.setC8xxup06bvxxxxxxxxxxpurpose06("");
      yrxxch511xhhxxhxxxxxoptions.setC9xxuv06bvxxxxxxxxxxvalue06("");
      yrxxch511xhhxxhxxxxxoptions.setD1xxuo07bvxxxxxxxxxxoptions07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD2xxup07bvxxxxxxxxxxpurpose07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD3xxuv07bvxxxxxxxxxxvalue07("");
      yrxxch511xhhxxhxxxxxoptions.setD4xxuo08bvxxxxxxxxxxoptions08("H");
      yrxxch511xhhxxhxxxxxoptions.setD5xxup08bvxxxxxxxxxxpurpose08("High");
      yrxxch511xhhxxhxxxxxoptions.setD6xxuv08bvxxxxxxxxxxvalue08("");
      yrxxch511xhhxxhxxxxxoptions.setD7xxuo09bvxxxxxxxxxxoptions09("30");
      yrxxch511xhhxxhxxxxxoptions.setD8xxup09bvxxxxxxxxxxpurpose09("-30 days");
      yrxxch511xhhxxhxxxxxoptions.setD9xxuv09bvxxxxxxxxxxvalue09("");
      yrxxch511xhhxxhxxxxxoptions.setE1xxuo10bvxxxxxxxxxxoptions10("cash");
      yrxxch511xhhxxhxxxxxoptions.setE2xxup10bvxxxxxxxxxxpurpose10("-cash");
      yrxxch511xhhxxhxxxxxoptions.setE3xxuv10bvxxxxxxxxxxvalue10("");
      yrxxch511xhhxxhxxxxxoptions.setE4xxuo11bvxxxxxxxxxxoptions11("Montreal");
      yrxxch511xhhxxhxxxxxoptions.setE5xxup11bvxxxxxxxxxxpurpose11("Toronto");
      yrxxch511xhhxxhxxxxxoptions.setE6xxuv11bvxxxxxxxxxxvalue11("ca=Montreal; us=Boston");
      yrxxch511xhhxxhxxxxxoptions.setE7xxuo12bvxxxxxxxxxxoptions12("QE");
      yrxxch511xhhxxhxxxxxoptions.setE8xxup12bvxxxxxxxxxxpurpose12("Quebec");
      yrxxch511xhhxxhxxxxxoptions.setE9xxuv12bvxxxxxxxxxxvalue12("ca=QE us=CA");
      yrxxch511xhhxxhxxxxxoptions.setF1xxuo13bvxxxxxxxxxxoptions13("");
      yrxxch511xhhxxhxxxxxoptions.setF2xxup13bvxxxxxxxxxxpurpose13("");
      yrxxch511xhhxxhxxxxxoptions.setF3xxuv13bvxxxxxxxxxxvalue13("");
      yrxxch511xhhxxhxxxxxoptions.setF4xxuo14bvxxxxxxxxxxoptions14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF5xxup14bvxxxxxxxxxxpurpose14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF6xxuv14bvxxxxxxxxxxvalue14("ca=M4L3Z8 us=10003 in=70003");
      yrxxch511xhhxxhxxxxxoptions.setF7xxuo15bvxxxxxxxxxxoptions15("Y");
      yrxxch511xhhxxhxxxxxoptions.setF8xxup15bvxxxxxxxxxxpurpose15("Yes");
      yrxxch511xhhxxhxxxxxoptions.setF9xxuv15bvxxxxxxxxxxvalue15("");
       yrxxch511xhhxxhxxxxxoptions.setG1xxuo16bvxxxxxxxxxxoptions16("SI-S");
      yrxxch511xhhxxhxxxxxoptions.setG2xxup16bvxxxxxxxxxxpurpose16("Shopping-Item(drop ship)");
      yrxxch511xhhxxhxxxxxoptions.setG3xxuv16bvxxxxxxxxxxvalue16("");
     yrxxch511xhhxxhxxxxxoptions.setG4xxuo17bvxxxxxxxxxxoptions17("?");
      yrxxch511xhhxxhxxxxxoptions.setG5xxup17bvxxxxxxxxxxpurpose17("?");
      yrxxch511xhhxxhxxxxxoptions.setG6xxuv17bvxxxxxxxxxxvalue17("");
      yrxxch511xhhxxhxxxxxoptions.setG7xxuo18bvxxxxxxxxxxoptions18("AH");
      yrxxch511xhhxxhxxxxxoptions.setG8xxup18bvxxxxxxxxxxpurpose18("Hourly");
      yrxxch511xhhxxhxxxxxoptions.setG9xxuv18bvxxxxxxxxxxvalue18("s=89");
      yrxxch511xhhxxhxxxxxoptions.setH1xxuo19bvxxxxxxxxxxoptions19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH2xxup19bvxxxxxxxxxxpurpose19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH3xxuv19bvxxxxxxxxxxvalue19("");
      yrxxch511xhhxxhxxxxxoptions.setH4xxuo20bvxxxxxxxxxxoptions20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH5xxup20bvxxxxxxxxxxpurpose20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH6xxuv20bvxxxxxxxxxxvalue20("");
      yrxxch511xhhxxhxxxxxoptions.setH7xxuo21bvxxxxxxxxxxoptions21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH8xxup21bvxxxxxxxxxxpurpose21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH9xxuv21bvxxxxxxxxxxvalue21("");
      yrxxch511xhhxxhxxxxxoptions.setI1xxuo22bvxxxxxxxxxxoptions22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI2xxup22bvxxxxxxxxxxpurpose22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI3xxuv22bvxxxxxxxxxxvalue22("");
      yrxxch511xhhxxhxxxxxoptions.setI4xxuo23bvxxxxxxxxxxoptions23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI5xxup23bvxxxxxxxxxxpurpose23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI6xxuv23bvxxxxxxxxxxvalue23("");
      yrxxch511xhhxxhxxxxxoptions.setI7xxuo24bvxxxxxxxxxxoptions24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI8xxup24bvxxxxxxxxxxpurpose24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI9xxuv24bvxxxxxxxxxxvalue24("");
      yrxxch511xhhxxhxxxxxoptions.setJ1xxuo25bvxxxxxxxxxxoptions25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ2xxup25bvxxxxxxxxxxpurpose25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ3xxuv25bvxxxxxxxxxxvalue25("");
      yrxxch511xhhxxhxxxxxoptions.setJ4xxuo26bvxxxxxxxxxxoptions26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ5xxup26bvxxxxxxxxxxpurpose26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ6xxuv26bvxxxxxxxxxxvalue26("");
      yrxxch511xhhxxhxxxxxoptions.setJ7xxuo27bvxxxxxxxxxxoptions27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ8xxup27bvxxxxxxxxxxpurpose27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ9xxuv27bvxxxxxxxxxxvalue27("");
      yrxxch511xhhxxhxxxxxoptions.setK1xxuo28bvxxxxxxxxxxoptions28("PF");
      yrxxch511xhhxxhxxxxxoptions.setK2xxup28bvxxxxxxxxxxpurpose28("Persons-Family");
      yrxxch511xhhxxhxxxxxoptions.setK3xxuv28bvxxxxxxxxxxvalue28("");
      yrxxch511xhhxxhxxxxxoptions.setK4xxuo29bvxxxxxxxxxxoptions29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK5xxup29bvxxxxxxxxxxpurpose29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK6xxuv29bvxxxxxxxxxxvalue29("");
      yrxxch511xhhxxhxxxxxoptions.setK7xxuo30bvxxxxxxxxxxoptions30("EM");
      yrxxch511xhhxxhxxxxxoptions.setK8xxup30bvxxxxxxxxxxpurpose30("EMail");
      yrxxch511xhhxxhxxxxxoptions.setK9xxuv30bvxxxxxxxxxxvalue30("");
      yrxxch511xhhxxhxxxxxoptions.setL1xxuo31bvxxxxxxxxxxoptions31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL2xxup31bvxxxxxxxxxxpurpose31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL3xxuv31bvxxxxxxxxxxvalue31("");
      yrxxch511xhhxxhxxxxxoptions.setL4xxuo32bvxxxxxxxxxxoptions32("Room 107");
      yrxxch511xhhxxhxxxxxoptions.setL5xxup32bvxxxxxxxxxxpurpose32("Room 107");
      yrxxch511xhhxxhxxxxxoptions.setL6xxuv32bvxxxxxxxxxxvalue32("");
      yrxxch511xhhxxhxxxxxoptions.setL7xxuo33bvxxxxxxxxxxoptions33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL8xxup33bvxxxxxxxxxxpurpose33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL9xxuv33bvxxxxxxxxxxvalue33("");
      yrxxch511xhhxxhxxxxxoptions.setM1xxuo34bvxxxxxxxxxxoptions34("");
      yrxxch511xhhxxhxxxxxoptions.setM2xxup34bvxxxxxxxxxxpurpose34("");
      yrxxch511xhhxxhxxxxxoptions.setM3xxuv34bvxxxxxxxxxxvalue34("");
      yrxxch511xhhxxhxxxxxoptions.setM4xxuo35bvxxxxxxxxxxoptions35("Lunch Appontment");
      yrxxch511xhhxxhxxxxxoptions.setM5xxup35bvxxxxxxxxxxpurpose35("c$88.90");
      yrxxch511xhhxxhxxxxxoptions.setM6xxuv35bvxxxxxxxxxxvalue35("");
      yrxxch511xhhxxhxxxxxoptions.setM7xxuo36bvxxxxxxxxxxoptions36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM8xxup36bvxxxxxxxxxxpurpose36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM9xxuv36bvxxxxxxxxxxvalue36("");
      yrxxch511xhhxxhxxxxxoptions.setN1xxuo37bvxxxxxxxxxxoptions37("High");
      yrxxch511xhhxxhxxxxxoptions.setN2xxup37bvxxxxxxxxxxpurpose37("High");
      yrxxch511xhhxxhxxxxxoptions.setN3xxuv37bvxxxxxxxxxxvalue37("");
      yrxxch511xhhxxhxxxxxoptions.setN4xxuo38bvxxxxxxxxxxoptions38("S");
      yrxxch511xhhxxhxxxxxoptions.setN5xxup38bvxxxxxxxxxxpurpose38("System Admin");
      yrxxch511xhhxxhxxxxxoptions.setN6xxuv38bvxxxxxxxxxxvalue38("");
      yrxxch511xhhxxhxxxxxoptions.setN7xxuo39bvxxxxxxxxxxoptions39("H");
      yrxxch511xhhxxhxxxxxoptions.setN8xxup39bvxxxxxxxxxxpurpose39("High");
      yrxxch511xhhxxhxxxxxoptions.setN9xxuv39bvxxxxxxxxxxvalue39("");
      yrxxch511xhhxxhxxxxxoptions.setO1xxuo40bvxxxxxxxxxxoptions40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO2xxup40bvxxxxxxxxxxpurpose40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO3xxuv40bvxxxxxxxxxxvalue40("");
      yrxxch511xhhxxhxxxxxoptions.setO4xxuo41bvxxxxxxxxxxoptions41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO5xxup41bvxxxxxxxxxxpurpose41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO6xxuv41bvxxxxxxxxxxvalue41("");
      yrxxch511xhhxxhxxxxxoptions.setO7xxuo42bvxxxxxxxxxxoptions42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO8xxup42bvxxxxxxxxxxpurpose42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO9xxuv42bvxxxxxxxxxxvalue42("");
      yrxxch511xhhxxhxxxxxoptions.setP1xxuo43bvxxxxxxxxxxoptions43("New");
      yrxxch511xhhxxhxxxxxoptions.setP2xxup43bvxxxxxxxxxxpurpose43("New");
      yrxxch511xhhxxhxxxxxoptions.setP3xxuv43bvxxxxxxxxxxvalue43("");
      yrxxch511xhhxxhxxxxxoptions.setP4xxuo44bvxxxxxxxxxxoptions44("");
      yrxxch511xhhxxhxxxxxoptions.setP5xxup44bvxxxxxxxxxxpurpose44("");
      yrxxch511xhhxxhxxxxxoptions.setP6xxuv44bvxxxxxxxxxxvalue44("");
      yrxxch511xhhxxhxxxxxoptions.setP7xxuo45bvxxxxxxxxxxoptions45("D");
      yrxxch511xhhxxhxxxxxoptions.setP8xxup45bvxxxxxxxxxxpurpose45("");
      yrxxch511xhhxxhxxxxxoptions.setP9xxuv45bvxxxxxxxxxxvalue45("");
      yrxxch511xhhxxhxxxxxoptions.setQ1xxuo46bvxxxxxxxxxxoptions46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ2xxup46bvxxxxxxxxxxpurpose46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ3xxuv46bvxxxxxxxxxxvalue46("");
      yrxxch511xhhxxhxxxxxoptions.setQ4xxuo47bvxxxxxxxxxxoptions47("04");
      yrxxch511xhhxxhxxxxxoptions.setQ5xxup47bvxxxxxxxxxxpurpose47("04");
      yrxxch511xhhxxhxxxxxoptions.setQ6xxuv47bvxxxxxxxxxxvalue47("");
      yrxxch511xhhxxhxxxxxoptions.setQ7xxuo48bvxxxxxxxxxxoptions48("");
      yrxxch511xhhxxhxxxxxoptions.setQ8xxup48bvxxxxxxxxxxpurpose48("");
      yrxxch511xhhxxhxxxxxoptions.setQ9xxuv48bvxxxxxxxxxxvalue48("");
      yrxxch511xhhxxhxxxxxoptions.setR1xxuo49bvxxxxxxxxxxoptions49("3R-ABOUT-3-C");
      yrxxch511xhhxxhxxxxxoptions.setR2xxup49bvxxxxxxxxxxpurpose49("About Panel 3");
      yrxxch511xhhxxhxxxxxoptions.setR3xxuv49bvxxxxxxxxxxvalue49("");
      yrxxch511xhhxxhxxxxxoptions.setR4xxuo50bvxxxxxxxxxxoptions50("");
      yrxxch511xhhxxhxxxxxoptions.setR5xxup50bvxxxxxxxxxxpurpose50("");
      yrxxch511xhhxxhxxxxxoptions.setR6xxuv50bvxxxxxxxxxxvalue50("");
      yrxxch511xhhxxhxxxxxoptions.setR7xxuo51bvxxxxxxxxxxoptions51("");
      yrxxch511xhhxxhxxxxxoptions.setR8xxup51bvxxxxxxxxxxpurpose51("");
      yrxxch511xhhxxhxxxxxoptions.setR9xxuv51bvxxxxxxxxxxvalue51("");
      yrxxch511xhhxxhxxxxxoptions.setS1xxuo52bvxxxxxxxxxxoptions52("");
      yrxxch511xhhxxhxxxxxoptions.setS2xxup52bvxxxxxxxxxxpurpose52("");
      yrxxch511xhhxxhxxxxxoptions.setS3xxuv52bvxxxxxxxxxxvalue52("");
      yrxxch511xhhxxhxxxxxoptions.setS4xxuo53bvxxxxxxxxxxoptions53("");
      yrxxch511xhhxxhxxxxxoptions.setS5xxup53bvxxxxxxxxxxpurpose53("");
      yrxxch511xhhxxhxxxxxoptions.setS6xxuv53bvxxxxxxxxxxvalue53("");

      yrxxch511xhhxxhxxxxxoptions.setS7xxuo54bvxxxxxxxxxxoptions54("");
      yrxxch511xhhxxhxxxxxoptions.setS8xxup54bvxxxxxxxxxxpurpose54("");
      yrxxch511xhhxxhxxxxxoptions.setS9xxuv54bvxxxxxxxxxxvalue54("");
      yrxxch511xhhxxhxxxxxoptions.setT1xxuo55bvxxxxxxxxxxoptions55("");
      yrxxch511xhhxxhxxxxxoptions.setT2xxup55bvxxxxxxxxxxpurpose55("");
      yrxxch511xhhxxhxxxxxoptions.setT3xxuv55bvxxxxxxxxxxvalue55("");
      yrxxch511xhhxxhxxxxxoptions.setT4xxuo56bvxxxxxxxxxxoptions56("");
      yrxxch511xhhxxhxxxxxoptions.setT5xxup56bvxxxxxxxxxxpurpose56("");
      yrxxch511xhhxxhxxxxxoptions.setT6xxuv56bvxxxxxxxxxxvalue56("");
      yrxxch511xhhxxhxxxxxoptions.setT7xxuo57bvxxxxxxxxxxoptions57("");
      yrxxch511xhhxxhxxxxxoptions.setT8xxup57bvxxxxxxxxxxpurpose57("");
      yrxxch511xhhxxhxxxxxoptions.setT9xxuv57bvxxxxxxxxxxvalue57("");
      yrxxch511xhhxxhxxxxxoptions.setU1xxuo58bvxxxxxxxxxxoptions58("");
      yrxxch511xhhxxhxxxxxoptions.setU2xxup58bvxxxxxxxxxxpurpose58("");
      yrxxch511xhhxxhxxxxxoptions.setU3xxuv58bvxxxxxxxxxxvalue58("");
      yrxxch511xhhxxhxxxxxoptions.setU4xxuo59bvxxxxxxxxxxoptions59("");
      yrxxch511xhhxxhxxxxxoptions.setU5xxup59bvxxxxxxxxxxpurpose59("");
      yrxxch511xhhxxhxxxxxoptions.setU6xxuv59bvxxxxxxxxxxvalue59("");
      yrxxch511xhhxxhxxxxxoptions.setU7xxuo60bvxxxxxxxxxxoptions60("");
      yrxxch511xhhxxhxxxxxoptions.setU8xxup60bvxxxxxxxxxxpurpose60("");
      yrxxch511xhhxxhxxxxxoptions.setU9xxuv60bvxxxxxxxxxxvalue60("");
      yrxxch511xhhxxhxxxxxoptions.setV1xxuo61bvxxxxxxxxxxoptions61("");
      yrxxch511xhhxxhxxxxxoptions.setV2xxup61bvxxxxxxxxxxpurpose61("");
      yrxxch511xhhxxhxxxxxoptions.setV3xxuv61bvxxxxxxxxxxvalue61("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptionsHome.persist(client);


      yrxxch511xhhxxhxxxxxoptionsHome.clearInstance();
      yrxxch511xhhxxhxxxxxoptions=yrxxch511xhhxxhxxxxxoptionsHome.getInstance();
      yrxxch511xhhxxhxxxxxoptions.setA0xxukcxbvxxxxxxxxxxrow("23");
      yrxxch511xhhxxhxxxxxoptions.setB1xxuo01bvxxxxxxxxxxoptions01("R");
      yrxxch511xhhxxhxxxxxoptions.setB2xxup01bvxxxxxxxxxxpurpose01("Retained Earning");
      yrxxch511xhhxxhxxxxxoptions.setB3xxuv01bvxxxxxxxxxxvalue01("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptions.setB4xxuo02bvxxxxxxxxxxoptions02("S");
      yrxxch511xhhxxhxxxxxoptions.setB5xxup02bvxxxxxxxxxxpurpose02("Subheader");
      yrxxch511xhhxxhxxxxxoptions.setB6xxuv02bvxxxxxxxxxxvalue02("");
      yrxxch511xhhxxhxxxxxoptions.setB7xxuo03bvxxxxxxxxxxoptions03("P");
      yrxxch511xhhxxhxxxxxoptions.setB8xxup03bvxxxxxxxxxxpurpose03("Payable");
      yrxxch511xhhxxhxxxxxoptions.setB9xxuv03bvxxxxxxxxxxvalue03("");
      yrxxch511xhhxxhxxxxxoptions.setC1xxuo04bvxxxxxxxxxxoptions04("");
      yrxxch511xhhxxhxxxxxoptions.setC2xxup04bvxxxxxxxxxxpurpose04("");
      yrxxch511xhhxxhxxxxxoptions.setC3xxuv04bvxxxxxxxxxxvalue04("");
      yrxxch511xhhxxhxxxxxoptions.setC4xxuo05bvxxxxxxxxxxoptions05("");
      yrxxch511xhhxxhxxxxxoptions.setC5xxup05bvxxxxxxxxxxpurpose05("");
      yrxxch511xhhxxhxxxxxoptions.setC6xxuv05bvxxxxxxxxxxvalue05("");
      yrxxch511xhhxxhxxxxxoptions.setC7xxuo06bvxxxxxxxxxxoptions06("");
      yrxxch511xhhxxhxxxxxoptions.setC8xxup06bvxxxxxxxxxxpurpose06("");
      yrxxch511xhhxxhxxxxxoptions.setC9xxuv06bvxxxxxxxxxxvalue06("");
      yrxxch511xhhxxhxxxxxoptions.setD1xxuo07bvxxxxxxxxxxoptions07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD2xxup07bvxxxxxxxxxxpurpose07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD3xxuv07bvxxxxxxxxxxvalue07("");
      yrxxch511xhhxxhxxxxxoptions.setD4xxuo08bvxxxxxxxxxxoptions08("H");
      yrxxch511xhhxxhxxxxxoptions.setD5xxup08bvxxxxxxxxxxpurpose08("High");
      yrxxch511xhhxxhxxxxxoptions.setD6xxuv08bvxxxxxxxxxxvalue08("");
      yrxxch511xhhxxhxxxxxoptions.setD7xxuo09bvxxxxxxxxxxoptions09("30");
      yrxxch511xhhxxhxxxxxoptions.setD8xxup09bvxxxxxxxxxxpurpose09("-30 days");
      yrxxch511xhhxxhxxxxxoptions.setD9xxuv09bvxxxxxxxxxxvalue09("");
      yrxxch511xhhxxhxxxxxoptions.setE1xxuo10bvxxxxxxxxxxoptions10("cash");
      yrxxch511xhhxxhxxxxxoptions.setE2xxup10bvxxxxxxxxxxpurpose10("-cash");
      yrxxch511xhhxxhxxxxxoptions.setE3xxuv10bvxxxxxxxxxxvalue10("");
      yrxxch511xhhxxhxxxxxoptions.setE4xxuo11bvxxxxxxxxxxoptions11("Montreal");
      yrxxch511xhhxxhxxxxxoptions.setE5xxup11bvxxxxxxxxxxpurpose11("Toronto");
      yrxxch511xhhxxhxxxxxoptions.setE6xxuv11bvxxxxxxxxxxvalue11("ca=Montreal; us=Boston");
      yrxxch511xhhxxhxxxxxoptions.setE7xxuo12bvxxxxxxxxxxoptions12("QE");
      yrxxch511xhhxxhxxxxxoptions.setE8xxup12bvxxxxxxxxxxpurpose12("Quebec");
      yrxxch511xhhxxhxxxxxoptions.setE9xxuv12bvxxxxxxxxxxvalue12("ca=QE us=CA");
      yrxxch511xhhxxhxxxxxoptions.setF1xxuo13bvxxxxxxxxxxoptions13("");
      yrxxch511xhhxxhxxxxxoptions.setF2xxup13bvxxxxxxxxxxpurpose13("");
      yrxxch511xhhxxhxxxxxoptions.setF3xxuv13bvxxxxxxxxxxvalue13("");
      yrxxch511xhhxxhxxxxxoptions.setF4xxuo14bvxxxxxxxxxxoptions14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF5xxup14bvxxxxxxxxxxpurpose14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF6xxuv14bvxxxxxxxxxxvalue14("ca=M4L3Z8 us=10003 in=70003");
      yrxxch511xhhxxhxxxxxoptions.setF7xxuo15bvxxxxxxxxxxoptions15("Y");
      yrxxch511xhhxxhxxxxxoptions.setF8xxup15bvxxxxxxxxxxpurpose15("Yes");
      yrxxch511xhhxxhxxxxxoptions.setF9xxuv15bvxxxxxxxxxxvalue15("");
       yrxxch511xhhxxhxxxxxoptions.setG1xxuo16bvxxxxxxxxxxoptions16("");
      yrxxch511xhhxxhxxxxxoptions.setG2xxup16bvxxxxxxxxxxpurpose16("");
      yrxxch511xhhxxhxxxxxoptions.setG3xxuv16bvxxxxxxxxxxvalue16("");
      yrxxch511xhhxxhxxxxxoptions.setG4xxuo17bvxxxxxxxxxxoptions17("?");
      yrxxch511xhhxxhxxxxxoptions.setG5xxup17bvxxxxxxxxxxpurpose17("?");
      yrxxch511xhhxxhxxxxxoptions.setG6xxuv17bvxxxxxxxxxxvalue17("");
      yrxxch511xhhxxhxxxxxoptions.setG7xxuo18bvxxxxxxxxxxoptions18("AH");
      yrxxch511xhhxxhxxxxxoptions.setG8xxup18bvxxxxxxxxxxpurpose18("Hourly");
      yrxxch511xhhxxhxxxxxoptions.setG9xxuv18bvxxxxxxxxxxvalue18("s=89");
      yrxxch511xhhxxhxxxxxoptions.setH1xxuo19bvxxxxxxxxxxoptions19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH2xxup19bvxxxxxxxxxxpurpose19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH3xxuv19bvxxxxxxxxxxvalue19("");
      yrxxch511xhhxxhxxxxxoptions.setH4xxuo20bvxxxxxxxxxxoptions20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH5xxup20bvxxxxxxxxxxpurpose20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH6xxuv20bvxxxxxxxxxxvalue20("");
      yrxxch511xhhxxhxxxxxoptions.setH7xxuo21bvxxxxxxxxxxoptions21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH8xxup21bvxxxxxxxxxxpurpose21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH9xxuv21bvxxxxxxxxxxvalue21("");
      yrxxch511xhhxxhxxxxxoptions.setI1xxuo22bvxxxxxxxxxxoptions22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI2xxup22bvxxxxxxxxxxpurpose22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI3xxuv22bvxxxxxxxxxxvalue22("");
      yrxxch511xhhxxhxxxxxoptions.setI4xxuo23bvxxxxxxxxxxoptions23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI5xxup23bvxxxxxxxxxxpurpose23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI6xxuv23bvxxxxxxxxxxvalue23("");
      yrxxch511xhhxxhxxxxxoptions.setI7xxuo24bvxxxxxxxxxxoptions24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI8xxup24bvxxxxxxxxxxpurpose24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI9xxuv24bvxxxxxxxxxxvalue24("");
      yrxxch511xhhxxhxxxxxoptions.setJ1xxuo25bvxxxxxxxxxxoptions25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ2xxup25bvxxxxxxxxxxpurpose25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ3xxuv25bvxxxxxxxxxxvalue25("");
      yrxxch511xhhxxhxxxxxoptions.setJ4xxuo26bvxxxxxxxxxxoptions26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ5xxup26bvxxxxxxxxxxpurpose26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ6xxuv26bvxxxxxxxxxxvalue26("");
      yrxxch511xhhxxhxxxxxoptions.setJ7xxuo27bvxxxxxxxxxxoptions27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ8xxup27bvxxxxxxxxxxpurpose27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ9xxuv27bvxxxxxxxxxxvalue27("");
      yrxxch511xhhxxhxxxxxoptions.setK1xxuo28bvxxxxxxxxxxoptions28("PF");
      yrxxch511xhhxxhxxxxxoptions.setK2xxup28bvxxxxxxxxxxpurpose28("Persons-Family");
      yrxxch511xhhxxhxxxxxoptions.setK3xxuv28bvxxxxxxxxxxvalue28("");
      yrxxch511xhhxxhxxxxxoptions.setK4xxuo29bvxxxxxxxxxxoptions29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK5xxup29bvxxxxxxxxxxpurpose29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK6xxuv29bvxxxxxxxxxxvalue29("");
      yrxxch511xhhxxhxxxxxoptions.setK7xxuo30bvxxxxxxxxxxoptions30("EM");
      yrxxch511xhhxxhxxxxxoptions.setK8xxup30bvxxxxxxxxxxpurpose30("EMail");
      yrxxch511xhhxxhxxxxxoptions.setK9xxuv30bvxxxxxxxxxxvalue30("");
      yrxxch511xhhxxhxxxxxoptions.setL1xxuo31bvxxxxxxxxxxoptions31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL2xxup31bvxxxxxxxxxxpurpose31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL3xxuv31bvxxxxxxxxxxvalue31("");
      yrxxch511xhhxxhxxxxxoptions.setL4xxuo32bvxxxxxxxxxxoptions32("Room 107");
      yrxxch511xhhxxhxxxxxoptions.setL5xxup32bvxxxxxxxxxxpurpose32("Room 107");
      yrxxch511xhhxxhxxxxxoptions.setL6xxuv32bvxxxxxxxxxxvalue32("");
      yrxxch511xhhxxhxxxxxoptions.setL7xxuo33bvxxxxxxxxxxoptions33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL8xxup33bvxxxxxxxxxxpurpose33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL9xxuv33bvxxxxxxxxxxvalue33("");
      yrxxch511xhhxxhxxxxxoptions.setM1xxuo34bvxxxxxxxxxxoptions34("");
      yrxxch511xhhxxhxxxxxoptions.setM2xxup34bvxxxxxxxxxxpurpose34("");
      yrxxch511xhhxxhxxxxxoptions.setM3xxuv34bvxxxxxxxxxxvalue34("");
      yrxxch511xhhxxhxxxxxoptions.setM4xxuo35bvxxxxxxxxxxoptions35("Lunch Appontment");
      yrxxch511xhhxxhxxxxxoptions.setM5xxup35bvxxxxxxxxxxpurpose35("c$88.90");
      yrxxch511xhhxxhxxxxxoptions.setM6xxuv35bvxxxxxxxxxxvalue35("");
      yrxxch511xhhxxhxxxxxoptions.setM7xxuo36bvxxxxxxxxxxoptions36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM8xxup36bvxxxxxxxxxxpurpose36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM9xxuv36bvxxxxxxxxxxvalue36("");
      yrxxch511xhhxxhxxxxxoptions.setN1xxuo37bvxxxxxxxxxxoptions37("High");
      yrxxch511xhhxxhxxxxxoptions.setN2xxup37bvxxxxxxxxxxpurpose37("High");
      yrxxch511xhhxxhxxxxxoptions.setN3xxuv37bvxxxxxxxxxxvalue37("");
      yrxxch511xhhxxhxxxxxoptions.setN4xxuo38bvxxxxxxxxxxoptions38("S");
      yrxxch511xhhxxhxxxxxoptions.setN5xxup38bvxxxxxxxxxxpurpose38("System Admin");
      yrxxch511xhhxxhxxxxxoptions.setN6xxuv38bvxxxxxxxxxxvalue38("");
      yrxxch511xhhxxhxxxxxoptions.setN7xxuo39bvxxxxxxxxxxoptions39("H");
      yrxxch511xhhxxhxxxxxoptions.setN8xxup39bvxxxxxxxxxxpurpose39("High");
      yrxxch511xhhxxhxxxxxoptions.setN9xxuv39bvxxxxxxxxxxvalue39("");
      yrxxch511xhhxxhxxxxxoptions.setO1xxuo40bvxxxxxxxxxxoptions40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO2xxup40bvxxxxxxxxxxpurpose40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO3xxuv40bvxxxxxxxxxxvalue40("");
      yrxxch511xhhxxhxxxxxoptions.setO4xxuo41bvxxxxxxxxxxoptions41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO5xxup41bvxxxxxxxxxxpurpose41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO6xxuv41bvxxxxxxxxxxvalue41("");
      yrxxch511xhhxxhxxxxxoptions.setO7xxuo42bvxxxxxxxxxxoptions42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO8xxup42bvxxxxxxxxxxpurpose42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO9xxuv42bvxxxxxxxxxxvalue42("");
      yrxxch511xhhxxhxxxxxoptions.setP1xxuo43bvxxxxxxxxxxoptions43("New");
      yrxxch511xhhxxhxxxxxoptions.setP2xxup43bvxxxxxxxxxxpurpose43("New");
      yrxxch511xhhxxhxxxxxoptions.setP3xxuv43bvxxxxxxxxxxvalue43("");
      yrxxch511xhhxxhxxxxxoptions.setP4xxuo44bvxxxxxxxxxxoptions44("");
      yrxxch511xhhxxhxxxxxoptions.setP5xxup44bvxxxxxxxxxxpurpose44("");
      yrxxch511xhhxxhxxxxxoptions.setP6xxuv44bvxxxxxxxxxxvalue44("");
      yrxxch511xhhxxhxxxxxoptions.setP7xxuo45bvxxxxxxxxxxoptions45("D");
      yrxxch511xhhxxhxxxxxoptions.setP8xxup45bvxxxxxxxxxxpurpose45("");
      yrxxch511xhhxxhxxxxxoptions.setP9xxuv45bvxxxxxxxxxxvalue45("");
      yrxxch511xhhxxhxxxxxoptions.setQ1xxuo46bvxxxxxxxxxxoptions46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ2xxup46bvxxxxxxxxxxpurpose46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ3xxuv46bvxxxxxxxxxxvalue46("");
      yrxxch511xhhxxhxxxxxoptions.setQ4xxuo47bvxxxxxxxxxxoptions47("04");
      yrxxch511xhhxxhxxxxxoptions.setQ5xxup47bvxxxxxxxxxxpurpose47("04");
      yrxxch511xhhxxhxxxxxoptions.setQ6xxuv47bvxxxxxxxxxxvalue47("");
      yrxxch511xhhxxhxxxxxoptions.setQ7xxuo48bvxxxxxxxxxxoptions48("");
      yrxxch511xhhxxhxxxxxoptions.setQ8xxup48bvxxxxxxxxxxpurpose48("");
      yrxxch511xhhxxhxxxxxoptions.setQ9xxuv48bvxxxxxxxxxxvalue48("");
      yrxxch511xhhxxhxxxxxoptions.setR1xxuo49bvxxxxxxxxxxoptions49("3R-CONTACTUS-3-C");
      yrxxch511xhhxxhxxxxxoptions.setR2xxup49bvxxxxxxxxxxpurpose49("Contact Us Panel 3");
      yrxxch511xhhxxhxxxxxoptions.setR3xxuv49bvxxxxxxxxxxvalue49("");
      yrxxch511xhhxxhxxxxxoptions.setR4xxuo50bvxxxxxxxxxxoptions50("");
      yrxxch511xhhxxhxxxxxoptions.setR5xxup50bvxxxxxxxxxxpurpose50("");
      yrxxch511xhhxxhxxxxxoptions.setR6xxuv50bvxxxxxxxxxxvalue50("");
      yrxxch511xhhxxhxxxxxoptions.setR7xxuo51bvxxxxxxxxxxoptions51("");
      yrxxch511xhhxxhxxxxxoptions.setR8xxup51bvxxxxxxxxxxpurpose51("");
      yrxxch511xhhxxhxxxxxoptions.setR9xxuv51bvxxxxxxxxxxvalue51("");
      yrxxch511xhhxxhxxxxxoptions.setS1xxuo52bvxxxxxxxxxxoptions52("");
      yrxxch511xhhxxhxxxxxoptions.setS2xxup52bvxxxxxxxxxxpurpose52("");
      yrxxch511xhhxxhxxxxxoptions.setS3xxuv52bvxxxxxxxxxxvalue52("");
      yrxxch511xhhxxhxxxxxoptions.setS4xxuo53bvxxxxxxxxxxoptions53("");
      yrxxch511xhhxxhxxxxxoptions.setS5xxup53bvxxxxxxxxxxpurpose53("");
      yrxxch511xhhxxhxxxxxoptions.setS6xxuv53bvxxxxxxxxxxvalue53("");

      yrxxch511xhhxxhxxxxxoptions.setS7xxuo54bvxxxxxxxxxxoptions54("");
      yrxxch511xhhxxhxxxxxoptions.setS8xxup54bvxxxxxxxxxxpurpose54("");
      yrxxch511xhhxxhxxxxxoptions.setS9xxuv54bvxxxxxxxxxxvalue54("");
      yrxxch511xhhxxhxxxxxoptions.setT1xxuo55bvxxxxxxxxxxoptions55("");
      yrxxch511xhhxxhxxxxxoptions.setT2xxup55bvxxxxxxxxxxpurpose55("");
      yrxxch511xhhxxhxxxxxoptions.setT3xxuv55bvxxxxxxxxxxvalue55("");
      yrxxch511xhhxxhxxxxxoptions.setT4xxuo56bvxxxxxxxxxxoptions56("");
      yrxxch511xhhxxhxxxxxoptions.setT5xxup56bvxxxxxxxxxxpurpose56("");
      yrxxch511xhhxxhxxxxxoptions.setT6xxuv56bvxxxxxxxxxxvalue56("");
      yrxxch511xhhxxhxxxxxoptions.setT7xxuo57bvxxxxxxxxxxoptions57("");
      yrxxch511xhhxxhxxxxxoptions.setT8xxup57bvxxxxxxxxxxpurpose57("");
      yrxxch511xhhxxhxxxxxoptions.setT9xxuv57bvxxxxxxxxxxvalue57("");
      yrxxch511xhhxxhxxxxxoptions.setU1xxuo58bvxxxxxxxxxxoptions58("");
      yrxxch511xhhxxhxxxxxoptions.setU2xxup58bvxxxxxxxxxxpurpose58("");
      yrxxch511xhhxxhxxxxxoptions.setU3xxuv58bvxxxxxxxxxxvalue58("");
      yrxxch511xhhxxhxxxxxoptions.setU4xxuo59bvxxxxxxxxxxoptions59("");
      yrxxch511xhhxxhxxxxxoptions.setU5xxup59bvxxxxxxxxxxpurpose59("");
      yrxxch511xhhxxhxxxxxoptions.setU6xxuv59bvxxxxxxxxxxvalue59("");
      yrxxch511xhhxxhxxxxxoptions.setU7xxuo60bvxxxxxxxxxxoptions60("");
      yrxxch511xhhxxhxxxxxoptions.setU8xxup60bvxxxxxxxxxxpurpose60("");
      yrxxch511xhhxxhxxxxxoptions.setU9xxuv60bvxxxxxxxxxxvalue60("");
      yrxxch511xhhxxhxxxxxoptions.setV1xxuo61bvxxxxxxxxxxoptions61("");
      yrxxch511xhhxxhxxxxxoptions.setV2xxup61bvxxxxxxxxxxpurpose61("");
      yrxxch511xhhxxhxxxxxoptions.setV3xxuv61bvxxxxxxxxxxvalue61("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptionsHome.persist(client);


      yrxxch511xhhxxhxxxxxoptionsHome.clearInstance();
      yrxxch511xhhxxhxxxxxoptions=yrxxch511xhhxxhxxxxxoptionsHome.getInstance();
      yrxxch511xhhxxhxxxxxoptions.setA0xxukcxbvxxxxxxxxxxrow("24");
      yrxxch511xhhxxhxxxxxoptions.setB1xxuo01bvxxxxxxxxxxoptions01("R");
      yrxxch511xhhxxhxxxxxoptions.setB2xxup01bvxxxxxxxxxxpurpose01("Retained Earning");
      yrxxch511xhhxxhxxxxxoptions.setB3xxuv01bvxxxxxxxxxxvalue01("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptions.setB4xxuo02bvxxxxxxxxxxoptions02("S");
      yrxxch511xhhxxhxxxxxoptions.setB5xxup02bvxxxxxxxxxxpurpose02("Subheader");
      yrxxch511xhhxxhxxxxxoptions.setB6xxuv02bvxxxxxxxxxxvalue02("");
      yrxxch511xhhxxhxxxxxoptions.setB7xxuo03bvxxxxxxxxxxoptions03("P");
      yrxxch511xhhxxhxxxxxoptions.setB8xxup03bvxxxxxxxxxxpurpose03("Payable");
      yrxxch511xhhxxhxxxxxoptions.setB9xxuv03bvxxxxxxxxxxvalue03("");
      yrxxch511xhhxxhxxxxxoptions.setC1xxuo04bvxxxxxxxxxxoptions04("");
      yrxxch511xhhxxhxxxxxoptions.setC2xxup04bvxxxxxxxxxxpurpose04("");
      yrxxch511xhhxxhxxxxxoptions.setC3xxuv04bvxxxxxxxxxxvalue04("");
      yrxxch511xhhxxhxxxxxoptions.setC4xxuo05bvxxxxxxxxxxoptions05("");
      yrxxch511xhhxxhxxxxxoptions.setC5xxup05bvxxxxxxxxxxpurpose05("");
      yrxxch511xhhxxhxxxxxoptions.setC6xxuv05bvxxxxxxxxxxvalue05("");
      yrxxch511xhhxxhxxxxxoptions.setC7xxuo06bvxxxxxxxxxxoptions06("");
      yrxxch511xhhxxhxxxxxoptions.setC8xxup06bvxxxxxxxxxxpurpose06("");
      yrxxch511xhhxxhxxxxxoptions.setC9xxuv06bvxxxxxxxxxxvalue06("");
      yrxxch511xhhxxhxxxxxoptions.setD1xxuo07bvxxxxxxxxxxoptions07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD2xxup07bvxxxxxxxxxxpurpose07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD3xxuv07bvxxxxxxxxxxvalue07("");
      yrxxch511xhhxxhxxxxxoptions.setD4xxuo08bvxxxxxxxxxxoptions08("H");
      yrxxch511xhhxxhxxxxxoptions.setD5xxup08bvxxxxxxxxxxpurpose08("High");
      yrxxch511xhhxxhxxxxxoptions.setD6xxuv08bvxxxxxxxxxxvalue08("");
      yrxxch511xhhxxhxxxxxoptions.setD7xxuo09bvxxxxxxxxxxoptions09("30");
      yrxxch511xhhxxhxxxxxoptions.setD8xxup09bvxxxxxxxxxxpurpose09("-30 days");
      yrxxch511xhhxxhxxxxxoptions.setD9xxuv09bvxxxxxxxxxxvalue09("");
      yrxxch511xhhxxhxxxxxoptions.setE1xxuo10bvxxxxxxxxxxoptions10("cash");
      yrxxch511xhhxxhxxxxxoptions.setE2xxup10bvxxxxxxxxxxpurpose10("-cash");
      yrxxch511xhhxxhxxxxxoptions.setE3xxuv10bvxxxxxxxxxxvalue10("");
      yrxxch511xhhxxhxxxxxoptions.setE4xxuo11bvxxxxxxxxxxoptions11("Montreal");
      yrxxch511xhhxxhxxxxxoptions.setE5xxup11bvxxxxxxxxxxpurpose11("Toronto");
      yrxxch511xhhxxhxxxxxoptions.setE6xxuv11bvxxxxxxxxxxvalue11("ca=Montreal; us=Boston");
      yrxxch511xhhxxhxxxxxoptions.setE7xxuo12bvxxxxxxxxxxoptions12("QE");
      yrxxch511xhhxxhxxxxxoptions.setE8xxup12bvxxxxxxxxxxpurpose12("Quebec");
      yrxxch511xhhxxhxxxxxoptions.setE9xxuv12bvxxxxxxxxxxvalue12("ca=QE us=CA");
      yrxxch511xhhxxhxxxxxoptions.setF1xxuo13bvxxxxxxxxxxoptions13("");
      yrxxch511xhhxxhxxxxxoptions.setF2xxup13bvxxxxxxxxxxpurpose13("");
      yrxxch511xhhxxhxxxxxoptions.setF3xxuv13bvxxxxxxxxxxvalue13("");
      yrxxch511xhhxxhxxxxxoptions.setF4xxuo14bvxxxxxxxxxxoptions14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF5xxup14bvxxxxxxxxxxpurpose14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF6xxuv14bvxxxxxxxxxxvalue14("ca=M4L3Z8 us=10003 in=70003");
      yrxxch511xhhxxhxxxxxoptions.setF7xxuo15bvxxxxxxxxxxoptions15("Y");
      yrxxch511xhhxxhxxxxxoptions.setF8xxup15bvxxxxxxxxxxpurpose15("Yes");
      yrxxch511xhhxxhxxxxxoptions.setF9xxuv15bvxxxxxxxxxxvalue15("");
       yrxxch511xhhxxhxxxxxoptions.setG1xxuo16bvxxxxxxxxxxoptions16("SI-P");
      yrxxch511xhhxxhxxxxxoptions.setG2xxup16bvxxxxxxxxxxpurpose16("Shopping-Item(pick up)");
      yrxxch511xhhxxhxxxxxoptions.setG3xxuv16bvxxxxxxxxxxvalue16("");
      yrxxch511xhhxxhxxxxxoptions.setG4xxuo17bvxxxxxxxxxxoptions17("?");
      yrxxch511xhhxxhxxxxxoptions.setG5xxup17bvxxxxxxxxxxpurpose17("?");
      yrxxch511xhhxxhxxxxxoptions.setG6xxuv17bvxxxxxxxxxxvalue17("");
      yrxxch511xhhxxhxxxxxoptions.setG7xxuo18bvxxxxxxxxxxoptions18("AH");
      yrxxch511xhhxxhxxxxxoptions.setG8xxup18bvxxxxxxxxxxpurpose18("Hourly");
      yrxxch511xhhxxhxxxxxoptions.setG9xxuv18bvxxxxxxxxxxvalue18("s=89");
      yrxxch511xhhxxhxxxxxoptions.setH1xxuo19bvxxxxxxxxxxoptions19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH2xxup19bvxxxxxxxxxxpurpose19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH3xxuv19bvxxxxxxxxxxvalue19("");
      yrxxch511xhhxxhxxxxxoptions.setH4xxuo20bvxxxxxxxxxxoptions20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH5xxup20bvxxxxxxxxxxpurpose20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH6xxuv20bvxxxxxxxxxxvalue20("");
      yrxxch511xhhxxhxxxxxoptions.setH7xxuo21bvxxxxxxxxxxoptions21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH8xxup21bvxxxxxxxxxxpurpose21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH9xxuv21bvxxxxxxxxxxvalue21("");
      yrxxch511xhhxxhxxxxxoptions.setI1xxuo22bvxxxxxxxxxxoptions22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI2xxup22bvxxxxxxxxxxpurpose22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI3xxuv22bvxxxxxxxxxxvalue22("");
      yrxxch511xhhxxhxxxxxoptions.setI4xxuo23bvxxxxxxxxxxoptions23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI5xxup23bvxxxxxxxxxxpurpose23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI6xxuv23bvxxxxxxxxxxvalue23("");
      yrxxch511xhhxxhxxxxxoptions.setI7xxuo24bvxxxxxxxxxxoptions24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI8xxup24bvxxxxxxxxxxpurpose24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI9xxuv24bvxxxxxxxxxxvalue24("");
      yrxxch511xhhxxhxxxxxoptions.setJ1xxuo25bvxxxxxxxxxxoptions25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ2xxup25bvxxxxxxxxxxpurpose25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ3xxuv25bvxxxxxxxxxxvalue25("");
      yrxxch511xhhxxhxxxxxoptions.setJ4xxuo26bvxxxxxxxxxxoptions26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ5xxup26bvxxxxxxxxxxpurpose26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ6xxuv26bvxxxxxxxxxxvalue26("");
      yrxxch511xhhxxhxxxxxoptions.setJ7xxuo27bvxxxxxxxxxxoptions27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ8xxup27bvxxxxxxxxxxpurpose27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ9xxuv27bvxxxxxxxxxxvalue27("");
      yrxxch511xhhxxhxxxxxoptions.setK1xxuo28bvxxxxxxxxxxoptions28("PF");
      yrxxch511xhhxxhxxxxxoptions.setK2xxup28bvxxxxxxxxxxpurpose28("Persons-Family");
      yrxxch511xhhxxhxxxxxoptions.setK3xxuv28bvxxxxxxxxxxvalue28("");
      yrxxch511xhhxxhxxxxxoptions.setK4xxuo29bvxxxxxxxxxxoptions29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK5xxup29bvxxxxxxxxxxpurpose29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK6xxuv29bvxxxxxxxxxxvalue29("");
      yrxxch511xhhxxhxxxxxoptions.setK7xxuo30bvxxxxxxxxxxoptions30("EM");
      yrxxch511xhhxxhxxxxxoptions.setK8xxup30bvxxxxxxxxxxpurpose30("EMail");
      yrxxch511xhhxxhxxxxxoptions.setK9xxuv30bvxxxxxxxxxxvalue30("");
      yrxxch511xhhxxhxxxxxoptions.setL1xxuo31bvxxxxxxxxxxoptions31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL2xxup31bvxxxxxxxxxxpurpose31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL3xxuv31bvxxxxxxxxxxvalue31("");
      yrxxch511xhhxxhxxxxxoptions.setL4xxuo32bvxxxxxxxxxxoptions32("Room 107");
      yrxxch511xhhxxhxxxxxoptions.setL5xxup32bvxxxxxxxxxxpurpose32("Room 107");
      yrxxch511xhhxxhxxxxxoptions.setL6xxuv32bvxxxxxxxxxxvalue32("");
      yrxxch511xhhxxhxxxxxoptions.setL7xxuo33bvxxxxxxxxxxoptions33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL8xxup33bvxxxxxxxxxxpurpose33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL9xxuv33bvxxxxxxxxxxvalue33("");
      yrxxch511xhhxxhxxxxxoptions.setM1xxuo34bvxxxxxxxxxxoptions34("");
      yrxxch511xhhxxhxxxxxoptions.setM2xxup34bvxxxxxxxxxxpurpose34("");
      yrxxch511xhhxxhxxxxxoptions.setM3xxuv34bvxxxxxxxxxxvalue34("");
      yrxxch511xhhxxhxxxxxoptions.setM4xxuo35bvxxxxxxxxxxoptions35("Lunch Appontment");
      yrxxch511xhhxxhxxxxxoptions.setM5xxup35bvxxxxxxxxxxpurpose35("c$88.90");
      yrxxch511xhhxxhxxxxxoptions.setM6xxuv35bvxxxxxxxxxxvalue35("");
      yrxxch511xhhxxhxxxxxoptions.setM7xxuo36bvxxxxxxxxxxoptions36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM8xxup36bvxxxxxxxxxxpurpose36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM9xxuv36bvxxxxxxxxxxvalue36("");
      yrxxch511xhhxxhxxxxxoptions.setN1xxuo37bvxxxxxxxxxxoptions37("High");
      yrxxch511xhhxxhxxxxxoptions.setN2xxup37bvxxxxxxxxxxpurpose37("High");
      yrxxch511xhhxxhxxxxxoptions.setN3xxuv37bvxxxxxxxxxxvalue37("");
      yrxxch511xhhxxhxxxxxoptions.setN4xxuo38bvxxxxxxxxxxoptions38("S");
      yrxxch511xhhxxhxxxxxoptions.setN5xxup38bvxxxxxxxxxxpurpose38("System Admin");
      yrxxch511xhhxxhxxxxxoptions.setN6xxuv38bvxxxxxxxxxxvalue38("");
      yrxxch511xhhxxhxxxxxoptions.setN7xxuo39bvxxxxxxxxxxoptions39("H");
      yrxxch511xhhxxhxxxxxoptions.setN8xxup39bvxxxxxxxxxxpurpose39("High");
      yrxxch511xhhxxhxxxxxoptions.setN9xxuv39bvxxxxxxxxxxvalue39("");
      yrxxch511xhhxxhxxxxxoptions.setO1xxuo40bvxxxxxxxxxxoptions40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO2xxup40bvxxxxxxxxxxpurpose40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO3xxuv40bvxxxxxxxxxxvalue40("");
      yrxxch511xhhxxhxxxxxoptions.setO4xxuo41bvxxxxxxxxxxoptions41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO5xxup41bvxxxxxxxxxxpurpose41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO6xxuv41bvxxxxxxxxxxvalue41("");
      yrxxch511xhhxxhxxxxxoptions.setO7xxuo42bvxxxxxxxxxxoptions42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO8xxup42bvxxxxxxxxxxpurpose42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO9xxuv42bvxxxxxxxxxxvalue42("");
      yrxxch511xhhxxhxxxxxoptions.setP1xxuo43bvxxxxxxxxxxoptions43("New");
      yrxxch511xhhxxhxxxxxoptions.setP2xxup43bvxxxxxxxxxxpurpose43("New");
      yrxxch511xhhxxhxxxxxoptions.setP3xxuv43bvxxxxxxxxxxvalue43("");
      yrxxch511xhhxxhxxxxxoptions.setP4xxuo44bvxxxxxxxxxxoptions44("");
      yrxxch511xhhxxhxxxxxoptions.setP5xxup44bvxxxxxxxxxxpurpose44("");
      yrxxch511xhhxxhxxxxxoptions.setP6xxuv44bvxxxxxxxxxxvalue44("");
      yrxxch511xhhxxhxxxxxoptions.setP7xxuo45bvxxxxxxxxxxoptions45("D");
      yrxxch511xhhxxhxxxxxoptions.setP8xxup45bvxxxxxxxxxxpurpose45("");
      yrxxch511xhhxxhxxxxxoptions.setP9xxuv45bvxxxxxxxxxxvalue45("");
      yrxxch511xhhxxhxxxxxoptions.setQ1xxuo46bvxxxxxxxxxxoptions46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ2xxup46bvxxxxxxxxxxpurpose46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ3xxuv46bvxxxxxxxxxxvalue46("");
      yrxxch511xhhxxhxxxxxoptions.setQ4xxuo47bvxxxxxxxxxxoptions47("04");
      yrxxch511xhhxxhxxxxxoptions.setQ5xxup47bvxxxxxxxxxxpurpose47("04");
      yrxxch511xhhxxhxxxxxoptions.setQ6xxuv47bvxxxxxxxxxxvalue47("");
      yrxxch511xhhxxhxxxxxoptions.setQ7xxuo48bvxxxxxxxxxxoptions48("");
      yrxxch511xhhxxhxxxxxoptions.setQ8xxup48bvxxxxxxxxxxpurpose48("");
      yrxxch511xhhxxhxxxxxoptions.setQ9xxuv48bvxxxxxxxxxxvalue48("");
      yrxxch511xhhxxhxxxxxoptions.setR1xxuo49bvxxxxxxxxxxoptions49("3R-TOP-BKGR-C");
      yrxxch511xhhxxhxxxxxoptions.setR2xxup49bvxxxxxxxxxxpurpose49("Top BackGround Graphics");
      yrxxch511xhhxxhxxxxxoptions.setR3xxuv49bvxxxxxxxxxxvalue49("");
      yrxxch511xhhxxhxxxxxoptions.setR4xxuo50bvxxxxxxxxxxoptions50("");
      yrxxch511xhhxxhxxxxxoptions.setR5xxup50bvxxxxxxxxxxpurpose50("");
      yrxxch511xhhxxhxxxxxoptions.setR6xxuv50bvxxxxxxxxxxvalue50("");
      yrxxch511xhhxxhxxxxxoptions.setR7xxuo51bvxxxxxxxxxxoptions51("");
      yrxxch511xhhxxhxxxxxoptions.setR8xxup51bvxxxxxxxxxxpurpose51("");
      yrxxch511xhhxxhxxxxxoptions.setR9xxuv51bvxxxxxxxxxxvalue51("");
      yrxxch511xhhxxhxxxxxoptions.setS1xxuo52bvxxxxxxxxxxoptions52("");
      yrxxch511xhhxxhxxxxxoptions.setS2xxup52bvxxxxxxxxxxpurpose52("");
      yrxxch511xhhxxhxxxxxoptions.setS3xxuv52bvxxxxxxxxxxvalue52("");
      yrxxch511xhhxxhxxxxxoptions.setS4xxuo53bvxxxxxxxxxxoptions53("");
      yrxxch511xhhxxhxxxxxoptions.setS5xxup53bvxxxxxxxxxxpurpose53("");
      yrxxch511xhhxxhxxxxxoptions.setS6xxuv53bvxxxxxxxxxxvalue53("");

      yrxxch511xhhxxhxxxxxoptions.setS7xxuo54bvxxxxxxxxxxoptions54("");
      yrxxch511xhhxxhxxxxxoptions.setS8xxup54bvxxxxxxxxxxpurpose54("");
      yrxxch511xhhxxhxxxxxoptions.setS9xxuv54bvxxxxxxxxxxvalue54("");
      yrxxch511xhhxxhxxxxxoptions.setT1xxuo55bvxxxxxxxxxxoptions55("");
      yrxxch511xhhxxhxxxxxoptions.setT2xxup55bvxxxxxxxxxxpurpose55("");
      yrxxch511xhhxxhxxxxxoptions.setT3xxuv55bvxxxxxxxxxxvalue55("");
      yrxxch511xhhxxhxxxxxoptions.setT4xxuo56bvxxxxxxxxxxoptions56("");
      yrxxch511xhhxxhxxxxxoptions.setT5xxup56bvxxxxxxxxxxpurpose56("");
      yrxxch511xhhxxhxxxxxoptions.setT6xxuv56bvxxxxxxxxxxvalue56("");
      yrxxch511xhhxxhxxxxxoptions.setT7xxuo57bvxxxxxxxxxxoptions57("");
      yrxxch511xhhxxhxxxxxoptions.setT8xxup57bvxxxxxxxxxxpurpose57("");
      yrxxch511xhhxxhxxxxxoptions.setT9xxuv57bvxxxxxxxxxxvalue57("");
      yrxxch511xhhxxhxxxxxoptions.setU1xxuo58bvxxxxxxxxxxoptions58("");
      yrxxch511xhhxxhxxxxxoptions.setU2xxup58bvxxxxxxxxxxpurpose58("");
      yrxxch511xhhxxhxxxxxoptions.setU3xxuv58bvxxxxxxxxxxvalue58("");
      yrxxch511xhhxxhxxxxxoptions.setU4xxuo59bvxxxxxxxxxxoptions59("");
      yrxxch511xhhxxhxxxxxoptions.setU5xxup59bvxxxxxxxxxxpurpose59("");
      yrxxch511xhhxxhxxxxxoptions.setU6xxuv59bvxxxxxxxxxxvalue59("");
      yrxxch511xhhxxhxxxxxoptions.setU7xxuo60bvxxxxxxxxxxoptions60("");
      yrxxch511xhhxxhxxxxxoptions.setU8xxup60bvxxxxxxxxxxpurpose60("");
      yrxxch511xhhxxhxxxxxoptions.setU9xxuv60bvxxxxxxxxxxvalue60("");
      yrxxch511xhhxxhxxxxxoptions.setV1xxuo61bvxxxxxxxxxxoptions61("");
      yrxxch511xhhxxhxxxxxoptions.setV2xxup61bvxxxxxxxxxxpurpose61("");
      yrxxch511xhhxxhxxxxxoptions.setV3xxuv61bvxxxxxxxxxxvalue61("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptionsHome.persist(client);


      yrxxch511xhhxxhxxxxxoptionsHome.clearInstance();
      yrxxch511xhhxxhxxxxxoptions=yrxxch511xhhxxhxxxxxoptionsHome.getInstance();
      yrxxch511xhhxxhxxxxxoptions.setA0xxukcxbvxxxxxxxxxxrow("25");
      yrxxch511xhhxxhxxxxxoptions.setB1xxuo01bvxxxxxxxxxxoptions01("R");
      yrxxch511xhhxxhxxxxxoptions.setB2xxup01bvxxxxxxxxxxpurpose01("Retained Earning");
      yrxxch511xhhxxhxxxxxoptions.setB3xxuv01bvxxxxxxxxxxvalue01("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptions.setB4xxuo02bvxxxxxxxxxxoptions02("S");
      yrxxch511xhhxxhxxxxxoptions.setB5xxup02bvxxxxxxxxxxpurpose02("Subheader");
      yrxxch511xhhxxhxxxxxoptions.setB6xxuv02bvxxxxxxxxxxvalue02("");
      yrxxch511xhhxxhxxxxxoptions.setB7xxuo03bvxxxxxxxxxxoptions03("P");
      yrxxch511xhhxxhxxxxxoptions.setB8xxup03bvxxxxxxxxxxpurpose03("Payable");
      yrxxch511xhhxxhxxxxxoptions.setB9xxuv03bvxxxxxxxxxxvalue03("");
      yrxxch511xhhxxhxxxxxoptions.setC1xxuo04bvxxxxxxxxxxoptions04("");
      yrxxch511xhhxxhxxxxxoptions.setC2xxup04bvxxxxxxxxxxpurpose04("");
      yrxxch511xhhxxhxxxxxoptions.setC3xxuv04bvxxxxxxxxxxvalue04("");
      yrxxch511xhhxxhxxxxxoptions.setC4xxuo05bvxxxxxxxxxxoptions05("");
      yrxxch511xhhxxhxxxxxoptions.setC5xxup05bvxxxxxxxxxxpurpose05("");
      yrxxch511xhhxxhxxxxxoptions.setC6xxuv05bvxxxxxxxxxxvalue05("");
      yrxxch511xhhxxhxxxxxoptions.setC7xxuo06bvxxxxxxxxxxoptions06("");
      yrxxch511xhhxxhxxxxxoptions.setC8xxup06bvxxxxxxxxxxpurpose06("");
      yrxxch511xhhxxhxxxxxoptions.setC9xxuv06bvxxxxxxxxxxvalue06("");
      yrxxch511xhhxxhxxxxxoptions.setD1xxuo07bvxxxxxxxxxxoptions07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD2xxup07bvxxxxxxxxxxpurpose07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD3xxuv07bvxxxxxxxxxxvalue07("");
      yrxxch511xhhxxhxxxxxoptions.setD4xxuo08bvxxxxxxxxxxoptions08("H");
      yrxxch511xhhxxhxxxxxoptions.setD5xxup08bvxxxxxxxxxxpurpose08("High");
      yrxxch511xhhxxhxxxxxoptions.setD6xxuv08bvxxxxxxxxxxvalue08("");
      yrxxch511xhhxxhxxxxxoptions.setD7xxuo09bvxxxxxxxxxxoptions09("30");
      yrxxch511xhhxxhxxxxxoptions.setD8xxup09bvxxxxxxxxxxpurpose09("-30 days");
      yrxxch511xhhxxhxxxxxoptions.setD9xxuv09bvxxxxxxxxxxvalue09("");
      yrxxch511xhhxxhxxxxxoptions.setE1xxuo10bvxxxxxxxxxxoptions10("cash");
      yrxxch511xhhxxhxxxxxoptions.setE2xxup10bvxxxxxxxxxxpurpose10("-cash");
      yrxxch511xhhxxhxxxxxoptions.setE3xxuv10bvxxxxxxxxxxvalue10("");
      yrxxch511xhhxxhxxxxxoptions.setE4xxuo11bvxxxxxxxxxxoptions11("Montreal");
      yrxxch511xhhxxhxxxxxoptions.setE5xxup11bvxxxxxxxxxxpurpose11("Toronto");
      yrxxch511xhhxxhxxxxxoptions.setE6xxuv11bvxxxxxxxxxxvalue11("ca=Montreal; us=Boston");
      yrxxch511xhhxxhxxxxxoptions.setE7xxuo12bvxxxxxxxxxxoptions12("QE");
      yrxxch511xhhxxhxxxxxoptions.setE8xxup12bvxxxxxxxxxxpurpose12("Quebec");
      yrxxch511xhhxxhxxxxxoptions.setE9xxuv12bvxxxxxxxxxxvalue12("ca=QE us=CA");
      yrxxch511xhhxxhxxxxxoptions.setF1xxuo13bvxxxxxxxxxxoptions13("");
      yrxxch511xhhxxhxxxxxoptions.setF2xxup13bvxxxxxxxxxxpurpose13("");
      yrxxch511xhhxxhxxxxxoptions.setF3xxuv13bvxxxxxxxxxxvalue13("");
      yrxxch511xhhxxhxxxxxoptions.setF4xxuo14bvxxxxxxxxxxoptions14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF5xxup14bvxxxxxxxxxxpurpose14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF6xxuv14bvxxxxxxxxxxvalue14("ca=M4L3Z8 us=10003 in=70003");
      yrxxch511xhhxxhxxxxxoptions.setF7xxuo15bvxxxxxxxxxxoptions15("Y");
      yrxxch511xhhxxhxxxxxoptions.setF8xxup15bvxxxxxxxxxxpurpose15("Yes");
      yrxxch511xhhxxhxxxxxoptions.setF9xxuv15bvxxxxxxxxxxvalue15("");
      yrxxch511xhhxxhxxxxxoptions.setG1xxuo16bvxxxxxxxxxxoptions16("CI-L1");
      yrxxch511xhhxxhxxxxxoptions.setG2xxup16bvxxxxxxxxxxpurpose16("Case-Categories");
      yrxxch511xhhxxhxxxxxoptions.setG3xxuv16bvxxxxxxxxxxvalue16("");
      yrxxch511xhhxxhxxxxxoptions.setG4xxuo17bvxxxxxxxxxxoptions17("?");
      yrxxch511xhhxxhxxxxxoptions.setG5xxup17bvxxxxxxxxxxpurpose17("?");
      yrxxch511xhhxxhxxxxxoptions.setG6xxuv17bvxxxxxxxxxxvalue17("");
      yrxxch511xhhxxhxxxxxoptions.setG7xxuo18bvxxxxxxxxxxoptions18("AH");
      yrxxch511xhhxxhxxxxxoptions.setG8xxup18bvxxxxxxxxxxpurpose18("Hourly");
      yrxxch511xhhxxhxxxxxoptions.setG9xxuv18bvxxxxxxxxxxvalue18("s=89");
      yrxxch511xhhxxhxxxxxoptions.setH1xxuo19bvxxxxxxxxxxoptions19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH2xxup19bvxxxxxxxxxxpurpose19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH3xxuv19bvxxxxxxxxxxvalue19("");
      yrxxch511xhhxxhxxxxxoptions.setH4xxuo20bvxxxxxxxxxxoptions20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH5xxup20bvxxxxxxxxxxpurpose20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH6xxuv20bvxxxxxxxxxxvalue20("");
      yrxxch511xhhxxhxxxxxoptions.setH7xxuo21bvxxxxxxxxxxoptions21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH8xxup21bvxxxxxxxxxxpurpose21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH9xxuv21bvxxxxxxxxxxvalue21("");
      yrxxch511xhhxxhxxxxxoptions.setI1xxuo22bvxxxxxxxxxxoptions22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI2xxup22bvxxxxxxxxxxpurpose22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI3xxuv22bvxxxxxxxxxxvalue22("");
      yrxxch511xhhxxhxxxxxoptions.setI4xxuo23bvxxxxxxxxxxoptions23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI5xxup23bvxxxxxxxxxxpurpose23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI6xxuv23bvxxxxxxxxxxvalue23("");
      yrxxch511xhhxxhxxxxxoptions.setI7xxuo24bvxxxxxxxxxxoptions24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI8xxup24bvxxxxxxxxxxpurpose24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI9xxuv24bvxxxxxxxxxxvalue24("");
      yrxxch511xhhxxhxxxxxoptions.setJ1xxuo25bvxxxxxxxxxxoptions25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ2xxup25bvxxxxxxxxxxpurpose25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ3xxuv25bvxxxxxxxxxxvalue25("");
      yrxxch511xhhxxhxxxxxoptions.setJ4xxuo26bvxxxxxxxxxxoptions26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ5xxup26bvxxxxxxxxxxpurpose26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ6xxuv26bvxxxxxxxxxxvalue26("");
      yrxxch511xhhxxhxxxxxoptions.setJ7xxuo27bvxxxxxxxxxxoptions27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ8xxup27bvxxxxxxxxxxpurpose27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ9xxuv27bvxxxxxxxxxxvalue27("");
      yrxxch511xhhxxhxxxxxoptions.setK1xxuo28bvxxxxxxxxxxoptions28("PF");
      yrxxch511xhhxxhxxxxxoptions.setK2xxup28bvxxxxxxxxxxpurpose28("Persons-Family");
      yrxxch511xhhxxhxxxxxoptions.setK3xxuv28bvxxxxxxxxxxvalue28("");
      yrxxch511xhhxxhxxxxxoptions.setK4xxuo29bvxxxxxxxxxxoptions29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK5xxup29bvxxxxxxxxxxpurpose29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK6xxuv29bvxxxxxxxxxxvalue29("");
      yrxxch511xhhxxhxxxxxoptions.setK7xxuo30bvxxxxxxxxxxoptions30("EM");
      yrxxch511xhhxxhxxxxxoptions.setK8xxup30bvxxxxxxxxxxpurpose30("EMail");
      yrxxch511xhhxxhxxxxxoptions.setK9xxuv30bvxxxxxxxxxxvalue30("");
      yrxxch511xhhxxhxxxxxoptions.setL1xxuo31bvxxxxxxxxxxoptions31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL2xxup31bvxxxxxxxxxxpurpose31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL3xxuv31bvxxxxxxxxxxvalue31("");
      yrxxch511xhhxxhxxxxxoptions.setL4xxuo32bvxxxxxxxxxxoptions32("Room 107");
      yrxxch511xhhxxhxxxxxoptions.setL5xxup32bvxxxxxxxxxxpurpose32("Room 107");
      yrxxch511xhhxxhxxxxxoptions.setL6xxuv32bvxxxxxxxxxxvalue32("");
      yrxxch511xhhxxhxxxxxoptions.setL7xxuo33bvxxxxxxxxxxoptions33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL8xxup33bvxxxxxxxxxxpurpose33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL9xxuv33bvxxxxxxxxxxvalue33("");
      yrxxch511xhhxxhxxxxxoptions.setM1xxuo34bvxxxxxxxxxxoptions34("");
      yrxxch511xhhxxhxxxxxoptions.setM2xxup34bvxxxxxxxxxxpurpose34("");
      yrxxch511xhhxxhxxxxxoptions.setM3xxuv34bvxxxxxxxxxxvalue34("");
      yrxxch511xhhxxhxxxxxoptions.setM4xxuo35bvxxxxxxxxxxoptions35("Lunch Appontment");
      yrxxch511xhhxxhxxxxxoptions.setM5xxup35bvxxxxxxxxxxpurpose35("c$88.90");
      yrxxch511xhhxxhxxxxxoptions.setM6xxuv35bvxxxxxxxxxxvalue35("");
      yrxxch511xhhxxhxxxxxoptions.setM7xxuo36bvxxxxxxxxxxoptions36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM8xxup36bvxxxxxxxxxxpurpose36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM9xxuv36bvxxxxxxxxxxvalue36("");
      yrxxch511xhhxxhxxxxxoptions.setN1xxuo37bvxxxxxxxxxxoptions37("High");
      yrxxch511xhhxxhxxxxxoptions.setN2xxup37bvxxxxxxxxxxpurpose37("High");
      yrxxch511xhhxxhxxxxxoptions.setN3xxuv37bvxxxxxxxxxxvalue37("");
      yrxxch511xhhxxhxxxxxoptions.setN4xxuo38bvxxxxxxxxxxoptions38("S");
      yrxxch511xhhxxhxxxxxoptions.setN5xxup38bvxxxxxxxxxxpurpose38("System Admin");
      yrxxch511xhhxxhxxxxxoptions.setN6xxuv38bvxxxxxxxxxxvalue38("");
      yrxxch511xhhxxhxxxxxoptions.setN7xxuo39bvxxxxxxxxxxoptions39("H");
      yrxxch511xhhxxhxxxxxoptions.setN8xxup39bvxxxxxxxxxxpurpose39("High");
      yrxxch511xhhxxhxxxxxoptions.setN9xxuv39bvxxxxxxxxxxvalue39("");
      yrxxch511xhhxxhxxxxxoptions.setO1xxuo40bvxxxxxxxxxxoptions40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO2xxup40bvxxxxxxxxxxpurpose40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO3xxuv40bvxxxxxxxxxxvalue40("");
      yrxxch511xhhxxhxxxxxoptions.setO4xxuo41bvxxxxxxxxxxoptions41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO5xxup41bvxxxxxxxxxxpurpose41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO6xxuv41bvxxxxxxxxxxvalue41("");
      yrxxch511xhhxxhxxxxxoptions.setO7xxuo42bvxxxxxxxxxxoptions42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO8xxup42bvxxxxxxxxxxpurpose42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO9xxuv42bvxxxxxxxxxxvalue42("");
      yrxxch511xhhxxhxxxxxoptions.setP1xxuo43bvxxxxxxxxxxoptions43("New");
      yrxxch511xhhxxhxxxxxoptions.setP2xxup43bvxxxxxxxxxxpurpose43("New");
      yrxxch511xhhxxhxxxxxoptions.setP3xxuv43bvxxxxxxxxxxvalue43("");
      yrxxch511xhhxxhxxxxxoptions.setP4xxuo44bvxxxxxxxxxxoptions44("");
      yrxxch511xhhxxhxxxxxoptions.setP5xxup44bvxxxxxxxxxxpurpose44("");
      yrxxch511xhhxxhxxxxxoptions.setP6xxuv44bvxxxxxxxxxxvalue44("");
      yrxxch511xhhxxhxxxxxoptions.setP7xxuo45bvxxxxxxxxxxoptions45("D");
      yrxxch511xhhxxhxxxxxoptions.setP8xxup45bvxxxxxxxxxxpurpose45("");
      yrxxch511xhhxxhxxxxxoptions.setP9xxuv45bvxxxxxxxxxxvalue45("");
      yrxxch511xhhxxhxxxxxoptions.setQ1xxuo46bvxxxxxxxxxxoptions46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ2xxup46bvxxxxxxxxxxpurpose46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ3xxuv46bvxxxxxxxxxxvalue46("");
      yrxxch511xhhxxhxxxxxoptions.setQ4xxuo47bvxxxxxxxxxxoptions47("04");
      yrxxch511xhhxxhxxxxxoptions.setQ5xxup47bvxxxxxxxxxxpurpose47("04");
      yrxxch511xhhxxhxxxxxoptions.setQ6xxuv47bvxxxxxxxxxxvalue47("");
      yrxxch511xhhxxhxxxxxoptions.setQ7xxuo48bvxxxxxxxxxxoptions48("");
      yrxxch511xhhxxhxxxxxoptions.setQ8xxup48bvxxxxxxxxxxpurpose48("");
      yrxxch511xhhxxhxxxxxoptions.setQ9xxuv48bvxxxxxxxxxxvalue48("");
      yrxxch511xhhxxhxxxxxoptions.setR1xxuo49bvxxxxxxxxxxoptions49("3R-RESELLERS-1-C");
      yrxxch511xhhxxhxxxxxoptions.setR2xxup49bvxxxxxxxxxxpurpose49("Resellers Panel 1");
      yrxxch511xhhxxhxxxxxoptions.setR3xxuv49bvxxxxxxxxxxvalue49("");
      yrxxch511xhhxxhxxxxxoptions.setR4xxuo50bvxxxxxxxxxxoptions50("");
      yrxxch511xhhxxhxxxxxoptions.setR5xxup50bvxxxxxxxxxxpurpose50("");
      yrxxch511xhhxxhxxxxxoptions.setR6xxuv50bvxxxxxxxxxxvalue50("");
      yrxxch511xhhxxhxxxxxoptions.setR7xxuo51bvxxxxxxxxxxoptions51("");
      yrxxch511xhhxxhxxxxxoptions.setR8xxup51bvxxxxxxxxxxpurpose51("");
      yrxxch511xhhxxhxxxxxoptions.setR9xxuv51bvxxxxxxxxxxvalue51("");
      yrxxch511xhhxxhxxxxxoptions.setS1xxuo52bvxxxxxxxxxxoptions52("");
      yrxxch511xhhxxhxxxxxoptions.setS2xxup52bvxxxxxxxxxxpurpose52("");
      yrxxch511xhhxxhxxxxxoptions.setS3xxuv52bvxxxxxxxxxxvalue52("");
      yrxxch511xhhxxhxxxxxoptions.setS4xxuo53bvxxxxxxxxxxoptions53("");
      yrxxch511xhhxxhxxxxxoptions.setS5xxup53bvxxxxxxxxxxpurpose53("");
      yrxxch511xhhxxhxxxxxoptions.setS6xxuv53bvxxxxxxxxxxvalue53("");

      yrxxch511xhhxxhxxxxxoptions.setS7xxuo54bvxxxxxxxxxxoptions54("");
      yrxxch511xhhxxhxxxxxoptions.setS8xxup54bvxxxxxxxxxxpurpose54("");
      yrxxch511xhhxxhxxxxxoptions.setS9xxuv54bvxxxxxxxxxxvalue54("");
      yrxxch511xhhxxhxxxxxoptions.setT1xxuo55bvxxxxxxxxxxoptions55("");
      yrxxch511xhhxxhxxxxxoptions.setT2xxup55bvxxxxxxxxxxpurpose55("");
      yrxxch511xhhxxhxxxxxoptions.setT3xxuv55bvxxxxxxxxxxvalue55("");
      yrxxch511xhhxxhxxxxxoptions.setT4xxuo56bvxxxxxxxxxxoptions56("");
      yrxxch511xhhxxhxxxxxoptions.setT5xxup56bvxxxxxxxxxxpurpose56("");
      yrxxch511xhhxxhxxxxxoptions.setT6xxuv56bvxxxxxxxxxxvalue56("");
      yrxxch511xhhxxhxxxxxoptions.setT7xxuo57bvxxxxxxxxxxoptions57("");
      yrxxch511xhhxxhxxxxxoptions.setT8xxup57bvxxxxxxxxxxpurpose57("");
      yrxxch511xhhxxhxxxxxoptions.setT9xxuv57bvxxxxxxxxxxvalue57("");
      yrxxch511xhhxxhxxxxxoptions.setU1xxuo58bvxxxxxxxxxxoptions58("");
      yrxxch511xhhxxhxxxxxoptions.setU2xxup58bvxxxxxxxxxxpurpose58("");
      yrxxch511xhhxxhxxxxxoptions.setU3xxuv58bvxxxxxxxxxxvalue58("");
      yrxxch511xhhxxhxxxxxoptions.setU4xxuo59bvxxxxxxxxxxoptions59("");
      yrxxch511xhhxxhxxxxxoptions.setU5xxup59bvxxxxxxxxxxpurpose59("");
      yrxxch511xhhxxhxxxxxoptions.setU6xxuv59bvxxxxxxxxxxvalue59("");
      yrxxch511xhhxxhxxxxxoptions.setU7xxuo60bvxxxxxxxxxxoptions60("");
      yrxxch511xhhxxhxxxxxoptions.setU8xxup60bvxxxxxxxxxxpurpose60("");
      yrxxch511xhhxxhxxxxxoptions.setU9xxuv60bvxxxxxxxxxxvalue60("");
      yrxxch511xhhxxhxxxxxoptions.setV1xxuo61bvxxxxxxxxxxoptions61("");
      yrxxch511xhhxxhxxxxxoptions.setV2xxup61bvxxxxxxxxxxpurpose61("");
      yrxxch511xhhxxhxxxxxoptions.setV3xxuv61bvxxxxxxxxxxvalue61("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptionsHome.persist(client);


      yrxxch511xhhxxhxxxxxoptionsHome.clearInstance();
      yrxxch511xhhxxhxxxxxoptions=yrxxch511xhhxxhxxxxxoptionsHome.getInstance();
      yrxxch511xhhxxhxxxxxoptions.setA0xxukcxbvxxxxxxxxxxrow("26");
      yrxxch511xhhxxhxxxxxoptions.setB1xxuo01bvxxxxxxxxxxoptions01("R");
      yrxxch511xhhxxhxxxxxoptions.setB2xxup01bvxxxxxxxxxxpurpose01("Retained Earning");
      yrxxch511xhhxxhxxxxxoptions.setB3xxuv01bvxxxxxxxxxxvalue01("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptions.setB4xxuo02bvxxxxxxxxxxoptions02("S");
      yrxxch511xhhxxhxxxxxoptions.setB5xxup02bvxxxxxxxxxxpurpose02("Subheader");
      yrxxch511xhhxxhxxxxxoptions.setB6xxuv02bvxxxxxxxxxxvalue02("");
      yrxxch511xhhxxhxxxxxoptions.setB7xxuo03bvxxxxxxxxxxoptions03("P");
      yrxxch511xhhxxhxxxxxoptions.setB8xxup03bvxxxxxxxxxxpurpose03("Payable");
      yrxxch511xhhxxhxxxxxoptions.setB9xxuv03bvxxxxxxxxxxvalue03("");
      yrxxch511xhhxxhxxxxxoptions.setC1xxuo04bvxxxxxxxxxxoptions04("");
      yrxxch511xhhxxhxxxxxoptions.setC2xxup04bvxxxxxxxxxxpurpose04("");
      yrxxch511xhhxxhxxxxxoptions.setC3xxuv04bvxxxxxxxxxxvalue04("");
      yrxxch511xhhxxhxxxxxoptions.setC4xxuo05bvxxxxxxxxxxoptions05("");
      yrxxch511xhhxxhxxxxxoptions.setC5xxup05bvxxxxxxxxxxpurpose05("");
      yrxxch511xhhxxhxxxxxoptions.setC6xxuv05bvxxxxxxxxxxvalue05("");
      yrxxch511xhhxxhxxxxxoptions.setC7xxuo06bvxxxxxxxxxxoptions06("");
      yrxxch511xhhxxhxxxxxoptions.setC8xxup06bvxxxxxxxxxxpurpose06("");
      yrxxch511xhhxxhxxxxxoptions.setC9xxuv06bvxxxxxxxxxxvalue06("");
      yrxxch511xhhxxhxxxxxoptions.setD1xxuo07bvxxxxxxxxxxoptions07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD2xxup07bvxxxxxxxxxxpurpose07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD3xxuv07bvxxxxxxxxxxvalue07("");
      yrxxch511xhhxxhxxxxxoptions.setD4xxuo08bvxxxxxxxxxxoptions08("H");
      yrxxch511xhhxxhxxxxxoptions.setD5xxup08bvxxxxxxxxxxpurpose08("High");
      yrxxch511xhhxxhxxxxxoptions.setD6xxuv08bvxxxxxxxxxxvalue08("");
      yrxxch511xhhxxhxxxxxoptions.setD7xxuo09bvxxxxxxxxxxoptions09("30");
      yrxxch511xhhxxhxxxxxoptions.setD8xxup09bvxxxxxxxxxxpurpose09("-30 days");
      yrxxch511xhhxxhxxxxxoptions.setD9xxuv09bvxxxxxxxxxxvalue09("");
      yrxxch511xhhxxhxxxxxoptions.setE1xxuo10bvxxxxxxxxxxoptions10("cash");
      yrxxch511xhhxxhxxxxxoptions.setE2xxup10bvxxxxxxxxxxpurpose10("-cash");
      yrxxch511xhhxxhxxxxxoptions.setE3xxuv10bvxxxxxxxxxxvalue10("");
      yrxxch511xhhxxhxxxxxoptions.setE4xxuo11bvxxxxxxxxxxoptions11("Montreal");
      yrxxch511xhhxxhxxxxxoptions.setE5xxup11bvxxxxxxxxxxpurpose11("Toronto");
      yrxxch511xhhxxhxxxxxoptions.setE6xxuv11bvxxxxxxxxxxvalue11("ca=Montreal; us=Boston");
      yrxxch511xhhxxhxxxxxoptions.setE7xxuo12bvxxxxxxxxxxoptions12("QE");
      yrxxch511xhhxxhxxxxxoptions.setE8xxup12bvxxxxxxxxxxpurpose12("Quebec");
      yrxxch511xhhxxhxxxxxoptions.setE9xxuv12bvxxxxxxxxxxvalue12("ca=QE us=CA");
      yrxxch511xhhxxhxxxxxoptions.setF1xxuo13bvxxxxxxxxxxoptions13("");
      yrxxch511xhhxxhxxxxxoptions.setF2xxup13bvxxxxxxxxxxpurpose13("");
      yrxxch511xhhxxhxxxxxoptions.setF3xxuv13bvxxxxxxxxxxvalue13("");
      yrxxch511xhhxxhxxxxxoptions.setF4xxuo14bvxxxxxxxxxxoptions14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF5xxup14bvxxxxxxxxxxpurpose14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF6xxuv14bvxxxxxxxxxxvalue14("ca=M4L3Z8 us=10003 in=70003");
      yrxxch511xhhxxhxxxxxoptions.setF7xxuo15bvxxxxxxxxxxoptions15("Y");
      yrxxch511xhhxxhxxxxxoptions.setF8xxup15bvxxxxxxxxxxpurpose15("Yes");
      yrxxch511xhhxxhxxxxxoptions.setF9xxuv15bvxxxxxxxxxxvalue15("");
      yrxxch511xhhxxhxxxxxoptions.setG1xxuo16bvxxxxxxxxxxoptions16("CI-L*");
      yrxxch511xhhxxhxxxxxoptions.setG2xxup16bvxxxxxxxxxxpurpose16("Case-SubCategories");
      yrxxch511xhhxxhxxxxxoptions.setG3xxuv16bvxxxxxxxxxxvalue16("");
      yrxxch511xhhxxhxxxxxoptions.setG4xxuo17bvxxxxxxxxxxoptions17("?");
      yrxxch511xhhxxhxxxxxoptions.setG5xxup17bvxxxxxxxxxxpurpose17("?");
      yrxxch511xhhxxhxxxxxoptions.setG6xxuv17bvxxxxxxxxxxvalue17("");
      yrxxch511xhhxxhxxxxxoptions.setG7xxuo18bvxxxxxxxxxxoptions18("AH");
      yrxxch511xhhxxhxxxxxoptions.setG8xxup18bvxxxxxxxxxxpurpose18("Hourly");
      yrxxch511xhhxxhxxxxxoptions.setG9xxuv18bvxxxxxxxxxxvalue18("s=89");
      yrxxch511xhhxxhxxxxxoptions.setH1xxuo19bvxxxxxxxxxxoptions19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH2xxup19bvxxxxxxxxxxpurpose19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH3xxuv19bvxxxxxxxxxxvalue19("");
      yrxxch511xhhxxhxxxxxoptions.setH4xxuo20bvxxxxxxxxxxoptions20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH5xxup20bvxxxxxxxxxxpurpose20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH6xxuv20bvxxxxxxxxxxvalue20("");
      yrxxch511xhhxxhxxxxxoptions.setH7xxuo21bvxxxxxxxxxxoptions21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH8xxup21bvxxxxxxxxxxpurpose21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH9xxuv21bvxxxxxxxxxxvalue21("");
      yrxxch511xhhxxhxxxxxoptions.setI1xxuo22bvxxxxxxxxxxoptions22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI2xxup22bvxxxxxxxxxxpurpose22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI3xxuv22bvxxxxxxxxxxvalue22("");
      yrxxch511xhhxxhxxxxxoptions.setI4xxuo23bvxxxxxxxxxxoptions23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI5xxup23bvxxxxxxxxxxpurpose23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI6xxuv23bvxxxxxxxxxxvalue23("");
      yrxxch511xhhxxhxxxxxoptions.setI7xxuo24bvxxxxxxxxxxoptions24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI8xxup24bvxxxxxxxxxxpurpose24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI9xxuv24bvxxxxxxxxxxvalue24("");
      yrxxch511xhhxxhxxxxxoptions.setJ1xxuo25bvxxxxxxxxxxoptions25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ2xxup25bvxxxxxxxxxxpurpose25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ3xxuv25bvxxxxxxxxxxvalue25("");
      yrxxch511xhhxxhxxxxxoptions.setJ4xxuo26bvxxxxxxxxxxoptions26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ5xxup26bvxxxxxxxxxxpurpose26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ6xxuv26bvxxxxxxxxxxvalue26("");
      yrxxch511xhhxxhxxxxxoptions.setJ7xxuo27bvxxxxxxxxxxoptions27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ8xxup27bvxxxxxxxxxxpurpose27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ9xxuv27bvxxxxxxxxxxvalue27("");
      yrxxch511xhhxxhxxxxxoptions.setK1xxuo28bvxxxxxxxxxxoptions28("PF");
      yrxxch511xhhxxhxxxxxoptions.setK2xxup28bvxxxxxxxxxxpurpose28("Persons-Family");
      yrxxch511xhhxxhxxxxxoptions.setK3xxuv28bvxxxxxxxxxxvalue28("");
      yrxxch511xhhxxhxxxxxoptions.setK4xxuo29bvxxxxxxxxxxoptions29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK5xxup29bvxxxxxxxxxxpurpose29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK6xxuv29bvxxxxxxxxxxvalue29("");
      yrxxch511xhhxxhxxxxxoptions.setK7xxuo30bvxxxxxxxxxxoptions30("EM");
      yrxxch511xhhxxhxxxxxoptions.setK8xxup30bvxxxxxxxxxxpurpose30("EMail");
      yrxxch511xhhxxhxxxxxoptions.setK9xxuv30bvxxxxxxxxxxvalue30("");
      yrxxch511xhhxxhxxxxxoptions.setL1xxuo31bvxxxxxxxxxxoptions31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL2xxup31bvxxxxxxxxxxpurpose31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL3xxuv31bvxxxxxxxxxxvalue31("");
      yrxxch511xhhxxhxxxxxoptions.setL4xxuo32bvxxxxxxxxxxoptions32("Room 107");
      yrxxch511xhhxxhxxxxxoptions.setL5xxup32bvxxxxxxxxxxpurpose32("Room 107");
      yrxxch511xhhxxhxxxxxoptions.setL6xxuv32bvxxxxxxxxxxvalue32("");
      yrxxch511xhhxxhxxxxxoptions.setL7xxuo33bvxxxxxxxxxxoptions33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL8xxup33bvxxxxxxxxxxpurpose33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL9xxuv33bvxxxxxxxxxxvalue33("");
      yrxxch511xhhxxhxxxxxoptions.setM1xxuo34bvxxxxxxxxxxoptions34("");
      yrxxch511xhhxxhxxxxxoptions.setM2xxup34bvxxxxxxxxxxpurpose34("");
      yrxxch511xhhxxhxxxxxoptions.setM3xxuv34bvxxxxxxxxxxvalue34("");
      yrxxch511xhhxxhxxxxxoptions.setM4xxuo35bvxxxxxxxxxxoptions35("Lunch Appontment");
      yrxxch511xhhxxhxxxxxoptions.setM5xxup35bvxxxxxxxxxxpurpose35("c$88.90");
      yrxxch511xhhxxhxxxxxoptions.setM6xxuv35bvxxxxxxxxxxvalue35("");
      yrxxch511xhhxxhxxxxxoptions.setM7xxuo36bvxxxxxxxxxxoptions36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM8xxup36bvxxxxxxxxxxpurpose36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM9xxuv36bvxxxxxxxxxxvalue36("");
      yrxxch511xhhxxhxxxxxoptions.setN1xxuo37bvxxxxxxxxxxoptions37("High");
      yrxxch511xhhxxhxxxxxoptions.setN2xxup37bvxxxxxxxxxxpurpose37("High");
      yrxxch511xhhxxhxxxxxoptions.setN3xxuv37bvxxxxxxxxxxvalue37("");
      yrxxch511xhhxxhxxxxxoptions.setN4xxuo38bvxxxxxxxxxxoptions38("S");
      yrxxch511xhhxxhxxxxxoptions.setN5xxup38bvxxxxxxxxxxpurpose38("System Admin");
      yrxxch511xhhxxhxxxxxoptions.setN6xxuv38bvxxxxxxxxxxvalue38("");
      yrxxch511xhhxxhxxxxxoptions.setN7xxuo39bvxxxxxxxxxxoptions39("H");
      yrxxch511xhhxxhxxxxxoptions.setN8xxup39bvxxxxxxxxxxpurpose39("High");
      yrxxch511xhhxxhxxxxxoptions.setN9xxuv39bvxxxxxxxxxxvalue39("");
      yrxxch511xhhxxhxxxxxoptions.setO1xxuo40bvxxxxxxxxxxoptions40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO2xxup40bvxxxxxxxxxxpurpose40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO3xxuv40bvxxxxxxxxxxvalue40("");
      yrxxch511xhhxxhxxxxxoptions.setO4xxuo41bvxxxxxxxxxxoptions41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO5xxup41bvxxxxxxxxxxpurpose41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO6xxuv41bvxxxxxxxxxxvalue41("");
      yrxxch511xhhxxhxxxxxoptions.setO7xxuo42bvxxxxxxxxxxoptions42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO8xxup42bvxxxxxxxxxxpurpose42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO9xxuv42bvxxxxxxxxxxvalue42("");
      yrxxch511xhhxxhxxxxxoptions.setP1xxuo43bvxxxxxxxxxxoptions43("New");
      yrxxch511xhhxxhxxxxxoptions.setP2xxup43bvxxxxxxxxxxpurpose43("New");
      yrxxch511xhhxxhxxxxxoptions.setP3xxuv43bvxxxxxxxxxxvalue43("");
      yrxxch511xhhxxhxxxxxoptions.setP4xxuo44bvxxxxxxxxxxoptions44("");
      yrxxch511xhhxxhxxxxxoptions.setP5xxup44bvxxxxxxxxxxpurpose44("");
      yrxxch511xhhxxhxxxxxoptions.setP6xxuv44bvxxxxxxxxxxvalue44("");
      yrxxch511xhhxxhxxxxxoptions.setP7xxuo45bvxxxxxxxxxxoptions45("D");
      yrxxch511xhhxxhxxxxxoptions.setP8xxup45bvxxxxxxxxxxpurpose45("");
      yrxxch511xhhxxhxxxxxoptions.setP9xxuv45bvxxxxxxxxxxvalue45("");
      yrxxch511xhhxxhxxxxxoptions.setQ1xxuo46bvxxxxxxxxxxoptions46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ2xxup46bvxxxxxxxxxxpurpose46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ3xxuv46bvxxxxxxxxxxvalue46("");
      yrxxch511xhhxxhxxxxxoptions.setQ4xxuo47bvxxxxxxxxxxoptions47("04");
      yrxxch511xhhxxhxxxxxoptions.setQ5xxup47bvxxxxxxxxxxpurpose47("04");
      yrxxch511xhhxxhxxxxxoptions.setQ6xxuv47bvxxxxxxxxxxvalue47("");
      yrxxch511xhhxxhxxxxxoptions.setQ7xxuo48bvxxxxxxxxxxoptions48("");
      yrxxch511xhhxxhxxxxxoptions.setQ8xxup48bvxxxxxxxxxxpurpose48("");
      yrxxch511xhhxxhxxxxxoptions.setQ9xxuv48bvxxxxxxxxxxvalue48("");
      yrxxch511xhhxxhxxxxxoptions.setR1xxuo49bvxxxxxxxxxxoptions49("3R-LOGO-C");
      yrxxch511xhhxxhxxxxxoptions.setR2xxup49bvxxxxxxxxxxpurpose49("LOGO for visitor site menu and reports");
      yrxxch511xhhxxhxxxxxoptions.setR3xxuv49bvxxxxxxxxxxvalue49("");
      yrxxch511xhhxxhxxxxxoptions.setR4xxuo50bvxxxxxxxxxxoptions50("");
      yrxxch511xhhxxhxxxxxoptions.setR5xxup50bvxxxxxxxxxxpurpose50("");
      yrxxch511xhhxxhxxxxxoptions.setR6xxuv50bvxxxxxxxxxxvalue50("");
      yrxxch511xhhxxhxxxxxoptions.setR7xxuo51bvxxxxxxxxxxoptions51("");
      yrxxch511xhhxxhxxxxxoptions.setR8xxup51bvxxxxxxxxxxpurpose51("");
      yrxxch511xhhxxhxxxxxoptions.setR9xxuv51bvxxxxxxxxxxvalue51("");
      yrxxch511xhhxxhxxxxxoptions.setS1xxuo52bvxxxxxxxxxxoptions52("");
      yrxxch511xhhxxhxxxxxoptions.setS2xxup52bvxxxxxxxxxxpurpose52("");
      yrxxch511xhhxxhxxxxxoptions.setS3xxuv52bvxxxxxxxxxxvalue52("");
      yrxxch511xhhxxhxxxxxoptions.setS4xxuo53bvxxxxxxxxxxoptions53("");
      yrxxch511xhhxxhxxxxxoptions.setS5xxup53bvxxxxxxxxxxpurpose53("");
      yrxxch511xhhxxhxxxxxoptions.setS6xxuv53bvxxxxxxxxxxvalue53("");

      yrxxch511xhhxxhxxxxxoptions.setS7xxuo54bvxxxxxxxxxxoptions54("");
      yrxxch511xhhxxhxxxxxoptions.setS8xxup54bvxxxxxxxxxxpurpose54("");
      yrxxch511xhhxxhxxxxxoptions.setS9xxuv54bvxxxxxxxxxxvalue54("");
      yrxxch511xhhxxhxxxxxoptions.setT1xxuo55bvxxxxxxxxxxoptions55("");
      yrxxch511xhhxxhxxxxxoptions.setT2xxup55bvxxxxxxxxxxpurpose55("");
      yrxxch511xhhxxhxxxxxoptions.setT3xxuv55bvxxxxxxxxxxvalue55("");
      yrxxch511xhhxxhxxxxxoptions.setT4xxuo56bvxxxxxxxxxxoptions56("");
      yrxxch511xhhxxhxxxxxoptions.setT5xxup56bvxxxxxxxxxxpurpose56("");
      yrxxch511xhhxxhxxxxxoptions.setT6xxuv56bvxxxxxxxxxxvalue56("");
      yrxxch511xhhxxhxxxxxoptions.setT7xxuo57bvxxxxxxxxxxoptions57("");
      yrxxch511xhhxxhxxxxxoptions.setT8xxup57bvxxxxxxxxxxpurpose57("");
      yrxxch511xhhxxhxxxxxoptions.setT9xxuv57bvxxxxxxxxxxvalue57("");
      yrxxch511xhhxxhxxxxxoptions.setU1xxuo58bvxxxxxxxxxxoptions58("");
      yrxxch511xhhxxhxxxxxoptions.setU2xxup58bvxxxxxxxxxxpurpose58("");
      yrxxch511xhhxxhxxxxxoptions.setU3xxuv58bvxxxxxxxxxxvalue58("");
      yrxxch511xhhxxhxxxxxoptions.setU4xxuo59bvxxxxxxxxxxoptions59("");
      yrxxch511xhhxxhxxxxxoptions.setU5xxup59bvxxxxxxxxxxpurpose59("");
      yrxxch511xhhxxhxxxxxoptions.setU6xxuv59bvxxxxxxxxxxvalue59("");
      yrxxch511xhhxxhxxxxxoptions.setU7xxuo60bvxxxxxxxxxxoptions60("");
      yrxxch511xhhxxhxxxxxoptions.setU8xxup60bvxxxxxxxxxxpurpose60("");
      yrxxch511xhhxxhxxxxxoptions.setU9xxuv60bvxxxxxxxxxxvalue60("");
      yrxxch511xhhxxhxxxxxoptions.setV1xxuo61bvxxxxxxxxxxoptions61("");
      yrxxch511xhhxxhxxxxxoptions.setV2xxup61bvxxxxxxxxxxpurpose61("");
      yrxxch511xhhxxhxxxxxoptions.setV3xxuv61bvxxxxxxxxxxvalue61("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptionsHome.persist(client);


      yrxxch511xhhxxhxxxxxoptionsHome.clearInstance();
      yrxxch511xhhxxhxxxxxoptions=yrxxch511xhhxxhxxxxxoptionsHome.getInstance();
      yrxxch511xhhxxhxxxxxoptions.setA0xxukcxbvxxxxxxxxxxrow("27");
      yrxxch511xhhxxhxxxxxoptions.setB1xxuo01bvxxxxxxxxxxoptions01("R");
      yrxxch511xhhxxhxxxxxoptions.setB2xxup01bvxxxxxxxxxxpurpose01("Retained Earning");
      yrxxch511xhhxxhxxxxxoptions.setB3xxuv01bvxxxxxxxxxxvalue01("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptions.setB4xxuo02bvxxxxxxxxxxoptions02("S");
      yrxxch511xhhxxhxxxxxoptions.setB5xxup02bvxxxxxxxxxxpurpose02("Subheader");
      yrxxch511xhhxxhxxxxxoptions.setB6xxuv02bvxxxxxxxxxxvalue02("");
      yrxxch511xhhxxhxxxxxoptions.setB7xxuo03bvxxxxxxxxxxoptions03("P");
      yrxxch511xhhxxhxxxxxoptions.setB8xxup03bvxxxxxxxxxxpurpose03("Payable");
      yrxxch511xhhxxhxxxxxoptions.setB9xxuv03bvxxxxxxxxxxvalue03("");
      yrxxch511xhhxxhxxxxxoptions.setC1xxuo04bvxxxxxxxxxxoptions04("");
      yrxxch511xhhxxhxxxxxoptions.setC2xxup04bvxxxxxxxxxxpurpose04("");
      yrxxch511xhhxxhxxxxxoptions.setC3xxuv04bvxxxxxxxxxxvalue04("");
      yrxxch511xhhxxhxxxxxoptions.setC4xxuo05bvxxxxxxxxxxoptions05("");
      yrxxch511xhhxxhxxxxxoptions.setC5xxup05bvxxxxxxxxxxpurpose05("");
      yrxxch511xhhxxhxxxxxoptions.setC6xxuv05bvxxxxxxxxxxvalue05("");
      yrxxch511xhhxxhxxxxxoptions.setC7xxuo06bvxxxxxxxxxxoptions06("");
      yrxxch511xhhxxhxxxxxoptions.setC8xxup06bvxxxxxxxxxxpurpose06("");
      yrxxch511xhhxxhxxxxxoptions.setC9xxuv06bvxxxxxxxxxxvalue06("");
      yrxxch511xhhxxhxxxxxoptions.setD1xxuo07bvxxxxxxxxxxoptions07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD2xxup07bvxxxxxxxxxxpurpose07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD3xxuv07bvxxxxxxxxxxvalue07("");
      yrxxch511xhhxxhxxxxxoptions.setD4xxuo08bvxxxxxxxxxxoptions08("H");
      yrxxch511xhhxxhxxxxxoptions.setD5xxup08bvxxxxxxxxxxpurpose08("High");
      yrxxch511xhhxxhxxxxxoptions.setD6xxuv08bvxxxxxxxxxxvalue08("");
      yrxxch511xhhxxhxxxxxoptions.setD7xxuo09bvxxxxxxxxxxoptions09("30");
      yrxxch511xhhxxhxxxxxoptions.setD8xxup09bvxxxxxxxxxxpurpose09("-30 days");
      yrxxch511xhhxxhxxxxxoptions.setD9xxuv09bvxxxxxxxxxxvalue09("");
      yrxxch511xhhxxhxxxxxoptions.setE1xxuo10bvxxxxxxxxxxoptions10("cash");
      yrxxch511xhhxxhxxxxxoptions.setE2xxup10bvxxxxxxxxxxpurpose10("-cash");
      yrxxch511xhhxxhxxxxxoptions.setE3xxuv10bvxxxxxxxxxxvalue10("");
      yrxxch511xhhxxhxxxxxoptions.setE4xxuo11bvxxxxxxxxxxoptions11("Montreal");
      yrxxch511xhhxxhxxxxxoptions.setE5xxup11bvxxxxxxxxxxpurpose11("Toronto");
      yrxxch511xhhxxhxxxxxoptions.setE6xxuv11bvxxxxxxxxxxvalue11("ca=Montreal; us=Boston");
      yrxxch511xhhxxhxxxxxoptions.setE7xxuo12bvxxxxxxxxxxoptions12("QE");
      yrxxch511xhhxxhxxxxxoptions.setE8xxup12bvxxxxxxxxxxpurpose12("Quebec");
      yrxxch511xhhxxhxxxxxoptions.setE9xxuv12bvxxxxxxxxxxvalue12("ca=QE us=CA");
      yrxxch511xhhxxhxxxxxoptions.setF1xxuo13bvxxxxxxxxxxoptions13("");
      yrxxch511xhhxxhxxxxxoptions.setF2xxup13bvxxxxxxxxxxpurpose13("");
      yrxxch511xhhxxhxxxxxoptions.setF3xxuv13bvxxxxxxxxxxvalue13("");
      yrxxch511xhhxxhxxxxxoptions.setF4xxuo14bvxxxxxxxxxxoptions14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF5xxup14bvxxxxxxxxxxpurpose14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF6xxuv14bvxxxxxxxxxxvalue14("ca=M4L3Z8 us=10003 in=70003");
      yrxxch511xhhxxhxxxxxoptions.setF7xxuo15bvxxxxxxxxxxoptions15("Y");
      yrxxch511xhhxxhxxxxxoptions.setF8xxup15bvxxxxxxxxxxpurpose15("Yes");
      yrxxch511xhhxxhxxxxxoptions.setF9xxuv15bvxxxxxxxxxxvalue15("");
      yrxxch511xhhxxhxxxxxoptions.setG1xxuo16bvxxxxxxxxxxoptions16("CI-D");
      yrxxch511xhhxxhxxxxxoptions.setG2xxup16bvxxxxxxxxxxpurpose16("Case-Item");
      yrxxch511xhhxxhxxxxxoptions.setG3xxuv16bvxxxxxxxxxxvalue16("");
      yrxxch511xhhxxhxxxxxoptions.setG4xxuo17bvxxxxxxxxxxoptions17("?");
      yrxxch511xhhxxhxxxxxoptions.setG5xxup17bvxxxxxxxxxxpurpose17("?");
      yrxxch511xhhxxhxxxxxoptions.setG6xxuv17bvxxxxxxxxxxvalue17("");
      yrxxch511xhhxxhxxxxxoptions.setG7xxuo18bvxxxxxxxxxxoptions18("AH");
      yrxxch511xhhxxhxxxxxoptions.setG8xxup18bvxxxxxxxxxxpurpose18("Hourly");
      yrxxch511xhhxxhxxxxxoptions.setG9xxuv18bvxxxxxxxxxxvalue18("s=89");
      yrxxch511xhhxxhxxxxxoptions.setH1xxuo19bvxxxxxxxxxxoptions19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH2xxup19bvxxxxxxxxxxpurpose19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH3xxuv19bvxxxxxxxxxxvalue19("");
      yrxxch511xhhxxhxxxxxoptions.setH4xxuo20bvxxxxxxxxxxoptions20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH5xxup20bvxxxxxxxxxxpurpose20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH6xxuv20bvxxxxxxxxxxvalue20("");
      yrxxch511xhhxxhxxxxxoptions.setH7xxuo21bvxxxxxxxxxxoptions21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH8xxup21bvxxxxxxxxxxpurpose21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH9xxuv21bvxxxxxxxxxxvalue21("");
      yrxxch511xhhxxhxxxxxoptions.setI1xxuo22bvxxxxxxxxxxoptions22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI2xxup22bvxxxxxxxxxxpurpose22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI3xxuv22bvxxxxxxxxxxvalue22("");
      yrxxch511xhhxxhxxxxxoptions.setI4xxuo23bvxxxxxxxxxxoptions23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI5xxup23bvxxxxxxxxxxpurpose23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI6xxuv23bvxxxxxxxxxxvalue23("");
      yrxxch511xhhxxhxxxxxoptions.setI7xxuo24bvxxxxxxxxxxoptions24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI8xxup24bvxxxxxxxxxxpurpose24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI9xxuv24bvxxxxxxxxxxvalue24("");
      yrxxch511xhhxxhxxxxxoptions.setJ1xxuo25bvxxxxxxxxxxoptions25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ2xxup25bvxxxxxxxxxxpurpose25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ3xxuv25bvxxxxxxxxxxvalue25("");
      yrxxch511xhhxxhxxxxxoptions.setJ4xxuo26bvxxxxxxxxxxoptions26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ5xxup26bvxxxxxxxxxxpurpose26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ6xxuv26bvxxxxxxxxxxvalue26("");
      yrxxch511xhhxxhxxxxxoptions.setJ7xxuo27bvxxxxxxxxxxoptions27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ8xxup27bvxxxxxxxxxxpurpose27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ9xxuv27bvxxxxxxxxxxvalue27("");
      yrxxch511xhhxxhxxxxxoptions.setK1xxuo28bvxxxxxxxxxxoptions28("PF");
      yrxxch511xhhxxhxxxxxoptions.setK2xxup28bvxxxxxxxxxxpurpose28("Persons-Family");
      yrxxch511xhhxxhxxxxxoptions.setK3xxuv28bvxxxxxxxxxxvalue28("");
      yrxxch511xhhxxhxxxxxoptions.setK4xxuo29bvxxxxxxxxxxoptions29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK5xxup29bvxxxxxxxxxxpurpose29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK6xxuv29bvxxxxxxxxxxvalue29("");
      yrxxch511xhhxxhxxxxxoptions.setK7xxuo30bvxxxxxxxxxxoptions30("EM");
      yrxxch511xhhxxhxxxxxoptions.setK8xxup30bvxxxxxxxxxxpurpose30("EMail");
      yrxxch511xhhxxhxxxxxoptions.setK9xxuv30bvxxxxxxxxxxvalue30("");
      yrxxch511xhhxxhxxxxxoptions.setL1xxuo31bvxxxxxxxxxxoptions31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL2xxup31bvxxxxxxxxxxpurpose31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL3xxuv31bvxxxxxxxxxxvalue31("");
      yrxxch511xhhxxhxxxxxoptions.setL4xxuo32bvxxxxxxxxxxoptions32("Room 107");
      yrxxch511xhhxxhxxxxxoptions.setL5xxup32bvxxxxxxxxxxpurpose32("Room 107");
      yrxxch511xhhxxhxxxxxoptions.setL6xxuv32bvxxxxxxxxxxvalue32("");
      yrxxch511xhhxxhxxxxxoptions.setL7xxuo33bvxxxxxxxxxxoptions33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL8xxup33bvxxxxxxxxxxpurpose33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL9xxuv33bvxxxxxxxxxxvalue33("");
      yrxxch511xhhxxhxxxxxoptions.setM1xxuo34bvxxxxxxxxxxoptions34("");
      yrxxch511xhhxxhxxxxxoptions.setM2xxup34bvxxxxxxxxxxpurpose34("");
      yrxxch511xhhxxhxxxxxoptions.setM3xxuv34bvxxxxxxxxxxvalue34("");
      yrxxch511xhhxxhxxxxxoptions.setM4xxuo35bvxxxxxxxxxxoptions35("Lunch Appontment");
      yrxxch511xhhxxhxxxxxoptions.setM5xxup35bvxxxxxxxxxxpurpose35("c$88.90");
      yrxxch511xhhxxhxxxxxoptions.setM6xxuv35bvxxxxxxxxxxvalue35("");
      yrxxch511xhhxxhxxxxxoptions.setM7xxuo36bvxxxxxxxxxxoptions36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM8xxup36bvxxxxxxxxxxpurpose36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM9xxuv36bvxxxxxxxxxxvalue36("");
      yrxxch511xhhxxhxxxxxoptions.setN1xxuo37bvxxxxxxxxxxoptions37("High");
      yrxxch511xhhxxhxxxxxoptions.setN2xxup37bvxxxxxxxxxxpurpose37("High");
      yrxxch511xhhxxhxxxxxoptions.setN3xxuv37bvxxxxxxxxxxvalue37("");
      yrxxch511xhhxxhxxxxxoptions.setN4xxuo38bvxxxxxxxxxxoptions38("S");
      yrxxch511xhhxxhxxxxxoptions.setN5xxup38bvxxxxxxxxxxpurpose38("System Admin");
      yrxxch511xhhxxhxxxxxoptions.setN6xxuv38bvxxxxxxxxxxvalue38("");
      yrxxch511xhhxxhxxxxxoptions.setN7xxuo39bvxxxxxxxxxxoptions39("H");
      yrxxch511xhhxxhxxxxxoptions.setN8xxup39bvxxxxxxxxxxpurpose39("High");
      yrxxch511xhhxxhxxxxxoptions.setN9xxuv39bvxxxxxxxxxxvalue39("");
      yrxxch511xhhxxhxxxxxoptions.setO1xxuo40bvxxxxxxxxxxoptions40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO2xxup40bvxxxxxxxxxxpurpose40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO3xxuv40bvxxxxxxxxxxvalue40("");
      yrxxch511xhhxxhxxxxxoptions.setO4xxuo41bvxxxxxxxxxxoptions41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO5xxup41bvxxxxxxxxxxpurpose41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO6xxuv41bvxxxxxxxxxxvalue41("");
      yrxxch511xhhxxhxxxxxoptions.setO7xxuo42bvxxxxxxxxxxoptions42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO8xxup42bvxxxxxxxxxxpurpose42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO9xxuv42bvxxxxxxxxxxvalue42("");
      yrxxch511xhhxxhxxxxxoptions.setP1xxuo43bvxxxxxxxxxxoptions43("New");
      yrxxch511xhhxxhxxxxxoptions.setP2xxup43bvxxxxxxxxxxpurpose43("New");
      yrxxch511xhhxxhxxxxxoptions.setP3xxuv43bvxxxxxxxxxxvalue43("");
      yrxxch511xhhxxhxxxxxoptions.setP4xxuo44bvxxxxxxxxxxoptions44("");
      yrxxch511xhhxxhxxxxxoptions.setP5xxup44bvxxxxxxxxxxpurpose44("");
      yrxxch511xhhxxhxxxxxoptions.setP6xxuv44bvxxxxxxxxxxvalue44("");
      yrxxch511xhhxxhxxxxxoptions.setP7xxuo45bvxxxxxxxxxxoptions45("D");
      yrxxch511xhhxxhxxxxxoptions.setP8xxup45bvxxxxxxxxxxpurpose45("");
      yrxxch511xhhxxhxxxxxoptions.setP9xxuv45bvxxxxxxxxxxvalue45("");
      yrxxch511xhhxxhxxxxxoptions.setQ1xxuo46bvxxxxxxxxxxoptions46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ2xxup46bvxxxxxxxxxxpurpose46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ3xxuv46bvxxxxxxxxxxvalue46("");
      yrxxch511xhhxxhxxxxxoptions.setQ4xxuo47bvxxxxxxxxxxoptions47("04");
      yrxxch511xhhxxhxxxxxoptions.setQ5xxup47bvxxxxxxxxxxpurpose47("04");
      yrxxch511xhhxxhxxxxxoptions.setQ6xxuv47bvxxxxxxxxxxvalue47("");
      yrxxch511xhhxxhxxxxxoptions.setQ7xxuo48bvxxxxxxxxxxoptions48("");
      yrxxch511xhhxxhxxxxxoptions.setQ8xxup48bvxxxxxxxxxxpurpose48("");
      yrxxch511xhhxxhxxxxxoptions.setQ9xxuv48bvxxxxxxxxxxvalue48("");
      yrxxch511xhhxxhxxxxxoptions.setR1xxuo49bvxxxxxxxxxxoptions49("3R-RESELLERS-3-C");
      yrxxch511xhhxxhxxxxxoptions.setR2xxup49bvxxxxxxxxxxpurpose49("Resellers Panel 3");
      yrxxch511xhhxxhxxxxxoptions.setR3xxuv49bvxxxxxxxxxxvalue49("");
      yrxxch511xhhxxhxxxxxoptions.setR4xxuo50bvxxxxxxxxxxoptions50("");
      yrxxch511xhhxxhxxxxxoptions.setR5xxup50bvxxxxxxxxxxpurpose50("");
      yrxxch511xhhxxhxxxxxoptions.setR6xxuv50bvxxxxxxxxxxvalue50("");
      yrxxch511xhhxxhxxxxxoptions.setR7xxuo51bvxxxxxxxxxxoptions51("");
      yrxxch511xhhxxhxxxxxoptions.setR8xxup51bvxxxxxxxxxxpurpose51("");
      yrxxch511xhhxxhxxxxxoptions.setR9xxuv51bvxxxxxxxxxxvalue51("");
      yrxxch511xhhxxhxxxxxoptions.setS1xxuo52bvxxxxxxxxxxoptions52("");
      yrxxch511xhhxxhxxxxxoptions.setS2xxup52bvxxxxxxxxxxpurpose52("");
      yrxxch511xhhxxhxxxxxoptions.setS3xxuv52bvxxxxxxxxxxvalue52("");
      yrxxch511xhhxxhxxxxxoptions.setS4xxuo53bvxxxxxxxxxxoptions53("");
      yrxxch511xhhxxhxxxxxoptions.setS5xxup53bvxxxxxxxxxxpurpose53("");
      yrxxch511xhhxxhxxxxxoptions.setS6xxuv53bvxxxxxxxxxxvalue53("");

      yrxxch511xhhxxhxxxxxoptions.setS7xxuo54bvxxxxxxxxxxoptions54("");
      yrxxch511xhhxxhxxxxxoptions.setS8xxup54bvxxxxxxxxxxpurpose54("");
      yrxxch511xhhxxhxxxxxoptions.setS9xxuv54bvxxxxxxxxxxvalue54("");
      yrxxch511xhhxxhxxxxxoptions.setT1xxuo55bvxxxxxxxxxxoptions55("");
      yrxxch511xhhxxhxxxxxoptions.setT2xxup55bvxxxxxxxxxxpurpose55("");
      yrxxch511xhhxxhxxxxxoptions.setT3xxuv55bvxxxxxxxxxxvalue55("");
      yrxxch511xhhxxhxxxxxoptions.setT4xxuo56bvxxxxxxxxxxoptions56("");
      yrxxch511xhhxxhxxxxxoptions.setT5xxup56bvxxxxxxxxxxpurpose56("");
      yrxxch511xhhxxhxxxxxoptions.setT6xxuv56bvxxxxxxxxxxvalue56("");
      yrxxch511xhhxxhxxxxxoptions.setT7xxuo57bvxxxxxxxxxxoptions57("");
      yrxxch511xhhxxhxxxxxoptions.setT8xxup57bvxxxxxxxxxxpurpose57("");
      yrxxch511xhhxxhxxxxxoptions.setT9xxuv57bvxxxxxxxxxxvalue57("");
      yrxxch511xhhxxhxxxxxoptions.setU1xxuo58bvxxxxxxxxxxoptions58("");
      yrxxch511xhhxxhxxxxxoptions.setU2xxup58bvxxxxxxxxxxpurpose58("");
      yrxxch511xhhxxhxxxxxoptions.setU3xxuv58bvxxxxxxxxxxvalue58("");
      yrxxch511xhhxxhxxxxxoptions.setU4xxuo59bvxxxxxxxxxxoptions59("");
      yrxxch511xhhxxhxxxxxoptions.setU5xxup59bvxxxxxxxxxxpurpose59("");
      yrxxch511xhhxxhxxxxxoptions.setU6xxuv59bvxxxxxxxxxxvalue59("");
      yrxxch511xhhxxhxxxxxoptions.setU7xxuo60bvxxxxxxxxxxoptions60("");
      yrxxch511xhhxxhxxxxxoptions.setU8xxup60bvxxxxxxxxxxpurpose60("");
      yrxxch511xhhxxhxxxxxoptions.setU9xxuv60bvxxxxxxxxxxvalue60("");
      yrxxch511xhhxxhxxxxxoptions.setV1xxuo61bvxxxxxxxxxxoptions61("");
      yrxxch511xhhxxhxxxxxoptions.setV2xxup61bvxxxxxxxxxxpurpose61("");
      yrxxch511xhhxxhxxxxxoptions.setV3xxuv61bvxxxxxxxxxxvalue61("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptionsHome.persist(client);


      yrxxch511xhhxxhxxxxxoptionsHome.clearInstance();
      yrxxch511xhhxxhxxxxxoptions=yrxxch511xhhxxhxxxxxoptionsHome.getInstance();
      yrxxch511xhhxxhxxxxxoptions.setA0xxukcxbvxxxxxxxxxxrow("28");
      yrxxch511xhhxxhxxxxxoptions.setB1xxuo01bvxxxxxxxxxxoptions01("R");
      yrxxch511xhhxxhxxxxxoptions.setB2xxup01bvxxxxxxxxxxpurpose01("Retained Earning");
      yrxxch511xhhxxhxxxxxoptions.setB3xxuv01bvxxxxxxxxxxvalue01("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptions.setB4xxuo02bvxxxxxxxxxxoptions02("S");
      yrxxch511xhhxxhxxxxxoptions.setB5xxup02bvxxxxxxxxxxpurpose02("Subheader");
      yrxxch511xhhxxhxxxxxoptions.setB6xxuv02bvxxxxxxxxxxvalue02("");
      yrxxch511xhhxxhxxxxxoptions.setB7xxuo03bvxxxxxxxxxxoptions03("P");
      yrxxch511xhhxxhxxxxxoptions.setB8xxup03bvxxxxxxxxxxpurpose03("Payable");
      yrxxch511xhhxxhxxxxxoptions.setB9xxuv03bvxxxxxxxxxxvalue03("");
      yrxxch511xhhxxhxxxxxoptions.setC1xxuo04bvxxxxxxxxxxoptions04("");
      yrxxch511xhhxxhxxxxxoptions.setC2xxup04bvxxxxxxxxxxpurpose04("");
      yrxxch511xhhxxhxxxxxoptions.setC3xxuv04bvxxxxxxxxxxvalue04("");
      yrxxch511xhhxxhxxxxxoptions.setC4xxuo05bvxxxxxxxxxxoptions05("");
      yrxxch511xhhxxhxxxxxoptions.setC5xxup05bvxxxxxxxxxxpurpose05("");
      yrxxch511xhhxxhxxxxxoptions.setC6xxuv05bvxxxxxxxxxxvalue05("");
      yrxxch511xhhxxhxxxxxoptions.setC7xxuo06bvxxxxxxxxxxoptions06("");
      yrxxch511xhhxxhxxxxxoptions.setC8xxup06bvxxxxxxxxxxpurpose06("");
      yrxxch511xhhxxhxxxxxoptions.setC9xxuv06bvxxxxxxxxxxvalue06("");
      yrxxch511xhhxxhxxxxxoptions.setD1xxuo07bvxxxxxxxxxxoptions07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD2xxup07bvxxxxxxxxxxpurpose07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD3xxuv07bvxxxxxxxxxxvalue07("");
      yrxxch511xhhxxhxxxxxoptions.setD4xxuo08bvxxxxxxxxxxoptions08("H");
      yrxxch511xhhxxhxxxxxoptions.setD5xxup08bvxxxxxxxxxxpurpose08("High");
      yrxxch511xhhxxhxxxxxoptions.setD6xxuv08bvxxxxxxxxxxvalue08("");
      yrxxch511xhhxxhxxxxxoptions.setD7xxuo09bvxxxxxxxxxxoptions09("30");
      yrxxch511xhhxxhxxxxxoptions.setD8xxup09bvxxxxxxxxxxpurpose09("-30 days");
      yrxxch511xhhxxhxxxxxoptions.setD9xxuv09bvxxxxxxxxxxvalue09("");
      yrxxch511xhhxxhxxxxxoptions.setE1xxuo10bvxxxxxxxxxxoptions10("cash");
      yrxxch511xhhxxhxxxxxoptions.setE2xxup10bvxxxxxxxxxxpurpose10("-cash");
      yrxxch511xhhxxhxxxxxoptions.setE3xxuv10bvxxxxxxxxxxvalue10("");
      yrxxch511xhhxxhxxxxxoptions.setE4xxuo11bvxxxxxxxxxxoptions11("Montreal");
      yrxxch511xhhxxhxxxxxoptions.setE5xxup11bvxxxxxxxxxxpurpose11("Toronto");
      yrxxch511xhhxxhxxxxxoptions.setE6xxuv11bvxxxxxxxxxxvalue11("ca=Montreal; us=Boston");
      yrxxch511xhhxxhxxxxxoptions.setE7xxuo12bvxxxxxxxxxxoptions12("QE");
      yrxxch511xhhxxhxxxxxoptions.setE8xxup12bvxxxxxxxxxxpurpose12("Quebec");
      yrxxch511xhhxxhxxxxxoptions.setE9xxuv12bvxxxxxxxxxxvalue12("ca=QE us=CA");
      yrxxch511xhhxxhxxxxxoptions.setF1xxuo13bvxxxxxxxxxxoptions13("");
      yrxxch511xhhxxhxxxxxoptions.setF2xxup13bvxxxxxxxxxxpurpose13("");
      yrxxch511xhhxxhxxxxxoptions.setF3xxuv13bvxxxxxxxxxxvalue13("");
      yrxxch511xhhxxhxxxxxoptions.setF4xxuo14bvxxxxxxxxxxoptions14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF5xxup14bvxxxxxxxxxxpurpose14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF6xxuv14bvxxxxxxxxxxvalue14("ca=M4L3Z8 us=10003 in=70003");
      yrxxch511xhhxxhxxxxxoptions.setF7xxuo15bvxxxxxxxxxxoptions15("Y");
      yrxxch511xhhxxhxxxxxoptions.setF8xxup15bvxxxxxxxxxxpurpose15("Yes");
      yrxxch511xhhxxhxxxxxoptions.setF9xxuv15bvxxxxxxxxxxvalue15("");
      yrxxch511xhhxxhxxxxxoptions.setG1xxuo16bvxxxxxxxxxxoptions16("LT-D");
      yrxxch511xhhxxhxxxxxoptions.setG2xxup16bvxxxxxxxxxxpurpose16("Lab Test Detail");
      yrxxch511xhhxxhxxxxxoptions.setG3xxuv16bvxxxxxxxxxxvalue16("");
      yrxxch511xhhxxhxxxxxoptions.setG4xxuo17bvxxxxxxxxxxoptions17("?");
      yrxxch511xhhxxhxxxxxoptions.setG5xxup17bvxxxxxxxxxxpurpose17("?");
      yrxxch511xhhxxhxxxxxoptions.setG6xxuv17bvxxxxxxxxxxvalue17("");
      yrxxch511xhhxxhxxxxxoptions.setG7xxuo18bvxxxxxxxxxxoptions18("AH");
      yrxxch511xhhxxhxxxxxoptions.setG8xxup18bvxxxxxxxxxxpurpose18("Hourly");
      yrxxch511xhhxxhxxxxxoptions.setG9xxuv18bvxxxxxxxxxxvalue18("s=89");
      yrxxch511xhhxxhxxxxxoptions.setH1xxuo19bvxxxxxxxxxxoptions19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH2xxup19bvxxxxxxxxxxpurpose19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH3xxuv19bvxxxxxxxxxxvalue19("");
      yrxxch511xhhxxhxxxxxoptions.setH4xxuo20bvxxxxxxxxxxoptions20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH5xxup20bvxxxxxxxxxxpurpose20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH6xxuv20bvxxxxxxxxxxvalue20("");
      yrxxch511xhhxxhxxxxxoptions.setH7xxuo21bvxxxxxxxxxxoptions21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH8xxup21bvxxxxxxxxxxpurpose21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH9xxuv21bvxxxxxxxxxxvalue21("");
      yrxxch511xhhxxhxxxxxoptions.setI1xxuo22bvxxxxxxxxxxoptions22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI2xxup22bvxxxxxxxxxxpurpose22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI3xxuv22bvxxxxxxxxxxvalue22("");
      yrxxch511xhhxxhxxxxxoptions.setI4xxuo23bvxxxxxxxxxxoptions23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI5xxup23bvxxxxxxxxxxpurpose23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI6xxuv23bvxxxxxxxxxxvalue23("");
      yrxxch511xhhxxhxxxxxoptions.setI7xxuo24bvxxxxxxxxxxoptions24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI8xxup24bvxxxxxxxxxxpurpose24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI9xxuv24bvxxxxxxxxxxvalue24("");
      yrxxch511xhhxxhxxxxxoptions.setJ1xxuo25bvxxxxxxxxxxoptions25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ2xxup25bvxxxxxxxxxxpurpose25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ3xxuv25bvxxxxxxxxxxvalue25("");
      yrxxch511xhhxxhxxxxxoptions.setJ4xxuo26bvxxxxxxxxxxoptions26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ5xxup26bvxxxxxxxxxxpurpose26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ6xxuv26bvxxxxxxxxxxvalue26("");
      yrxxch511xhhxxhxxxxxoptions.setJ7xxuo27bvxxxxxxxxxxoptions27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ8xxup27bvxxxxxxxxxxpurpose27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ9xxuv27bvxxxxxxxxxxvalue27("");
      yrxxch511xhhxxhxxxxxoptions.setK1xxuo28bvxxxxxxxxxxoptions28("PF");
      yrxxch511xhhxxhxxxxxoptions.setK2xxup28bvxxxxxxxxxxpurpose28("Persons-Family");
      yrxxch511xhhxxhxxxxxoptions.setK3xxuv28bvxxxxxxxxxxvalue28("");
      yrxxch511xhhxxhxxxxxoptions.setK4xxuo29bvxxxxxxxxxxoptions29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK5xxup29bvxxxxxxxxxxpurpose29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK6xxuv29bvxxxxxxxxxxvalue29("");
      yrxxch511xhhxxhxxxxxoptions.setK7xxuo30bvxxxxxxxxxxoptions30("EM");
      yrxxch511xhhxxhxxxxxoptions.setK8xxup30bvxxxxxxxxxxpurpose30("EMail");
      yrxxch511xhhxxhxxxxxoptions.setK9xxuv30bvxxxxxxxxxxvalue30("");
      yrxxch511xhhxxhxxxxxoptions.setL1xxuo31bvxxxxxxxxxxoptions31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL2xxup31bvxxxxxxxxxxpurpose31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL3xxuv31bvxxxxxxxxxxvalue31("");
      yrxxch511xhhxxhxxxxxoptions.setL4xxuo32bvxxxxxxxxxxoptions32("Room 107");
      yrxxch511xhhxxhxxxxxoptions.setL5xxup32bvxxxxxxxxxxpurpose32("Room 107");
      yrxxch511xhhxxhxxxxxoptions.setL6xxuv32bvxxxxxxxxxxvalue32("");
      yrxxch511xhhxxhxxxxxoptions.setL7xxuo33bvxxxxxxxxxxoptions33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL8xxup33bvxxxxxxxxxxpurpose33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL9xxuv33bvxxxxxxxxxxvalue33("");
      yrxxch511xhhxxhxxxxxoptions.setM1xxuo34bvxxxxxxxxxxoptions34("");
      yrxxch511xhhxxhxxxxxoptions.setM2xxup34bvxxxxxxxxxxpurpose34("");
      yrxxch511xhhxxhxxxxxoptions.setM3xxuv34bvxxxxxxxxxxvalue34("");
      yrxxch511xhhxxhxxxxxoptions.setM4xxuo35bvxxxxxxxxxxoptions35("Lunch Appontment");
      yrxxch511xhhxxhxxxxxoptions.setM5xxup35bvxxxxxxxxxxpurpose35("c$88.90");
      yrxxch511xhhxxhxxxxxoptions.setM6xxuv35bvxxxxxxxxxxvalue35("");
      yrxxch511xhhxxhxxxxxoptions.setM7xxuo36bvxxxxxxxxxxoptions36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM8xxup36bvxxxxxxxxxxpurpose36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM9xxuv36bvxxxxxxxxxxvalue36("");
      yrxxch511xhhxxhxxxxxoptions.setN1xxuo37bvxxxxxxxxxxoptions37("High");
      yrxxch511xhhxxhxxxxxoptions.setN2xxup37bvxxxxxxxxxxpurpose37("High");
      yrxxch511xhhxxhxxxxxoptions.setN3xxuv37bvxxxxxxxxxxvalue37("");
      yrxxch511xhhxxhxxxxxoptions.setN4xxuo38bvxxxxxxxxxxoptions38("S");
      yrxxch511xhhxxhxxxxxoptions.setN5xxup38bvxxxxxxxxxxpurpose38("System Admin");
      yrxxch511xhhxxhxxxxxoptions.setN6xxuv38bvxxxxxxxxxxvalue38("");
      yrxxch511xhhxxhxxxxxoptions.setN7xxuo39bvxxxxxxxxxxoptions39("H");
      yrxxch511xhhxxhxxxxxoptions.setN8xxup39bvxxxxxxxxxxpurpose39("High");
      yrxxch511xhhxxhxxxxxoptions.setN9xxuv39bvxxxxxxxxxxvalue39("");
      yrxxch511xhhxxhxxxxxoptions.setO1xxuo40bvxxxxxxxxxxoptions40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO2xxup40bvxxxxxxxxxxpurpose40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO3xxuv40bvxxxxxxxxxxvalue40("");
      yrxxch511xhhxxhxxxxxoptions.setO4xxuo41bvxxxxxxxxxxoptions41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO5xxup41bvxxxxxxxxxxpurpose41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO6xxuv41bvxxxxxxxxxxvalue41("");
      yrxxch511xhhxxhxxxxxoptions.setO7xxuo42bvxxxxxxxxxxoptions42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO8xxup42bvxxxxxxxxxxpurpose42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO9xxuv42bvxxxxxxxxxxvalue42("");
      yrxxch511xhhxxhxxxxxoptions.setP1xxuo43bvxxxxxxxxxxoptions43("New");
      yrxxch511xhhxxhxxxxxoptions.setP2xxup43bvxxxxxxxxxxpurpose43("New");
      yrxxch511xhhxxhxxxxxoptions.setP3xxuv43bvxxxxxxxxxxvalue43("");
      yrxxch511xhhxxhxxxxxoptions.setP4xxuo44bvxxxxxxxxxxoptions44("");
      yrxxch511xhhxxhxxxxxoptions.setP5xxup44bvxxxxxxxxxxpurpose44("");
      yrxxch511xhhxxhxxxxxoptions.setP6xxuv44bvxxxxxxxxxxvalue44("");
      yrxxch511xhhxxhxxxxxoptions.setP7xxuo45bvxxxxxxxxxxoptions45("D");
      yrxxch511xhhxxhxxxxxoptions.setP8xxup45bvxxxxxxxxxxpurpose45("");
      yrxxch511xhhxxhxxxxxoptions.setP9xxuv45bvxxxxxxxxxxvalue45("");
      yrxxch511xhhxxhxxxxxoptions.setQ1xxuo46bvxxxxxxxxxxoptions46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ2xxup46bvxxxxxxxxxxpurpose46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ3xxuv46bvxxxxxxxxxxvalue46("");
      yrxxch511xhhxxhxxxxxoptions.setQ4xxuo47bvxxxxxxxxxxoptions47("04");
      yrxxch511xhhxxhxxxxxoptions.setQ5xxup47bvxxxxxxxxxxpurpose47("04");
      yrxxch511xhhxxhxxxxxoptions.setQ6xxuv47bvxxxxxxxxxxvalue47("");
      yrxxch511xhhxxhxxxxxoptions.setQ7xxuo48bvxxxxxxxxxxoptions48("");
      yrxxch511xhhxxhxxxxxoptions.setQ8xxup48bvxxxxxxxxxxpurpose48("");
      yrxxch511xhhxxhxxxxxoptions.setQ9xxuv48bvxxxxxxxxxxvalue48("");
      yrxxch511xhhxxhxxxxxoptions.setR1xxuo49bvxxxxxxxxxxoptions49("3R-MID-FTR-C");
      yrxxch511xhhxxhxxxxxoptions.setR2xxup49bvxxxxxxxxxxpurpose49("Middle Footer");
      yrxxch511xhhxxhxxxxxoptions.setR3xxuv49bvxxxxxxxxxxvalue49("");
      yrxxch511xhhxxhxxxxxoptions.setR4xxuo50bvxxxxxxxxxxoptions50("");
      yrxxch511xhhxxhxxxxxoptions.setR5xxup50bvxxxxxxxxxxpurpose50("");
      yrxxch511xhhxxhxxxxxoptions.setR6xxuv50bvxxxxxxxxxxvalue50("");
      yrxxch511xhhxxhxxxxxoptions.setR7xxuo51bvxxxxxxxxxxoptions51("");
      yrxxch511xhhxxhxxxxxoptions.setR8xxup51bvxxxxxxxxxxpurpose51("");
      yrxxch511xhhxxhxxxxxoptions.setR9xxuv51bvxxxxxxxxxxvalue51("");
      yrxxch511xhhxxhxxxxxoptions.setS1xxuo52bvxxxxxxxxxxoptions52("");
      yrxxch511xhhxxhxxxxxoptions.setS2xxup52bvxxxxxxxxxxpurpose52("");
      yrxxch511xhhxxhxxxxxoptions.setS3xxuv52bvxxxxxxxxxxvalue52("");
      yrxxch511xhhxxhxxxxxoptions.setS4xxuo53bvxxxxxxxxxxoptions53("");
      yrxxch511xhhxxhxxxxxoptions.setS5xxup53bvxxxxxxxxxxpurpose53("");
      yrxxch511xhhxxhxxxxxoptions.setS6xxuv53bvxxxxxxxxxxvalue53("");

      yrxxch511xhhxxhxxxxxoptions.setS7xxuo54bvxxxxxxxxxxoptions54("");
      yrxxch511xhhxxhxxxxxoptions.setS8xxup54bvxxxxxxxxxxpurpose54("");
      yrxxch511xhhxxhxxxxxoptions.setS9xxuv54bvxxxxxxxxxxvalue54("");
      yrxxch511xhhxxhxxxxxoptions.setT1xxuo55bvxxxxxxxxxxoptions55("");
      yrxxch511xhhxxhxxxxxoptions.setT2xxup55bvxxxxxxxxxxpurpose55("");
      yrxxch511xhhxxhxxxxxoptions.setT3xxuv55bvxxxxxxxxxxvalue55("");
      yrxxch511xhhxxhxxxxxoptions.setT4xxuo56bvxxxxxxxxxxoptions56("");
      yrxxch511xhhxxhxxxxxoptions.setT5xxup56bvxxxxxxxxxxpurpose56("");
      yrxxch511xhhxxhxxxxxoptions.setT6xxuv56bvxxxxxxxxxxvalue56("");
      yrxxch511xhhxxhxxxxxoptions.setT7xxuo57bvxxxxxxxxxxoptions57("");
      yrxxch511xhhxxhxxxxxoptions.setT8xxup57bvxxxxxxxxxxpurpose57("");
      yrxxch511xhhxxhxxxxxoptions.setT9xxuv57bvxxxxxxxxxxvalue57("");
      yrxxch511xhhxxhxxxxxoptions.setU1xxuo58bvxxxxxxxxxxoptions58("");
      yrxxch511xhhxxhxxxxxoptions.setU2xxup58bvxxxxxxxxxxpurpose58("");
      yrxxch511xhhxxhxxxxxoptions.setU3xxuv58bvxxxxxxxxxxvalue58("");
      yrxxch511xhhxxhxxxxxoptions.setU4xxuo59bvxxxxxxxxxxoptions59("");
      yrxxch511xhhxxhxxxxxoptions.setU5xxup59bvxxxxxxxxxxpurpose59("");
      yrxxch511xhhxxhxxxxxoptions.setU6xxuv59bvxxxxxxxxxxvalue59("");
      yrxxch511xhhxxhxxxxxoptions.setU7xxuo60bvxxxxxxxxxxoptions60("");
      yrxxch511xhhxxhxxxxxoptions.setU8xxup60bvxxxxxxxxxxpurpose60("");
      yrxxch511xhhxxhxxxxxoptions.setU9xxuv60bvxxxxxxxxxxvalue60("");
      yrxxch511xhhxxhxxxxxoptions.setV1xxuo61bvxxxxxxxxxxoptions61("");
      yrxxch511xhhxxhxxxxxoptions.setV2xxup61bvxxxxxxxxxxpurpose61("");
      yrxxch511xhhxxhxxxxxoptions.setV3xxuv61bvxxxxxxxxxxvalue61("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptionsHome.persist(client);


      yrxxch511xhhxxhxxxxxoptionsHome.clearInstance();
      yrxxch511xhhxxhxxxxxoptions=yrxxch511xhhxxhxxxxxoptionsHome.getInstance();
      yrxxch511xhhxxhxxxxxoptions.setA0xxukcxbvxxxxxxxxxxrow("29");
      yrxxch511xhhxxhxxxxxoptions.setB1xxuo01bvxxxxxxxxxxoptions01("R");
      yrxxch511xhhxxhxxxxxoptions.setB2xxup01bvxxxxxxxxxxpurpose01("Retained Earning");
      yrxxch511xhhxxhxxxxxoptions.setB3xxuv01bvxxxxxxxxxxvalue01("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptions.setB4xxuo02bvxxxxxxxxxxoptions02("S");
      yrxxch511xhhxxhxxxxxoptions.setB5xxup02bvxxxxxxxxxxpurpose02("Subheader");
      yrxxch511xhhxxhxxxxxoptions.setB6xxuv02bvxxxxxxxxxxvalue02("");
      yrxxch511xhhxxhxxxxxoptions.setB7xxuo03bvxxxxxxxxxxoptions03("P");
      yrxxch511xhhxxhxxxxxoptions.setB8xxup03bvxxxxxxxxxxpurpose03("Payable");
      yrxxch511xhhxxhxxxxxoptions.setB9xxuv03bvxxxxxxxxxxvalue03("");
      yrxxch511xhhxxhxxxxxoptions.setC1xxuo04bvxxxxxxxxxxoptions04("");
      yrxxch511xhhxxhxxxxxoptions.setC2xxup04bvxxxxxxxxxxpurpose04("");
      yrxxch511xhhxxhxxxxxoptions.setC3xxuv04bvxxxxxxxxxxvalue04("");
      yrxxch511xhhxxhxxxxxoptions.setC4xxuo05bvxxxxxxxxxxoptions05("");
      yrxxch511xhhxxhxxxxxoptions.setC5xxup05bvxxxxxxxxxxpurpose05("");
      yrxxch511xhhxxhxxxxxoptions.setC6xxuv05bvxxxxxxxxxxvalue05("");
      yrxxch511xhhxxhxxxxxoptions.setC7xxuo06bvxxxxxxxxxxoptions06("");
      yrxxch511xhhxxhxxxxxoptions.setC8xxup06bvxxxxxxxxxxpurpose06("");
      yrxxch511xhhxxhxxxxxoptions.setC9xxuv06bvxxxxxxxxxxvalue06("");
      yrxxch511xhhxxhxxxxxoptions.setD1xxuo07bvxxxxxxxxxxoptions07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD2xxup07bvxxxxxxxxxxpurpose07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD3xxuv07bvxxxxxxxxxxvalue07("");
      yrxxch511xhhxxhxxxxxoptions.setD4xxuo08bvxxxxxxxxxxoptions08("H");
      yrxxch511xhhxxhxxxxxoptions.setD5xxup08bvxxxxxxxxxxpurpose08("High");
      yrxxch511xhhxxhxxxxxoptions.setD6xxuv08bvxxxxxxxxxxvalue08("");
      yrxxch511xhhxxhxxxxxoptions.setD7xxuo09bvxxxxxxxxxxoptions09("30");
      yrxxch511xhhxxhxxxxxoptions.setD8xxup09bvxxxxxxxxxxpurpose09("-30 days");
      yrxxch511xhhxxhxxxxxoptions.setD9xxuv09bvxxxxxxxxxxvalue09("");
      yrxxch511xhhxxhxxxxxoptions.setE1xxuo10bvxxxxxxxxxxoptions10("cash");
      yrxxch511xhhxxhxxxxxoptions.setE2xxup10bvxxxxxxxxxxpurpose10("-cash");
      yrxxch511xhhxxhxxxxxoptions.setE3xxuv10bvxxxxxxxxxxvalue10("");
      yrxxch511xhhxxhxxxxxoptions.setE4xxuo11bvxxxxxxxxxxoptions11("Montreal");
      yrxxch511xhhxxhxxxxxoptions.setE5xxup11bvxxxxxxxxxxpurpose11("Toronto");
      yrxxch511xhhxxhxxxxxoptions.setE6xxuv11bvxxxxxxxxxxvalue11("ca=Montreal; us=Boston");
      yrxxch511xhhxxhxxxxxoptions.setE7xxuo12bvxxxxxxxxxxoptions12("QE");
      yrxxch511xhhxxhxxxxxoptions.setE8xxup12bvxxxxxxxxxxpurpose12("Quebec");
      yrxxch511xhhxxhxxxxxoptions.setE9xxuv12bvxxxxxxxxxxvalue12("ca=QE us=CA");
      yrxxch511xhhxxhxxxxxoptions.setF1xxuo13bvxxxxxxxxxxoptions13("");
      yrxxch511xhhxxhxxxxxoptions.setF2xxup13bvxxxxxxxxxxpurpose13("");
      yrxxch511xhhxxhxxxxxoptions.setF3xxuv13bvxxxxxxxxxxvalue13("");
      yrxxch511xhhxxhxxxxxoptions.setF4xxuo14bvxxxxxxxxxxoptions14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF5xxup14bvxxxxxxxxxxpurpose14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF6xxuv14bvxxxxxxxxxxvalue14("ca=M4L3Z8 us=10003 in=70003");
      yrxxch511xhhxxhxxxxxoptions.setF7xxuo15bvxxxxxxxxxxoptions15("Y");
      yrxxch511xhhxxhxxxxxoptions.setF8xxup15bvxxxxxxxxxxpurpose15("Yes");
      yrxxch511xhhxxhxxxxxoptions.setF9xxuv15bvxxxxxxxxxxvalue15("");
      yrxxch511xhhxxhxxxxxoptions.setG1xxuo16bvxxxxxxxxxxoptions16("BI-L*");
      yrxxch511xhhxxhxxxxxoptions.setG2xxup16bvxxxxxxxxxxpurpose16("Blogs-SubCategories");
      yrxxch511xhhxxhxxxxxoptions.setG3xxuv16bvxxxxxxxxxxvalue16("");
      yrxxch511xhhxxhxxxxxoptions.setG4xxuo17bvxxxxxxxxxxoptions17("?");
      yrxxch511xhhxxhxxxxxoptions.setG5xxup17bvxxxxxxxxxxpurpose17("?");
      yrxxch511xhhxxhxxxxxoptions.setG6xxuv17bvxxxxxxxxxxvalue17("");
      yrxxch511xhhxxhxxxxxoptions.setG7xxuo18bvxxxxxxxxxxoptions18("AH");
      yrxxch511xhhxxhxxxxxoptions.setG8xxup18bvxxxxxxxxxxpurpose18("Hourly");
      yrxxch511xhhxxhxxxxxoptions.setG9xxuv18bvxxxxxxxxxxvalue18("s=89");
      yrxxch511xhhxxhxxxxxoptions.setH1xxuo19bvxxxxxxxxxxoptions19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH2xxup19bvxxxxxxxxxxpurpose19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH3xxuv19bvxxxxxxxxxxvalue19("");
      yrxxch511xhhxxhxxxxxoptions.setH4xxuo20bvxxxxxxxxxxoptions20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH5xxup20bvxxxxxxxxxxpurpose20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH6xxuv20bvxxxxxxxxxxvalue20("");
      yrxxch511xhhxxhxxxxxoptions.setH7xxuo21bvxxxxxxxxxxoptions21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH8xxup21bvxxxxxxxxxxpurpose21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH9xxuv21bvxxxxxxxxxxvalue21("");
      yrxxch511xhhxxhxxxxxoptions.setI1xxuo22bvxxxxxxxxxxoptions22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI2xxup22bvxxxxxxxxxxpurpose22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI3xxuv22bvxxxxxxxxxxvalue22("");
      yrxxch511xhhxxhxxxxxoptions.setI4xxuo23bvxxxxxxxxxxoptions23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI5xxup23bvxxxxxxxxxxpurpose23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI6xxuv23bvxxxxxxxxxxvalue23("");
      yrxxch511xhhxxhxxxxxoptions.setI7xxuo24bvxxxxxxxxxxoptions24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI8xxup24bvxxxxxxxxxxpurpose24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI9xxuv24bvxxxxxxxxxxvalue24("");
      yrxxch511xhhxxhxxxxxoptions.setJ1xxuo25bvxxxxxxxxxxoptions25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ2xxup25bvxxxxxxxxxxpurpose25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ3xxuv25bvxxxxxxxxxxvalue25("");
      yrxxch511xhhxxhxxxxxoptions.setJ4xxuo26bvxxxxxxxxxxoptions26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ5xxup26bvxxxxxxxxxxpurpose26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ6xxuv26bvxxxxxxxxxxvalue26("");
      yrxxch511xhhxxhxxxxxoptions.setJ7xxuo27bvxxxxxxxxxxoptions27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ8xxup27bvxxxxxxxxxxpurpose27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ9xxuv27bvxxxxxxxxxxvalue27("");
      yrxxch511xhhxxhxxxxxoptions.setK1xxuo28bvxxxxxxxxxxoptions28("PF");
      yrxxch511xhhxxhxxxxxoptions.setK2xxup28bvxxxxxxxxxxpurpose28("Persons-Family");
      yrxxch511xhhxxhxxxxxoptions.setK3xxuv28bvxxxxxxxxxxvalue28("");
      yrxxch511xhhxxhxxxxxoptions.setK4xxuo29bvxxxxxxxxxxoptions29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK5xxup29bvxxxxxxxxxxpurpose29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK6xxuv29bvxxxxxxxxxxvalue29("");
      yrxxch511xhhxxhxxxxxoptions.setK7xxuo30bvxxxxxxxxxxoptions30("EM");
      yrxxch511xhhxxhxxxxxoptions.setK8xxup30bvxxxxxxxxxxpurpose30("EMail");
      yrxxch511xhhxxhxxxxxoptions.setK9xxuv30bvxxxxxxxxxxvalue30("");
      yrxxch511xhhxxhxxxxxoptions.setL1xxuo31bvxxxxxxxxxxoptions31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL2xxup31bvxxxxxxxxxxpurpose31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL3xxuv31bvxxxxxxxxxxvalue31("");
      yrxxch511xhhxxhxxxxxoptions.setL4xxuo32bvxxxxxxxxxxoptions32("Room 107");
      yrxxch511xhhxxhxxxxxoptions.setL5xxup32bvxxxxxxxxxxpurpose32("Room 107");
      yrxxch511xhhxxhxxxxxoptions.setL6xxuv32bvxxxxxxxxxxvalue32("");
      yrxxch511xhhxxhxxxxxoptions.setL7xxuo33bvxxxxxxxxxxoptions33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL8xxup33bvxxxxxxxxxxpurpose33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL9xxuv33bvxxxxxxxxxxvalue33("");
      yrxxch511xhhxxhxxxxxoptions.setM1xxuo34bvxxxxxxxxxxoptions34("");
      yrxxch511xhhxxhxxxxxoptions.setM2xxup34bvxxxxxxxxxxpurpose34("");
      yrxxch511xhhxxhxxxxxoptions.setM3xxuv34bvxxxxxxxxxxvalue34("");
      yrxxch511xhhxxhxxxxxoptions.setM4xxuo35bvxxxxxxxxxxoptions35("Lunch Appontment");
      yrxxch511xhhxxhxxxxxoptions.setM5xxup35bvxxxxxxxxxxpurpose35("c$88.90");
      yrxxch511xhhxxhxxxxxoptions.setM6xxuv35bvxxxxxxxxxxvalue35("");
      yrxxch511xhhxxhxxxxxoptions.setM7xxuo36bvxxxxxxxxxxoptions36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM8xxup36bvxxxxxxxxxxpurpose36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM9xxuv36bvxxxxxxxxxxvalue36("");
      yrxxch511xhhxxhxxxxxoptions.setN1xxuo37bvxxxxxxxxxxoptions37("High");
      yrxxch511xhhxxhxxxxxoptions.setN2xxup37bvxxxxxxxxxxpurpose37("High");
      yrxxch511xhhxxhxxxxxoptions.setN3xxuv37bvxxxxxxxxxxvalue37("");
      yrxxch511xhhxxhxxxxxoptions.setN4xxuo38bvxxxxxxxxxxoptions38("S");
      yrxxch511xhhxxhxxxxxoptions.setN5xxup38bvxxxxxxxxxxpurpose38("System Admin");
      yrxxch511xhhxxhxxxxxoptions.setN6xxuv38bvxxxxxxxxxxvalue38("");
      yrxxch511xhhxxhxxxxxoptions.setN7xxuo39bvxxxxxxxxxxoptions39("H");
      yrxxch511xhhxxhxxxxxoptions.setN8xxup39bvxxxxxxxxxxpurpose39("High");
      yrxxch511xhhxxhxxxxxoptions.setN9xxuv39bvxxxxxxxxxxvalue39("");
      yrxxch511xhhxxhxxxxxoptions.setO1xxuo40bvxxxxxxxxxxoptions40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO2xxup40bvxxxxxxxxxxpurpose40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO3xxuv40bvxxxxxxxxxxvalue40("");
      yrxxch511xhhxxhxxxxxoptions.setO4xxuo41bvxxxxxxxxxxoptions41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO5xxup41bvxxxxxxxxxxpurpose41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO6xxuv41bvxxxxxxxxxxvalue41("");
      yrxxch511xhhxxhxxxxxoptions.setO7xxuo42bvxxxxxxxxxxoptions42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO8xxup42bvxxxxxxxxxxpurpose42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO9xxuv42bvxxxxxxxxxxvalue42("");
      yrxxch511xhhxxhxxxxxoptions.setP1xxuo43bvxxxxxxxxxxoptions43("New");
      yrxxch511xhhxxhxxxxxoptions.setP2xxup43bvxxxxxxxxxxpurpose43("New");
      yrxxch511xhhxxhxxxxxoptions.setP3xxuv43bvxxxxxxxxxxvalue43("");
      yrxxch511xhhxxhxxxxxoptions.setP4xxuo44bvxxxxxxxxxxoptions44("");
      yrxxch511xhhxxhxxxxxoptions.setP5xxup44bvxxxxxxxxxxpurpose44("");
      yrxxch511xhhxxhxxxxxoptions.setP6xxuv44bvxxxxxxxxxxvalue44("");
      yrxxch511xhhxxhxxxxxoptions.setP7xxuo45bvxxxxxxxxxxoptions45("D");
      yrxxch511xhhxxhxxxxxoptions.setP8xxup45bvxxxxxxxxxxpurpose45("");
      yrxxch511xhhxxhxxxxxoptions.setP9xxuv45bvxxxxxxxxxxvalue45("");
      yrxxch511xhhxxhxxxxxoptions.setQ1xxuo46bvxxxxxxxxxxoptions46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ2xxup46bvxxxxxxxxxxpurpose46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ3xxuv46bvxxxxxxxxxxvalue46("");
      yrxxch511xhhxxhxxxxxoptions.setQ4xxuo47bvxxxxxxxxxxoptions47("04");
      yrxxch511xhhxxhxxxxxoptions.setQ5xxup47bvxxxxxxxxxxpurpose47("04");
      yrxxch511xhhxxhxxxxxoptions.setQ6xxuv47bvxxxxxxxxxxvalue47("");
      yrxxch511xhhxxhxxxxxoptions.setQ7xxuo48bvxxxxxxxxxxoptions48("");
      yrxxch511xhhxxhxxxxxoptions.setQ8xxup48bvxxxxxxxxxxpurpose48("");
      yrxxch511xhhxxhxxxxxoptions.setQ9xxuv48bvxxxxxxxxxxvalue48("");
      yrxxch511xhhxxhxxxxxoptions.setR1xxuo49bvxxxxxxxxxxoptions49("3R-ATTACHMENT-2-C");
      yrxxch511xhhxxhxxxxxoptions.setR2xxup49bvxxxxxxxxxxpurpose49("Attachment 2");
      yrxxch511xhhxxhxxxxxoptions.setR3xxuv49bvxxxxxxxxxxvalue49("");
      yrxxch511xhhxxhxxxxxoptions.setR4xxuo50bvxxxxxxxxxxoptions50("");
      yrxxch511xhhxxhxxxxxoptions.setR5xxup50bvxxxxxxxxxxpurpose50("");
      yrxxch511xhhxxhxxxxxoptions.setR6xxuv50bvxxxxxxxxxxvalue50("");
      yrxxch511xhhxxhxxxxxoptions.setR7xxuo51bvxxxxxxxxxxoptions51("");
      yrxxch511xhhxxhxxxxxoptions.setR8xxup51bvxxxxxxxxxxpurpose51("");
      yrxxch511xhhxxhxxxxxoptions.setR9xxuv51bvxxxxxxxxxxvalue51("");
      yrxxch511xhhxxhxxxxxoptions.setS1xxuo52bvxxxxxxxxxxoptions52("");
      yrxxch511xhhxxhxxxxxoptions.setS2xxup52bvxxxxxxxxxxpurpose52("");
      yrxxch511xhhxxhxxxxxoptions.setS3xxuv52bvxxxxxxxxxxvalue52("");
      yrxxch511xhhxxhxxxxxoptions.setS4xxuo53bvxxxxxxxxxxoptions53("");
      yrxxch511xhhxxhxxxxxoptions.setS5xxup53bvxxxxxxxxxxpurpose53("");
      yrxxch511xhhxxhxxxxxoptions.setS6xxuv53bvxxxxxxxxxxvalue53("");

      yrxxch511xhhxxhxxxxxoptions.setS7xxuo54bvxxxxxxxxxxoptions54("");
      yrxxch511xhhxxhxxxxxoptions.setS8xxup54bvxxxxxxxxxxpurpose54("");
      yrxxch511xhhxxhxxxxxoptions.setS9xxuv54bvxxxxxxxxxxvalue54("");
      yrxxch511xhhxxhxxxxxoptions.setT1xxuo55bvxxxxxxxxxxoptions55("");
      yrxxch511xhhxxhxxxxxoptions.setT2xxup55bvxxxxxxxxxxpurpose55("");
      yrxxch511xhhxxhxxxxxoptions.setT3xxuv55bvxxxxxxxxxxvalue55("");
      yrxxch511xhhxxhxxxxxoptions.setT4xxuo56bvxxxxxxxxxxoptions56("");
      yrxxch511xhhxxhxxxxxoptions.setT5xxup56bvxxxxxxxxxxpurpose56("");
      yrxxch511xhhxxhxxxxxoptions.setT6xxuv56bvxxxxxxxxxxvalue56("");
      yrxxch511xhhxxhxxxxxoptions.setT7xxuo57bvxxxxxxxxxxoptions57("");
      yrxxch511xhhxxhxxxxxoptions.setT8xxup57bvxxxxxxxxxxpurpose57("");
      yrxxch511xhhxxhxxxxxoptions.setT9xxuv57bvxxxxxxxxxxvalue57("");
      yrxxch511xhhxxhxxxxxoptions.setU1xxuo58bvxxxxxxxxxxoptions58("");
      yrxxch511xhhxxhxxxxxoptions.setU2xxup58bvxxxxxxxxxxpurpose58("");
      yrxxch511xhhxxhxxxxxoptions.setU3xxuv58bvxxxxxxxxxxvalue58("");
      yrxxch511xhhxxhxxxxxoptions.setU4xxuo59bvxxxxxxxxxxoptions59("");
      yrxxch511xhhxxhxxxxxoptions.setU5xxup59bvxxxxxxxxxxpurpose59("");
      yrxxch511xhhxxhxxxxxoptions.setU6xxuv59bvxxxxxxxxxxvalue59("");
      yrxxch511xhhxxhxxxxxoptions.setU7xxuo60bvxxxxxxxxxxoptions60("");
      yrxxch511xhhxxhxxxxxoptions.setU8xxup60bvxxxxxxxxxxpurpose60("");
      yrxxch511xhhxxhxxxxxoptions.setU9xxuv60bvxxxxxxxxxxvalue60("");
      yrxxch511xhhxxhxxxxxoptions.setV1xxuo61bvxxxxxxxxxxoptions61("");
      yrxxch511xhhxxhxxxxxoptions.setV2xxup61bvxxxxxxxxxxpurpose61("");
      yrxxch511xhhxxhxxxxxoptions.setV3xxuv61bvxxxxxxxxxxvalue61("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptionsHome.persist(client);


      yrxxch511xhhxxhxxxxxoptionsHome.clearInstance();
      yrxxch511xhhxxhxxxxxoptions=yrxxch511xhhxxhxxxxxoptionsHome.getInstance();
      yrxxch511xhhxxhxxxxxoptions.setA0xxukcxbvxxxxxxxxxxrow("30");
      yrxxch511xhhxxhxxxxxoptions.setB1xxuo01bvxxxxxxxxxxoptions01("R");
      yrxxch511xhhxxhxxxxxoptions.setB2xxup01bvxxxxxxxxxxpurpose01("Retained Earning");
      yrxxch511xhhxxhxxxxxoptions.setB3xxuv01bvxxxxxxxxxxvalue01("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptions.setB4xxuo02bvxxxxxxxxxxoptions02("S");
      yrxxch511xhhxxhxxxxxoptions.setB5xxup02bvxxxxxxxxxxpurpose02("Subheader");
      yrxxch511xhhxxhxxxxxoptions.setB6xxuv02bvxxxxxxxxxxvalue02("");
      yrxxch511xhhxxhxxxxxoptions.setB7xxuo03bvxxxxxxxxxxoptions03("P");
      yrxxch511xhhxxhxxxxxoptions.setB8xxup03bvxxxxxxxxxxpurpose03("Payable");
      yrxxch511xhhxxhxxxxxoptions.setB9xxuv03bvxxxxxxxxxxvalue03("");
      yrxxch511xhhxxhxxxxxoptions.setC1xxuo04bvxxxxxxxxxxoptions04("");
      yrxxch511xhhxxhxxxxxoptions.setC2xxup04bvxxxxxxxxxxpurpose04("");
      yrxxch511xhhxxhxxxxxoptions.setC3xxuv04bvxxxxxxxxxxvalue04("");
      yrxxch511xhhxxhxxxxxoptions.setC4xxuo05bvxxxxxxxxxxoptions05("");
      yrxxch511xhhxxhxxxxxoptions.setC5xxup05bvxxxxxxxxxxpurpose05("");
      yrxxch511xhhxxhxxxxxoptions.setC6xxuv05bvxxxxxxxxxxvalue05("");
      yrxxch511xhhxxhxxxxxoptions.setC7xxuo06bvxxxxxxxxxxoptions06("");
      yrxxch511xhhxxhxxxxxoptions.setC8xxup06bvxxxxxxxxxxpurpose06("");
      yrxxch511xhhxxhxxxxxoptions.setC9xxuv06bvxxxxxxxxxxvalue06("");
      yrxxch511xhhxxhxxxxxoptions.setD1xxuo07bvxxxxxxxxxxoptions07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD2xxup07bvxxxxxxxxxxpurpose07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD3xxuv07bvxxxxxxxxxxvalue07("");
      yrxxch511xhhxxhxxxxxoptions.setD4xxuo08bvxxxxxxxxxxoptions08("H");
      yrxxch511xhhxxhxxxxxoptions.setD5xxup08bvxxxxxxxxxxpurpose08("High");
      yrxxch511xhhxxhxxxxxoptions.setD6xxuv08bvxxxxxxxxxxvalue08("");
      yrxxch511xhhxxhxxxxxoptions.setD7xxuo09bvxxxxxxxxxxoptions09("30");
      yrxxch511xhhxxhxxxxxoptions.setD8xxup09bvxxxxxxxxxxpurpose09("-30 days");
      yrxxch511xhhxxhxxxxxoptions.setD9xxuv09bvxxxxxxxxxxvalue09("");
      yrxxch511xhhxxhxxxxxoptions.setE1xxuo10bvxxxxxxxxxxoptions10("cash");
      yrxxch511xhhxxhxxxxxoptions.setE2xxup10bvxxxxxxxxxxpurpose10("-cash");
      yrxxch511xhhxxhxxxxxoptions.setE3xxuv10bvxxxxxxxxxxvalue10("");
      yrxxch511xhhxxhxxxxxoptions.setE4xxuo11bvxxxxxxxxxxoptions11("Montreal");
      yrxxch511xhhxxhxxxxxoptions.setE5xxup11bvxxxxxxxxxxpurpose11("Toronto");
      yrxxch511xhhxxhxxxxxoptions.setE6xxuv11bvxxxxxxxxxxvalue11("ca=Montreal; us=Boston");
      yrxxch511xhhxxhxxxxxoptions.setE7xxuo12bvxxxxxxxxxxoptions12("QE");
      yrxxch511xhhxxhxxxxxoptions.setE8xxup12bvxxxxxxxxxxpurpose12("Quebec");
      yrxxch511xhhxxhxxxxxoptions.setE9xxuv12bvxxxxxxxxxxvalue12("ca=QE us=CA");
      yrxxch511xhhxxhxxxxxoptions.setF1xxuo13bvxxxxxxxxxxoptions13("");
      yrxxch511xhhxxhxxxxxoptions.setF2xxup13bvxxxxxxxxxxpurpose13("");
      yrxxch511xhhxxhxxxxxoptions.setF3xxuv13bvxxxxxxxxxxvalue13("");
      yrxxch511xhhxxhxxxxxoptions.setF4xxuo14bvxxxxxxxxxxoptions14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF5xxup14bvxxxxxxxxxxpurpose14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF6xxuv14bvxxxxxxxxxxvalue14("ca=M4L3Z8 us=10003 in=70003");
      yrxxch511xhhxxhxxxxxoptions.setF7xxuo15bvxxxxxxxxxxoptions15("Y");
      yrxxch511xhhxxhxxxxxoptions.setF8xxup15bvxxxxxxxxxxpurpose15("Yes");
      yrxxch511xhhxxhxxxxxoptions.setF9xxuv15bvxxxxxxxxxxvalue15("");
      yrxxch511xhhxxhxxxxxoptions.setG1xxuo16bvxxxxxxxxxxoptions16("BI-L1");
      yrxxch511xhhxxhxxxxxoptions.setG2xxup16bvxxxxxxxxxxpurpose16("Blogs-Categories");
      yrxxch511xhhxxhxxxxxoptions.setG3xxuv16bvxxxxxxxxxxvalue16("");
      yrxxch511xhhxxhxxxxxoptions.setG4xxuo17bvxxxxxxxxxxoptions17("?");
      yrxxch511xhhxxhxxxxxoptions.setG5xxup17bvxxxxxxxxxxpurpose17("?");
      yrxxch511xhhxxhxxxxxoptions.setG6xxuv17bvxxxxxxxxxxvalue17("");
      yrxxch511xhhxxhxxxxxoptions.setG7xxuo18bvxxxxxxxxxxoptions18("AH");
      yrxxch511xhhxxhxxxxxoptions.setG8xxup18bvxxxxxxxxxxpurpose18("Hourly");
      yrxxch511xhhxxhxxxxxoptions.setG9xxuv18bvxxxxxxxxxxvalue18("s=89");
      yrxxch511xhhxxhxxxxxoptions.setH1xxuo19bvxxxxxxxxxxoptions19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH2xxup19bvxxxxxxxxxxpurpose19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH3xxuv19bvxxxxxxxxxxvalue19("");
      yrxxch511xhhxxhxxxxxoptions.setH4xxuo20bvxxxxxxxxxxoptions20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH5xxup20bvxxxxxxxxxxpurpose20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH6xxuv20bvxxxxxxxxxxvalue20("");
      yrxxch511xhhxxhxxxxxoptions.setH7xxuo21bvxxxxxxxxxxoptions21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH8xxup21bvxxxxxxxxxxpurpose21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH9xxuv21bvxxxxxxxxxxvalue21("");
      yrxxch511xhhxxhxxxxxoptions.setI1xxuo22bvxxxxxxxxxxoptions22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI2xxup22bvxxxxxxxxxxpurpose22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI3xxuv22bvxxxxxxxxxxvalue22("");
      yrxxch511xhhxxhxxxxxoptions.setI4xxuo23bvxxxxxxxxxxoptions23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI5xxup23bvxxxxxxxxxxpurpose23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI6xxuv23bvxxxxxxxxxxvalue23("");
      yrxxch511xhhxxhxxxxxoptions.setI7xxuo24bvxxxxxxxxxxoptions24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI8xxup24bvxxxxxxxxxxpurpose24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI9xxuv24bvxxxxxxxxxxvalue24("");
      yrxxch511xhhxxhxxxxxoptions.setJ1xxuo25bvxxxxxxxxxxoptions25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ2xxup25bvxxxxxxxxxxpurpose25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ3xxuv25bvxxxxxxxxxxvalue25("");
      yrxxch511xhhxxhxxxxxoptions.setJ4xxuo26bvxxxxxxxxxxoptions26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ5xxup26bvxxxxxxxxxxpurpose26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ6xxuv26bvxxxxxxxxxxvalue26("");
      yrxxch511xhhxxhxxxxxoptions.setJ7xxuo27bvxxxxxxxxxxoptions27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ8xxup27bvxxxxxxxxxxpurpose27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ9xxuv27bvxxxxxxxxxxvalue27("");
      yrxxch511xhhxxhxxxxxoptions.setK1xxuo28bvxxxxxxxxxxoptions28("PF");
      yrxxch511xhhxxhxxxxxoptions.setK2xxup28bvxxxxxxxxxxpurpose28("Persons-Family");
      yrxxch511xhhxxhxxxxxoptions.setK3xxuv28bvxxxxxxxxxxvalue28("");
      yrxxch511xhhxxhxxxxxoptions.setK4xxuo29bvxxxxxxxxxxoptions29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK5xxup29bvxxxxxxxxxxpurpose29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK6xxuv29bvxxxxxxxxxxvalue29("");
      yrxxch511xhhxxhxxxxxoptions.setK7xxuo30bvxxxxxxxxxxoptions30("EM");
      yrxxch511xhhxxhxxxxxoptions.setK8xxup30bvxxxxxxxxxxpurpose30("EMail");
      yrxxch511xhhxxhxxxxxoptions.setK9xxuv30bvxxxxxxxxxxvalue30("");
      yrxxch511xhhxxhxxxxxoptions.setL1xxuo31bvxxxxxxxxxxoptions31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL2xxup31bvxxxxxxxxxxpurpose31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL3xxuv31bvxxxxxxxxxxvalue31("");
      yrxxch511xhhxxhxxxxxoptions.setL4xxuo32bvxxxxxxxxxxoptions32("Room 107");
      yrxxch511xhhxxhxxxxxoptions.setL5xxup32bvxxxxxxxxxxpurpose32("Room 107");
      yrxxch511xhhxxhxxxxxoptions.setL6xxuv32bvxxxxxxxxxxvalue32("");
      yrxxch511xhhxxhxxxxxoptions.setL7xxuo33bvxxxxxxxxxxoptions33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL8xxup33bvxxxxxxxxxxpurpose33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL9xxuv33bvxxxxxxxxxxvalue33("");
      yrxxch511xhhxxhxxxxxoptions.setM1xxuo34bvxxxxxxxxxxoptions34("");
      yrxxch511xhhxxhxxxxxoptions.setM2xxup34bvxxxxxxxxxxpurpose34("");
      yrxxch511xhhxxhxxxxxoptions.setM3xxuv34bvxxxxxxxxxxvalue34("");
      yrxxch511xhhxxhxxxxxoptions.setM4xxuo35bvxxxxxxxxxxoptions35("Lunch Appontment");
      yrxxch511xhhxxhxxxxxoptions.setM5xxup35bvxxxxxxxxxxpurpose35("c$88.90");
      yrxxch511xhhxxhxxxxxoptions.setM6xxuv35bvxxxxxxxxxxvalue35("");
      yrxxch511xhhxxhxxxxxoptions.setM7xxuo36bvxxxxxxxxxxoptions36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM8xxup36bvxxxxxxxxxxpurpose36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM9xxuv36bvxxxxxxxxxxvalue36("");
      yrxxch511xhhxxhxxxxxoptions.setN1xxuo37bvxxxxxxxxxxoptions37("High");
      yrxxch511xhhxxhxxxxxoptions.setN2xxup37bvxxxxxxxxxxpurpose37("High");
      yrxxch511xhhxxhxxxxxoptions.setN3xxuv37bvxxxxxxxxxxvalue37("");
      yrxxch511xhhxxhxxxxxoptions.setN4xxuo38bvxxxxxxxxxxoptions38("S");
      yrxxch511xhhxxhxxxxxoptions.setN5xxup38bvxxxxxxxxxxpurpose38("System Admin");
      yrxxch511xhhxxhxxxxxoptions.setN6xxuv38bvxxxxxxxxxxvalue38("");
      yrxxch511xhhxxhxxxxxoptions.setN7xxuo39bvxxxxxxxxxxoptions39("H");
      yrxxch511xhhxxhxxxxxoptions.setN8xxup39bvxxxxxxxxxxpurpose39("High");
      yrxxch511xhhxxhxxxxxoptions.setN9xxuv39bvxxxxxxxxxxvalue39("");
      yrxxch511xhhxxhxxxxxoptions.setO1xxuo40bvxxxxxxxxxxoptions40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO2xxup40bvxxxxxxxxxxpurpose40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO3xxuv40bvxxxxxxxxxxvalue40("");
      yrxxch511xhhxxhxxxxxoptions.setO4xxuo41bvxxxxxxxxxxoptions41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO5xxup41bvxxxxxxxxxxpurpose41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO6xxuv41bvxxxxxxxxxxvalue41("");
      yrxxch511xhhxxhxxxxxoptions.setO7xxuo42bvxxxxxxxxxxoptions42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO8xxup42bvxxxxxxxxxxpurpose42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO9xxuv42bvxxxxxxxxxxvalue42("");
      yrxxch511xhhxxhxxxxxoptions.setP1xxuo43bvxxxxxxxxxxoptions43("New");
      yrxxch511xhhxxhxxxxxoptions.setP2xxup43bvxxxxxxxxxxpurpose43("New");
      yrxxch511xhhxxhxxxxxoptions.setP3xxuv43bvxxxxxxxxxxvalue43("");
      yrxxch511xhhxxhxxxxxoptions.setP4xxuo44bvxxxxxxxxxxoptions44("");
      yrxxch511xhhxxhxxxxxoptions.setP5xxup44bvxxxxxxxxxxpurpose44("");
      yrxxch511xhhxxhxxxxxoptions.setP6xxuv44bvxxxxxxxxxxvalue44("");
      yrxxch511xhhxxhxxxxxoptions.setP7xxuo45bvxxxxxxxxxxoptions45("D");
      yrxxch511xhhxxhxxxxxoptions.setP8xxup45bvxxxxxxxxxxpurpose45("");
      yrxxch511xhhxxhxxxxxoptions.setP9xxuv45bvxxxxxxxxxxvalue45("");
      yrxxch511xhhxxhxxxxxoptions.setQ1xxuo46bvxxxxxxxxxxoptions46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ2xxup46bvxxxxxxxxxxpurpose46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ3xxuv46bvxxxxxxxxxxvalue46("");
      yrxxch511xhhxxhxxxxxoptions.setQ4xxuo47bvxxxxxxxxxxoptions47("04");
      yrxxch511xhhxxhxxxxxoptions.setQ5xxup47bvxxxxxxxxxxpurpose47("04");
      yrxxch511xhhxxhxxxxxoptions.setQ6xxuv47bvxxxxxxxxxxvalue47("");
      yrxxch511xhhxxhxxxxxoptions.setQ7xxuo48bvxxxxxxxxxxoptions48("");
      yrxxch511xhhxxhxxxxxoptions.setQ8xxup48bvxxxxxxxxxxpurpose48("");
      yrxxch511xhhxxhxxxxxoptions.setQ9xxuv48bvxxxxxxxxxxvalue48("");
      yrxxch511xhhxxhxxxxxoptions.setR1xxuo49bvxxxxxxxxxxoptions49("3R-ATTACHMENT-3-C");
      yrxxch511xhhxxhxxxxxoptions.setR2xxup49bvxxxxxxxxxxpurpose49("Attachment 3");
      yrxxch511xhhxxhxxxxxoptions.setR3xxuv49bvxxxxxxxxxxvalue49("");
      yrxxch511xhhxxhxxxxxoptions.setR4xxuo50bvxxxxxxxxxxoptions50("");
      yrxxch511xhhxxhxxxxxoptions.setR5xxup50bvxxxxxxxxxxpurpose50("");
      yrxxch511xhhxxhxxxxxoptions.setR6xxuv50bvxxxxxxxxxxvalue50("");
      yrxxch511xhhxxhxxxxxoptions.setR7xxuo51bvxxxxxxxxxxoptions51("");
      yrxxch511xhhxxhxxxxxoptions.setR8xxup51bvxxxxxxxxxxpurpose51("");
      yrxxch511xhhxxhxxxxxoptions.setR9xxuv51bvxxxxxxxxxxvalue51("");
      yrxxch511xhhxxhxxxxxoptions.setS1xxuo52bvxxxxxxxxxxoptions52("");
      yrxxch511xhhxxhxxxxxoptions.setS2xxup52bvxxxxxxxxxxpurpose52("");
      yrxxch511xhhxxhxxxxxoptions.setS3xxuv52bvxxxxxxxxxxvalue52("");
      yrxxch511xhhxxhxxxxxoptions.setS4xxuo53bvxxxxxxxxxxoptions53("");
      yrxxch511xhhxxhxxxxxoptions.setS5xxup53bvxxxxxxxxxxpurpose53("");
      yrxxch511xhhxxhxxxxxoptions.setS6xxuv53bvxxxxxxxxxxvalue53("");

      yrxxch511xhhxxhxxxxxoptions.setS7xxuo54bvxxxxxxxxxxoptions54("");
      yrxxch511xhhxxhxxxxxoptions.setS8xxup54bvxxxxxxxxxxpurpose54("");
      yrxxch511xhhxxhxxxxxoptions.setS9xxuv54bvxxxxxxxxxxvalue54("");
      yrxxch511xhhxxhxxxxxoptions.setT1xxuo55bvxxxxxxxxxxoptions55("");
      yrxxch511xhhxxhxxxxxoptions.setT2xxup55bvxxxxxxxxxxpurpose55("");
      yrxxch511xhhxxhxxxxxoptions.setT3xxuv55bvxxxxxxxxxxvalue55("");
      yrxxch511xhhxxhxxxxxoptions.setT4xxuo56bvxxxxxxxxxxoptions56("");
      yrxxch511xhhxxhxxxxxoptions.setT5xxup56bvxxxxxxxxxxpurpose56("");
      yrxxch511xhhxxhxxxxxoptions.setT6xxuv56bvxxxxxxxxxxvalue56("");
      yrxxch511xhhxxhxxxxxoptions.setT7xxuo57bvxxxxxxxxxxoptions57("");
      yrxxch511xhhxxhxxxxxoptions.setT8xxup57bvxxxxxxxxxxpurpose57("");
      yrxxch511xhhxxhxxxxxoptions.setT9xxuv57bvxxxxxxxxxxvalue57("");
      yrxxch511xhhxxhxxxxxoptions.setU1xxuo58bvxxxxxxxxxxoptions58("");
      yrxxch511xhhxxhxxxxxoptions.setU2xxup58bvxxxxxxxxxxpurpose58("");
      yrxxch511xhhxxhxxxxxoptions.setU3xxuv58bvxxxxxxxxxxvalue58("");
      yrxxch511xhhxxhxxxxxoptions.setU4xxuo59bvxxxxxxxxxxoptions59("");
      yrxxch511xhhxxhxxxxxoptions.setU5xxup59bvxxxxxxxxxxpurpose59("");
      yrxxch511xhhxxhxxxxxoptions.setU6xxuv59bvxxxxxxxxxxvalue59("");
      yrxxch511xhhxxhxxxxxoptions.setU7xxuo60bvxxxxxxxxxxoptions60("");
      yrxxch511xhhxxhxxxxxoptions.setU8xxup60bvxxxxxxxxxxpurpose60("");
      yrxxch511xhhxxhxxxxxoptions.setU9xxuv60bvxxxxxxxxxxvalue60("");
      yrxxch511xhhxxhxxxxxoptions.setV1xxuo61bvxxxxxxxxxxoptions61("");
      yrxxch511xhhxxhxxxxxoptions.setV2xxup61bvxxxxxxxxxxpurpose61("");
      yrxxch511xhhxxhxxxxxoptions.setV3xxuv61bvxxxxxxxxxxvalue61("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptionsHome.persist(client);


      yrxxch511xhhxxhxxxxxoptionsHome.clearInstance();
      yrxxch511xhhxxhxxxxxoptions=yrxxch511xhhxxhxxxxxoptionsHome.getInstance();
      yrxxch511xhhxxhxxxxxoptions.setA0xxukcxbvxxxxxxxxxxrow("31");
      yrxxch511xhhxxhxxxxxoptions.setB1xxuo01bvxxxxxxxxxxoptions01("R");
      yrxxch511xhhxxhxxxxxoptions.setB2xxup01bvxxxxxxxxxxpurpose01("Retained Earning");
      yrxxch511xhhxxhxxxxxoptions.setB3xxuv01bvxxxxxxxxxxvalue01("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptions.setB4xxuo02bvxxxxxxxxxxoptions02("S");
      yrxxch511xhhxxhxxxxxoptions.setB5xxup02bvxxxxxxxxxxpurpose02("Subheader");
      yrxxch511xhhxxhxxxxxoptions.setB6xxuv02bvxxxxxxxxxxvalue02("");
      yrxxch511xhhxxhxxxxxoptions.setB7xxuo03bvxxxxxxxxxxoptions03("P");
      yrxxch511xhhxxhxxxxxoptions.setB8xxup03bvxxxxxxxxxxpurpose03("Payable");
      yrxxch511xhhxxhxxxxxoptions.setB9xxuv03bvxxxxxxxxxxvalue03("");
      yrxxch511xhhxxhxxxxxoptions.setC1xxuo04bvxxxxxxxxxxoptions04("");
      yrxxch511xhhxxhxxxxxoptions.setC2xxup04bvxxxxxxxxxxpurpose04("");
      yrxxch511xhhxxhxxxxxoptions.setC3xxuv04bvxxxxxxxxxxvalue04("");
      yrxxch511xhhxxhxxxxxoptions.setC4xxuo05bvxxxxxxxxxxoptions05("");
      yrxxch511xhhxxhxxxxxoptions.setC5xxup05bvxxxxxxxxxxpurpose05("");
      yrxxch511xhhxxhxxxxxoptions.setC6xxuv05bvxxxxxxxxxxvalue05("");
      yrxxch511xhhxxhxxxxxoptions.setC7xxuo06bvxxxxxxxxxxoptions06("");
      yrxxch511xhhxxhxxxxxoptions.setC8xxup06bvxxxxxxxxxxpurpose06("");
      yrxxch511xhhxxhxxxxxoptions.setC9xxuv06bvxxxxxxxxxxvalue06("");
      yrxxch511xhhxxhxxxxxoptions.setD1xxuo07bvxxxxxxxxxxoptions07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD2xxup07bvxxxxxxxxxxpurpose07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD3xxuv07bvxxxxxxxxxxvalue07("");
      yrxxch511xhhxxhxxxxxoptions.setD4xxuo08bvxxxxxxxxxxoptions08("H");
      yrxxch511xhhxxhxxxxxoptions.setD5xxup08bvxxxxxxxxxxpurpose08("High");
      yrxxch511xhhxxhxxxxxoptions.setD6xxuv08bvxxxxxxxxxxvalue08("");
      yrxxch511xhhxxhxxxxxoptions.setD7xxuo09bvxxxxxxxxxxoptions09("30");
      yrxxch511xhhxxhxxxxxoptions.setD8xxup09bvxxxxxxxxxxpurpose09("-30 days");
      yrxxch511xhhxxhxxxxxoptions.setD9xxuv09bvxxxxxxxxxxvalue09("");
      yrxxch511xhhxxhxxxxxoptions.setE1xxuo10bvxxxxxxxxxxoptions10("cash");
      yrxxch511xhhxxhxxxxxoptions.setE2xxup10bvxxxxxxxxxxpurpose10("-cash");
      yrxxch511xhhxxhxxxxxoptions.setE3xxuv10bvxxxxxxxxxxvalue10("");
      yrxxch511xhhxxhxxxxxoptions.setE4xxuo11bvxxxxxxxxxxoptions11("Montreal");
      yrxxch511xhhxxhxxxxxoptions.setE5xxup11bvxxxxxxxxxxpurpose11("Toronto");
      yrxxch511xhhxxhxxxxxoptions.setE6xxuv11bvxxxxxxxxxxvalue11("ca=Montreal; us=Boston");
      yrxxch511xhhxxhxxxxxoptions.setE7xxuo12bvxxxxxxxxxxoptions12("QE");
      yrxxch511xhhxxhxxxxxoptions.setE8xxup12bvxxxxxxxxxxpurpose12("Quebec");
      yrxxch511xhhxxhxxxxxoptions.setE9xxuv12bvxxxxxxxxxxvalue12("ca=QE us=CA");
      yrxxch511xhhxxhxxxxxoptions.setF1xxuo13bvxxxxxxxxxxoptions13("");
      yrxxch511xhhxxhxxxxxoptions.setF2xxup13bvxxxxxxxxxxpurpose13("");
      yrxxch511xhhxxhxxxxxoptions.setF3xxuv13bvxxxxxxxxxxvalue13("");
      yrxxch511xhhxxhxxxxxoptions.setF4xxuo14bvxxxxxxxxxxoptions14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF5xxup14bvxxxxxxxxxxpurpose14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF6xxuv14bvxxxxxxxxxxvalue14("ca=M4L3Z8 us=10003 in=70003");
      yrxxch511xhhxxhxxxxxoptions.setF7xxuo15bvxxxxxxxxxxoptions15("Y");
      yrxxch511xhhxxhxxxxxoptions.setF8xxup15bvxxxxxxxxxxpurpose15("Yes");
      yrxxch511xhhxxhxxxxxoptions.setF9xxuv15bvxxxxxxxxxxvalue15("");
      yrxxch511xhhxxhxxxxxoptions.setG1xxuo16bvxxxxxxxxxxoptions16("BI-D");
      yrxxch511xhhxxhxxxxxoptions.setG2xxup16bvxxxxxxxxxxpurpose16("Blog-Item");
      yrxxch511xhhxxhxxxxxoptions.setG3xxuv16bvxxxxxxxxxxvalue16("");
      yrxxch511xhhxxhxxxxxoptions.setG4xxuo17bvxxxxxxxxxxoptions17("?");
      yrxxch511xhhxxhxxxxxoptions.setG5xxup17bvxxxxxxxxxxpurpose17("?");
      yrxxch511xhhxxhxxxxxoptions.setG6xxuv17bvxxxxxxxxxxvalue17("");
      yrxxch511xhhxxhxxxxxoptions.setG7xxuo18bvxxxxxxxxxxoptions18("AH");
      yrxxch511xhhxxhxxxxxoptions.setG8xxup18bvxxxxxxxxxxpurpose18("Hourly");
      yrxxch511xhhxxhxxxxxoptions.setG9xxuv18bvxxxxxxxxxxvalue18("s=89");
      yrxxch511xhhxxhxxxxxoptions.setH1xxuo19bvxxxxxxxxxxoptions19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH2xxup19bvxxxxxxxxxxpurpose19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH3xxuv19bvxxxxxxxxxxvalue19("");
      yrxxch511xhhxxhxxxxxoptions.setH4xxuo20bvxxxxxxxxxxoptions20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH5xxup20bvxxxxxxxxxxpurpose20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH6xxuv20bvxxxxxxxxxxvalue20("");
      yrxxch511xhhxxhxxxxxoptions.setH7xxuo21bvxxxxxxxxxxoptions21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH8xxup21bvxxxxxxxxxxpurpose21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH9xxuv21bvxxxxxxxxxxvalue21("");
      yrxxch511xhhxxhxxxxxoptions.setI1xxuo22bvxxxxxxxxxxoptions22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI2xxup22bvxxxxxxxxxxpurpose22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI3xxuv22bvxxxxxxxxxxvalue22("");
      yrxxch511xhhxxhxxxxxoptions.setI4xxuo23bvxxxxxxxxxxoptions23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI5xxup23bvxxxxxxxxxxpurpose23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI6xxuv23bvxxxxxxxxxxvalue23("");
      yrxxch511xhhxxhxxxxxoptions.setI7xxuo24bvxxxxxxxxxxoptions24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI8xxup24bvxxxxxxxxxxpurpose24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI9xxuv24bvxxxxxxxxxxvalue24("");
      yrxxch511xhhxxhxxxxxoptions.setJ1xxuo25bvxxxxxxxxxxoptions25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ2xxup25bvxxxxxxxxxxpurpose25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ3xxuv25bvxxxxxxxxxxvalue25("");
      yrxxch511xhhxxhxxxxxoptions.setJ4xxuo26bvxxxxxxxxxxoptions26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ5xxup26bvxxxxxxxxxxpurpose26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ6xxuv26bvxxxxxxxxxxvalue26("");
      yrxxch511xhhxxhxxxxxoptions.setJ7xxuo27bvxxxxxxxxxxoptions27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ8xxup27bvxxxxxxxxxxpurpose27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ9xxuv27bvxxxxxxxxxxvalue27("");
      yrxxch511xhhxxhxxxxxoptions.setK1xxuo28bvxxxxxxxxxxoptions28("PF");
      yrxxch511xhhxxhxxxxxoptions.setK2xxup28bvxxxxxxxxxxpurpose28("Persons-Family");
      yrxxch511xhhxxhxxxxxoptions.setK3xxuv28bvxxxxxxxxxxvalue28("");
      yrxxch511xhhxxhxxxxxoptions.setK4xxuo29bvxxxxxxxxxxoptions29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK5xxup29bvxxxxxxxxxxpurpose29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK6xxuv29bvxxxxxxxxxxvalue29("");
      yrxxch511xhhxxhxxxxxoptions.setK7xxuo30bvxxxxxxxxxxoptions30("EM");
      yrxxch511xhhxxhxxxxxoptions.setK8xxup30bvxxxxxxxxxxpurpose30("EMail");
      yrxxch511xhhxxhxxxxxoptions.setK9xxuv30bvxxxxxxxxxxvalue30("");
      yrxxch511xhhxxhxxxxxoptions.setL1xxuo31bvxxxxxxxxxxoptions31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL2xxup31bvxxxxxxxxxxpurpose31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL3xxuv31bvxxxxxxxxxxvalue31("");
      yrxxch511xhhxxhxxxxxoptions.setL4xxuo32bvxxxxxxxxxxoptions32("Room 107");
      yrxxch511xhhxxhxxxxxoptions.setL5xxup32bvxxxxxxxxxxpurpose32("Room 107");
      yrxxch511xhhxxhxxxxxoptions.setL6xxuv32bvxxxxxxxxxxvalue32("");
      yrxxch511xhhxxhxxxxxoptions.setL7xxuo33bvxxxxxxxxxxoptions33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL8xxup33bvxxxxxxxxxxpurpose33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL9xxuv33bvxxxxxxxxxxvalue33("");
      yrxxch511xhhxxhxxxxxoptions.setM1xxuo34bvxxxxxxxxxxoptions34("");
      yrxxch511xhhxxhxxxxxoptions.setM2xxup34bvxxxxxxxxxxpurpose34("");
      yrxxch511xhhxxhxxxxxoptions.setM3xxuv34bvxxxxxxxxxxvalue34("");
      yrxxch511xhhxxhxxxxxoptions.setM4xxuo35bvxxxxxxxxxxoptions35("Lunch Appontment");
      yrxxch511xhhxxhxxxxxoptions.setM5xxup35bvxxxxxxxxxxpurpose35("c$88.90");
      yrxxch511xhhxxhxxxxxoptions.setM6xxuv35bvxxxxxxxxxxvalue35("");
      yrxxch511xhhxxhxxxxxoptions.setM7xxuo36bvxxxxxxxxxxoptions36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM8xxup36bvxxxxxxxxxxpurpose36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM9xxuv36bvxxxxxxxxxxvalue36("");
      yrxxch511xhhxxhxxxxxoptions.setN1xxuo37bvxxxxxxxxxxoptions37("High");
      yrxxch511xhhxxhxxxxxoptions.setN2xxup37bvxxxxxxxxxxpurpose37("High");
      yrxxch511xhhxxhxxxxxoptions.setN3xxuv37bvxxxxxxxxxxvalue37("");
      yrxxch511xhhxxhxxxxxoptions.setN4xxuo38bvxxxxxxxxxxoptions38("S");
      yrxxch511xhhxxhxxxxxoptions.setN5xxup38bvxxxxxxxxxxpurpose38("System Admin");
      yrxxch511xhhxxhxxxxxoptions.setN6xxuv38bvxxxxxxxxxxvalue38("");
      yrxxch511xhhxxhxxxxxoptions.setN7xxuo39bvxxxxxxxxxxoptions39("H");
      yrxxch511xhhxxhxxxxxoptions.setN8xxup39bvxxxxxxxxxxpurpose39("High");
      yrxxch511xhhxxhxxxxxoptions.setN9xxuv39bvxxxxxxxxxxvalue39("");
      yrxxch511xhhxxhxxxxxoptions.setO1xxuo40bvxxxxxxxxxxoptions40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO2xxup40bvxxxxxxxxxxpurpose40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO3xxuv40bvxxxxxxxxxxvalue40("");
      yrxxch511xhhxxhxxxxxoptions.setO4xxuo41bvxxxxxxxxxxoptions41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO5xxup41bvxxxxxxxxxxpurpose41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO6xxuv41bvxxxxxxxxxxvalue41("");
      yrxxch511xhhxxhxxxxxoptions.setO7xxuo42bvxxxxxxxxxxoptions42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO8xxup42bvxxxxxxxxxxpurpose42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO9xxuv42bvxxxxxxxxxxvalue42("");
      yrxxch511xhhxxhxxxxxoptions.setP1xxuo43bvxxxxxxxxxxoptions43("New");
      yrxxch511xhhxxhxxxxxoptions.setP2xxup43bvxxxxxxxxxxpurpose43("New");
      yrxxch511xhhxxhxxxxxoptions.setP3xxuv43bvxxxxxxxxxxvalue43("");
      yrxxch511xhhxxhxxxxxoptions.setP4xxuo44bvxxxxxxxxxxoptions44("");
      yrxxch511xhhxxhxxxxxoptions.setP5xxup44bvxxxxxxxxxxpurpose44("");
      yrxxch511xhhxxhxxxxxoptions.setP6xxuv44bvxxxxxxxxxxvalue44("");
      yrxxch511xhhxxhxxxxxoptions.setP7xxuo45bvxxxxxxxxxxoptions45("D");
      yrxxch511xhhxxhxxxxxoptions.setP8xxup45bvxxxxxxxxxxpurpose45("");
      yrxxch511xhhxxhxxxxxoptions.setP9xxuv45bvxxxxxxxxxxvalue45("");
      yrxxch511xhhxxhxxxxxoptions.setQ1xxuo46bvxxxxxxxxxxoptions46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ2xxup46bvxxxxxxxxxxpurpose46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ3xxuv46bvxxxxxxxxxxvalue46("");
      yrxxch511xhhxxhxxxxxoptions.setQ4xxuo47bvxxxxxxxxxxoptions47("04");
      yrxxch511xhhxxhxxxxxoptions.setQ5xxup47bvxxxxxxxxxxpurpose47("04");
      yrxxch511xhhxxhxxxxxoptions.setQ6xxuv47bvxxxxxxxxxxvalue47("");
      yrxxch511xhhxxhxxxxxoptions.setQ7xxuo48bvxxxxxxxxxxoptions48("");
      yrxxch511xhhxxhxxxxxoptions.setQ8xxup48bvxxxxxxxxxxpurpose48("");
      yrxxch511xhhxxhxxxxxoptions.setQ9xxuv48bvxxxxxxxxxxvalue48("");
      yrxxch511xhhxxhxxxxxoptions.setR1xxuo49bvxxxxxxxxxxoptions49("3R-PRODUCT-1-C");
      yrxxch511xhhxxhxxxxxoptions.setR2xxup49bvxxxxxxxxxxpurpose49("Product Panel 1");
      yrxxch511xhhxxhxxxxxoptions.setR3xxuv49bvxxxxxxxxxxvalue49("");
      yrxxch511xhhxxhxxxxxoptions.setR4xxuo50bvxxxxxxxxxxoptions50("");
      yrxxch511xhhxxhxxxxxoptions.setR5xxup50bvxxxxxxxxxxpurpose50("");
      yrxxch511xhhxxhxxxxxoptions.setR6xxuv50bvxxxxxxxxxxvalue50("");
      yrxxch511xhhxxhxxxxxoptions.setR7xxuo51bvxxxxxxxxxxoptions51("");
      yrxxch511xhhxxhxxxxxoptions.setR8xxup51bvxxxxxxxxxxpurpose51("");
      yrxxch511xhhxxhxxxxxoptions.setR9xxuv51bvxxxxxxxxxxvalue51("");
      yrxxch511xhhxxhxxxxxoptions.setS1xxuo52bvxxxxxxxxxxoptions52("");
      yrxxch511xhhxxhxxxxxoptions.setS2xxup52bvxxxxxxxxxxpurpose52("");
      yrxxch511xhhxxhxxxxxoptions.setS3xxuv52bvxxxxxxxxxxvalue52("");
      yrxxch511xhhxxhxxxxxoptions.setS4xxuo53bvxxxxxxxxxxoptions53("");
      yrxxch511xhhxxhxxxxxoptions.setS5xxup53bvxxxxxxxxxxpurpose53("");
      yrxxch511xhhxxhxxxxxoptions.setS6xxuv53bvxxxxxxxxxxvalue53("");

      yrxxch511xhhxxhxxxxxoptions.setS7xxuo54bvxxxxxxxxxxoptions54("");
      yrxxch511xhhxxhxxxxxoptions.setS8xxup54bvxxxxxxxxxxpurpose54("");
      yrxxch511xhhxxhxxxxxoptions.setS9xxuv54bvxxxxxxxxxxvalue54("");
      yrxxch511xhhxxhxxxxxoptions.setT1xxuo55bvxxxxxxxxxxoptions55("");
      yrxxch511xhhxxhxxxxxoptions.setT2xxup55bvxxxxxxxxxxpurpose55("");
      yrxxch511xhhxxhxxxxxoptions.setT3xxuv55bvxxxxxxxxxxvalue55("");
      yrxxch511xhhxxhxxxxxoptions.setT4xxuo56bvxxxxxxxxxxoptions56("");
      yrxxch511xhhxxhxxxxxoptions.setT5xxup56bvxxxxxxxxxxpurpose56("");
      yrxxch511xhhxxhxxxxxoptions.setT6xxuv56bvxxxxxxxxxxvalue56("");
      yrxxch511xhhxxhxxxxxoptions.setT7xxuo57bvxxxxxxxxxxoptions57("");
      yrxxch511xhhxxhxxxxxoptions.setT8xxup57bvxxxxxxxxxxpurpose57("");
      yrxxch511xhhxxhxxxxxoptions.setT9xxuv57bvxxxxxxxxxxvalue57("");
      yrxxch511xhhxxhxxxxxoptions.setU1xxuo58bvxxxxxxxxxxoptions58("");
      yrxxch511xhhxxhxxxxxoptions.setU2xxup58bvxxxxxxxxxxpurpose58("");
      yrxxch511xhhxxhxxxxxoptions.setU3xxuv58bvxxxxxxxxxxvalue58("");
      yrxxch511xhhxxhxxxxxoptions.setU4xxuo59bvxxxxxxxxxxoptions59("");
      yrxxch511xhhxxhxxxxxoptions.setU5xxup59bvxxxxxxxxxxpurpose59("");
      yrxxch511xhhxxhxxxxxoptions.setU6xxuv59bvxxxxxxxxxxvalue59("");
      yrxxch511xhhxxhxxxxxoptions.setU7xxuo60bvxxxxxxxxxxoptions60("");
      yrxxch511xhhxxhxxxxxoptions.setU8xxup60bvxxxxxxxxxxpurpose60("");
      yrxxch511xhhxxhxxxxxoptions.setU9xxuv60bvxxxxxxxxxxvalue60("");
      yrxxch511xhhxxhxxxxxoptions.setV1xxuo61bvxxxxxxxxxxoptions61("");
      yrxxch511xhhxxhxxxxxoptions.setV2xxup61bvxxxxxxxxxxpurpose61("");
      yrxxch511xhhxxhxxxxxoptions.setV3xxuv61bvxxxxxxxxxxvalue61("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptionsHome.persist(client);

      yrxxch511xhhxxhxxxxxoptionsHome.clearInstance();
      yrxxch511xhhxxhxxxxxoptions=yrxxch511xhhxxhxxxxxoptionsHome.getInstance();
      yrxxch511xhhxxhxxxxxoptions.setA0xxukcxbvxxxxxxxxxxrow("32");
      yrxxch511xhhxxhxxxxxoptions.setB1xxuo01bvxxxxxxxxxxoptions01("R");
      yrxxch511xhhxxhxxxxxoptions.setB2xxup01bvxxxxxxxxxxpurpose01("Retained Earning");
      yrxxch511xhhxxhxxxxxoptions.setB3xxuv01bvxxxxxxxxxxvalue01("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptions.setB4xxuo02bvxxxxxxxxxxoptions02("S");
      yrxxch511xhhxxhxxxxxoptions.setB5xxup02bvxxxxxxxxxxpurpose02("Subheader");
      yrxxch511xhhxxhxxxxxoptions.setB6xxuv02bvxxxxxxxxxxvalue02("");
      yrxxch511xhhxxhxxxxxoptions.setB7xxuo03bvxxxxxxxxxxoptions03("P");
      yrxxch511xhhxxhxxxxxoptions.setB8xxup03bvxxxxxxxxxxpurpose03("Payable");
      yrxxch511xhhxxhxxxxxoptions.setB9xxuv03bvxxxxxxxxxxvalue03("");
      yrxxch511xhhxxhxxxxxoptions.setC1xxuo04bvxxxxxxxxxxoptions04("");
      yrxxch511xhhxxhxxxxxoptions.setC2xxup04bvxxxxxxxxxxpurpose04("");
      yrxxch511xhhxxhxxxxxoptions.setC3xxuv04bvxxxxxxxxxxvalue04("");
      yrxxch511xhhxxhxxxxxoptions.setC4xxuo05bvxxxxxxxxxxoptions05("");
      yrxxch511xhhxxhxxxxxoptions.setC5xxup05bvxxxxxxxxxxpurpose05("");
      yrxxch511xhhxxhxxxxxoptions.setC6xxuv05bvxxxxxxxxxxvalue05("");
      yrxxch511xhhxxhxxxxxoptions.setC7xxuo06bvxxxxxxxxxxoptions06("");
      yrxxch511xhhxxhxxxxxoptions.setC8xxup06bvxxxxxxxxxxpurpose06("");
      yrxxch511xhhxxhxxxxxoptions.setC9xxuv06bvxxxxxxxxxxvalue06("");
      yrxxch511xhhxxhxxxxxoptions.setD1xxuo07bvxxxxxxxxxxoptions07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD2xxup07bvxxxxxxxxxxpurpose07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD3xxuv07bvxxxxxxxxxxvalue07("");
      yrxxch511xhhxxhxxxxxoptions.setD4xxuo08bvxxxxxxxxxxoptions08("H");
      yrxxch511xhhxxhxxxxxoptions.setD5xxup08bvxxxxxxxxxxpurpose08("High");
      yrxxch511xhhxxhxxxxxoptions.setD6xxuv08bvxxxxxxxxxxvalue08("");
      yrxxch511xhhxxhxxxxxoptions.setD7xxuo09bvxxxxxxxxxxoptions09("30");
      yrxxch511xhhxxhxxxxxoptions.setD8xxup09bvxxxxxxxxxxpurpose09("-30 days");
      yrxxch511xhhxxhxxxxxoptions.setD9xxuv09bvxxxxxxxxxxvalue09("");
      yrxxch511xhhxxhxxxxxoptions.setE1xxuo10bvxxxxxxxxxxoptions10("cash");
      yrxxch511xhhxxhxxxxxoptions.setE2xxup10bvxxxxxxxxxxpurpose10("-cash");
      yrxxch511xhhxxhxxxxxoptions.setE3xxuv10bvxxxxxxxxxxvalue10("");
      yrxxch511xhhxxhxxxxxoptions.setE4xxuo11bvxxxxxxxxxxoptions11("Montreal");
      yrxxch511xhhxxhxxxxxoptions.setE5xxup11bvxxxxxxxxxxpurpose11("Toronto");
      yrxxch511xhhxxhxxxxxoptions.setE6xxuv11bvxxxxxxxxxxvalue11("ca=Montreal; us=Boston");
      yrxxch511xhhxxhxxxxxoptions.setE7xxuo12bvxxxxxxxxxxoptions12("QE");
      yrxxch511xhhxxhxxxxxoptions.setE8xxup12bvxxxxxxxxxxpurpose12("Quebec");
      yrxxch511xhhxxhxxxxxoptions.setE9xxuv12bvxxxxxxxxxxvalue12("ca=QE us=CA");
      yrxxch511xhhxxhxxxxxoptions.setF1xxuo13bvxxxxxxxxxxoptions13("");
      yrxxch511xhhxxhxxxxxoptions.setF2xxup13bvxxxxxxxxxxpurpose13("");
      yrxxch511xhhxxhxxxxxoptions.setF3xxuv13bvxxxxxxxxxxvalue13("");
      yrxxch511xhhxxhxxxxxoptions.setF4xxuo14bvxxxxxxxxxxoptions14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF5xxup14bvxxxxxxxxxxpurpose14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF6xxuv14bvxxxxxxxxxxvalue14("ca=M4L3Z8 us=10003 in=70003");
      yrxxch511xhhxxhxxxxxoptions.setF7xxuo15bvxxxxxxxxxxoptions15("Y");
      yrxxch511xhhxxhxxxxxoptions.setF8xxup15bvxxxxxxxxxxpurpose15("Yes");
      yrxxch511xhhxxhxxxxxoptions.setF9xxuv15bvxxxxxxxxxxvalue15("");
      yrxxch511xhhxxhxxxxxoptions.setG1xxuo16bvxxxxxxxxxxoptions16("TI-L*");
      yrxxch511xhhxxhxxxxxoptions.setG2xxup16bvxxxxxxxxxxpurpose16("Theme-SubCategories");
      yrxxch511xhhxxhxxxxxoptions.setG3xxuv16bvxxxxxxxxxxvalue16("");
      yrxxch511xhhxxhxxxxxoptions.setG4xxuo17bvxxxxxxxxxxoptions17("?");
      yrxxch511xhhxxhxxxxxoptions.setG5xxup17bvxxxxxxxxxxpurpose17("?");
      yrxxch511xhhxxhxxxxxoptions.setG6xxuv17bvxxxxxxxxxxvalue17("");
      yrxxch511xhhxxhxxxxxoptions.setG7xxuo18bvxxxxxxxxxxoptions18("AH");
      yrxxch511xhhxxhxxxxxoptions.setG8xxup18bvxxxxxxxxxxpurpose18("Hourly");
      yrxxch511xhhxxhxxxxxoptions.setG9xxuv18bvxxxxxxxxxxvalue18("s=89");
      yrxxch511xhhxxhxxxxxoptions.setH1xxuo19bvxxxxxxxxxxoptions19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH2xxup19bvxxxxxxxxxxpurpose19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH3xxuv19bvxxxxxxxxxxvalue19("");
      yrxxch511xhhxxhxxxxxoptions.setH4xxuo20bvxxxxxxxxxxoptions20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH5xxup20bvxxxxxxxxxxpurpose20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH6xxuv20bvxxxxxxxxxxvalue20("");
      yrxxch511xhhxxhxxxxxoptions.setH7xxuo21bvxxxxxxxxxxoptions21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH8xxup21bvxxxxxxxxxxpurpose21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH9xxuv21bvxxxxxxxxxxvalue21("");
      yrxxch511xhhxxhxxxxxoptions.setI1xxuo22bvxxxxxxxxxxoptions22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI2xxup22bvxxxxxxxxxxpurpose22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI3xxuv22bvxxxxxxxxxxvalue22("");
      yrxxch511xhhxxhxxxxxoptions.setI4xxuo23bvxxxxxxxxxxoptions23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI5xxup23bvxxxxxxxxxxpurpose23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI6xxuv23bvxxxxxxxxxxvalue23("");
      yrxxch511xhhxxhxxxxxoptions.setI7xxuo24bvxxxxxxxxxxoptions24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI8xxup24bvxxxxxxxxxxpurpose24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI9xxuv24bvxxxxxxxxxxvalue24("");
      yrxxch511xhhxxhxxxxxoptions.setJ1xxuo25bvxxxxxxxxxxoptions25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ2xxup25bvxxxxxxxxxxpurpose25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ3xxuv25bvxxxxxxxxxxvalue25("");
      yrxxch511xhhxxhxxxxxoptions.setJ4xxuo26bvxxxxxxxxxxoptions26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ5xxup26bvxxxxxxxxxxpurpose26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ6xxuv26bvxxxxxxxxxxvalue26("");
      yrxxch511xhhxxhxxxxxoptions.setJ7xxuo27bvxxxxxxxxxxoptions27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ8xxup27bvxxxxxxxxxxpurpose27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ9xxuv27bvxxxxxxxxxxvalue27("");
      yrxxch511xhhxxhxxxxxoptions.setK1xxuo28bvxxxxxxxxxxoptions28("PF");
      yrxxch511xhhxxhxxxxxoptions.setK2xxup28bvxxxxxxxxxxpurpose28("Persons-Family");
      yrxxch511xhhxxhxxxxxoptions.setK3xxuv28bvxxxxxxxxxxvalue28("");
      yrxxch511xhhxxhxxxxxoptions.setK4xxuo29bvxxxxxxxxxxoptions29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK5xxup29bvxxxxxxxxxxpurpose29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK6xxuv29bvxxxxxxxxxxvalue29("");
      yrxxch511xhhxxhxxxxxoptions.setK7xxuo30bvxxxxxxxxxxoptions30("EM");
      yrxxch511xhhxxhxxxxxoptions.setK8xxup30bvxxxxxxxxxxpurpose30("EMail");
      yrxxch511xhhxxhxxxxxoptions.setK9xxuv30bvxxxxxxxxxxvalue30("");
      yrxxch511xhhxxhxxxxxoptions.setL1xxuo31bvxxxxxxxxxxoptions31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL2xxup31bvxxxxxxxxxxpurpose31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL3xxuv31bvxxxxxxxxxxvalue31("");
      yrxxch511xhhxxhxxxxxoptions.setL4xxuo32bvxxxxxxxxxxoptions32("Room 107");
      yrxxch511xhhxxhxxxxxoptions.setL5xxup32bvxxxxxxxxxxpurpose32("Room 107");
      yrxxch511xhhxxhxxxxxoptions.setL6xxuv32bvxxxxxxxxxxvalue32("");
      yrxxch511xhhxxhxxxxxoptions.setL7xxuo33bvxxxxxxxxxxoptions33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL8xxup33bvxxxxxxxxxxpurpose33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL9xxuv33bvxxxxxxxxxxvalue33("");
      yrxxch511xhhxxhxxxxxoptions.setM1xxuo34bvxxxxxxxxxxoptions34("");
      yrxxch511xhhxxhxxxxxoptions.setM2xxup34bvxxxxxxxxxxpurpose34("");
      yrxxch511xhhxxhxxxxxoptions.setM3xxuv34bvxxxxxxxxxxvalue34("");
      yrxxch511xhhxxhxxxxxoptions.setM4xxuo35bvxxxxxxxxxxoptions35("Lunch Appontment");
      yrxxch511xhhxxhxxxxxoptions.setM5xxup35bvxxxxxxxxxxpurpose35("c$88.90");
      yrxxch511xhhxxhxxxxxoptions.setM6xxuv35bvxxxxxxxxxxvalue35("");
      yrxxch511xhhxxhxxxxxoptions.setM7xxuo36bvxxxxxxxxxxoptions36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM8xxup36bvxxxxxxxxxxpurpose36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM9xxuv36bvxxxxxxxxxxvalue36("");
      yrxxch511xhhxxhxxxxxoptions.setN1xxuo37bvxxxxxxxxxxoptions37("High");
      yrxxch511xhhxxhxxxxxoptions.setN2xxup37bvxxxxxxxxxxpurpose37("High");
      yrxxch511xhhxxhxxxxxoptions.setN3xxuv37bvxxxxxxxxxxvalue37("");
      yrxxch511xhhxxhxxxxxoptions.setN4xxuo38bvxxxxxxxxxxoptions38("S");
      yrxxch511xhhxxhxxxxxoptions.setN5xxup38bvxxxxxxxxxxpurpose38("System Admin");
      yrxxch511xhhxxhxxxxxoptions.setN6xxuv38bvxxxxxxxxxxvalue38("");
      yrxxch511xhhxxhxxxxxoptions.setN7xxuo39bvxxxxxxxxxxoptions39("H");
      yrxxch511xhhxxhxxxxxoptions.setN8xxup39bvxxxxxxxxxxpurpose39("High");
      yrxxch511xhhxxhxxxxxoptions.setN9xxuv39bvxxxxxxxxxxvalue39("");
      yrxxch511xhhxxhxxxxxoptions.setO1xxuo40bvxxxxxxxxxxoptions40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO2xxup40bvxxxxxxxxxxpurpose40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO3xxuv40bvxxxxxxxxxxvalue40("");
      yrxxch511xhhxxhxxxxxoptions.setO4xxuo41bvxxxxxxxxxxoptions41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO5xxup41bvxxxxxxxxxxpurpose41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO6xxuv41bvxxxxxxxxxxvalue41("");
      yrxxch511xhhxxhxxxxxoptions.setO7xxuo42bvxxxxxxxxxxoptions42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO8xxup42bvxxxxxxxxxxpurpose42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO9xxuv42bvxxxxxxxxxxvalue42("");
      yrxxch511xhhxxhxxxxxoptions.setP1xxuo43bvxxxxxxxxxxoptions43("New");
      yrxxch511xhhxxhxxxxxoptions.setP2xxup43bvxxxxxxxxxxpurpose43("New");
      yrxxch511xhhxxhxxxxxoptions.setP3xxuv43bvxxxxxxxxxxvalue43("");
      yrxxch511xhhxxhxxxxxoptions.setP4xxuo44bvxxxxxxxxxxoptions44("");
      yrxxch511xhhxxhxxxxxoptions.setP5xxup44bvxxxxxxxxxxpurpose44("");
      yrxxch511xhhxxhxxxxxoptions.setP6xxuv44bvxxxxxxxxxxvalue44("");
      yrxxch511xhhxxhxxxxxoptions.setP7xxuo45bvxxxxxxxxxxoptions45("D");
      yrxxch511xhhxxhxxxxxoptions.setP8xxup45bvxxxxxxxxxxpurpose45("");
      yrxxch511xhhxxhxxxxxoptions.setP9xxuv45bvxxxxxxxxxxvalue45("");
      yrxxch511xhhxxhxxxxxoptions.setQ1xxuo46bvxxxxxxxxxxoptions46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ2xxup46bvxxxxxxxxxxpurpose46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ3xxuv46bvxxxxxxxxxxvalue46("");
      yrxxch511xhhxxhxxxxxoptions.setQ4xxuo47bvxxxxxxxxxxoptions47("04");
      yrxxch511xhhxxhxxxxxoptions.setQ5xxup47bvxxxxxxxxxxpurpose47("04");
      yrxxch511xhhxxhxxxxxoptions.setQ6xxuv47bvxxxxxxxxxxvalue47("");
      yrxxch511xhhxxhxxxxxoptions.setQ7xxuo48bvxxxxxxxxxxoptions48("");
      yrxxch511xhhxxhxxxxxoptions.setQ8xxup48bvxxxxxxxxxxpurpose48("");
      yrxxch511xhhxxhxxxxxoptions.setQ9xxuv48bvxxxxxxxxxxvalue48("");
      yrxxch511xhhxxhxxxxxoptions.setR1xxuo49bvxxxxxxxxxxoptions49("3R-FOOTER-1-C");
      yrxxch511xhhxxhxxxxxoptions.setR2xxup49bvxxxxxxxxxxpurpose49("Footer Extra Content");
      yrxxch511xhhxxhxxxxxoptions.setR3xxuv49bvxxxxxxxxxxvalue49("");
      yrxxch511xhhxxhxxxxxoptions.setR4xxuo50bvxxxxxxxxxxoptions50("");
      yrxxch511xhhxxhxxxxxoptions.setR5xxup50bvxxxxxxxxxxpurpose50("");
      yrxxch511xhhxxhxxxxxoptions.setR6xxuv50bvxxxxxxxxxxvalue50("");
      yrxxch511xhhxxhxxxxxoptions.setR7xxuo51bvxxxxxxxxxxoptions51("");
      yrxxch511xhhxxhxxxxxoptions.setR8xxup51bvxxxxxxxxxxpurpose51("");
      yrxxch511xhhxxhxxxxxoptions.setR9xxuv51bvxxxxxxxxxxvalue51("");
      yrxxch511xhhxxhxxxxxoptions.setS1xxuo52bvxxxxxxxxxxoptions52("");
      yrxxch511xhhxxhxxxxxoptions.setS2xxup52bvxxxxxxxxxxpurpose52("");
      yrxxch511xhhxxhxxxxxoptions.setS3xxuv52bvxxxxxxxxxxvalue52("");
      yrxxch511xhhxxhxxxxxoptions.setS4xxuo53bvxxxxxxxxxxoptions53("");
      yrxxch511xhhxxhxxxxxoptions.setS5xxup53bvxxxxxxxxxxpurpose53("");
      yrxxch511xhhxxhxxxxxoptions.setS6xxuv53bvxxxxxxxxxxvalue53("");
      yrxxch511xhhxxhxxxxxoptions.setS7xxuo54bvxxxxxxxxxxoptions54("");
      yrxxch511xhhxxhxxxxxoptions.setS8xxup54bvxxxxxxxxxxpurpose54("");
      yrxxch511xhhxxhxxxxxoptions.setS9xxuv54bvxxxxxxxxxxvalue54("");
      yrxxch511xhhxxhxxxxxoptions.setT1xxuo55bvxxxxxxxxxxoptions55("");
      yrxxch511xhhxxhxxxxxoptions.setT2xxup55bvxxxxxxxxxxpurpose55("");
      yrxxch511xhhxxhxxxxxoptions.setT3xxuv55bvxxxxxxxxxxvalue55("");
      yrxxch511xhhxxhxxxxxoptions.setT4xxuo56bvxxxxxxxxxxoptions56("");
      yrxxch511xhhxxhxxxxxoptions.setT5xxup56bvxxxxxxxxxxpurpose56("");
      yrxxch511xhhxxhxxxxxoptions.setT6xxuv56bvxxxxxxxxxxvalue56("");
      yrxxch511xhhxxhxxxxxoptions.setT7xxuo57bvxxxxxxxxxxoptions57("");
      yrxxch511xhhxxhxxxxxoptions.setT8xxup57bvxxxxxxxxxxpurpose57("");
      yrxxch511xhhxxhxxxxxoptions.setT9xxuv57bvxxxxxxxxxxvalue57("");
      yrxxch511xhhxxhxxxxxoptions.setU1xxuo58bvxxxxxxxxxxoptions58("");
      yrxxch511xhhxxhxxxxxoptions.setU2xxup58bvxxxxxxxxxxpurpose58("");
      yrxxch511xhhxxhxxxxxoptions.setU3xxuv58bvxxxxxxxxxxvalue58("");
      yrxxch511xhhxxhxxxxxoptions.setU4xxuo59bvxxxxxxxxxxoptions59("");
      yrxxch511xhhxxhxxxxxoptions.setU5xxup59bvxxxxxxxxxxpurpose59("");
      yrxxch511xhhxxhxxxxxoptions.setU6xxuv59bvxxxxxxxxxxvalue59("");
      yrxxch511xhhxxhxxxxxoptions.setU7xxuo60bvxxxxxxxxxxoptions60("");
      yrxxch511xhhxxhxxxxxoptions.setU8xxup60bvxxxxxxxxxxpurpose60("");
      yrxxch511xhhxxhxxxxxoptions.setU9xxuv60bvxxxxxxxxxxvalue60("");
      yrxxch511xhhxxhxxxxxoptions.setV1xxuo61bvxxxxxxxxxxoptions61("");
      yrxxch511xhhxxhxxxxxoptions.setV2xxup61bvxxxxxxxxxxpurpose61("");
      yrxxch511xhhxxhxxxxxoptions.setV3xxuv61bvxxxxxxxxxxvalue61("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptionsHome.persist(client);

      yrxxch511xhhxxhxxxxxoptionsHome.clearInstance();
      yrxxch511xhhxxhxxxxxoptions=yrxxch511xhhxxhxxxxxoptionsHome.getInstance();
      yrxxch511xhhxxhxxxxxoptions.setA0xxukcxbvxxxxxxxxxxrow("33");
      yrxxch511xhhxxhxxxxxoptions.setB1xxuo01bvxxxxxxxxxxoptions01("R");
      yrxxch511xhhxxhxxxxxoptions.setB2xxup01bvxxxxxxxxxxpurpose01("Retained Earning");
      yrxxch511xhhxxhxxxxxoptions.setB3xxuv01bvxxxxxxxxxxvalue01("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptions.setB4xxuo02bvxxxxxxxxxxoptions02("S");
      yrxxch511xhhxxhxxxxxoptions.setB5xxup02bvxxxxxxxxxxpurpose02("Subheader");
      yrxxch511xhhxxhxxxxxoptions.setB6xxuv02bvxxxxxxxxxxvalue02("");
      yrxxch511xhhxxhxxxxxoptions.setB7xxuo03bvxxxxxxxxxxoptions03("P");
      yrxxch511xhhxxhxxxxxoptions.setB8xxup03bvxxxxxxxxxxpurpose03("Payable");
      yrxxch511xhhxxhxxxxxoptions.setB9xxuv03bvxxxxxxxxxxvalue03("");
      yrxxch511xhhxxhxxxxxoptions.setC1xxuo04bvxxxxxxxxxxoptions04("");
      yrxxch511xhhxxhxxxxxoptions.setC2xxup04bvxxxxxxxxxxpurpose04("");
      yrxxch511xhhxxhxxxxxoptions.setC3xxuv04bvxxxxxxxxxxvalue04("");
      yrxxch511xhhxxhxxxxxoptions.setC4xxuo05bvxxxxxxxxxxoptions05("");
      yrxxch511xhhxxhxxxxxoptions.setC5xxup05bvxxxxxxxxxxpurpose05("");
      yrxxch511xhhxxhxxxxxoptions.setC6xxuv05bvxxxxxxxxxxvalue05("");
      yrxxch511xhhxxhxxxxxoptions.setC7xxuo06bvxxxxxxxxxxoptions06("");
      yrxxch511xhhxxhxxxxxoptions.setC8xxup06bvxxxxxxxxxxpurpose06("");
      yrxxch511xhhxxhxxxxxoptions.setC9xxuv06bvxxxxxxxxxxvalue06("");
      yrxxch511xhhxxhxxxxxoptions.setD1xxuo07bvxxxxxxxxxxoptions07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD2xxup07bvxxxxxxxxxxpurpose07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD3xxuv07bvxxxxxxxxxxvalue07("");
      yrxxch511xhhxxhxxxxxoptions.setD4xxuo08bvxxxxxxxxxxoptions08("H");
      yrxxch511xhhxxhxxxxxoptions.setD5xxup08bvxxxxxxxxxxpurpose08("High");
      yrxxch511xhhxxhxxxxxoptions.setD6xxuv08bvxxxxxxxxxxvalue08("");
      yrxxch511xhhxxhxxxxxoptions.setD7xxuo09bvxxxxxxxxxxoptions09("30");
      yrxxch511xhhxxhxxxxxoptions.setD8xxup09bvxxxxxxxxxxpurpose09("-30 days");
      yrxxch511xhhxxhxxxxxoptions.setD9xxuv09bvxxxxxxxxxxvalue09("");
      yrxxch511xhhxxhxxxxxoptions.setE1xxuo10bvxxxxxxxxxxoptions10("cash");
      yrxxch511xhhxxhxxxxxoptions.setE2xxup10bvxxxxxxxxxxpurpose10("-cash");
      yrxxch511xhhxxhxxxxxoptions.setE3xxuv10bvxxxxxxxxxxvalue10("");
      yrxxch511xhhxxhxxxxxoptions.setE4xxuo11bvxxxxxxxxxxoptions11("Montreal");
      yrxxch511xhhxxhxxxxxoptions.setE5xxup11bvxxxxxxxxxxpurpose11("Toronto");
      yrxxch511xhhxxhxxxxxoptions.setE6xxuv11bvxxxxxxxxxxvalue11("ca=Montreal; us=Boston");
      yrxxch511xhhxxhxxxxxoptions.setE7xxuo12bvxxxxxxxxxxoptions12("QE");
      yrxxch511xhhxxhxxxxxoptions.setE8xxup12bvxxxxxxxxxxpurpose12("Quebec");
      yrxxch511xhhxxhxxxxxoptions.setE9xxuv12bvxxxxxxxxxxvalue12("ca=QE us=CA");
      yrxxch511xhhxxhxxxxxoptions.setF1xxuo13bvxxxxxxxxxxoptions13("");
      yrxxch511xhhxxhxxxxxoptions.setF2xxup13bvxxxxxxxxxxpurpose13("");
      yrxxch511xhhxxhxxxxxoptions.setF3xxuv13bvxxxxxxxxxxvalue13("");
      yrxxch511xhhxxhxxxxxoptions.setF4xxuo14bvxxxxxxxxxxoptions14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF5xxup14bvxxxxxxxxxxpurpose14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF6xxuv14bvxxxxxxxxxxvalue14("ca=M4L3Z8 us=10003 in=70003");
      yrxxch511xhhxxhxxxxxoptions.setF7xxuo15bvxxxxxxxxxxoptions15("Y");
      yrxxch511xhhxxhxxxxxoptions.setF8xxup15bvxxxxxxxxxxpurpose15("Yes");
      yrxxch511xhhxxhxxxxxoptions.setF9xxuv15bvxxxxxxxxxxvalue15("");
      yrxxch511xhhxxhxxxxxoptions.setG1xxuo16bvxxxxxxxxxxoptions16("TI-L1");
      yrxxch511xhhxxhxxxxxoptions.setG2xxup16bvxxxxxxxxxxpurpose16("Theme-Categories");
      yrxxch511xhhxxhxxxxxoptions.setG3xxuv16bvxxxxxxxxxxvalue16("");
      yrxxch511xhhxxhxxxxxoptions.setG4xxuo17bvxxxxxxxxxxoptions17("?");
      yrxxch511xhhxxhxxxxxoptions.setG5xxup17bvxxxxxxxxxxpurpose17("?");
      yrxxch511xhhxxhxxxxxoptions.setG6xxuv17bvxxxxxxxxxxvalue17("");
      yrxxch511xhhxxhxxxxxoptions.setG7xxuo18bvxxxxxxxxxxoptions18("AH");
      yrxxch511xhhxxhxxxxxoptions.setG8xxup18bvxxxxxxxxxxpurpose18("Hourly");
      yrxxch511xhhxxhxxxxxoptions.setG9xxuv18bvxxxxxxxxxxvalue18("s=89");
      yrxxch511xhhxxhxxxxxoptions.setH1xxuo19bvxxxxxxxxxxoptions19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH2xxup19bvxxxxxxxxxxpurpose19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH3xxuv19bvxxxxxxxxxxvalue19("");
      yrxxch511xhhxxhxxxxxoptions.setH4xxuo20bvxxxxxxxxxxoptions20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH5xxup20bvxxxxxxxxxxpurpose20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH6xxuv20bvxxxxxxxxxxvalue20("");
      yrxxch511xhhxxhxxxxxoptions.setH7xxuo21bvxxxxxxxxxxoptions21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH8xxup21bvxxxxxxxxxxpurpose21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH9xxuv21bvxxxxxxxxxxvalue21("");
      yrxxch511xhhxxhxxxxxoptions.setI1xxuo22bvxxxxxxxxxxoptions22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI2xxup22bvxxxxxxxxxxpurpose22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI3xxuv22bvxxxxxxxxxxvalue22("");
      yrxxch511xhhxxhxxxxxoptions.setI4xxuo23bvxxxxxxxxxxoptions23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI5xxup23bvxxxxxxxxxxpurpose23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI6xxuv23bvxxxxxxxxxxvalue23("");
      yrxxch511xhhxxhxxxxxoptions.setI7xxuo24bvxxxxxxxxxxoptions24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI8xxup24bvxxxxxxxxxxpurpose24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI9xxuv24bvxxxxxxxxxxvalue24("");
      yrxxch511xhhxxhxxxxxoptions.setJ1xxuo25bvxxxxxxxxxxoptions25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ2xxup25bvxxxxxxxxxxpurpose25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ3xxuv25bvxxxxxxxxxxvalue25("");
      yrxxch511xhhxxhxxxxxoptions.setJ4xxuo26bvxxxxxxxxxxoptions26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ5xxup26bvxxxxxxxxxxpurpose26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ6xxuv26bvxxxxxxxxxxvalue26("");
      yrxxch511xhhxxhxxxxxoptions.setJ7xxuo27bvxxxxxxxxxxoptions27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ8xxup27bvxxxxxxxxxxpurpose27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ9xxuv27bvxxxxxxxxxxvalue27("");
      yrxxch511xhhxxhxxxxxoptions.setK1xxuo28bvxxxxxxxxxxoptions28("PF");
      yrxxch511xhhxxhxxxxxoptions.setK2xxup28bvxxxxxxxxxxpurpose28("Persons-Family");
      yrxxch511xhhxxhxxxxxoptions.setK3xxuv28bvxxxxxxxxxxvalue28("");
      yrxxch511xhhxxhxxxxxoptions.setK4xxuo29bvxxxxxxxxxxoptions29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK5xxup29bvxxxxxxxxxxpurpose29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK6xxuv29bvxxxxxxxxxxvalue29("");
      yrxxch511xhhxxhxxxxxoptions.setK7xxuo30bvxxxxxxxxxxoptions30("EM");
      yrxxch511xhhxxhxxxxxoptions.setK8xxup30bvxxxxxxxxxxpurpose30("EMail");
      yrxxch511xhhxxhxxxxxoptions.setK9xxuv30bvxxxxxxxxxxvalue30("");
      yrxxch511xhhxxhxxxxxoptions.setL1xxuo31bvxxxxxxxxxxoptions31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL2xxup31bvxxxxxxxxxxpurpose31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL3xxuv31bvxxxxxxxxxxvalue31("");
      yrxxch511xhhxxhxxxxxoptions.setL4xxuo32bvxxxxxxxxxxoptions32("Room 107");
      yrxxch511xhhxxhxxxxxoptions.setL5xxup32bvxxxxxxxxxxpurpose32("Room 107");
      yrxxch511xhhxxhxxxxxoptions.setL6xxuv32bvxxxxxxxxxxvalue32("");
      yrxxch511xhhxxhxxxxxoptions.setL7xxuo33bvxxxxxxxxxxoptions33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL8xxup33bvxxxxxxxxxxpurpose33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL9xxuv33bvxxxxxxxxxxvalue33("");
      yrxxch511xhhxxhxxxxxoptions.setM1xxuo34bvxxxxxxxxxxoptions34("");
      yrxxch511xhhxxhxxxxxoptions.setM2xxup34bvxxxxxxxxxxpurpose34("");
      yrxxch511xhhxxhxxxxxoptions.setM3xxuv34bvxxxxxxxxxxvalue34("");
      yrxxch511xhhxxhxxxxxoptions.setM4xxuo35bvxxxxxxxxxxoptions35("Lunch Appontment");
      yrxxch511xhhxxhxxxxxoptions.setM5xxup35bvxxxxxxxxxxpurpose35("c$88.90");
      yrxxch511xhhxxhxxxxxoptions.setM6xxuv35bvxxxxxxxxxxvalue35("");
      yrxxch511xhhxxhxxxxxoptions.setM7xxuo36bvxxxxxxxxxxoptions36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM8xxup36bvxxxxxxxxxxpurpose36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM9xxuv36bvxxxxxxxxxxvalue36("");
      yrxxch511xhhxxhxxxxxoptions.setN1xxuo37bvxxxxxxxxxxoptions37("High");
      yrxxch511xhhxxhxxxxxoptions.setN2xxup37bvxxxxxxxxxxpurpose37("High");
      yrxxch511xhhxxhxxxxxoptions.setN3xxuv37bvxxxxxxxxxxvalue37("");
      yrxxch511xhhxxhxxxxxoptions.setN4xxuo38bvxxxxxxxxxxoptions38("S");
      yrxxch511xhhxxhxxxxxoptions.setN5xxup38bvxxxxxxxxxxpurpose38("System Admin");
      yrxxch511xhhxxhxxxxxoptions.setN6xxuv38bvxxxxxxxxxxvalue38("");
      yrxxch511xhhxxhxxxxxoptions.setN7xxuo39bvxxxxxxxxxxoptions39("H");
      yrxxch511xhhxxhxxxxxoptions.setN8xxup39bvxxxxxxxxxxpurpose39("High");
      yrxxch511xhhxxhxxxxxoptions.setN9xxuv39bvxxxxxxxxxxvalue39("");
      yrxxch511xhhxxhxxxxxoptions.setO1xxuo40bvxxxxxxxxxxoptions40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO2xxup40bvxxxxxxxxxxpurpose40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO3xxuv40bvxxxxxxxxxxvalue40("");
      yrxxch511xhhxxhxxxxxoptions.setO4xxuo41bvxxxxxxxxxxoptions41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO5xxup41bvxxxxxxxxxxpurpose41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO6xxuv41bvxxxxxxxxxxvalue41("");
      yrxxch511xhhxxhxxxxxoptions.setO7xxuo42bvxxxxxxxxxxoptions42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO8xxup42bvxxxxxxxxxxpurpose42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO9xxuv42bvxxxxxxxxxxvalue42("");
      yrxxch511xhhxxhxxxxxoptions.setP1xxuo43bvxxxxxxxxxxoptions43("New");
      yrxxch511xhhxxhxxxxxoptions.setP2xxup43bvxxxxxxxxxxpurpose43("New");
      yrxxch511xhhxxhxxxxxoptions.setP3xxuv43bvxxxxxxxxxxvalue43("");
      yrxxch511xhhxxhxxxxxoptions.setP4xxuo44bvxxxxxxxxxxoptions44("");
      yrxxch511xhhxxhxxxxxoptions.setP5xxup44bvxxxxxxxxxxpurpose44("");
      yrxxch511xhhxxhxxxxxoptions.setP6xxuv44bvxxxxxxxxxxvalue44("");
      yrxxch511xhhxxhxxxxxoptions.setP7xxuo45bvxxxxxxxxxxoptions45("D");
      yrxxch511xhhxxhxxxxxoptions.setP8xxup45bvxxxxxxxxxxpurpose45("");
      yrxxch511xhhxxhxxxxxoptions.setP9xxuv45bvxxxxxxxxxxvalue45("");
      yrxxch511xhhxxhxxxxxoptions.setQ1xxuo46bvxxxxxxxxxxoptions46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ2xxup46bvxxxxxxxxxxpurpose46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ3xxuv46bvxxxxxxxxxxvalue46("");
      yrxxch511xhhxxhxxxxxoptions.setQ4xxuo47bvxxxxxxxxxxoptions47("04");
      yrxxch511xhhxxhxxxxxoptions.setQ5xxup47bvxxxxxxxxxxpurpose47("04");
      yrxxch511xhhxxhxxxxxoptions.setQ6xxuv47bvxxxxxxxxxxvalue47("");
      yrxxch511xhhxxhxxxxxoptions.setQ7xxuo48bvxxxxxxxxxxoptions48("");
      yrxxch511xhhxxhxxxxxoptions.setQ8xxup48bvxxxxxxxxxxpurpose48("");
      yrxxch511xhhxxhxxxxxoptions.setQ9xxuv48bvxxxxxxxxxxvalue48("");
      yrxxch511xhhxxhxxxxxoptions.setR1xxuo49bvxxxxxxxxxxoptions49("3R-LEGAL_NOTICE-1-C");
      yrxxch511xhhxxhxxxxxoptions.setR2xxup49bvxxxxxxxxxxpurpose49("Terms n Conditions");
      yrxxch511xhhxxhxxxxxoptions.setR3xxuv49bvxxxxxxxxxxvalue49("");
      yrxxch511xhhxxhxxxxxoptions.setR4xxuo50bvxxxxxxxxxxoptions50("");
      yrxxch511xhhxxhxxxxxoptions.setR5xxup50bvxxxxxxxxxxpurpose50("");
      yrxxch511xhhxxhxxxxxoptions.setR6xxuv50bvxxxxxxxxxxvalue50("");
      yrxxch511xhhxxhxxxxxoptions.setR7xxuo51bvxxxxxxxxxxoptions51("");
      yrxxch511xhhxxhxxxxxoptions.setR8xxup51bvxxxxxxxxxxpurpose51("");
      yrxxch511xhhxxhxxxxxoptions.setR9xxuv51bvxxxxxxxxxxvalue51("");
      yrxxch511xhhxxhxxxxxoptions.setS1xxuo52bvxxxxxxxxxxoptions52("");
      yrxxch511xhhxxhxxxxxoptions.setS2xxup52bvxxxxxxxxxxpurpose52("");
      yrxxch511xhhxxhxxxxxoptions.setS3xxuv52bvxxxxxxxxxxvalue52("");
      yrxxch511xhhxxhxxxxxoptions.setS4xxuo53bvxxxxxxxxxxoptions53("");
      yrxxch511xhhxxhxxxxxoptions.setS5xxup53bvxxxxxxxxxxpurpose53("");
      yrxxch511xhhxxhxxxxxoptions.setS6xxuv53bvxxxxxxxxxxvalue53("");

      yrxxch511xhhxxhxxxxxoptions.setS7xxuo54bvxxxxxxxxxxoptions54("");
      yrxxch511xhhxxhxxxxxoptions.setS8xxup54bvxxxxxxxxxxpurpose54("");
      yrxxch511xhhxxhxxxxxoptions.setS9xxuv54bvxxxxxxxxxxvalue54("");
      yrxxch511xhhxxhxxxxxoptions.setT1xxuo55bvxxxxxxxxxxoptions55("");
      yrxxch511xhhxxhxxxxxoptions.setT2xxup55bvxxxxxxxxxxpurpose55("");
      yrxxch511xhhxxhxxxxxoptions.setT3xxuv55bvxxxxxxxxxxvalue55("");
      yrxxch511xhhxxhxxxxxoptions.setT4xxuo56bvxxxxxxxxxxoptions56("");
      yrxxch511xhhxxhxxxxxoptions.setT5xxup56bvxxxxxxxxxxpurpose56("");
      yrxxch511xhhxxhxxxxxoptions.setT6xxuv56bvxxxxxxxxxxvalue56("");
      yrxxch511xhhxxhxxxxxoptions.setT7xxuo57bvxxxxxxxxxxoptions57("");
      yrxxch511xhhxxhxxxxxoptions.setT8xxup57bvxxxxxxxxxxpurpose57("");
      yrxxch511xhhxxhxxxxxoptions.setT9xxuv57bvxxxxxxxxxxvalue57("");
      yrxxch511xhhxxhxxxxxoptions.setU1xxuo58bvxxxxxxxxxxoptions58("");
      yrxxch511xhhxxhxxxxxoptions.setU2xxup58bvxxxxxxxxxxpurpose58("");
      yrxxch511xhhxxhxxxxxoptions.setU3xxuv58bvxxxxxxxxxxvalue58("");
      yrxxch511xhhxxhxxxxxoptions.setU4xxuo59bvxxxxxxxxxxoptions59("");
      yrxxch511xhhxxhxxxxxoptions.setU5xxup59bvxxxxxxxxxxpurpose59("");
      yrxxch511xhhxxhxxxxxoptions.setU6xxuv59bvxxxxxxxxxxvalue59("");
      yrxxch511xhhxxhxxxxxoptions.setU7xxuo60bvxxxxxxxxxxoptions60("");
      yrxxch511xhhxxhxxxxxoptions.setU8xxup60bvxxxxxxxxxxpurpose60("");
      yrxxch511xhhxxhxxxxxoptions.setU9xxuv60bvxxxxxxxxxxvalue60("");
      yrxxch511xhhxxhxxxxxoptions.setV1xxuo61bvxxxxxxxxxxoptions61("");
      yrxxch511xhhxxhxxxxxoptions.setV2xxup61bvxxxxxxxxxxpurpose61("");
      yrxxch511xhhxxhxxxxxoptions.setV3xxuv61bvxxxxxxxxxxvalue61("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptionsHome.persist(client);


      yrxxch511xhhxxhxxxxxoptionsHome.clearInstance();
      yrxxch511xhhxxhxxxxxoptions=yrxxch511xhhxxhxxxxxoptionsHome.getInstance();
      yrxxch511xhhxxhxxxxxoptions.setA0xxukcxbvxxxxxxxxxxrow("34");
      yrxxch511xhhxxhxxxxxoptions.setB1xxuo01bvxxxxxxxxxxoptions01("R");
      yrxxch511xhhxxhxxxxxoptions.setB2xxup01bvxxxxxxxxxxpurpose01("Retained Earning");
      yrxxch511xhhxxhxxxxxoptions.setB3xxuv01bvxxxxxxxxxxvalue01("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptions.setB4xxuo02bvxxxxxxxxxxoptions02("S");
      yrxxch511xhhxxhxxxxxoptions.setB5xxup02bvxxxxxxxxxxpurpose02("Subheader");
      yrxxch511xhhxxhxxxxxoptions.setB6xxuv02bvxxxxxxxxxxvalue02("");
      yrxxch511xhhxxhxxxxxoptions.setB7xxuo03bvxxxxxxxxxxoptions03("P");
      yrxxch511xhhxxhxxxxxoptions.setB8xxup03bvxxxxxxxxxxpurpose03("Payable");
      yrxxch511xhhxxhxxxxxoptions.setB9xxuv03bvxxxxxxxxxxvalue03("");
      yrxxch511xhhxxhxxxxxoptions.setC1xxuo04bvxxxxxxxxxxoptions04("");
      yrxxch511xhhxxhxxxxxoptions.setC2xxup04bvxxxxxxxxxxpurpose04("");
      yrxxch511xhhxxhxxxxxoptions.setC3xxuv04bvxxxxxxxxxxvalue04("");
      yrxxch511xhhxxhxxxxxoptions.setC4xxuo05bvxxxxxxxxxxoptions05("");
      yrxxch511xhhxxhxxxxxoptions.setC5xxup05bvxxxxxxxxxxpurpose05("");
      yrxxch511xhhxxhxxxxxoptions.setC6xxuv05bvxxxxxxxxxxvalue05("");
      yrxxch511xhhxxhxxxxxoptions.setC7xxuo06bvxxxxxxxxxxoptions06("");
      yrxxch511xhhxxhxxxxxoptions.setC8xxup06bvxxxxxxxxxxpurpose06("");
      yrxxch511xhhxxhxxxxxoptions.setC9xxuv06bvxxxxxxxxxxvalue06("");
      yrxxch511xhhxxhxxxxxoptions.setD1xxuo07bvxxxxxxxxxxoptions07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD2xxup07bvxxxxxxxxxxpurpose07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD3xxuv07bvxxxxxxxxxxvalue07("");
      yrxxch511xhhxxhxxxxxoptions.setD4xxuo08bvxxxxxxxxxxoptions08("H");
      yrxxch511xhhxxhxxxxxoptions.setD5xxup08bvxxxxxxxxxxpurpose08("High");
      yrxxch511xhhxxhxxxxxoptions.setD6xxuv08bvxxxxxxxxxxvalue08("");
      yrxxch511xhhxxhxxxxxoptions.setD7xxuo09bvxxxxxxxxxxoptions09("30");
      yrxxch511xhhxxhxxxxxoptions.setD8xxup09bvxxxxxxxxxxpurpose09("-30 days");
      yrxxch511xhhxxhxxxxxoptions.setD9xxuv09bvxxxxxxxxxxvalue09("");
      yrxxch511xhhxxhxxxxxoptions.setE1xxuo10bvxxxxxxxxxxoptions10("cash");
      yrxxch511xhhxxhxxxxxoptions.setE2xxup10bvxxxxxxxxxxpurpose10("-cash");
      yrxxch511xhhxxhxxxxxoptions.setE3xxuv10bvxxxxxxxxxxvalue10("");
      yrxxch511xhhxxhxxxxxoptions.setE4xxuo11bvxxxxxxxxxxoptions11("Montreal");
      yrxxch511xhhxxhxxxxxoptions.setE5xxup11bvxxxxxxxxxxpurpose11("Toronto");
      yrxxch511xhhxxhxxxxxoptions.setE6xxuv11bvxxxxxxxxxxvalue11("ca=Montreal; us=Boston");
      yrxxch511xhhxxhxxxxxoptions.setE7xxuo12bvxxxxxxxxxxoptions12("QE");
      yrxxch511xhhxxhxxxxxoptions.setE8xxup12bvxxxxxxxxxxpurpose12("Quebec");
      yrxxch511xhhxxhxxxxxoptions.setE9xxuv12bvxxxxxxxxxxvalue12("ca=QE us=CA");
      yrxxch511xhhxxhxxxxxoptions.setF1xxuo13bvxxxxxxxxxxoptions13("");
      yrxxch511xhhxxhxxxxxoptions.setF2xxup13bvxxxxxxxxxxpurpose13("");
      yrxxch511xhhxxhxxxxxoptions.setF3xxuv13bvxxxxxxxxxxvalue13("");
      yrxxch511xhhxxhxxxxxoptions.setF4xxuo14bvxxxxxxxxxxoptions14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF5xxup14bvxxxxxxxxxxpurpose14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF6xxuv14bvxxxxxxxxxxvalue14("ca=M4L3Z8 us=10003 in=70003");
      yrxxch511xhhxxhxxxxxoptions.setF7xxuo15bvxxxxxxxxxxoptions15("Y");
      yrxxch511xhhxxhxxxxxoptions.setF8xxup15bvxxxxxxxxxxpurpose15("Yes");
      yrxxch511xhhxxhxxxxxoptions.setF9xxuv15bvxxxxxxxxxxvalue15("");
      yrxxch511xhhxxhxxxxxoptions.setG1xxuo16bvxxxxxxxxxxoptions16("TI-D");
      yrxxch511xhhxxhxxxxxoptions.setG2xxup16bvxxxxxxxxxxpurpose16("Theme-Item");
      yrxxch511xhhxxhxxxxxoptions.setG3xxuv16bvxxxxxxxxxxvalue16("");
      yrxxch511xhhxxhxxxxxoptions.setG4xxuo17bvxxxxxxxxxxoptions17("?");
      yrxxch511xhhxxhxxxxxoptions.setG5xxup17bvxxxxxxxxxxpurpose17("?");
      yrxxch511xhhxxhxxxxxoptions.setG6xxuv17bvxxxxxxxxxxvalue17("");
      yrxxch511xhhxxhxxxxxoptions.setG7xxuo18bvxxxxxxxxxxoptions18("AH");
      yrxxch511xhhxxhxxxxxoptions.setG8xxup18bvxxxxxxxxxxpurpose18("Hourly");
      yrxxch511xhhxxhxxxxxoptions.setG9xxuv18bvxxxxxxxxxxvalue18("s=89");
      yrxxch511xhhxxhxxxxxoptions.setH1xxuo19bvxxxxxxxxxxoptions19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH2xxup19bvxxxxxxxxxxpurpose19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH3xxuv19bvxxxxxxxxxxvalue19("");
      yrxxch511xhhxxhxxxxxoptions.setH4xxuo20bvxxxxxxxxxxoptions20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH5xxup20bvxxxxxxxxxxpurpose20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH6xxuv20bvxxxxxxxxxxvalue20("");
      yrxxch511xhhxxhxxxxxoptions.setH7xxuo21bvxxxxxxxxxxoptions21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH8xxup21bvxxxxxxxxxxpurpose21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH9xxuv21bvxxxxxxxxxxvalue21("");
      yrxxch511xhhxxhxxxxxoptions.setI1xxuo22bvxxxxxxxxxxoptions22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI2xxup22bvxxxxxxxxxxpurpose22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI3xxuv22bvxxxxxxxxxxvalue22("");
      yrxxch511xhhxxhxxxxxoptions.setI4xxuo23bvxxxxxxxxxxoptions23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI5xxup23bvxxxxxxxxxxpurpose23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI6xxuv23bvxxxxxxxxxxvalue23("");
      yrxxch511xhhxxhxxxxxoptions.setI7xxuo24bvxxxxxxxxxxoptions24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI8xxup24bvxxxxxxxxxxpurpose24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI9xxuv24bvxxxxxxxxxxvalue24("");
      yrxxch511xhhxxhxxxxxoptions.setJ1xxuo25bvxxxxxxxxxxoptions25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ2xxup25bvxxxxxxxxxxpurpose25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ3xxuv25bvxxxxxxxxxxvalue25("");
      yrxxch511xhhxxhxxxxxoptions.setJ4xxuo26bvxxxxxxxxxxoptions26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ5xxup26bvxxxxxxxxxxpurpose26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ6xxuv26bvxxxxxxxxxxvalue26("");
      yrxxch511xhhxxhxxxxxoptions.setJ7xxuo27bvxxxxxxxxxxoptions27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ8xxup27bvxxxxxxxxxxpurpose27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ9xxuv27bvxxxxxxxxxxvalue27("");
      yrxxch511xhhxxhxxxxxoptions.setK1xxuo28bvxxxxxxxxxxoptions28("PF");
      yrxxch511xhhxxhxxxxxoptions.setK2xxup28bvxxxxxxxxxxpurpose28("Persons-Family");
      yrxxch511xhhxxhxxxxxoptions.setK3xxuv28bvxxxxxxxxxxvalue28("");
      yrxxch511xhhxxhxxxxxoptions.setK4xxuo29bvxxxxxxxxxxoptions29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK5xxup29bvxxxxxxxxxxpurpose29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK6xxuv29bvxxxxxxxxxxvalue29("");
      yrxxch511xhhxxhxxxxxoptions.setK7xxuo30bvxxxxxxxxxxoptions30("EM");
      yrxxch511xhhxxhxxxxxoptions.setK8xxup30bvxxxxxxxxxxpurpose30("EMail");
      yrxxch511xhhxxhxxxxxoptions.setK9xxuv30bvxxxxxxxxxxvalue30("");
      yrxxch511xhhxxhxxxxxoptions.setL1xxuo31bvxxxxxxxxxxoptions31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL2xxup31bvxxxxxxxxxxpurpose31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL3xxuv31bvxxxxxxxxxxvalue31("");
      yrxxch511xhhxxhxxxxxoptions.setL4xxuo32bvxxxxxxxxxxoptions32("Room 107");
      yrxxch511xhhxxhxxxxxoptions.setL5xxup32bvxxxxxxxxxxpurpose32("Room 107");
      yrxxch511xhhxxhxxxxxoptions.setL6xxuv32bvxxxxxxxxxxvalue32("");
      yrxxch511xhhxxhxxxxxoptions.setL7xxuo33bvxxxxxxxxxxoptions33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL8xxup33bvxxxxxxxxxxpurpose33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL9xxuv33bvxxxxxxxxxxvalue33("");
      yrxxch511xhhxxhxxxxxoptions.setM1xxuo34bvxxxxxxxxxxoptions34("");
      yrxxch511xhhxxhxxxxxoptions.setM2xxup34bvxxxxxxxxxxpurpose34("");
      yrxxch511xhhxxhxxxxxoptions.setM3xxuv34bvxxxxxxxxxxvalue34("");
      yrxxch511xhhxxhxxxxxoptions.setM4xxuo35bvxxxxxxxxxxoptions35("Lunch Appontment");
      yrxxch511xhhxxhxxxxxoptions.setM5xxup35bvxxxxxxxxxxpurpose35("c$88.90");
      yrxxch511xhhxxhxxxxxoptions.setM6xxuv35bvxxxxxxxxxxvalue35("");
      yrxxch511xhhxxhxxxxxoptions.setM7xxuo36bvxxxxxxxxxxoptions36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM8xxup36bvxxxxxxxxxxpurpose36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM9xxuv36bvxxxxxxxxxxvalue36("");
      yrxxch511xhhxxhxxxxxoptions.setN1xxuo37bvxxxxxxxxxxoptions37("High");
      yrxxch511xhhxxhxxxxxoptions.setN2xxup37bvxxxxxxxxxxpurpose37("High");
      yrxxch511xhhxxhxxxxxoptions.setN3xxuv37bvxxxxxxxxxxvalue37("");
      yrxxch511xhhxxhxxxxxoptions.setN4xxuo38bvxxxxxxxxxxoptions38("S");
      yrxxch511xhhxxhxxxxxoptions.setN5xxup38bvxxxxxxxxxxpurpose38("System Admin");
      yrxxch511xhhxxhxxxxxoptions.setN6xxuv38bvxxxxxxxxxxvalue38("");
      yrxxch511xhhxxhxxxxxoptions.setN7xxuo39bvxxxxxxxxxxoptions39("H");
      yrxxch511xhhxxhxxxxxoptions.setN8xxup39bvxxxxxxxxxxpurpose39("High");
      yrxxch511xhhxxhxxxxxoptions.setN9xxuv39bvxxxxxxxxxxvalue39("");
      yrxxch511xhhxxhxxxxxoptions.setO1xxuo40bvxxxxxxxxxxoptions40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO2xxup40bvxxxxxxxxxxpurpose40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO3xxuv40bvxxxxxxxxxxvalue40("");
      yrxxch511xhhxxhxxxxxoptions.setO4xxuo41bvxxxxxxxxxxoptions41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO5xxup41bvxxxxxxxxxxpurpose41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO6xxuv41bvxxxxxxxxxxvalue41("");
      yrxxch511xhhxxhxxxxxoptions.setO7xxuo42bvxxxxxxxxxxoptions42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO8xxup42bvxxxxxxxxxxpurpose42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO9xxuv42bvxxxxxxxxxxvalue42("");
      yrxxch511xhhxxhxxxxxoptions.setP1xxuo43bvxxxxxxxxxxoptions43("New");
      yrxxch511xhhxxhxxxxxoptions.setP2xxup43bvxxxxxxxxxxpurpose43("New");
      yrxxch511xhhxxhxxxxxoptions.setP3xxuv43bvxxxxxxxxxxvalue43("");
      yrxxch511xhhxxhxxxxxoptions.setP4xxuo44bvxxxxxxxxxxoptions44("");
      yrxxch511xhhxxhxxxxxoptions.setP5xxup44bvxxxxxxxxxxpurpose44("");
      yrxxch511xhhxxhxxxxxoptions.setP6xxuv44bvxxxxxxxxxxvalue44("");
      yrxxch511xhhxxhxxxxxoptions.setP7xxuo45bvxxxxxxxxxxoptions45("D");
      yrxxch511xhhxxhxxxxxoptions.setP8xxup45bvxxxxxxxxxxpurpose45("");
      yrxxch511xhhxxhxxxxxoptions.setP9xxuv45bvxxxxxxxxxxvalue45("");
      yrxxch511xhhxxhxxxxxoptions.setQ1xxuo46bvxxxxxxxxxxoptions46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ2xxup46bvxxxxxxxxxxpurpose46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ3xxuv46bvxxxxxxxxxxvalue46("");
      yrxxch511xhhxxhxxxxxoptions.setQ4xxuo47bvxxxxxxxxxxoptions47("04");
      yrxxch511xhhxxhxxxxxoptions.setQ5xxup47bvxxxxxxxxxxpurpose47("04");
      yrxxch511xhhxxhxxxxxoptions.setQ6xxuv47bvxxxxxxxxxxvalue47("");
      yrxxch511xhhxxhxxxxxoptions.setQ7xxuo48bvxxxxxxxxxxoptions48("");
      yrxxch511xhhxxhxxxxxoptions.setQ8xxup48bvxxxxxxxxxxpurpose48("");
      yrxxch511xhhxxhxxxxxoptions.setQ9xxuv48bvxxxxxxxxxxvalue48("");
      yrxxch511xhhxxhxxxxxoptions.setR1xxuo49bvxxxxxxxxxxoptions49("3R-PRIVACY_POLICY-1-C");
      yrxxch511xhhxxhxxxxxoptions.setR2xxup49bvxxxxxxxxxxpurpose49("Privacy Policy");
      yrxxch511xhhxxhxxxxxoptions.setR3xxuv49bvxxxxxxxxxxvalue49("");
      yrxxch511xhhxxhxxxxxoptions.setR4xxuo50bvxxxxxxxxxxoptions50("");
      yrxxch511xhhxxhxxxxxoptions.setR5xxup50bvxxxxxxxxxxpurpose50("");
      yrxxch511xhhxxhxxxxxoptions.setR6xxuv50bvxxxxxxxxxxvalue50("");
      yrxxch511xhhxxhxxxxxoptions.setR7xxuo51bvxxxxxxxxxxoptions51("");
      yrxxch511xhhxxhxxxxxoptions.setR8xxup51bvxxxxxxxxxxpurpose51("");
      yrxxch511xhhxxhxxxxxoptions.setR9xxuv51bvxxxxxxxxxxvalue51("");
      yrxxch511xhhxxhxxxxxoptions.setS1xxuo52bvxxxxxxxxxxoptions52("");
      yrxxch511xhhxxhxxxxxoptions.setS2xxup52bvxxxxxxxxxxpurpose52("");
      yrxxch511xhhxxhxxxxxoptions.setS3xxuv52bvxxxxxxxxxxvalue52("");
      yrxxch511xhhxxhxxxxxoptions.setS4xxuo53bvxxxxxxxxxxoptions53("");
      yrxxch511xhhxxhxxxxxoptions.setS5xxup53bvxxxxxxxxxxpurpose53("");
      yrxxch511xhhxxhxxxxxoptions.setS6xxuv53bvxxxxxxxxxxvalue53("");

      yrxxch511xhhxxhxxxxxoptions.setS7xxuo54bvxxxxxxxxxxoptions54("");
      yrxxch511xhhxxhxxxxxoptions.setS8xxup54bvxxxxxxxxxxpurpose54("");
      yrxxch511xhhxxhxxxxxoptions.setS9xxuv54bvxxxxxxxxxxvalue54("");
      yrxxch511xhhxxhxxxxxoptions.setT1xxuo55bvxxxxxxxxxxoptions55("");
      yrxxch511xhhxxhxxxxxoptions.setT2xxup55bvxxxxxxxxxxpurpose55("");
      yrxxch511xhhxxhxxxxxoptions.setT3xxuv55bvxxxxxxxxxxvalue55("");
      yrxxch511xhhxxhxxxxxoptions.setT4xxuo56bvxxxxxxxxxxoptions56("");
      yrxxch511xhhxxhxxxxxoptions.setT5xxup56bvxxxxxxxxxxpurpose56("");
      yrxxch511xhhxxhxxxxxoptions.setT6xxuv56bvxxxxxxxxxxvalue56("");
      yrxxch511xhhxxhxxxxxoptions.setT7xxuo57bvxxxxxxxxxxoptions57("");
      yrxxch511xhhxxhxxxxxoptions.setT8xxup57bvxxxxxxxxxxpurpose57("");
      yrxxch511xhhxxhxxxxxoptions.setT9xxuv57bvxxxxxxxxxxvalue57("");
      yrxxch511xhhxxhxxxxxoptions.setU1xxuo58bvxxxxxxxxxxoptions58("");
      yrxxch511xhhxxhxxxxxoptions.setU2xxup58bvxxxxxxxxxxpurpose58("");
      yrxxch511xhhxxhxxxxxoptions.setU3xxuv58bvxxxxxxxxxxvalue58("");
      yrxxch511xhhxxhxxxxxoptions.setU4xxuo59bvxxxxxxxxxxoptions59("");
      yrxxch511xhhxxhxxxxxoptions.setU5xxup59bvxxxxxxxxxxpurpose59("");
      yrxxch511xhhxxhxxxxxoptions.setU6xxuv59bvxxxxxxxxxxvalue59("");
      yrxxch511xhhxxhxxxxxoptions.setU7xxuo60bvxxxxxxxxxxoptions60("");
      yrxxch511xhhxxhxxxxxoptions.setU8xxup60bvxxxxxxxxxxpurpose60("");
      yrxxch511xhhxxhxxxxxoptions.setU9xxuv60bvxxxxxxxxxxvalue60("");
      yrxxch511xhhxxhxxxxxoptions.setV1xxuo61bvxxxxxxxxxxoptions61("");
      yrxxch511xhhxxhxxxxxoptions.setV2xxup61bvxxxxxxxxxxpurpose61("");
      yrxxch511xhhxxhxxxxxoptions.setV3xxuv61bvxxxxxxxxxxvalue61("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptionsHome.persist(client);


      yrxxch511xhhxxhxxxxxoptionsHome.clearInstance();
      yrxxch511xhhxxhxxxxxoptions=yrxxch511xhhxxhxxxxxoptionsHome.getInstance();
      yrxxch511xhhxxhxxxxxoptions.setA0xxukcxbvxxxxxxxxxxrow("35");
      yrxxch511xhhxxhxxxxxoptions.setB1xxuo01bvxxxxxxxxxxoptions01("R");
      yrxxch511xhhxxhxxxxxoptions.setB2xxup01bvxxxxxxxxxxpurpose01("Retained Earning");
      yrxxch511xhhxxhxxxxxoptions.setB3xxuv01bvxxxxxxxxxxvalue01("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptions.setB4xxuo02bvxxxxxxxxxxoptions02("S");
      yrxxch511xhhxxhxxxxxoptions.setB5xxup02bvxxxxxxxxxxpurpose02("Subheader");
      yrxxch511xhhxxhxxxxxoptions.setB6xxuv02bvxxxxxxxxxxvalue02("");
      yrxxch511xhhxxhxxxxxoptions.setB7xxuo03bvxxxxxxxxxxoptions03("P");
      yrxxch511xhhxxhxxxxxoptions.setB8xxup03bvxxxxxxxxxxpurpose03("Payable");
      yrxxch511xhhxxhxxxxxoptions.setB9xxuv03bvxxxxxxxxxxvalue03("");
      yrxxch511xhhxxhxxxxxoptions.setC1xxuo04bvxxxxxxxxxxoptions04("");
      yrxxch511xhhxxhxxxxxoptions.setC2xxup04bvxxxxxxxxxxpurpose04("");
      yrxxch511xhhxxhxxxxxoptions.setC3xxuv04bvxxxxxxxxxxvalue04("");
      yrxxch511xhhxxhxxxxxoptions.setC4xxuo05bvxxxxxxxxxxoptions05("");
      yrxxch511xhhxxhxxxxxoptions.setC5xxup05bvxxxxxxxxxxpurpose05("");
      yrxxch511xhhxxhxxxxxoptions.setC6xxuv05bvxxxxxxxxxxvalue05("");
      yrxxch511xhhxxhxxxxxoptions.setC7xxuo06bvxxxxxxxxxxoptions06("");
      yrxxch511xhhxxhxxxxxoptions.setC8xxup06bvxxxxxxxxxxpurpose06("");
      yrxxch511xhhxxhxxxxxoptions.setC9xxuv06bvxxxxxxxxxxvalue06("");
      yrxxch511xhhxxhxxxxxoptions.setD1xxuo07bvxxxxxxxxxxoptions07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD2xxup07bvxxxxxxxxxxpurpose07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD3xxuv07bvxxxxxxxxxxvalue07("");
      yrxxch511xhhxxhxxxxxoptions.setD4xxuo08bvxxxxxxxxxxoptions08("H");
      yrxxch511xhhxxhxxxxxoptions.setD5xxup08bvxxxxxxxxxxpurpose08("High");
      yrxxch511xhhxxhxxxxxoptions.setD6xxuv08bvxxxxxxxxxxvalue08("");
      yrxxch511xhhxxhxxxxxoptions.setD7xxuo09bvxxxxxxxxxxoptions09("30");
      yrxxch511xhhxxhxxxxxoptions.setD8xxup09bvxxxxxxxxxxpurpose09("-30 days");
      yrxxch511xhhxxhxxxxxoptions.setD9xxuv09bvxxxxxxxxxxvalue09("");
      yrxxch511xhhxxhxxxxxoptions.setE1xxuo10bvxxxxxxxxxxoptions10("cash");
      yrxxch511xhhxxhxxxxxoptions.setE2xxup10bvxxxxxxxxxxpurpose10("-cash");
      yrxxch511xhhxxhxxxxxoptions.setE3xxuv10bvxxxxxxxxxxvalue10("");
      yrxxch511xhhxxhxxxxxoptions.setE4xxuo11bvxxxxxxxxxxoptions11("Montreal");
      yrxxch511xhhxxhxxxxxoptions.setE5xxup11bvxxxxxxxxxxpurpose11("Toronto");
      yrxxch511xhhxxhxxxxxoptions.setE6xxuv11bvxxxxxxxxxxvalue11("ca=Montreal; us=Boston");
      yrxxch511xhhxxhxxxxxoptions.setE7xxuo12bvxxxxxxxxxxoptions12("QE");
      yrxxch511xhhxxhxxxxxoptions.setE8xxup12bvxxxxxxxxxxpurpose12("Quebec");
      yrxxch511xhhxxhxxxxxoptions.setE9xxuv12bvxxxxxxxxxxvalue12("ca=QE us=CA");
      yrxxch511xhhxxhxxxxxoptions.setF1xxuo13bvxxxxxxxxxxoptions13("");
      yrxxch511xhhxxhxxxxxoptions.setF2xxup13bvxxxxxxxxxxpurpose13("");
      yrxxch511xhhxxhxxxxxoptions.setF3xxuv13bvxxxxxxxxxxvalue13("");
      yrxxch511xhhxxhxxxxxoptions.setF4xxuo14bvxxxxxxxxxxoptions14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF5xxup14bvxxxxxxxxxxpurpose14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF6xxuv14bvxxxxxxxxxxvalue14("ca=M4L3Z8 us=10003 in=70003");
      yrxxch511xhhxxhxxxxxoptions.setF7xxuo15bvxxxxxxxxxxoptions15("Y");
      yrxxch511xhhxxhxxxxxoptions.setF8xxup15bvxxxxxxxxxxpurpose15("Yes");
      yrxxch511xhhxxhxxxxxoptions.setF9xxuv15bvxxxxxxxxxxvalue15("");
      yrxxch511xhhxxhxxxxxoptions.setG1xxuo16bvxxxxxxxxxxoptions16("SI-DG");
      yrxxch511xhhxxhxxxxxoptions.setG2xxup16bvxxxxxxxxxxpurpose16("Shopping-Digital Goods");
      yrxxch511xhhxxhxxxxxoptions.setG3xxuv16bvxxxxxxxxxxvalue16("");
      yrxxch511xhhxxhxxxxxoptions.setG4xxuo17bvxxxxxxxxxxoptions17("?");
      yrxxch511xhhxxhxxxxxoptions.setG5xxup17bvxxxxxxxxxxpurpose17("?");
      yrxxch511xhhxxhxxxxxoptions.setG6xxuv17bvxxxxxxxxxxvalue17("");
      yrxxch511xhhxxhxxxxxoptions.setG7xxuo18bvxxxxxxxxxxoptions18("AH");
      yrxxch511xhhxxhxxxxxoptions.setG8xxup18bvxxxxxxxxxxpurpose18("Hourly");
      yrxxch511xhhxxhxxxxxoptions.setG9xxuv18bvxxxxxxxxxxvalue18("s=89");
      yrxxch511xhhxxhxxxxxoptions.setH1xxuo19bvxxxxxxxxxxoptions19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH2xxup19bvxxxxxxxxxxpurpose19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH3xxuv19bvxxxxxxxxxxvalue19("");
      yrxxch511xhhxxhxxxxxoptions.setH4xxuo20bvxxxxxxxxxxoptions20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH5xxup20bvxxxxxxxxxxpurpose20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH6xxuv20bvxxxxxxxxxxvalue20("");
      yrxxch511xhhxxhxxxxxoptions.setH7xxuo21bvxxxxxxxxxxoptions21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH8xxup21bvxxxxxxxxxxpurpose21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH9xxuv21bvxxxxxxxxxxvalue21("");
      yrxxch511xhhxxhxxxxxoptions.setI1xxuo22bvxxxxxxxxxxoptions22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI2xxup22bvxxxxxxxxxxpurpose22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI3xxuv22bvxxxxxxxxxxvalue22("");
      yrxxch511xhhxxhxxxxxoptions.setI4xxuo23bvxxxxxxxxxxoptions23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI5xxup23bvxxxxxxxxxxpurpose23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI6xxuv23bvxxxxxxxxxxvalue23("");
      yrxxch511xhhxxhxxxxxoptions.setI7xxuo24bvxxxxxxxxxxoptions24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI8xxup24bvxxxxxxxxxxpurpose24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI9xxuv24bvxxxxxxxxxxvalue24("");
      yrxxch511xhhxxhxxxxxoptions.setJ1xxuo25bvxxxxxxxxxxoptions25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ2xxup25bvxxxxxxxxxxpurpose25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ3xxuv25bvxxxxxxxxxxvalue25("");
      yrxxch511xhhxxhxxxxxoptions.setJ4xxuo26bvxxxxxxxxxxoptions26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ5xxup26bvxxxxxxxxxxpurpose26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ6xxuv26bvxxxxxxxxxxvalue26("");
      yrxxch511xhhxxhxxxxxoptions.setJ7xxuo27bvxxxxxxxxxxoptions27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ8xxup27bvxxxxxxxxxxpurpose27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ9xxuv27bvxxxxxxxxxxvalue27("");
      yrxxch511xhhxxhxxxxxoptions.setK1xxuo28bvxxxxxxxxxxoptions28("PF");
      yrxxch511xhhxxhxxxxxoptions.setK2xxup28bvxxxxxxxxxxpurpose28("Persons-Family");
      yrxxch511xhhxxhxxxxxoptions.setK3xxuv28bvxxxxxxxxxxvalue28("");
      yrxxch511xhhxxhxxxxxoptions.setK4xxuo29bvxxxxxxxxxxoptions29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK5xxup29bvxxxxxxxxxxpurpose29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK6xxuv29bvxxxxxxxxxxvalue29("");
      yrxxch511xhhxxhxxxxxoptions.setK7xxuo30bvxxxxxxxxxxoptions30("EM");
      yrxxch511xhhxxhxxxxxoptions.setK8xxup30bvxxxxxxxxxxpurpose30("EMail");
      yrxxch511xhhxxhxxxxxoptions.setK9xxuv30bvxxxxxxxxxxvalue30("");
      yrxxch511xhhxxhxxxxxoptions.setL1xxuo31bvxxxxxxxxxxoptions31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL2xxup31bvxxxxxxxxxxpurpose31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL3xxuv31bvxxxxxxxxxxvalue31("");
      yrxxch511xhhxxhxxxxxoptions.setL4xxuo32bvxxxxxxxxxxoptions32("Room 107");
      yrxxch511xhhxxhxxxxxoptions.setL5xxup32bvxxxxxxxxxxpurpose32("Room 107");
      yrxxch511xhhxxhxxxxxoptions.setL6xxuv32bvxxxxxxxxxxvalue32("");
      yrxxch511xhhxxhxxxxxoptions.setL7xxuo33bvxxxxxxxxxxoptions33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL8xxup33bvxxxxxxxxxxpurpose33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL9xxuv33bvxxxxxxxxxxvalue33("");
      yrxxch511xhhxxhxxxxxoptions.setM1xxuo34bvxxxxxxxxxxoptions34("");
      yrxxch511xhhxxhxxxxxoptions.setM2xxup34bvxxxxxxxxxxpurpose34("");
      yrxxch511xhhxxhxxxxxoptions.setM3xxuv34bvxxxxxxxxxxvalue34("");
      yrxxch511xhhxxhxxxxxoptions.setM4xxuo35bvxxxxxxxxxxoptions35("Lunch Appontment");
      yrxxch511xhhxxhxxxxxoptions.setM5xxup35bvxxxxxxxxxxpurpose35("c$88.90");
      yrxxch511xhhxxhxxxxxoptions.setM6xxuv35bvxxxxxxxxxxvalue35("");
      yrxxch511xhhxxhxxxxxoptions.setM7xxuo36bvxxxxxxxxxxoptions36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM8xxup36bvxxxxxxxxxxpurpose36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM9xxuv36bvxxxxxxxxxxvalue36("");
      yrxxch511xhhxxhxxxxxoptions.setN1xxuo37bvxxxxxxxxxxoptions37("High");
      yrxxch511xhhxxhxxxxxoptions.setN2xxup37bvxxxxxxxxxxpurpose37("High");
      yrxxch511xhhxxhxxxxxoptions.setN3xxuv37bvxxxxxxxxxxvalue37("");
      yrxxch511xhhxxhxxxxxoptions.setN4xxuo38bvxxxxxxxxxxoptions38("S");
      yrxxch511xhhxxhxxxxxoptions.setN5xxup38bvxxxxxxxxxxpurpose38("System Admin");
      yrxxch511xhhxxhxxxxxoptions.setN6xxuv38bvxxxxxxxxxxvalue38("");
      yrxxch511xhhxxhxxxxxoptions.setN7xxuo39bvxxxxxxxxxxoptions39("H");
      yrxxch511xhhxxhxxxxxoptions.setN8xxup39bvxxxxxxxxxxpurpose39("High");
      yrxxch511xhhxxhxxxxxoptions.setN9xxuv39bvxxxxxxxxxxvalue39("");
      yrxxch511xhhxxhxxxxxoptions.setO1xxuo40bvxxxxxxxxxxoptions40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO2xxup40bvxxxxxxxxxxpurpose40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO3xxuv40bvxxxxxxxxxxvalue40("");
      yrxxch511xhhxxhxxxxxoptions.setO4xxuo41bvxxxxxxxxxxoptions41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO5xxup41bvxxxxxxxxxxpurpose41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO6xxuv41bvxxxxxxxxxxvalue41("");
      yrxxch511xhhxxhxxxxxoptions.setO7xxuo42bvxxxxxxxxxxoptions42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO8xxup42bvxxxxxxxxxxpurpose42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO9xxuv42bvxxxxxxxxxxvalue42("");
      yrxxch511xhhxxhxxxxxoptions.setP1xxuo43bvxxxxxxxxxxoptions43("New");
      yrxxch511xhhxxhxxxxxoptions.setP2xxup43bvxxxxxxxxxxpurpose43("New");
      yrxxch511xhhxxhxxxxxoptions.setP3xxuv43bvxxxxxxxxxxvalue43("");
      yrxxch511xhhxxhxxxxxoptions.setP4xxuo44bvxxxxxxxxxxoptions44("");
      yrxxch511xhhxxhxxxxxoptions.setP5xxup44bvxxxxxxxxxxpurpose44("");
      yrxxch511xhhxxhxxxxxoptions.setP6xxuv44bvxxxxxxxxxxvalue44("");
      yrxxch511xhhxxhxxxxxoptions.setP7xxuo45bvxxxxxxxxxxoptions45("D");
      yrxxch511xhhxxhxxxxxoptions.setP8xxup45bvxxxxxxxxxxpurpose45("");
      yrxxch511xhhxxhxxxxxoptions.setP9xxuv45bvxxxxxxxxxxvalue45("");
      yrxxch511xhhxxhxxxxxoptions.setQ1xxuo46bvxxxxxxxxxxoptions46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ2xxup46bvxxxxxxxxxxpurpose46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ3xxuv46bvxxxxxxxxxxvalue46("");
      yrxxch511xhhxxhxxxxxoptions.setQ4xxuo47bvxxxxxxxxxxoptions47("04");
      yrxxch511xhhxxhxxxxxoptions.setQ5xxup47bvxxxxxxxxxxpurpose47("04");
      yrxxch511xhhxxhxxxxxoptions.setQ6xxuv47bvxxxxxxxxxxvalue47("");
      yrxxch511xhhxxhxxxxxoptions.setQ7xxuo48bvxxxxxxxxxxoptions48("");
      yrxxch511xhhxxhxxxxxoptions.setQ8xxup48bvxxxxxxxxxxpurpose48("");
      yrxxch511xhhxxhxxxxxoptions.setQ9xxuv48bvxxxxxxxxxxvalue48("");
      yrxxch511xhhxxhxxxxxoptions.setR1xxuo49bvxxxxxxxxxxoptions49("3R-SIGNUP_NOTICE-1-C");
      yrxxch511xhhxxhxxxxxoptions.setR2xxup49bvxxxxxxxxxxpurpose49("Sign Up Terms");
      yrxxch511xhhxxhxxxxxoptions.setR3xxuv49bvxxxxxxxxxxvalue49("");
      yrxxch511xhhxxhxxxxxoptions.setR4xxuo50bvxxxxxxxxxxoptions50("");
      yrxxch511xhhxxhxxxxxoptions.setR5xxup50bvxxxxxxxxxxpurpose50("");
      yrxxch511xhhxxhxxxxxoptions.setR6xxuv50bvxxxxxxxxxxvalue50("");
      yrxxch511xhhxxhxxxxxoptions.setR7xxuo51bvxxxxxxxxxxoptions51("");
      yrxxch511xhhxxhxxxxxoptions.setR8xxup51bvxxxxxxxxxxpurpose51("");
      yrxxch511xhhxxhxxxxxoptions.setR9xxuv51bvxxxxxxxxxxvalue51("");
      yrxxch511xhhxxhxxxxxoptions.setS1xxuo52bvxxxxxxxxxxoptions52("");
      yrxxch511xhhxxhxxxxxoptions.setS2xxup52bvxxxxxxxxxxpurpose52("");
      yrxxch511xhhxxhxxxxxoptions.setS3xxuv52bvxxxxxxxxxxvalue52("");
      yrxxch511xhhxxhxxxxxoptions.setS4xxuo53bvxxxxxxxxxxoptions53("");
      yrxxch511xhhxxhxxxxxoptions.setS5xxup53bvxxxxxxxxxxpurpose53("");
      yrxxch511xhhxxhxxxxxoptions.setS6xxuv53bvxxxxxxxxxxvalue53("");

      yrxxch511xhhxxhxxxxxoptions.setS7xxuo54bvxxxxxxxxxxoptions54("");
      yrxxch511xhhxxhxxxxxoptions.setS8xxup54bvxxxxxxxxxxpurpose54("");
      yrxxch511xhhxxhxxxxxoptions.setS9xxuv54bvxxxxxxxxxxvalue54("");
      yrxxch511xhhxxhxxxxxoptions.setT1xxuo55bvxxxxxxxxxxoptions55("");
      yrxxch511xhhxxhxxxxxoptions.setT2xxup55bvxxxxxxxxxxpurpose55("");
      yrxxch511xhhxxhxxxxxoptions.setT3xxuv55bvxxxxxxxxxxvalue55("");
      yrxxch511xhhxxhxxxxxoptions.setT4xxuo56bvxxxxxxxxxxoptions56("");
      yrxxch511xhhxxhxxxxxoptions.setT5xxup56bvxxxxxxxxxxpurpose56("");
      yrxxch511xhhxxhxxxxxoptions.setT6xxuv56bvxxxxxxxxxxvalue56("");
      yrxxch511xhhxxhxxxxxoptions.setT7xxuo57bvxxxxxxxxxxoptions57("");
      yrxxch511xhhxxhxxxxxoptions.setT8xxup57bvxxxxxxxxxxpurpose57("");
      yrxxch511xhhxxhxxxxxoptions.setT9xxuv57bvxxxxxxxxxxvalue57("");
      yrxxch511xhhxxhxxxxxoptions.setU1xxuo58bvxxxxxxxxxxoptions58("");
      yrxxch511xhhxxhxxxxxoptions.setU2xxup58bvxxxxxxxxxxpurpose58("");
      yrxxch511xhhxxhxxxxxoptions.setU3xxuv58bvxxxxxxxxxxvalue58("");
      yrxxch511xhhxxhxxxxxoptions.setU4xxuo59bvxxxxxxxxxxoptions59("");
      yrxxch511xhhxxhxxxxxoptions.setU5xxup59bvxxxxxxxxxxpurpose59("");
      yrxxch511xhhxxhxxxxxoptions.setU6xxuv59bvxxxxxxxxxxvalue59("");
      yrxxch511xhhxxhxxxxxoptions.setU7xxuo60bvxxxxxxxxxxoptions60("");
      yrxxch511xhhxxhxxxxxoptions.setU8xxup60bvxxxxxxxxxxpurpose60("");
      yrxxch511xhhxxhxxxxxoptions.setU9xxuv60bvxxxxxxxxxxvalue60("");
      yrxxch511xhhxxhxxxxxoptions.setV1xxuo61bvxxxxxxxxxxoptions61("");
      yrxxch511xhhxxhxxxxxoptions.setV2xxup61bvxxxxxxxxxxpurpose61("");
      yrxxch511xhhxxhxxxxxoptions.setV3xxuv61bvxxxxxxxxxxvalue61("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptionsHome.persist(client);

      yrxxch511xhhxxhxxxxxoptionsHome.clearInstance();
      yrxxch511xhhxxhxxxxxoptions=yrxxch511xhhxxhxxxxxoptionsHome.getInstance();
      yrxxch511xhhxxhxxxxxoptions.setA0xxukcxbvxxxxxxxxxxrow("36");
      yrxxch511xhhxxhxxxxxoptions.setB1xxuo01bvxxxxxxxxxxoptions01("R");
      yrxxch511xhhxxhxxxxxoptions.setB2xxup01bvxxxxxxxxxxpurpose01("Retained Earning");
      yrxxch511xhhxxhxxxxxoptions.setB3xxuv01bvxxxxxxxxxxvalue01("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptions.setB4xxuo02bvxxxxxxxxxxoptions02("S");
      yrxxch511xhhxxhxxxxxoptions.setB5xxup02bvxxxxxxxxxxpurpose02("Subheader");
      yrxxch511xhhxxhxxxxxoptions.setB6xxuv02bvxxxxxxxxxxvalue02("");
      yrxxch511xhhxxhxxxxxoptions.setB7xxuo03bvxxxxxxxxxxoptions03("P");
      yrxxch511xhhxxhxxxxxoptions.setB8xxup03bvxxxxxxxxxxpurpose03("Payable");
      yrxxch511xhhxxhxxxxxoptions.setB9xxuv03bvxxxxxxxxxxvalue03("");
      yrxxch511xhhxxhxxxxxoptions.setC1xxuo04bvxxxxxxxxxxoptions04("");
      yrxxch511xhhxxhxxxxxoptions.setC2xxup04bvxxxxxxxxxxpurpose04("");
      yrxxch511xhhxxhxxxxxoptions.setC3xxuv04bvxxxxxxxxxxvalue04("");
      yrxxch511xhhxxhxxxxxoptions.setC4xxuo05bvxxxxxxxxxxoptions05("");
      yrxxch511xhhxxhxxxxxoptions.setC5xxup05bvxxxxxxxxxxpurpose05("");
      yrxxch511xhhxxhxxxxxoptions.setC6xxuv05bvxxxxxxxxxxvalue05("");
      yrxxch511xhhxxhxxxxxoptions.setC7xxuo06bvxxxxxxxxxxoptions06("");
      yrxxch511xhhxxhxxxxxoptions.setC8xxup06bvxxxxxxxxxxpurpose06("");
      yrxxch511xhhxxhxxxxxoptions.setC9xxuv06bvxxxxxxxxxxvalue06("");
      yrxxch511xhhxxhxxxxxoptions.setD1xxuo07bvxxxxxxxxxxoptions07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD2xxup07bvxxxxxxxxxxpurpose07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD3xxuv07bvxxxxxxxxxxvalue07("");
      yrxxch511xhhxxhxxxxxoptions.setD4xxuo08bvxxxxxxxxxxoptions08("H");
      yrxxch511xhhxxhxxxxxoptions.setD5xxup08bvxxxxxxxxxxpurpose08("High");
      yrxxch511xhhxxhxxxxxoptions.setD6xxuv08bvxxxxxxxxxxvalue08("");
      yrxxch511xhhxxhxxxxxoptions.setD7xxuo09bvxxxxxxxxxxoptions09("30");
      yrxxch511xhhxxhxxxxxoptions.setD8xxup09bvxxxxxxxxxxpurpose09("-30 days");
      yrxxch511xhhxxhxxxxxoptions.setD9xxuv09bvxxxxxxxxxxvalue09("");
      yrxxch511xhhxxhxxxxxoptions.setE1xxuo10bvxxxxxxxxxxoptions10("cash");
      yrxxch511xhhxxhxxxxxoptions.setE2xxup10bvxxxxxxxxxxpurpose10("-cash");
      yrxxch511xhhxxhxxxxxoptions.setE3xxuv10bvxxxxxxxxxxvalue10("");
      yrxxch511xhhxxhxxxxxoptions.setE4xxuo11bvxxxxxxxxxxoptions11("Montreal");
      yrxxch511xhhxxhxxxxxoptions.setE5xxup11bvxxxxxxxxxxpurpose11("Toronto");
      yrxxch511xhhxxhxxxxxoptions.setE6xxuv11bvxxxxxxxxxxvalue11("ca=Montreal; us=Boston");
      yrxxch511xhhxxhxxxxxoptions.setE7xxuo12bvxxxxxxxxxxoptions12("QE");
      yrxxch511xhhxxhxxxxxoptions.setE8xxup12bvxxxxxxxxxxpurpose12("Quebec");
      yrxxch511xhhxxhxxxxxoptions.setE9xxuv12bvxxxxxxxxxxvalue12("ca=QE us=CA");
      yrxxch511xhhxxhxxxxxoptions.setF1xxuo13bvxxxxxxxxxxoptions13("");
      yrxxch511xhhxxhxxxxxoptions.setF2xxup13bvxxxxxxxxxxpurpose13("");
      yrxxch511xhhxxhxxxxxoptions.setF3xxuv13bvxxxxxxxxxxvalue13("");
      yrxxch511xhhxxhxxxxxoptions.setF4xxuo14bvxxxxxxxxxxoptions14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF5xxup14bvxxxxxxxxxxpurpose14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF6xxuv14bvxxxxxxxxxxvalue14("ca=M4L3Z8 us=10003 in=70003");
      yrxxch511xhhxxhxxxxxoptions.setF7xxuo15bvxxxxxxxxxxoptions15("Y");
      yrxxch511xhhxxhxxxxxoptions.setF8xxup15bvxxxxxxxxxxpurpose15("Yes");
      yrxxch511xhhxxhxxxxxoptions.setF9xxuv15bvxxxxxxxxxxvalue15("");
      yrxxch511xhhxxhxxxxxoptions.setG1xxuo16bvxxxxxxxxxxoptions16("SI-L*");
      yrxxch511xhhxxhxxxxxoptions.setG2xxup16bvxxxxxxxxxxpurpose16("Shopping-SubCategories");
      yrxxch511xhhxxhxxxxxoptions.setG3xxuv16bvxxxxxxxxxxvalue16("");
      yrxxch511xhhxxhxxxxxoptions.setG4xxuo17bvxxxxxxxxxxoptions17("?");
      yrxxch511xhhxxhxxxxxoptions.setG5xxup17bvxxxxxxxxxxpurpose17("?");
      yrxxch511xhhxxhxxxxxoptions.setG6xxuv17bvxxxxxxxxxxvalue17("");
      yrxxch511xhhxxhxxxxxoptions.setG7xxuo18bvxxxxxxxxxxoptions18("AH");
      yrxxch511xhhxxhxxxxxoptions.setG8xxup18bvxxxxxxxxxxpurpose18("Hourly");
      yrxxch511xhhxxhxxxxxoptions.setG9xxuv18bvxxxxxxxxxxvalue18("s=89");
      yrxxch511xhhxxhxxxxxoptions.setH1xxuo19bvxxxxxxxxxxoptions19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH2xxup19bvxxxxxxxxxxpurpose19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH3xxuv19bvxxxxxxxxxxvalue19("");
      yrxxch511xhhxxhxxxxxoptions.setH4xxuo20bvxxxxxxxxxxoptions20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH5xxup20bvxxxxxxxxxxpurpose20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH6xxuv20bvxxxxxxxxxxvalue20("");
      yrxxch511xhhxxhxxxxxoptions.setH7xxuo21bvxxxxxxxxxxoptions21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH8xxup21bvxxxxxxxxxxpurpose21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH9xxuv21bvxxxxxxxxxxvalue21("");
      yrxxch511xhhxxhxxxxxoptions.setI1xxuo22bvxxxxxxxxxxoptions22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI2xxup22bvxxxxxxxxxxpurpose22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI3xxuv22bvxxxxxxxxxxvalue22("");
      yrxxch511xhhxxhxxxxxoptions.setI4xxuo23bvxxxxxxxxxxoptions23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI5xxup23bvxxxxxxxxxxpurpose23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI6xxuv23bvxxxxxxxxxxvalue23("");
      yrxxch511xhhxxhxxxxxoptions.setI7xxuo24bvxxxxxxxxxxoptions24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI8xxup24bvxxxxxxxxxxpurpose24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI9xxuv24bvxxxxxxxxxxvalue24("");
      yrxxch511xhhxxhxxxxxoptions.setJ1xxuo25bvxxxxxxxxxxoptions25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ2xxup25bvxxxxxxxxxxpurpose25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ3xxuv25bvxxxxxxxxxxvalue25("");
      yrxxch511xhhxxhxxxxxoptions.setJ4xxuo26bvxxxxxxxxxxoptions26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ5xxup26bvxxxxxxxxxxpurpose26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ6xxuv26bvxxxxxxxxxxvalue26("");
      yrxxch511xhhxxhxxxxxoptions.setJ7xxuo27bvxxxxxxxxxxoptions27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ8xxup27bvxxxxxxxxxxpurpose27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ9xxuv27bvxxxxxxxxxxvalue27("");
      yrxxch511xhhxxhxxxxxoptions.setK1xxuo28bvxxxxxxxxxxoptions28("PF");
      yrxxch511xhhxxhxxxxxoptions.setK2xxup28bvxxxxxxxxxxpurpose28("Persons-Family");
      yrxxch511xhhxxhxxxxxoptions.setK3xxuv28bvxxxxxxxxxxvalue28("");
      yrxxch511xhhxxhxxxxxoptions.setK4xxuo29bvxxxxxxxxxxoptions29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK5xxup29bvxxxxxxxxxxpurpose29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK6xxuv29bvxxxxxxxxxxvalue29("");
      yrxxch511xhhxxhxxxxxoptions.setK7xxuo30bvxxxxxxxxxxoptions30("EM");
      yrxxch511xhhxxhxxxxxoptions.setK8xxup30bvxxxxxxxxxxpurpose30("EMail");
      yrxxch511xhhxxhxxxxxoptions.setK9xxuv30bvxxxxxxxxxxvalue30("");
      yrxxch511xhhxxhxxxxxoptions.setL1xxuo31bvxxxxxxxxxxoptions31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL2xxup31bvxxxxxxxxxxpurpose31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL3xxuv31bvxxxxxxxxxxvalue31("");
      yrxxch511xhhxxhxxxxxoptions.setL4xxuo32bvxxxxxxxxxxoptions32("Room 107");
      yrxxch511xhhxxhxxxxxoptions.setL5xxup32bvxxxxxxxxxxpurpose32("Room 107");
      yrxxch511xhhxxhxxxxxoptions.setL6xxuv32bvxxxxxxxxxxvalue32("");
      yrxxch511xhhxxhxxxxxoptions.setL7xxuo33bvxxxxxxxxxxoptions33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL8xxup33bvxxxxxxxxxxpurpose33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL9xxuv33bvxxxxxxxxxxvalue33("");
      yrxxch511xhhxxhxxxxxoptions.setM1xxuo34bvxxxxxxxxxxoptions34("");
      yrxxch511xhhxxhxxxxxoptions.setM2xxup34bvxxxxxxxxxxpurpose34("");
      yrxxch511xhhxxhxxxxxoptions.setM3xxuv34bvxxxxxxxxxxvalue34("");
      yrxxch511xhhxxhxxxxxoptions.setM4xxuo35bvxxxxxxxxxxoptions35("Lunch Appontment");
      yrxxch511xhhxxhxxxxxoptions.setM5xxup35bvxxxxxxxxxxpurpose35("c$88.90");
      yrxxch511xhhxxhxxxxxoptions.setM6xxuv35bvxxxxxxxxxxvalue35("");
      yrxxch511xhhxxhxxxxxoptions.setM7xxuo36bvxxxxxxxxxxoptions36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM8xxup36bvxxxxxxxxxxpurpose36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM9xxuv36bvxxxxxxxxxxvalue36("");
      yrxxch511xhhxxhxxxxxoptions.setN1xxuo37bvxxxxxxxxxxoptions37("High");
      yrxxch511xhhxxhxxxxxoptions.setN2xxup37bvxxxxxxxxxxpurpose37("High");
      yrxxch511xhhxxhxxxxxoptions.setN3xxuv37bvxxxxxxxxxxvalue37("");
      yrxxch511xhhxxhxxxxxoptions.setN4xxuo38bvxxxxxxxxxxoptions38("S");
      yrxxch511xhhxxhxxxxxoptions.setN5xxup38bvxxxxxxxxxxpurpose38("System Admin");
      yrxxch511xhhxxhxxxxxoptions.setN6xxuv38bvxxxxxxxxxxvalue38("");
      yrxxch511xhhxxhxxxxxoptions.setN7xxuo39bvxxxxxxxxxxoptions39("H");
      yrxxch511xhhxxhxxxxxoptions.setN8xxup39bvxxxxxxxxxxpurpose39("High");
      yrxxch511xhhxxhxxxxxoptions.setN9xxuv39bvxxxxxxxxxxvalue39("");
      yrxxch511xhhxxhxxxxxoptions.setO1xxuo40bvxxxxxxxxxxoptions40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO2xxup40bvxxxxxxxxxxpurpose40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO3xxuv40bvxxxxxxxxxxvalue40("");
      yrxxch511xhhxxhxxxxxoptions.setO4xxuo41bvxxxxxxxxxxoptions41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO5xxup41bvxxxxxxxxxxpurpose41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO6xxuv41bvxxxxxxxxxxvalue41("");
      yrxxch511xhhxxhxxxxxoptions.setO7xxuo42bvxxxxxxxxxxoptions42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO8xxup42bvxxxxxxxxxxpurpose42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO9xxuv42bvxxxxxxxxxxvalue42("");
      yrxxch511xhhxxhxxxxxoptions.setP1xxuo43bvxxxxxxxxxxoptions43("New");
      yrxxch511xhhxxhxxxxxoptions.setP2xxup43bvxxxxxxxxxxpurpose43("New");
      yrxxch511xhhxxhxxxxxoptions.setP3xxuv43bvxxxxxxxxxxvalue43("");
      yrxxch511xhhxxhxxxxxoptions.setP4xxuo44bvxxxxxxxxxxoptions44("");
      yrxxch511xhhxxhxxxxxoptions.setP5xxup44bvxxxxxxxxxxpurpose44("");
      yrxxch511xhhxxhxxxxxoptions.setP6xxuv44bvxxxxxxxxxxvalue44("");
      yrxxch511xhhxxhxxxxxoptions.setP7xxuo45bvxxxxxxxxxxoptions45("D");
      yrxxch511xhhxxhxxxxxoptions.setP8xxup45bvxxxxxxxxxxpurpose45("");
      yrxxch511xhhxxhxxxxxoptions.setP9xxuv45bvxxxxxxxxxxvalue45("");
      yrxxch511xhhxxhxxxxxoptions.setQ1xxuo46bvxxxxxxxxxxoptions46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ2xxup46bvxxxxxxxxxxpurpose46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ3xxuv46bvxxxxxxxxxxvalue46("");
      yrxxch511xhhxxhxxxxxoptions.setQ4xxuo47bvxxxxxxxxxxoptions47("04");
      yrxxch511xhhxxhxxxxxoptions.setQ5xxup47bvxxxxxxxxxxpurpose47("04");
      yrxxch511xhhxxhxxxxxoptions.setQ6xxuv47bvxxxxxxxxxxvalue47("");
      yrxxch511xhhxxhxxxxxoptions.setQ7xxuo48bvxxxxxxxxxxoptions48("");
      yrxxch511xhhxxhxxxxxoptions.setQ8xxup48bvxxxxxxxxxxpurpose48("");
      yrxxch511xhhxxhxxxxxoptions.setQ9xxuv48bvxxxxxxxxxxvalue48("");
      yrxxch511xhhxxhxxxxxoptions.setR1xxuo49bvxxxxxxxxxxoptions49("3R-RETURNS_POLICY-1-C");
      yrxxch511xhhxxhxxxxxoptions.setR2xxup49bvxxxxxxxxxxpurpose49("Return Terms");
      yrxxch511xhhxxhxxxxxoptions.setR3xxuv49bvxxxxxxxxxxvalue49("");
      yrxxch511xhhxxhxxxxxoptions.setR4xxuo50bvxxxxxxxxxxoptions50("");
      yrxxch511xhhxxhxxxxxoptions.setR5xxup50bvxxxxxxxxxxpurpose50("");
      yrxxch511xhhxxhxxxxxoptions.setR6xxuv50bvxxxxxxxxxxvalue50("");
      yrxxch511xhhxxhxxxxxoptions.setR7xxuo51bvxxxxxxxxxxoptions51("");
      yrxxch511xhhxxhxxxxxoptions.setR8xxup51bvxxxxxxxxxxpurpose51("");
      yrxxch511xhhxxhxxxxxoptions.setR9xxuv51bvxxxxxxxxxxvalue51("");
      yrxxch511xhhxxhxxxxxoptions.setS1xxuo52bvxxxxxxxxxxoptions52("");
      yrxxch511xhhxxhxxxxxoptions.setS2xxup52bvxxxxxxxxxxpurpose52("");
      yrxxch511xhhxxhxxxxxoptions.setS3xxuv52bvxxxxxxxxxxvalue52("");
      yrxxch511xhhxxhxxxxxoptions.setS4xxuo53bvxxxxxxxxxxoptions53("");
      yrxxch511xhhxxhxxxxxoptions.setS5xxup53bvxxxxxxxxxxpurpose53("");
      yrxxch511xhhxxhxxxxxoptions.setS6xxuv53bvxxxxxxxxxxvalue53("");

      yrxxch511xhhxxhxxxxxoptions.setS7xxuo54bvxxxxxxxxxxoptions54("");
      yrxxch511xhhxxhxxxxxoptions.setS8xxup54bvxxxxxxxxxxpurpose54("");
      yrxxch511xhhxxhxxxxxoptions.setS9xxuv54bvxxxxxxxxxxvalue54("");
      yrxxch511xhhxxhxxxxxoptions.setT1xxuo55bvxxxxxxxxxxoptions55("");
      yrxxch511xhhxxhxxxxxoptions.setT2xxup55bvxxxxxxxxxxpurpose55("");
      yrxxch511xhhxxhxxxxxoptions.setT3xxuv55bvxxxxxxxxxxvalue55("");
      yrxxch511xhhxxhxxxxxoptions.setT4xxuo56bvxxxxxxxxxxoptions56("");
      yrxxch511xhhxxhxxxxxoptions.setT5xxup56bvxxxxxxxxxxpurpose56("");
      yrxxch511xhhxxhxxxxxoptions.setT6xxuv56bvxxxxxxxxxxvalue56("");
      yrxxch511xhhxxhxxxxxoptions.setT7xxuo57bvxxxxxxxxxxoptions57("");
      yrxxch511xhhxxhxxxxxoptions.setT8xxup57bvxxxxxxxxxxpurpose57("");
      yrxxch511xhhxxhxxxxxoptions.setT9xxuv57bvxxxxxxxxxxvalue57("");
      yrxxch511xhhxxhxxxxxoptions.setU1xxuo58bvxxxxxxxxxxoptions58("");
      yrxxch511xhhxxhxxxxxoptions.setU2xxup58bvxxxxxxxxxxpurpose58("");
      yrxxch511xhhxxhxxxxxoptions.setU3xxuv58bvxxxxxxxxxxvalue58("");
      yrxxch511xhhxxhxxxxxoptions.setU4xxuo59bvxxxxxxxxxxoptions59("");
      yrxxch511xhhxxhxxxxxoptions.setU5xxup59bvxxxxxxxxxxpurpose59("");
      yrxxch511xhhxxhxxxxxoptions.setU6xxuv59bvxxxxxxxxxxvalue59("");
      yrxxch511xhhxxhxxxxxoptions.setU7xxuo60bvxxxxxxxxxxoptions60("");
      yrxxch511xhhxxhxxxxxoptions.setU8xxup60bvxxxxxxxxxxpurpose60("");
      yrxxch511xhhxxhxxxxxoptions.setU9xxuv60bvxxxxxxxxxxvalue60("");
      yrxxch511xhhxxhxxxxxoptions.setV1xxuo61bvxxxxxxxxxxoptions61("");
      yrxxch511xhhxxhxxxxxoptions.setV2xxup61bvxxxxxxxxxxpurpose61("");
      yrxxch511xhhxxhxxxxxoptions.setV3xxuv61bvxxxxxxxxxxvalue61("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptionsHome.persist(client);

      yrxxch511xhhxxhxxxxxoptionsHome.clearInstance();
      yrxxch511xhhxxhxxxxxoptions=yrxxch511xhhxxhxxxxxoptionsHome.getInstance();
      yrxxch511xhhxxhxxxxxoptions.setA0xxukcxbvxxxxxxxxxxrow("37");
      yrxxch511xhhxxhxxxxxoptions.setB1xxuo01bvxxxxxxxxxxoptions01("R");
      yrxxch511xhhxxhxxxxxoptions.setB2xxup01bvxxxxxxxxxxpurpose01("Retained Earning");
      yrxxch511xhhxxhxxxxxoptions.setB3xxuv01bvxxxxxxxxxxvalue01("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptions.setB4xxuo02bvxxxxxxxxxxoptions02("S");
      yrxxch511xhhxxhxxxxxoptions.setB5xxup02bvxxxxxxxxxxpurpose02("Subheader");
      yrxxch511xhhxxhxxxxxoptions.setB6xxuv02bvxxxxxxxxxxvalue02("");
      yrxxch511xhhxxhxxxxxoptions.setB7xxuo03bvxxxxxxxxxxoptions03("P");
      yrxxch511xhhxxhxxxxxoptions.setB8xxup03bvxxxxxxxxxxpurpose03("Payable");
      yrxxch511xhhxxhxxxxxoptions.setB9xxuv03bvxxxxxxxxxxvalue03("");
      yrxxch511xhhxxhxxxxxoptions.setC1xxuo04bvxxxxxxxxxxoptions04("");
      yrxxch511xhhxxhxxxxxoptions.setC2xxup04bvxxxxxxxxxxpurpose04("");
      yrxxch511xhhxxhxxxxxoptions.setC3xxuv04bvxxxxxxxxxxvalue04("");
      yrxxch511xhhxxhxxxxxoptions.setC4xxuo05bvxxxxxxxxxxoptions05("");
      yrxxch511xhhxxhxxxxxoptions.setC5xxup05bvxxxxxxxxxxpurpose05("");
      yrxxch511xhhxxhxxxxxoptions.setC6xxuv05bvxxxxxxxxxxvalue05("");
      yrxxch511xhhxxhxxxxxoptions.setC7xxuo06bvxxxxxxxxxxoptions06("");
      yrxxch511xhhxxhxxxxxoptions.setC8xxup06bvxxxxxxxxxxpurpose06("");
      yrxxch511xhhxxhxxxxxoptions.setC9xxuv06bvxxxxxxxxxxvalue06("");
      yrxxch511xhhxxhxxxxxoptions.setD1xxuo07bvxxxxxxxxxxoptions07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD2xxup07bvxxxxxxxxxxpurpose07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD3xxuv07bvxxxxxxxxxxvalue07("");
      yrxxch511xhhxxhxxxxxoptions.setD4xxuo08bvxxxxxxxxxxoptions08("H");
      yrxxch511xhhxxhxxxxxoptions.setD5xxup08bvxxxxxxxxxxpurpose08("High");
      yrxxch511xhhxxhxxxxxoptions.setD6xxuv08bvxxxxxxxxxxvalue08("");
      yrxxch511xhhxxhxxxxxoptions.setD7xxuo09bvxxxxxxxxxxoptions09("30");
      yrxxch511xhhxxhxxxxxoptions.setD8xxup09bvxxxxxxxxxxpurpose09("-30 days");
      yrxxch511xhhxxhxxxxxoptions.setD9xxuv09bvxxxxxxxxxxvalue09("");
      yrxxch511xhhxxhxxxxxoptions.setE1xxuo10bvxxxxxxxxxxoptions10("cash");
      yrxxch511xhhxxhxxxxxoptions.setE2xxup10bvxxxxxxxxxxpurpose10("-cash");
      yrxxch511xhhxxhxxxxxoptions.setE3xxuv10bvxxxxxxxxxxvalue10("");
      yrxxch511xhhxxhxxxxxoptions.setE4xxuo11bvxxxxxxxxxxoptions11("Montreal");
      yrxxch511xhhxxhxxxxxoptions.setE5xxup11bvxxxxxxxxxxpurpose11("Toronto");
      yrxxch511xhhxxhxxxxxoptions.setE6xxuv11bvxxxxxxxxxxvalue11("ca=Montreal; us=Boston");
      yrxxch511xhhxxhxxxxxoptions.setE7xxuo12bvxxxxxxxxxxoptions12("QE");
      yrxxch511xhhxxhxxxxxoptions.setE8xxup12bvxxxxxxxxxxpurpose12("Quebec");
      yrxxch511xhhxxhxxxxxoptions.setE9xxuv12bvxxxxxxxxxxvalue12("ca=QE us=CA");
      yrxxch511xhhxxhxxxxxoptions.setF1xxuo13bvxxxxxxxxxxoptions13("");
      yrxxch511xhhxxhxxxxxoptions.setF2xxup13bvxxxxxxxxxxpurpose13("");
      yrxxch511xhhxxhxxxxxoptions.setF3xxuv13bvxxxxxxxxxxvalue13("");
      yrxxch511xhhxxhxxxxxoptions.setF4xxuo14bvxxxxxxxxxxoptions14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF5xxup14bvxxxxxxxxxxpurpose14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF6xxuv14bvxxxxxxxxxxvalue14("ca=M4L3Z8 us=10003 in=70003");
      yrxxch511xhhxxhxxxxxoptions.setF7xxuo15bvxxxxxxxxxxoptions15("Y");
      yrxxch511xhhxxhxxxxxoptions.setF8xxup15bvxxxxxxxxxxpurpose15("Yes");
      yrxxch511xhhxxhxxxxxoptions.setF9xxuv15bvxxxxxxxxxxvalue15("");
      yrxxch511xhhxxhxxxxxoptions.setG1xxuo16bvxxxxxxxxxxoptions16("SI-L*");
      yrxxch511xhhxxhxxxxxoptions.setG2xxup16bvxxxxxxxxxxpurpose16("Shopping-SubCategories");
      yrxxch511xhhxxhxxxxxoptions.setG3xxuv16bvxxxxxxxxxxvalue16("");
      yrxxch511xhhxxhxxxxxoptions.setG4xxuo17bvxxxxxxxxxxoptions17("?");
      yrxxch511xhhxxhxxxxxoptions.setG5xxup17bvxxxxxxxxxxpurpose17("?");
      yrxxch511xhhxxhxxxxxoptions.setG6xxuv17bvxxxxxxxxxxvalue17("");
      yrxxch511xhhxxhxxxxxoptions.setG7xxuo18bvxxxxxxxxxxoptions18("AH");
      yrxxch511xhhxxhxxxxxoptions.setG8xxup18bvxxxxxxxxxxpurpose18("Hourly");
      yrxxch511xhhxxhxxxxxoptions.setG9xxuv18bvxxxxxxxxxxvalue18("s=89");
      yrxxch511xhhxxhxxxxxoptions.setH1xxuo19bvxxxxxxxxxxoptions19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH2xxup19bvxxxxxxxxxxpurpose19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH3xxuv19bvxxxxxxxxxxvalue19("");
      yrxxch511xhhxxhxxxxxoptions.setH4xxuo20bvxxxxxxxxxxoptions20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH5xxup20bvxxxxxxxxxxpurpose20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH6xxuv20bvxxxxxxxxxxvalue20("");
      yrxxch511xhhxxhxxxxxoptions.setH7xxuo21bvxxxxxxxxxxoptions21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH8xxup21bvxxxxxxxxxxpurpose21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH9xxuv21bvxxxxxxxxxxvalue21("");
      yrxxch511xhhxxhxxxxxoptions.setI1xxuo22bvxxxxxxxxxxoptions22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI2xxup22bvxxxxxxxxxxpurpose22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI3xxuv22bvxxxxxxxxxxvalue22("");
      yrxxch511xhhxxhxxxxxoptions.setI4xxuo23bvxxxxxxxxxxoptions23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI5xxup23bvxxxxxxxxxxpurpose23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI6xxuv23bvxxxxxxxxxxvalue23("");
      yrxxch511xhhxxhxxxxxoptions.setI7xxuo24bvxxxxxxxxxxoptions24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI8xxup24bvxxxxxxxxxxpurpose24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI9xxuv24bvxxxxxxxxxxvalue24("");
      yrxxch511xhhxxhxxxxxoptions.setJ1xxuo25bvxxxxxxxxxxoptions25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ2xxup25bvxxxxxxxxxxpurpose25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ3xxuv25bvxxxxxxxxxxvalue25("");
      yrxxch511xhhxxhxxxxxoptions.setJ4xxuo26bvxxxxxxxxxxoptions26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ5xxup26bvxxxxxxxxxxpurpose26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ6xxuv26bvxxxxxxxxxxvalue26("");
      yrxxch511xhhxxhxxxxxoptions.setJ7xxuo27bvxxxxxxxxxxoptions27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ8xxup27bvxxxxxxxxxxpurpose27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ9xxuv27bvxxxxxxxxxxvalue27("");
      yrxxch511xhhxxhxxxxxoptions.setK1xxuo28bvxxxxxxxxxxoptions28("PF");
      yrxxch511xhhxxhxxxxxoptions.setK2xxup28bvxxxxxxxxxxpurpose28("Persons-Family");
      yrxxch511xhhxxhxxxxxoptions.setK3xxuv28bvxxxxxxxxxxvalue28("");
      yrxxch511xhhxxhxxxxxoptions.setK4xxuo29bvxxxxxxxxxxoptions29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK5xxup29bvxxxxxxxxxxpurpose29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK6xxuv29bvxxxxxxxxxxvalue29("");
      yrxxch511xhhxxhxxxxxoptions.setK7xxuo30bvxxxxxxxxxxoptions30("EM");
      yrxxch511xhhxxhxxxxxoptions.setK8xxup30bvxxxxxxxxxxpurpose30("EMail");
      yrxxch511xhhxxhxxxxxoptions.setK9xxuv30bvxxxxxxxxxxvalue30("");
      yrxxch511xhhxxhxxxxxoptions.setL1xxuo31bvxxxxxxxxxxoptions31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL2xxup31bvxxxxxxxxxxpurpose31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL3xxuv31bvxxxxxxxxxxvalue31("");
      yrxxch511xhhxxhxxxxxoptions.setL4xxuo32bvxxxxxxxxxxoptions32("Room 107");
      yrxxch511xhhxxhxxxxxoptions.setL5xxup32bvxxxxxxxxxxpurpose32("Room 107");
      yrxxch511xhhxxhxxxxxoptions.setL6xxuv32bvxxxxxxxxxxvalue32("");
      yrxxch511xhhxxhxxxxxoptions.setL7xxuo33bvxxxxxxxxxxoptions33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL8xxup33bvxxxxxxxxxxpurpose33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL9xxuv33bvxxxxxxxxxxvalue33("");
      yrxxch511xhhxxhxxxxxoptions.setM1xxuo34bvxxxxxxxxxxoptions34("");
      yrxxch511xhhxxhxxxxxoptions.setM2xxup34bvxxxxxxxxxxpurpose34("");
      yrxxch511xhhxxhxxxxxoptions.setM3xxuv34bvxxxxxxxxxxvalue34("");
      yrxxch511xhhxxhxxxxxoptions.setM4xxuo35bvxxxxxxxxxxoptions35("Lunch Appontment");
      yrxxch511xhhxxhxxxxxoptions.setM5xxup35bvxxxxxxxxxxpurpose35("c$88.90");
      yrxxch511xhhxxhxxxxxoptions.setM6xxuv35bvxxxxxxxxxxvalue35("");
      yrxxch511xhhxxhxxxxxoptions.setM7xxuo36bvxxxxxxxxxxoptions36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM8xxup36bvxxxxxxxxxxpurpose36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM9xxuv36bvxxxxxxxxxxvalue36("");
      yrxxch511xhhxxhxxxxxoptions.setN1xxuo37bvxxxxxxxxxxoptions37("High");
      yrxxch511xhhxxhxxxxxoptions.setN2xxup37bvxxxxxxxxxxpurpose37("High");
      yrxxch511xhhxxhxxxxxoptions.setN3xxuv37bvxxxxxxxxxxvalue37("");
      yrxxch511xhhxxhxxxxxoptions.setN4xxuo38bvxxxxxxxxxxoptions38("S");
      yrxxch511xhhxxhxxxxxoptions.setN5xxup38bvxxxxxxxxxxpurpose38("System Admin");
      yrxxch511xhhxxhxxxxxoptions.setN6xxuv38bvxxxxxxxxxxvalue38("");
      yrxxch511xhhxxhxxxxxoptions.setN7xxuo39bvxxxxxxxxxxoptions39("H");
      yrxxch511xhhxxhxxxxxoptions.setN8xxup39bvxxxxxxxxxxpurpose39("High");
      yrxxch511xhhxxhxxxxxoptions.setN9xxuv39bvxxxxxxxxxxvalue39("");
      yrxxch511xhhxxhxxxxxoptions.setO1xxuo40bvxxxxxxxxxxoptions40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO2xxup40bvxxxxxxxxxxpurpose40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO3xxuv40bvxxxxxxxxxxvalue40("");
      yrxxch511xhhxxhxxxxxoptions.setO4xxuo41bvxxxxxxxxxxoptions41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO5xxup41bvxxxxxxxxxxpurpose41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO6xxuv41bvxxxxxxxxxxvalue41("");
      yrxxch511xhhxxhxxxxxoptions.setO7xxuo42bvxxxxxxxxxxoptions42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO8xxup42bvxxxxxxxxxxpurpose42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO9xxuv42bvxxxxxxxxxxvalue42("");
      yrxxch511xhhxxhxxxxxoptions.setP1xxuo43bvxxxxxxxxxxoptions43("New");
      yrxxch511xhhxxhxxxxxoptions.setP2xxup43bvxxxxxxxxxxpurpose43("New");
      yrxxch511xhhxxhxxxxxoptions.setP3xxuv43bvxxxxxxxxxxvalue43("");
      yrxxch511xhhxxhxxxxxoptions.setP4xxuo44bvxxxxxxxxxxoptions44("");
      yrxxch511xhhxxhxxxxxoptions.setP5xxup44bvxxxxxxxxxxpurpose44("");
      yrxxch511xhhxxhxxxxxoptions.setP6xxuv44bvxxxxxxxxxxvalue44("");
      yrxxch511xhhxxhxxxxxoptions.setP7xxuo45bvxxxxxxxxxxoptions45("D");
      yrxxch511xhhxxhxxxxxoptions.setP8xxup45bvxxxxxxxxxxpurpose45("");
      yrxxch511xhhxxhxxxxxoptions.setP9xxuv45bvxxxxxxxxxxvalue45("");
      yrxxch511xhhxxhxxxxxoptions.setQ1xxuo46bvxxxxxxxxxxoptions46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ2xxup46bvxxxxxxxxxxpurpose46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ3xxuv46bvxxxxxxxxxxvalue46("");
      yrxxch511xhhxxhxxxxxoptions.setQ4xxuo47bvxxxxxxxxxxoptions47("04");
      yrxxch511xhhxxhxxxxxoptions.setQ5xxup47bvxxxxxxxxxxpurpose47("04");
      yrxxch511xhhxxhxxxxxoptions.setQ6xxuv47bvxxxxxxxxxxvalue47("");
      yrxxch511xhhxxhxxxxxoptions.setQ7xxuo48bvxxxxxxxxxxoptions48("");
      yrxxch511xhhxxhxxxxxoptions.setQ8xxup48bvxxxxxxxxxxpurpose48("");
      yrxxch511xhhxxhxxxxxoptions.setQ9xxuv48bvxxxxxxxxxxvalue48("");
      yrxxch511xhhxxhxxxxxoptions.setR1xxuo49bvxxxxxxxxxxoptions49("employee");
      yrxxch511xhhxxhxxxxxoptions.setR2xxup49bvxxxxxxxxxxpurpose49("Employee Data");
      yrxxch511xhhxxhxxxxxoptions.setR3xxuv49bvxxxxxxxxxxvalue49("");
      yrxxch511xhhxxhxxxxxoptions.setR4xxuo50bvxxxxxxxxxxoptions50("");
      yrxxch511xhhxxhxxxxxoptions.setR5xxup50bvxxxxxxxxxxpurpose50("");
      yrxxch511xhhxxhxxxxxoptions.setR6xxuv50bvxxxxxxxxxxvalue50("");
      yrxxch511xhhxxhxxxxxoptions.setR7xxuo51bvxxxxxxxxxxoptions51("");
      yrxxch511xhhxxhxxxxxoptions.setR8xxup51bvxxxxxxxxxxpurpose51("");
      yrxxch511xhhxxhxxxxxoptions.setR9xxuv51bvxxxxxxxxxxvalue51("");
      yrxxch511xhhxxhxxxxxoptions.setS1xxuo52bvxxxxxxxxxxoptions52("");
      yrxxch511xhhxxhxxxxxoptions.setS2xxup52bvxxxxxxxxxxpurpose52("");
      yrxxch511xhhxxhxxxxxoptions.setS3xxuv52bvxxxxxxxxxxvalue52("");
      yrxxch511xhhxxhxxxxxoptions.setS4xxuo53bvxxxxxxxxxxoptions53("");
      yrxxch511xhhxxhxxxxxoptions.setS5xxup53bvxxxxxxxxxxpurpose53("");
      yrxxch511xhhxxhxxxxxoptions.setS6xxuv53bvxxxxxxxxxxvalue53("");

      yrxxch511xhhxxhxxxxxoptions.setS7xxuo54bvxxxxxxxxxxoptions54("");
      yrxxch511xhhxxhxxxxxoptions.setS8xxup54bvxxxxxxxxxxpurpose54("");
      yrxxch511xhhxxhxxxxxoptions.setS9xxuv54bvxxxxxxxxxxvalue54("");
      yrxxch511xhhxxhxxxxxoptions.setT1xxuo55bvxxxxxxxxxxoptions55("");
      yrxxch511xhhxxhxxxxxoptions.setT2xxup55bvxxxxxxxxxxpurpose55("");
      yrxxch511xhhxxhxxxxxoptions.setT3xxuv55bvxxxxxxxxxxvalue55("");
      yrxxch511xhhxxhxxxxxoptions.setT4xxuo56bvxxxxxxxxxxoptions56("");
      yrxxch511xhhxxhxxxxxoptions.setT5xxup56bvxxxxxxxxxxpurpose56("");
      yrxxch511xhhxxhxxxxxoptions.setT6xxuv56bvxxxxxxxxxxvalue56("");
      yrxxch511xhhxxhxxxxxoptions.setT7xxuo57bvxxxxxxxxxxoptions57("");
      yrxxch511xhhxxhxxxxxoptions.setT8xxup57bvxxxxxxxxxxpurpose57("");
      yrxxch511xhhxxhxxxxxoptions.setT9xxuv57bvxxxxxxxxxxvalue57("");
      yrxxch511xhhxxhxxxxxoptions.setU1xxuo58bvxxxxxxxxxxoptions58("");
      yrxxch511xhhxxhxxxxxoptions.setU2xxup58bvxxxxxxxxxxpurpose58("");
      yrxxch511xhhxxhxxxxxoptions.setU3xxuv58bvxxxxxxxxxxvalue58("");
      yrxxch511xhhxxhxxxxxoptions.setU4xxuo59bvxxxxxxxxxxoptions59("");
      yrxxch511xhhxxhxxxxxoptions.setU5xxup59bvxxxxxxxxxxpurpose59("");
      yrxxch511xhhxxhxxxxxoptions.setU6xxuv59bvxxxxxxxxxxvalue59("");
      yrxxch511xhhxxhxxxxxoptions.setU7xxuo60bvxxxxxxxxxxoptions60("");
      yrxxch511xhhxxhxxxxxoptions.setU8xxup60bvxxxxxxxxxxpurpose60("");
      yrxxch511xhhxxhxxxxxoptions.setU9xxuv60bvxxxxxxxxxxvalue60("");
      yrxxch511xhhxxhxxxxxoptions.setV1xxuo61bvxxxxxxxxxxoptions61("");
      yrxxch511xhhxxhxxxxxoptions.setV2xxup61bvxxxxxxxxxxpurpose61("");
      yrxxch511xhhxxhxxxxxoptions.setV3xxuv61bvxxxxxxxxxxvalue61("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptionsHome.persist(client);

      yrxxch511xhhxxhxxxxxoptionsHome.clearInstance();
      yrxxch511xhhxxhxxxxxoptions=yrxxch511xhhxxhxxxxxoptionsHome.getInstance();
      yrxxch511xhhxxhxxxxxoptions.setA0xxukcxbvxxxxxxxxxxrow("38");
      yrxxch511xhhxxhxxxxxoptions.setB1xxuo01bvxxxxxxxxxxoptions01("R");
      yrxxch511xhhxxhxxxxxoptions.setB2xxup01bvxxxxxxxxxxpurpose01("Retained Earning");
      yrxxch511xhhxxhxxxxxoptions.setB3xxuv01bvxxxxxxxxxxvalue01("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptions.setB4xxuo02bvxxxxxxxxxxoptions02("S");
      yrxxch511xhhxxhxxxxxoptions.setB5xxup02bvxxxxxxxxxxpurpose02("Subheader");
      yrxxch511xhhxxhxxxxxoptions.setB6xxuv02bvxxxxxxxxxxvalue02("");
      yrxxch511xhhxxhxxxxxoptions.setB7xxuo03bvxxxxxxxxxxoptions03("P");
      yrxxch511xhhxxhxxxxxoptions.setB8xxup03bvxxxxxxxxxxpurpose03("Payable");
      yrxxch511xhhxxhxxxxxoptions.setB9xxuv03bvxxxxxxxxxxvalue03("");
      yrxxch511xhhxxhxxxxxoptions.setC1xxuo04bvxxxxxxxxxxoptions04("");
      yrxxch511xhhxxhxxxxxoptions.setC2xxup04bvxxxxxxxxxxpurpose04("");
      yrxxch511xhhxxhxxxxxoptions.setC3xxuv04bvxxxxxxxxxxvalue04("");
      yrxxch511xhhxxhxxxxxoptions.setC4xxuo05bvxxxxxxxxxxoptions05("");
      yrxxch511xhhxxhxxxxxoptions.setC5xxup05bvxxxxxxxxxxpurpose05("");
      yrxxch511xhhxxhxxxxxoptions.setC6xxuv05bvxxxxxxxxxxvalue05("");
      yrxxch511xhhxxhxxxxxoptions.setC7xxuo06bvxxxxxxxxxxoptions06("");
      yrxxch511xhhxxhxxxxxoptions.setC8xxup06bvxxxxxxxxxxpurpose06("");
      yrxxch511xhhxxhxxxxxoptions.setC9xxuv06bvxxxxxxxxxxvalue06("");
      yrxxch511xhhxxhxxxxxoptions.setD1xxuo07bvxxxxxxxxxxoptions07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD2xxup07bvxxxxxxxxxxpurpose07("9:15");
      yrxxch511xhhxxhxxxxxoptions.setD3xxuv07bvxxxxxxxxxxvalue07("");
      yrxxch511xhhxxhxxxxxoptions.setD4xxuo08bvxxxxxxxxxxoptions08("H");
      yrxxch511xhhxxhxxxxxoptions.setD5xxup08bvxxxxxxxxxxpurpose08("High");
      yrxxch511xhhxxhxxxxxoptions.setD6xxuv08bvxxxxxxxxxxvalue08("");
      yrxxch511xhhxxhxxxxxoptions.setD7xxuo09bvxxxxxxxxxxoptions09("30");
      yrxxch511xhhxxhxxxxxoptions.setD8xxup09bvxxxxxxxxxxpurpose09("-30 days");
      yrxxch511xhhxxhxxxxxoptions.setD9xxuv09bvxxxxxxxxxxvalue09("");
      yrxxch511xhhxxhxxxxxoptions.setE1xxuo10bvxxxxxxxxxxoptions10("cash");
      yrxxch511xhhxxhxxxxxoptions.setE2xxup10bvxxxxxxxxxxpurpose10("-cash");
      yrxxch511xhhxxhxxxxxoptions.setE3xxuv10bvxxxxxxxxxxvalue10("");
      yrxxch511xhhxxhxxxxxoptions.setE4xxuo11bvxxxxxxxxxxoptions11("Montreal");
      yrxxch511xhhxxhxxxxxoptions.setE5xxup11bvxxxxxxxxxxpurpose11("Toronto");
      yrxxch511xhhxxhxxxxxoptions.setE6xxuv11bvxxxxxxxxxxvalue11("ca=Montreal; us=Boston");
      yrxxch511xhhxxhxxxxxoptions.setE7xxuo12bvxxxxxxxxxxoptions12("QE");
      yrxxch511xhhxxhxxxxxoptions.setE8xxup12bvxxxxxxxxxxpurpose12("Quebec");
      yrxxch511xhhxxhxxxxxoptions.setE9xxuv12bvxxxxxxxxxxvalue12("ca=QE us=CA");
      yrxxch511xhhxxhxxxxxoptions.setF1xxuo13bvxxxxxxxxxxoptions13("");
      yrxxch511xhhxxhxxxxxoptions.setF2xxup13bvxxxxxxxxxxpurpose13("");
      yrxxch511xhhxxhxxxxxoptions.setF3xxuv13bvxxxxxxxxxxvalue13("");
      yrxxch511xhhxxhxxxxxoptions.setF4xxuo14bvxxxxxxxxxxoptions14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF5xxup14bvxxxxxxxxxxpurpose14("M4L3Z8");
      yrxxch511xhhxxhxxxxxoptions.setF6xxuv14bvxxxxxxxxxxvalue14("ca=M4L3Z8 us=10003 in=70003");
      yrxxch511xhhxxhxxxxxoptions.setF7xxuo15bvxxxxxxxxxxoptions15("Y");
      yrxxch511xhhxxhxxxxxoptions.setF8xxup15bvxxxxxxxxxxpurpose15("Yes");
      yrxxch511xhhxxhxxxxxoptions.setF9xxuv15bvxxxxxxxxxxvalue15("");
      yrxxch511xhhxxhxxxxxoptions.setG1xxuo16bvxxxxxxxxxxoptions16("SI-L*");
      yrxxch511xhhxxhxxxxxoptions.setG2xxup16bvxxxxxxxxxxpurpose16("Shopping-SubCategories");
      yrxxch511xhhxxhxxxxxoptions.setG3xxuv16bvxxxxxxxxxxvalue16("");
      yrxxch511xhhxxhxxxxxoptions.setG4xxuo17bvxxxxxxxxxxoptions17("?");
      yrxxch511xhhxxhxxxxxoptions.setG5xxup17bvxxxxxxxxxxpurpose17("?");
      yrxxch511xhhxxhxxxxxoptions.setG6xxuv17bvxxxxxxxxxxvalue17("");
      yrxxch511xhhxxhxxxxxoptions.setG7xxuo18bvxxxxxxxxxxoptions18("AH");
      yrxxch511xhhxxhxxxxxoptions.setG8xxup18bvxxxxxxxxxxpurpose18("Hourly");
      yrxxch511xhhxxhxxxxxoptions.setG9xxuv18bvxxxxxxxxxxvalue18("s=89");
      yrxxch511xhhxxhxxxxxoptions.setH1xxuo19bvxxxxxxxxxxoptions19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH2xxup19bvxxxxxxxxxxpurpose19("192.168.1.101");
      yrxxch511xhhxxhxxxxxoptions.setH3xxuv19bvxxxxxxxxxxvalue19("");
      yrxxch511xhhxxhxxxxxoptions.setH4xxuo20bvxxxxxxxxxxoptions20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH5xxup20bvxxxxxxxxxxpurpose20("64.26.160.88");
      yrxxch511xhhxxhxxxxxoptions.setH6xxuv20bvxxxxxxxxxxvalue20("");
      yrxxch511xhhxxhxxxxxoptions.setH7xxuo21bvxxxxxxxxxxoptions21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH8xxup21bvxxxxxxxxxxpurpose21("Mr");
      yrxxch511xhhxxhxxxxxoptions.setH9xxuv21bvxxxxxxxxxxvalue21("");
      yrxxch511xhhxxhxxxxxoptions.setI1xxuo22bvxxxxxxxxxxoptions22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI2xxup22bvxxxxxxxxxxpurpose22("Manager");
      yrxxch511xhhxxhxxxxxoptions.setI3xxuv22bvxxxxxxxxxxvalue22("");
      yrxxch511xhhxxhxxxxxoptions.setI4xxuo23bvxxxxxxxxxxoptions23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI5xxup23bvxxxxxxxxxxpurpose23("www."+client+".com");
      yrxxch511xhhxxhxxxxxoptions.setI6xxuv23bvxxxxxxxxxxvalue23("");
      yrxxch511xhhxxhxxxxxoptions.setI7xxuo24bvxxxxxxxxxxoptions24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI8xxup24bvxxxxxxxxxxpurpose24(" ");
      yrxxch511xhhxxhxxxxxoptions.setI9xxuv24bvxxxxxxxxxxvalue24("");
      yrxxch511xhhxxhxxxxxoptions.setJ1xxuo25bvxxxxxxxxxxoptions25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ2xxup25bvxxxxxxxxxxpurpose25("10.64.1.1");
      yrxxch511xhhxxhxxxxxoptions.setJ3xxuv25bvxxxxxxxxxxvalue25("");
      yrxxch511xhhxxhxxxxxoptions.setJ4xxuo26bvxxxxxxxxxxoptions26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ5xxup26bvxxxxxxxxxxpurpose26("X Mas");
      yrxxch511xhhxxhxxxxxoptions.setJ6xxuv26bvxxxxxxxxxxvalue26("");
      yrxxch511xhhxxhxxxxxoptions.setJ7xxuo27bvxxxxxxxxxxoptions27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ8xxup27bvxxxxxxxxxxpurpose27("555-555-5555");
      yrxxch511xhhxxhxxxxxoptions.setJ9xxuv27bvxxxxxxxxxxvalue27("");
      yrxxch511xhhxxhxxxxxoptions.setK1xxuo28bvxxxxxxxxxxoptions28("PF");
      yrxxch511xhhxxhxxxxxoptions.setK2xxup28bvxxxxxxxxxxpurpose28("Persons-Family");
      yrxxch511xhhxxhxxxxxoptions.setK3xxuv28bvxxxxxxxxxxvalue28("");
      yrxxch511xhhxxhxxxxxoptions.setK4xxuo29bvxxxxxxxxxxoptions29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK5xxup29bvxxxxxxxxxxpurpose29("Corp-Small");
      yrxxch511xhhxxhxxxxxoptions.setK6xxuv29bvxxxxxxxxxxvalue29("");
      yrxxch511xhhxxhxxxxxoptions.setK7xxuo30bvxxxxxxxxxxoptions30("EM");
      yrxxch511xhhxxhxxxxxoptions.setK8xxup30bvxxxxxxxxxxpurpose30("EMail");
      yrxxch511xhhxxhxxxxxoptions.setK9xxuv30bvxxxxxxxxxxvalue30("");
      yrxxch511xhhxxhxxxxxoptions.setL1xxuo31bvxxxxxxxxxxoptions31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL2xxup31bvxxxxxxxxxxpurpose31("1st Floor");
      yrxxch511xhhxxhxxxxxoptions.setL3xxuv31bvxxxxxxxxxxvalue31("");
      yrxxch511xhhxxhxxxxxoptions.setL4xxuo32bvxxxxxxxxxxoptions32("Room 107");
      yrxxch511xhhxxhxxxxxoptions.setL5xxup32bvxxxxxxxxxxpurpose32("Room 107");
      yrxxch511xhhxxhxxxxxoptions.setL6xxuv32bvxxxxxxxxxxvalue32("");
      yrxxch511xhhxxhxxxxxoptions.setL7xxuo33bvxxxxxxxxxxoptions33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL8xxup33bvxxxxxxxxxxpurpose33("Cabinet 304");
      yrxxch511xhhxxhxxxxxoptions.setL9xxuv33bvxxxxxxxxxxvalue33("");
      yrxxch511xhhxxhxxxxxoptions.setM1xxuo34bvxxxxxxxxxxoptions34("");
      yrxxch511xhhxxhxxxxxoptions.setM2xxup34bvxxxxxxxxxxpurpose34("");
      yrxxch511xhhxxhxxxxxoptions.setM3xxuv34bvxxxxxxxxxxvalue34("");
      yrxxch511xhhxxhxxxxxoptions.setM4xxuo35bvxxxxxxxxxxoptions35("Lunch Appontment");
      yrxxch511xhhxxhxxxxxoptions.setM5xxup35bvxxxxxxxxxxpurpose35("c$88.90");
      yrxxch511xhhxxhxxxxxoptions.setM6xxuv35bvxxxxxxxxxxvalue35("");
      yrxxch511xhhxxhxxxxxoptions.setM7xxuo36bvxxxxxxxxxxoptions36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM8xxup36bvxxxxxxxxxxpurpose36("Admin");
      yrxxch511xhhxxhxxxxxoptions.setM9xxuv36bvxxxxxxxxxxvalue36("");
      yrxxch511xhhxxhxxxxxoptions.setN1xxuo37bvxxxxxxxxxxoptions37("High");
      yrxxch511xhhxxhxxxxxoptions.setN2xxup37bvxxxxxxxxxxpurpose37("High");
      yrxxch511xhhxxhxxxxxoptions.setN3xxuv37bvxxxxxxxxxxvalue37("");
      yrxxch511xhhxxhxxxxxoptions.setN4xxuo38bvxxxxxxxxxxoptions38("S");
      yrxxch511xhhxxhxxxxxoptions.setN5xxup38bvxxxxxxxxxxpurpose38("System Admin");
      yrxxch511xhhxxhxxxxxoptions.setN6xxuv38bvxxxxxxxxxxvalue38("");
      yrxxch511xhhxxhxxxxxoptions.setN7xxuo39bvxxxxxxxxxxoptions39("H");
      yrxxch511xhhxxhxxxxxoptions.setN8xxup39bvxxxxxxxxxxpurpose39("High");
      yrxxch511xhhxxhxxxxxoptions.setN9xxuv39bvxxxxxxxxxxvalue39("");
      yrxxch511xhhxxhxxxxxoptions.setO1xxuo40bvxxxxxxxxxxoptions40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO2xxup40bvxxxxxxxxxxpurpose40("Default");
      yrxxch511xhhxxhxxxxxoptions.setO3xxuv40bvxxxxxxxxxxvalue40("");
      yrxxch511xhhxxhxxxxxoptions.setO4xxuo41bvxxxxxxxxxxoptions41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO5xxup41bvxxxxxxxxxxpurpose41("me@mycompany.com");
      yrxxch511xhhxxhxxxxxoptions.setO6xxuv41bvxxxxxxxxxxvalue41("");
      yrxxch511xhhxxhxxxxxoptions.setO7xxuo42bvxxxxxxxxxxoptions42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO8xxup42bvxxxxxxxxxxpurpose42("Temp");
      yrxxch511xhhxxhxxxxxoptions.setO9xxuv42bvxxxxxxxxxxvalue42("");
      yrxxch511xhhxxhxxxxxoptions.setP1xxuo43bvxxxxxxxxxxoptions43("New");
      yrxxch511xhhxxhxxxxxoptions.setP2xxup43bvxxxxxxxxxxpurpose43("New");
      yrxxch511xhhxxhxxxxxoptions.setP3xxuv43bvxxxxxxxxxxvalue43("");
      yrxxch511xhhxxhxxxxxoptions.setP4xxuo44bvxxxxxxxxxxoptions44("");
      yrxxch511xhhxxhxxxxxoptions.setP5xxup44bvxxxxxxxxxxpurpose44("");
      yrxxch511xhhxxhxxxxxoptions.setP6xxuv44bvxxxxxxxxxxvalue44("");
      yrxxch511xhhxxhxxxxxoptions.setP7xxuo45bvxxxxxxxxxxoptions45("D");
      yrxxch511xhhxxhxxxxxoptions.setP8xxup45bvxxxxxxxxxxpurpose45("");
      yrxxch511xhhxxhxxxxxoptions.setP9xxuv45bvxxxxxxxxxxvalue45("");
      yrxxch511xhhxxhxxxxxoptions.setQ1xxuo46bvxxxxxxxxxxoptions46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ2xxup46bvxxxxxxxxxxpurpose46("Saturday");
      yrxxch511xhhxxhxxxxxoptions.setQ3xxuv46bvxxxxxxxxxxvalue46("");
      yrxxch511xhhxxhxxxxxoptions.setQ4xxuo47bvxxxxxxxxxxoptions47("04");
      yrxxch511xhhxxhxxxxxoptions.setQ5xxup47bvxxxxxxxxxxpurpose47("04");
      yrxxch511xhhxxhxxxxxoptions.setQ6xxuv47bvxxxxxxxxxxvalue47("");
      yrxxch511xhhxxhxxxxxoptions.setQ7xxuo48bvxxxxxxxxxxoptions48("");
      yrxxch511xhhxxhxxxxxoptions.setQ8xxup48bvxxxxxxxxxxpurpose48("");
      yrxxch511xhhxxhxxxxxoptions.setQ9xxuv48bvxxxxxxxxxxvalue48("");
      yrxxch511xhhxxhxxxxxoptions.setR1xxuo49bvxxxxxxxxxxoptions49("3R-TOP-MOST-C");
      yrxxch511xhhxxhxxxxxoptions.setR2xxup49bvxxxxxxxxxxpurpose49("TOP Above menu");
      yrxxch511xhhxxhxxxxxoptions.setR3xxuv49bvxxxxxxxxxxvalue49("");
      yrxxch511xhhxxhxxxxxoptions.setR4xxuo50bvxxxxxxxxxxoptions50("");
      yrxxch511xhhxxhxxxxxoptions.setR5xxup50bvxxxxxxxxxxpurpose50("");
      yrxxch511xhhxxhxxxxxoptions.setR6xxuv50bvxxxxxxxxxxvalue50("");
      yrxxch511xhhxxhxxxxxoptions.setR7xxuo51bvxxxxxxxxxxoptions51("");
      yrxxch511xhhxxhxxxxxoptions.setR8xxup51bvxxxxxxxxxxpurpose51("");
      yrxxch511xhhxxhxxxxxoptions.setR9xxuv51bvxxxxxxxxxxvalue51("");
      yrxxch511xhhxxhxxxxxoptions.setS1xxuo52bvxxxxxxxxxxoptions52("");
      yrxxch511xhhxxhxxxxxoptions.setS2xxup52bvxxxxxxxxxxpurpose52("");
      yrxxch511xhhxxhxxxxxoptions.setS3xxuv52bvxxxxxxxxxxvalue52("");
      yrxxch511xhhxxhxxxxxoptions.setS4xxuo53bvxxxxxxxxxxoptions53("");
      yrxxch511xhhxxhxxxxxoptions.setS5xxup53bvxxxxxxxxxxpurpose53("");
      yrxxch511xhhxxhxxxxxoptions.setS6xxuv53bvxxxxxxxxxxvalue53("");

      yrxxch511xhhxxhxxxxxoptions.setS7xxuo54bvxxxxxxxxxxoptions54("");
      yrxxch511xhhxxhxxxxxoptions.setS8xxup54bvxxxxxxxxxxpurpose54("");
      yrxxch511xhhxxhxxxxxoptions.setS9xxuv54bvxxxxxxxxxxvalue54("");
      yrxxch511xhhxxhxxxxxoptions.setT1xxuo55bvxxxxxxxxxxoptions55("");
      yrxxch511xhhxxhxxxxxoptions.setT2xxup55bvxxxxxxxxxxpurpose55("");
      yrxxch511xhhxxhxxxxxoptions.setT3xxuv55bvxxxxxxxxxxvalue55("");
      yrxxch511xhhxxhxxxxxoptions.setT4xxuo56bvxxxxxxxxxxoptions56("");
      yrxxch511xhhxxhxxxxxoptions.setT5xxup56bvxxxxxxxxxxpurpose56("");
      yrxxch511xhhxxhxxxxxoptions.setT6xxuv56bvxxxxxxxxxxvalue56("");
      yrxxch511xhhxxhxxxxxoptions.setT7xxuo57bvxxxxxxxxxxoptions57("");
      yrxxch511xhhxxhxxxxxoptions.setT8xxup57bvxxxxxxxxxxpurpose57("");
      yrxxch511xhhxxhxxxxxoptions.setT9xxuv57bvxxxxxxxxxxvalue57("");
      yrxxch511xhhxxhxxxxxoptions.setU1xxuo58bvxxxxxxxxxxoptions58("");
      yrxxch511xhhxxhxxxxxoptions.setU2xxup58bvxxxxxxxxxxpurpose58("");
      yrxxch511xhhxxhxxxxxoptions.setU3xxuv58bvxxxxxxxxxxvalue58("");
      yrxxch511xhhxxhxxxxxoptions.setU4xxuo59bvxxxxxxxxxxoptions59("");
      yrxxch511xhhxxhxxxxxoptions.setU5xxup59bvxxxxxxxxxxpurpose59("");
      yrxxch511xhhxxhxxxxxoptions.setU6xxuv59bvxxxxxxxxxxvalue59("");
      yrxxch511xhhxxhxxxxxoptions.setU7xxuo60bvxxxxxxxxxxoptions60("");
      yrxxch511xhhxxhxxxxxoptions.setU8xxup60bvxxxxxxxxxxpurpose60("");
      yrxxch511xhhxxhxxxxxoptions.setU9xxuv60bvxxxxxxxxxxvalue60("");
      yrxxch511xhhxxhxxxxxoptions.setV1xxuo61bvxxxxxxxxxxoptions61("");
      yrxxch511xhhxxhxxxxxoptions.setV2xxup61bvxxxxxxxxxxpurpose61("");
      yrxxch511xhhxxhxxxxxoptions.setV3xxuv61bvxxxxxxxxxxvalue61("");
      yrxxch511xhhxxhxxxxxoptions.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yrxxch511xhhxxhxxxxxoptionsHome.persist(client);
      } catch (Exception e) {
			//log.severe("Error persisting options"+ e);
			 //FacesMessages.add(FacesMessage.SEVERITY_INFO,
				//	"options initialize failed: " + e.getMessage());
        bcontinue=false;
        return;
      }
        bcontinue=true;
        return;

     }


           
     public boolean matchCustomerNCouponByEmail(String email,String couponName){
      // in do register() add logic to add as a new customer in raaspi ie new site admin will be a raaspi customer
      // check if email used matches with one as raaspi customer and its coupon code (rmailaddr) matches with
      // one in raaspi rate1f, as used.


      return true;
     }

     public void copyDefaultsToOwner2(String client) {
      // 64k limit to method size , remove unnecessary code and split ie call copyOptionsDefaultsToOwner2
      // called by sqladmin/emailreadytoactivate and use owner2code
      // Also by r3restclient quickregister/openAuth orSiteCreate/openAuth as routes get created
      // if client record does not exist it means copydefaults may have partially completed and client was not created
      // since back out works on per txn
      // check re begin txn
      // each account.persist will call accountTotalsRollUp(account) which will update the roll up accounts
      // we need to set picked to false before persist, if multiple calls to persist are involved. picked is used to decide
      // whether to persist or update if calls come via save from xhtml

           yxxxch522xhhxxhxxxxxclient=null;
           List<Yxxxch522xhhxxhxxxxxclient> results =  entityManager
           .createQuery(
	"select cc from Yxxxch522xhhxxhxxxxxclient cc where cc.  zzxxu2oxxhxxxxxxxxxxowner2=:p ")
	.setParameter("p", client)
	.getResultList();
            if(!results.isEmpty()){
               yxxxch522xhhxxhxxxxxclient = results.get(0);
            }
      if (yxxxch522xhhxxhxxxxxclient == null) {
          //FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
          //FacesMessage.SEVERITY_INFO,bundle.getString("setup")+ " "+bundle.getString("for")+ " "+client+" "+bundle.getString("not")+" "+bundle.getString("done")+", "+bundle.getString("setup")+" "+bundle.getString("with")+" "+bundle.getString("defaults"),""));
       bcontinue = false;
       log.info(bundle.getString("setup")+ " "+bundle.getString("for")+ " "+client+" "+bundle.getString("not")+" "+bundle.getString("done")+", "+bundle.getString("setup")+" "+bundle.getString("with")+" "+bundle.getString("defaults"));
      }
      // if email failed txn does not back out
      int deletedCount =  entityManager.createQuery("DELETE FROM Yxxxch643xwwqqhxxxxxacintegr a WHERE a.zzxxu2oxxhxxxxxxxxxxowner2 = :p").setParameter("p", client).executeUpdate();
      deletedCount =  entityManager.createQuery("DELETE FROM Yxxxch601xwwqqhxxxxxaccount a WHERE a.zzxxu2oxxhxxxxxxxxxxowner2 = :p").setParameter("p", client).executeUpdate();
      deletedCount =  entityManager.createQuery("DELETE FROM Yxxxch621xwwqqhxxxxxacperiod a WHERE a.zzxxu2oxxhxxxxxxxxxxowner2 = :p").setParameter("p", client).executeUpdate();
      deletedCount =  entityManager.createQuery("DELETE FROM Yxxxuq632xwwqqhxxxxxperioddates a WHERE a.zzxxu2oxxhxxxxxxxxxxowner2 = :p").setParameter("p", client).executeUpdate();
      //deletedCount =  entityManager.createQuery("DELETE FROM Yrxxch511xhhxxhxxxxxoptions a WHERE a.zzxxu2oxxhxxxxxxxxxxowner2 = :p").setParameter("p", client).executeUpdate();
      deletedCount =  entityManager.createQuery("DELETE FROM Fpxxfq1a5xwwqqhxxxxxitem a WHERE a.zzxxu2oxxhxxxxxxxxxxowner2 = :p").setParameter("p", client).executeUpdate();
      deletedCount =  entityManager.createQuery("DELETE FROM Fxxxuq188xwwqqhxxxxxactivity a WHERE a.zzxxu2oxxhxxxxxxxxxxowner2 = :p").setParameter("p", client).executeUpdate();
      deletedCount =  entityManager.createQuery("DELETE FROM Yxxxch5a1xhhxxhxxxxxtruefalse a WHERE a.zzxxu2oxxhxxxxxxxxxxowner2 = :p").setParameter("p", client).executeUpdate();
      //deletedCount =  entityManager.createQuery("DELETE FROM Yxxxuq1m1xwwqqqxxxxxclobdata a WHERE a.zzxxu2oxxhxxxxxxxxxxowner2 = :p").setParameter("p", client).executeUpdate();
      deletedCount =  entityManager.createQuery("DELETE FROM Yxxxuq1l1xwwqqhxxxxxresource_bundle a WHERE a.zzxxu2oxxhxxxxxxxxxxowner2 = :p").setParameter("p", client).executeUpdate();
      deletedCount =  entityManager.createQuery("DELETE FROM Fpxxfq1a5xwwqqhxxxxxitem a WHERE a.zzxxu2oxxhxxxxxxxxxxowner2 = :p").setParameter("p", client).executeUpdate();
      deletedCount =  entityManager.createQuery("DELETE FROM Yxxxuq591xwwqqhxxxxxrate1f a WHERE a.zzxxu2oxxhxxxxxxxxxxowner2 = :p").setParameter("p", client).executeUpdate();
      // added rate1f  added item type AD-D and AD-M adj for deliv and misc charge
      //deletedCount =  entityManager.createQuery("DELETE FROM Fxxxuq1bhxwwqqhxxxxxusagebyperiods a WHERE a.zzxxu2oxxhxxxxxxxxxxowner2 = :p").setParameter("p", client).executeUpdate();
      // createclientregister created vististat so dont delete
     // create one default resource bundle entry for  tenant as convenience and avoid initial confusion
     if (yxxxuq1l1xwwqqhxxxxxresource_bundle == null) {
     yxxxuq1l1xwwqqhxxxxxresource_bundle=yxxxuq1l1xwwqqhxxxxxresource_bundleHome.getInstance();
     }
      // default bundle needed before creating a new message resource
      yxxxuq1l1xwwqqhxxxxxresource_bundle.setA0xxukrdbvxxxxxxxxxxname("m");
      yxxxuq1l1xwwqqhxxxxxresource_bundle.setA1xxuxxxbvxxxxxxxxxxlanguage("en");
      yxxxuq1l1xwwqqhxxxxxresource_bundle.setA1xxuxxxbvxxxxxxxxxxcountry("");
      yxxxuq1l1xwwqqhxxxxxresource_bundle.setA1xxuxxxbvxxxxxxxxxxvariant("");
      yxxxuq1l1xwwqqhxxxxxresource_bundle.setZ3xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxuq1l1xwwqqhxxxxxresource_bundle.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxuq1l1xwwqqhxxxxxresource_bundleHome.persist(client);
      yxxxuq1l1xwwqqhxxxxxresource_bundleHome.clearInstance();

      if (yxxxuq1r1xwwqqhxxxxxresourceli == null) {
       yxxxuq1r1xwwqqhxxxxxresourceli=yxxxuq1r1xwwqqhxxxxxresourceHome.getInstance();	
      }

//seo page titles for each client which can be customized, no need for default/SYSTEM
      yxxxuq1r1xwwqqhxxxxxresourceli=yxxxuq1r1xwwqqhxxxxxresourceHome.getInstance();
      yxxxuq1r1xwwqqhxxxxxresourceli.setA1xxuxxxbvxxxxxxxxxxvalue("Home page "+client);
      yxxxuq1r1xwwqqhxxxxxresourceli.setA0xxukrdbvxxxxxxxxxxkey("Home_Page_title");
      yxxxuq1r1xwwqqhxxxxxresourceli.setYxxxuq1l1xwwqqhxxxxxresource_bundle(yxxxuq1l1xwwqqhxxxxxresource_bundle);
      yxxxuq1r1xwwqqhxxxxxresourceli.setZ3xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxuq1r1xwwqqhxxxxxresourceli.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxuq1r1xwwqqhxxxxxresourceHome.persist(client);
      this.clearInstance();
      yxxxuq1r1xwwqqhxxxxxresourceli=yxxxuq1r1xwwqqhxxxxxresourceHome.getInstance();
      yxxxuq1r1xwwqqhxxxxxresourceli.setA1xxuxxxbvxxxxxxxxxxvalue("About "+client);
      yxxxuq1r1xwwqqhxxxxxresourceli.setA0xxukrdbvxxxxxxxxxxkey("About-1_page_title");
      yxxxuq1r1xwwqqhxxxxxresourceli.setYxxxuq1l1xwwqqhxxxxxresource_bundle(yxxxuq1l1xwwqqhxxxxxresource_bundle);
      yxxxuq1r1xwwqqhxxxxxresourceli.setZ3xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxuq1r1xwwqqhxxxxxresourceli.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxuq1r1xwwqqhxxxxxresourceHome.persist(client);
      this.clearInstance();
      yxxxuq1r1xwwqqhxxxxxresourceli=yxxxuq1r1xwwqqhxxxxxresourceHome.getInstance();
      yxxxuq1r1xwwqqhxxxxxresourceli.setA1xxuxxxbvxxxxxxxxxxvalue("About "+client);
      yxxxuq1r1xwwqqhxxxxxresourceli.setA0xxukrdbvxxxxxxxxxxkey("About-2_page_title");
      yxxxuq1r1xwwqqhxxxxxresourceli.setYxxxuq1l1xwwqqhxxxxxresource_bundle(yxxxuq1l1xwwqqhxxxxxresource_bundle);
      yxxxuq1r1xwwqqhxxxxxresourceli.setZ3xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxuq1r1xwwqqhxxxxxresourceli.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxuq1r1xwwqqhxxxxxresourceHome.persist(client);
      this.clearInstance();
      yxxxuq1r1xwwqqhxxxxxresourceli=yxxxuq1r1xwwqqhxxxxxresourceHome.getInstance();
      yxxxuq1r1xwwqqhxxxxxresourceli.setA1xxuxxxbvxxxxxxxxxxvalue("About "+client);
      yxxxuq1r1xwwqqhxxxxxresourceli.setA0xxukrdbvxxxxxxxxxxkey("About-3_page_title");
      yxxxuq1r1xwwqqhxxxxxresourceli.setYxxxuq1l1xwwqqhxxxxxresource_bundle(yxxxuq1l1xwwqqhxxxxxresource_bundle);
      yxxxuq1r1xwwqqhxxxxxresourceli.setZ3xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxuq1r1xwwqqhxxxxxresourceli.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxuq1r1xwwqqhxxxxxresourceHome.persist(client);
      this.clearInstance();
      yxxxuq1r1xwwqqhxxxxxresourceli=yxxxuq1r1xwwqqhxxxxxresourceHome.getInstance();
      yxxxuq1r1xwwqqhxxxxxresourceli.setA1xxuxxxbvxxxxxxxxxxvalue("Product "+client);
      yxxxuq1r1xwwqqhxxxxxresourceli.setA0xxukrdbvxxxxxxxxxxkey("Product-1_page_title");
      yxxxuq1r1xwwqqhxxxxxresourceli.setYxxxuq1l1xwwqqhxxxxxresource_bundle(yxxxuq1l1xwwqqhxxxxxresource_bundle);
      yxxxuq1r1xwwqqhxxxxxresourceli.setZ3xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxuq1r1xwwqqhxxxxxresourceli.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxuq1r1xwwqqhxxxxxresourceHome.persist(client);
      this.clearInstance();
      yxxxuq1r1xwwqqhxxxxxresourceli=yxxxuq1r1xwwqqhxxxxxresourceHome.getInstance();
      yxxxuq1r1xwwqqhxxxxxresourceli.setA1xxuxxxbvxxxxxxxxxxvalue("Product "+client);
      yxxxuq1r1xwwqqhxxxxxresourceli.setA0xxukrdbvxxxxxxxxxxkey("Product-2_page_title");
      yxxxuq1r1xwwqqhxxxxxresourceli.setYxxxuq1l1xwwqqhxxxxxresource_bundle(yxxxuq1l1xwwqqhxxxxxresource_bundle);
      yxxxuq1r1xwwqqhxxxxxresourceli.setZ3xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxuq1r1xwwqqhxxxxxresourceli.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxuq1r1xwwqqhxxxxxresourceHome.persist(client);
      this.clearInstance();
      yxxxuq1r1xwwqqhxxxxxresourceli=yxxxuq1r1xwwqqhxxxxxresourceHome.getInstance();
      yxxxuq1r1xwwqqhxxxxxresourceli.setA1xxuxxxbvxxxxxxxxxxvalue("Product "+client);
      yxxxuq1r1xwwqqhxxxxxresourceli.setA0xxukrdbvxxxxxxxxxxkey("Product-3_page_title");
      yxxxuq1r1xwwqqhxxxxxresourceli.setYxxxuq1l1xwwqqhxxxxxresource_bundle(yxxxuq1l1xwwqqhxxxxxresource_bundle);
      yxxxuq1r1xwwqqhxxxxxresourceli.setZ3xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxuq1r1xwwqqhxxxxxresourceli.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxuq1r1xwwqqhxxxxxresourceHome.persist(client);
      this.clearInstance();
      yxxxuq1r1xwwqqhxxxxxresourceli=yxxxuq1r1xwwqqhxxxxxresourceHome.getInstance();
      yxxxuq1r1xwwqqhxxxxxresourceli.setA1xxuxxxbvxxxxxxxxxxvalue("News "+client);
      yxxxuq1r1xwwqqhxxxxxresourceli.setA0xxukrdbvxxxxxxxxxxkey("News-1_page_title");
      yxxxuq1r1xwwqqhxxxxxresourceli.setYxxxuq1l1xwwqqhxxxxxresource_bundle(yxxxuq1l1xwwqqhxxxxxresource_bundle);
      yxxxuq1r1xwwqqhxxxxxresourceli.setZ3xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxuq1r1xwwqqhxxxxxresourceli.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxuq1r1xwwqqhxxxxxresourceHome.persist(client);
      this.clearInstance();
      yxxxuq1r1xwwqqhxxxxxresourceli=yxxxuq1r1xwwqqhxxxxxresourceHome.getInstance();
      yxxxuq1r1xwwqqhxxxxxresourceli.setA1xxuxxxbvxxxxxxxxxxvalue("News "+client);
      yxxxuq1r1xwwqqhxxxxxresourceli.setA0xxukrdbvxxxxxxxxxxkey("News-2_page_title");
      yxxxuq1r1xwwqqhxxxxxresourceli.setYxxxuq1l1xwwqqhxxxxxresource_bundle(yxxxuq1l1xwwqqhxxxxxresource_bundle);
      yxxxuq1r1xwwqqhxxxxxresourceli.setZ3xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxuq1r1xwwqqhxxxxxresourceli.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxuq1r1xwwqqhxxxxxresourceHome.persist(client);
      this.clearInstance();
      yxxxuq1r1xwwqqhxxxxxresourceli=yxxxuq1r1xwwqqhxxxxxresourceHome.getInstance();
      yxxxuq1r1xwwqqhxxxxxresourceli.setA1xxuxxxbvxxxxxxxxxxvalue("News "+client);
      yxxxuq1r1xwwqqhxxxxxresourceli.setA0xxukrdbvxxxxxxxxxxkey("News-3_page_title");
      yxxxuq1r1xwwqqhxxxxxresourceli.setYxxxuq1l1xwwqqhxxxxxresource_bundle(yxxxuq1l1xwwqqhxxxxxresource_bundle);
      yxxxuq1r1xwwqqhxxxxxresourceli.setZ3xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxuq1r1xwwqqhxxxxxresourceli.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxuq1r1xwwqqhxxxxxresourceHome.persist(client);
      this.clearInstance();
      yxxxuq1r1xwwqqhxxxxxresourceli=yxxxuq1r1xwwqqhxxxxxresourceHome.getInstance();
      yxxxuq1r1xwwqqhxxxxxresourceli.setA1xxuxxxbvxxxxxxxxxxvalue("Cantact Us "+client);
      yxxxuq1r1xwwqqhxxxxxresourceli.setA0xxukrdbvxxxxxxxxxxkey("ContactUs-1_page_title");
      yxxxuq1r1xwwqqhxxxxxresourceli.setYxxxuq1l1xwwqqhxxxxxresource_bundle(yxxxuq1l1xwwqqhxxxxxresource_bundle);
      yxxxuq1r1xwwqqhxxxxxresourceli.setZ3xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxuq1r1xwwqqhxxxxxresourceli.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxuq1r1xwwqqhxxxxxresourceHome.persist(client);
      this.clearInstance();
      yxxxuq1r1xwwqqhxxxxxresourceli=yxxxuq1r1xwwqqhxxxxxresourceHome.getInstance();
      yxxxuq1r1xwwqqhxxxxxresourceli.setA1xxuxxxbvxxxxxxxxxxvalue("Contact Us "+client);
      yxxxuq1r1xwwqqhxxxxxresourceli.setA0xxukrdbvxxxxxxxxxxkey("ContactUs-2_page_title");
      yxxxuq1r1xwwqqhxxxxxresourceli.setYxxxuq1l1xwwqqhxxxxxresource_bundle(yxxxuq1l1xwwqqhxxxxxresource_bundle);
      yxxxuq1r1xwwqqhxxxxxresourceli.setZ3xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxuq1r1xwwqqhxxxxxresourceli.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxuq1r1xwwqqhxxxxxresourceHome.persist(client);
      this.clearInstance();
      yxxxuq1r1xwwqqhxxxxxresourceli=yxxxuq1r1xwwqqhxxxxxresourceHome.getInstance();
      yxxxuq1r1xwwqqhxxxxxresourceli.setA1xxuxxxbvxxxxxxxxxxvalue("Contact Us "+client);
      yxxxuq1r1xwwqqhxxxxxresourceli.setA0xxukrdbvxxxxxxxxxxkey("ContactUs-3_page_title");
      yxxxuq1r1xwwqqhxxxxxresourceli.setYxxxuq1l1xwwqqhxxxxxresource_bundle(yxxxuq1l1xwwqqhxxxxxresource_bundle);
      yxxxuq1r1xwwqqhxxxxxresourceli.setZ3xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxuq1r1xwwqqhxxxxxresourceli.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxuq1r1xwwqqhxxxxxresourceHome.persist(client);
      this.clearInstance();


      if (yxxxch601xwwqqhxxxxxaccount == null) {
       yxxxch601xwwqqhxxxxxaccount=yxxxch601xwwqqhxxxxxaccountHome.getInstance();
      }
      yxxxch601xwwqqhxxxxxaccount.setA0xxukwxbvxxxxxxxxxxaccount("1000");
      yxxxch601xwwqqhxxxxxaccount.setA1xxuzsxbvxxxxxxxxxxdescript("ASSET");
      yxxxch601xwwqqhxxxxxaccount.setB1xxuwgxbv01xxxxxxxxcategory("A");
      yxxxch601xwwqqhxxxxxaccount.setB2xxuwtxbv02xxxxxxxxtype("H");
      yxxxch601xwwqqhxxxxxaccount.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch601xwwqqhxxxxxaccount.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch601xwwqqhxxxxxaccountHome.setPicked(false);
      yxxxch601xwwqqhxxxxxaccountHome.persist(client);
      yxxxch601xwwqqhxxxxxaccountHome.clearInstance();
      yxxxch601xwwqqhxxxxxaccount=yxxxch601xwwqqhxxxxxaccountHome.getInstance();
      yxxxch601xwwqqhxxxxxaccount.setA0xxukwxbvxxxxxxxxxxaccount("1002");
      yxxxch601xwwqqhxxxxxaccount.setA1xxuzsxbvxxxxxxxxxxdescript("CURRENT ASSETS");
      yxxxch601xwwqqhxxxxxaccount.setB1xxuwgxbv01xxxxxxxxcategory("A");
      yxxxch601xwwqqhxxxxxaccount.setB2xxuwtxbv02xxxxxxxxtype("B");
      yxxxch601xwwqqhxxxxxaccount.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch601xwwqqhxxxxxaccount.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch601xwwqqhxxxxxaccountHome.persist(client);
      yxxxch601xwwqqhxxxxxaccountHome.clearInstance();
      yxxxch601xwwqqhxxxxxaccount=yxxxch601xwwqqhxxxxxaccountHome.getInstance();
      yxxxch601xwwqqhxxxxxaccount.setA0xxukwxbvxxxxxxxxxxaccount("1005");
      yxxxch601xwwqqhxxxxxaccount.setA1xxuzsxbvxxxxxxxxxxdescript("BANK A");
      yxxxch601xwwqqhxxxxxaccount.setB1xxuwgxbv01xxxxxxxxcategory("A");
      yxxxch601xwwqqhxxxxxaccount.setB2xxuwtxbv02xxxxxxxxtype("D");
      yxxxch601xwwqqhxxxxxaccount.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch601xwwqqhxxxxxaccount.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch601xwwqqhxxxxxaccountHome.persist(client);
      yxxxch601xwwqqhxxxxxaccountHome.clearInstance();
      yxxxch601xwwqqhxxxxxaccount=yxxxch601xwwqqhxxxxxaccountHome.getInstance();
      yxxxch601xwwqqhxxxxxaccount.setA0xxukwxbvxxxxxxxxxxaccount("1006");
      yxxxch601xwwqqhxxxxxaccount.setA1xxuzsxbvxxxxxxxxxxdescript("BANK B");
      yxxxch601xwwqqhxxxxxaccount.setB1xxuwgxbv01xxxxxxxxcategory("A");
      yxxxch601xwwqqhxxxxxaccount.setB2xxuwtxbv02xxxxxxxxtype("D");
      yxxxch601xwwqqhxxxxxaccount.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch601xwwqqhxxxxxaccount.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch601xwwqqhxxxxxaccountHome.persist(client);
      yxxxch601xwwqqhxxxxxaccountHome.clearInstance();
      yxxxch601xwwqqhxxxxxaccount=yxxxch601xwwqqhxxxxxaccountHome.getInstance();
      yxxxch601xwwqqhxxxxxaccount.setA0xxukwxbvxxxxxxxxxxaccount("1007");
      yxxxch601xwwqqhxxxxxaccount.setA1xxuzsxbvxxxxxxxxxxdescript("CASH IN HAND");
      yxxxch601xwwqqhxxxxxaccount.setB1xxuwgxbv01xxxxxxxxcategory("A");
      yxxxch601xwwqqhxxxxxaccount.setB2xxuwtxbv02xxxxxxxxtype("D");
      yxxxch601xwwqqhxxxxxaccount.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch601xwwqqhxxxxxaccount.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch601xwwqqhxxxxxaccountHome.persist(client);
      yxxxch601xwwqqhxxxxxaccountHome.clearInstance();
      yxxxch601xwwqqhxxxxxaccount=yxxxch601xwwqqhxxxxxaccountHome.getInstance();
      yxxxch601xwwqqhxxxxxaccount.setA0xxukwxbvxxxxxxxxxxaccount("1010");
      yxxxch601xwwqqhxxxxxaccount.setA1xxuzsxbvxxxxxxxxxxdescript("Cash Total");
      yxxxch601xwwqqhxxxxxaccount.setB1xxuwgxbv01xxxxxxxxcategory("A");
      yxxxch601xwwqqhxxxxxaccount.setB2xxuwtxbv02xxxxxxxxtype("S");
      yxxxch601xwwqqhxxxxxaccount.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch601xwwqqhxxxxxaccount.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch601xwwqqhxxxxxaccountHome.persist(client);
      yxxxch601xwwqqhxxxxxaccountHome.clearInstance();
      yxxxch601xwwqqhxxxxxaccount=yxxxch601xwwqqhxxxxxaccountHome.getInstance();
      yxxxch601xwwqqhxxxxxaccount.setA0xxukwxbvxxxxxxxxxxaccount("1015");// inv asset a/c
      yxxxch601xwwqqhxxxxxaccount.setA1xxuzsxbvxxxxxxxxxxdescript("Inventory Asset");
      yxxxch601xwwqqhxxxxxaccount.setB1xxuwgxbv01xxxxxxxxcategory("A");
      yxxxch601xwwqqhxxxxxaccount.setB2xxuwtxbv02xxxxxxxxtype("D");
      yxxxch601xwwqqhxxxxxaccount.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch601xwwqqhxxxxxaccount.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch601xwwqqhxxxxxaccountHome.persist(client);

      yxxxch601xwwqqhxxxxxaccountHome.clearInstance();
      yxxxch601xwwqqhxxxxxaccount=yxxxch601xwwqqhxxxxxaccountHome.getInstance();
      yxxxch601xwwqqhxxxxxaccount.setA0xxukwxbvxxxxxxxxxxaccount("1019");
      yxxxch601xwwqqhxxxxxaccount.setA1xxuzsxbvxxxxxxxxxxdescript("receivable");
      yxxxch601xwwqqhxxxxxaccount.setB1xxuwgxbv01xxxxxxxxcategory("A");
      yxxxch601xwwqqhxxxxxaccount.setB2xxuwtxbv02xxxxxxxxtype("B");
      yxxxch601xwwqqhxxxxxaccount.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch601xwwqqhxxxxxaccount.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch601xwwqqhxxxxxaccountHome.persist(client);
      yxxxch601xwwqqhxxxxxaccountHome.clearInstance();
      yxxxch601xwwqqhxxxxxaccount=yxxxch601xwwqqhxxxxxaccountHome.getInstance();
      yxxxch601xwwqqhxxxxxaccount.setA0xxukwxbvxxxxxxxxxxaccount("1020");
      yxxxch601xwwqqhxxxxxaccount.setA1xxuzsxbvxxxxxxxxxxdescript("Account receivable");
      yxxxch601xwwqqhxxxxxaccount.setB1xxuwgxbv01xxxxxxxxcategory("A");
      yxxxch601xwwqqhxxxxxaccount.setB2xxuwtxbv02xxxxxxxxtype("D");
      yxxxch601xwwqqhxxxxxaccount.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch601xwwqqhxxxxxaccount.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch601xwwqqhxxxxxaccountHome.persist(client);
      yxxxch601xwwqqhxxxxxaccountHome.clearInstance();
      yxxxch601xwwqqhxxxxxaccount=yxxxch601xwwqqhxxxxxaccountHome.getInstance();
      yxxxch601xwwqqhxxxxxaccount.setA0xxukwxbvxxxxxxxxxxaccount("1022");
      yxxxch601xwwqqhxxxxxaccount.setA1xxuzsxbvxxxxxxxxxxdescript("Advances receivable");
      yxxxch601xwwqqhxxxxxaccount.setB1xxuwgxbv01xxxxxxxxcategory("A");
      yxxxch601xwwqqhxxxxxaccount.setB2xxuwtxbv02xxxxxxxxtype("D");
      yxxxch601xwwqqhxxxxxaccount.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch601xwwqqhxxxxxaccount.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch601xwwqqhxxxxxaccountHome.persist(client);
      yxxxch601xwwqqhxxxxxaccountHome.clearInstance();
      yxxxch601xwwqqhxxxxxaccount=yxxxch601xwwqqhxxxxxaccountHome.getInstance();
      yxxxch601xwwqqhxxxxxaccount.setA0xxukwxbvxxxxxxxxxxaccount("1025");
      yxxxch601xwwqqhxxxxxaccount.setA1xxuzsxbvxxxxxxxxxxdescript("Receivables:Total");
      yxxxch601xwwqqhxxxxxaccount.setB1xxuwgxbv01xxxxxxxxcategory("A");
      yxxxch601xwwqqhxxxxxaccount.setB2xxuwtxbv02xxxxxxxxtype("S");
      yxxxch601xwwqqhxxxxxaccount.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch601xwwqqhxxxxxaccount.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch601xwwqqhxxxxxaccountHome.persist(client);

      yxxxch601xwwqqhxxxxxaccountHome.clearInstance();
      yxxxch601xwwqqhxxxxxaccount=yxxxch601xwwqqhxxxxxaccountHome.getInstance();
      yxxxch601xwwqqhxxxxxaccount.setA0xxukwxbvxxxxxxxxxxaccount("1030");
      yxxxch601xwwqqhxxxxxaccount.setA1xxuzsxbvxxxxxxxxxxdescript("Advances and Investment");
      yxxxch601xwwqqhxxxxxaccount.setB1xxuwgxbv01xxxxxxxxcategory("A");
      yxxxch601xwwqqhxxxxxaccount.setB2xxuwtxbv02xxxxxxxxtype("B");
      yxxxch601xwwqqhxxxxxaccount.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch601xwwqqhxxxxxaccount.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch601xwwqqhxxxxxaccountHome.persist(client);
      yxxxch601xwwqqhxxxxxaccountHome.clearInstance();
      yxxxch601xwwqqhxxxxxaccount=yxxxch601xwwqqhxxxxxaccountHome.getInstance();
      yxxxch601xwwqqhxxxxxaccount.setA0xxukwxbvxxxxxxxxxxaccount("1031");
      yxxxch601xwwqqhxxxxxaccount.setA1xxuzsxbvxxxxxxxxxxdescript("Share Holder Advance");
      yxxxch601xwwqqhxxxxxaccount.setB1xxuwgxbv01xxxxxxxxcategory("A");
      yxxxch601xwwqqhxxxxxaccount.setB2xxuwtxbv02xxxxxxxxtype("D");
      yxxxch601xwwqqhxxxxxaccount.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch601xwwqqhxxxxxaccount.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch601xwwqqhxxxxxaccountHome.persist(client);
      yxxxch601xwwqqhxxxxxaccountHome.clearInstance();
      yxxxch601xwwqqhxxxxxaccount=yxxxch601xwwqqhxxxxxaccountHome.getInstance();
      yxxxch601xwwqqhxxxxxaccount.setA0xxukwxbvxxxxxxxxxxaccount("1033");
      yxxxch601xwwqqhxxxxxaccount.setA1xxuzsxbvxxxxxxxxxxdescript("Investmet Savings");
      yxxxch601xwwqqhxxxxxaccount.setB1xxuwgxbv01xxxxxxxxcategory("A");
      yxxxch601xwwqqhxxxxxaccount.setB2xxuwtxbv02xxxxxxxxtype("D");
      yxxxch601xwwqqhxxxxxaccount.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch601xwwqqhxxxxxaccount.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch601xwwqqhxxxxxaccountHome.persist(client);
      yxxxch601xwwqqhxxxxxaccountHome.clearInstance();
      yxxxch601xwwqqhxxxxxaccount=yxxxch601xwwqqhxxxxxaccountHome.getInstance();
      yxxxch601xwwqqhxxxxxaccount.setA0xxukwxbvxxxxxxxxxxaccount("1036");
      yxxxch601xwwqqhxxxxxaccount.setA1xxuzsxbvxxxxxxxxxxdescript("PrePaid Expense");
      yxxxch601xwwqqhxxxxxaccount.setB1xxuwgxbv01xxxxxxxxcategory("A");
      yxxxch601xwwqqhxxxxxaccount.setB2xxuwtxbv02xxxxxxxxtype("D");
      yxxxch601xwwqqhxxxxxaccount.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch601xwwqqhxxxxxaccount.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch601xwwqqhxxxxxaccountHome.persist(client);
      yxxxch601xwwqqhxxxxxaccountHome.clearInstance();
      yxxxch601xwwqqhxxxxxaccount=yxxxch601xwwqqhxxxxxaccountHome.getInstance();
      yxxxch601xwwqqhxxxxxaccount.setA0xxukwxbvxxxxxxxxxxaccount("1038");
      yxxxch601xwwqqhxxxxxaccount.setA1xxuzsxbvxxxxxxxxxxdescript("Advances and Investmet Total");
      yxxxch601xwwqqhxxxxxaccount.setB1xxuwgxbv01xxxxxxxxcategory("A");
      yxxxch601xwwqqhxxxxxaccount.setB2xxuwtxbv02xxxxxxxxtype("S");
      yxxxch601xwwqqhxxxxxaccount.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch601xwwqqhxxxxxaccount.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch601xwwqqhxxxxxaccountHome.persist(client);

      yxxxch601xwwqqhxxxxxaccountHome.clearInstance();
      yxxxch601xwwqqhxxxxxaccount=yxxxch601xwwqqhxxxxxaccountHome.getInstance();
      yxxxch601xwwqqhxxxxxaccount.setA0xxukwxbvxxxxxxxxxxaccount("1040");
      yxxxch601xwwqqhxxxxxaccount.setA1xxuzsxbvxxxxxxxxxxdescript("TOTAL CURRENT ASSETS");
      yxxxch601xwwqqhxxxxxaccount.setB1xxuwgxbv01xxxxxxxxcategory("A");
      yxxxch601xwwqqhxxxxxaccount.setB2xxuwtxbv02xxxxxxxxtype("S");
      yxxxch601xwwqqhxxxxxaccount.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch601xwwqqhxxxxxaccount.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch601xwwqqhxxxxxaccountHome.persist(client);

      yxxxch601xwwqqhxxxxxaccountHome.clearInstance();
      yxxxch601xwwqqhxxxxxaccount=yxxxch601xwwqqhxxxxxaccountHome.getInstance();
      yxxxch601xwwqqhxxxxxaccount.setA0xxukwxbvxxxxxxxxxxaccount("1050");
      yxxxch601xwwqqhxxxxxaccount.setA1xxuzsxbvxxxxxxxxxxdescript("INVENTORY ASSETS");
      yxxxch601xwwqqhxxxxxaccount.setB1xxuwgxbv01xxxxxxxxcategory("A");
      yxxxch601xwwqqhxxxxxaccount.setB2xxuwtxbv02xxxxxxxxtype("B");
      yxxxch601xwwqqhxxxxxaccount.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch601xwwqqhxxxxxaccount.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch601xwwqqhxxxxxaccountHome.persist(client);
      yxxxch601xwwqqhxxxxxaccountHome.clearInstance();
      yxxxch601xwwqqhxxxxxaccount=yxxxch601xwwqqhxxxxxaccountHome.getInstance();
      yxxxch601xwwqqhxxxxxaccount.setA0xxukwxbvxxxxxxxxxxaccount("1052");
      yxxxch601xwwqqhxxxxxaccount.setA1xxuzsxbvxxxxxxxxxxdescript("Sales Equipments and Supplies");
      yxxxch601xwwqqhxxxxxaccount.setB1xxuwgxbv01xxxxxxxxcategory("A");
      yxxxch601xwwqqhxxxxxaccount.setB2xxuwtxbv02xxxxxxxxtype("D");
      yxxxch601xwwqqhxxxxxaccount.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch601xwwqqhxxxxxaccount.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch601xwwqqhxxxxxaccountHome.persist(client);
      yxxxch601xwwqqhxxxxxaccountHome.clearInstance();
      yxxxch601xwwqqhxxxxxaccount=yxxxch601xwwqqhxxxxxaccountHome.getInstance();
      yxxxch601xwwqqhxxxxxaccount.setA0xxukwxbvxxxxxxxxxxaccount("1054");
      yxxxch601xwwqqhxxxxxaccount.setA1xxuzsxbvxxxxxxxxxxdescript("Parts");
      yxxxch601xwwqqhxxxxxaccount.setB1xxuwgxbv01xxxxxxxxcategory("A");
      yxxxch601xwwqqhxxxxxaccount.setB2xxuwtxbv02xxxxxxxxtype("D");
      yxxxch601xwwqqhxxxxxaccount.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch601xwwqqhxxxxxaccount.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch601xwwqqhxxxxxaccountHome.persist(client);
      yxxxch601xwwqqhxxxxxaccountHome.clearInstance();
      yxxxch601xwwqqhxxxxxaccount=yxxxch601xwwqqhxxxxxaccountHome.getInstance();
      yxxxch601xwwqqhxxxxxaccount.setA0xxukwxbvxxxxxxxxxxaccount("1056");
      yxxxch601xwwqqhxxxxxaccount.setA1xxuzsxbvxxxxxxxxxxdescript("Rental Equipments");
      yxxxch601xwwqqhxxxxxaccount.setB1xxuwgxbv01xxxxxxxxcategory("A");
      yxxxch601xwwqqhxxxxxaccount.setB2xxuwtxbv02xxxxxxxxtype("D");
      yxxxch601xwwqqhxxxxxaccount.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch601xwwqqhxxxxxaccount.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch601xwwqqhxxxxxaccountHome.persist(client);
      yxxxch601xwwqqhxxxxxaccountHome.clearInstance();
      yxxxch601xwwqqhxxxxxaccount=yxxxch601xwwqqhxxxxxaccountHome.getInstance();
      yxxxch601xwwqqhxxxxxaccount.setA0xxukwxbvxxxxxxxxxxaccount("1057");
      yxxxch601xwwqqhxxxxxaccount.setA1xxuzsxbvxxxxxxxxxxdescript("Sales Items Others");
      yxxxch601xwwqqhxxxxxaccount.setB1xxuwgxbv01xxxxxxxxcategory("A");
      yxxxch601xwwqqhxxxxxaccount.setB2xxuwtxbv02xxxxxxxxtype("D");
      yxxxch601xwwqqhxxxxxaccount.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch601xwwqqhxxxxxaccount.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch601xwwqqhxxxxxaccountHome.persist(client);
      yxxxch601xwwqqhxxxxxaccountHome.clearInstance();
      yxxxch601xwwqqhxxxxxaccount=yxxxch601xwwqqhxxxxxaccountHome.getInstance();
      yxxxch601xwwqqhxxxxxaccount.setA0xxukwxbvxxxxxxxxxxaccount("1058");
      yxxxch601xwwqqhxxxxxaccount.setA1xxuzsxbvxxxxxxxxxxdescript("Total Inventory Asset");
      yxxxch601xwwqqhxxxxxaccount.setB1xxuwgxbv01xxxxxxxxcategory("A");
      yxxxch601xwwqqhxxxxxaccount.setB2xxuwtxbv02xxxxxxxxtype("S");
      yxxxch601xwwqqhxxxxxaccount.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch601xwwqqhxxxxxaccount.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch601xwwqqhxxxxxaccountHome.persist(client);
      yxxxch601xwwqqhxxxxxaccountHome.clearInstance();
      yxxxch601xwwqqhxxxxxaccount=yxxxch601xwwqqhxxxxxaccountHome.getInstance();
      yxxxch601xwwqqhxxxxxaccount.setA0xxukwxbvxxxxxxxxxxaccount("1060");
      yxxxch601xwwqqhxxxxxaccount.setA1xxuzsxbvxxxxxxxxxxdescript("FIXED ASSETS");
      yxxxch601xwwqqhxxxxxaccount.setB1xxuwgxbv01xxxxxxxxcategory("A");
      yxxxch601xwwqqhxxxxxaccount.setB2xxuwtxbv02xxxxxxxxtype("B");
      yxxxch601xwwqqhxxxxxaccount.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch601xwwqqhxxxxxaccount.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch601xwwqqhxxxxxaccountHome.persist(client);
      yxxxch601xwwqqhxxxxxaccountHome.clearInstance();
      yxxxch601xwwqqhxxxxxaccount=yxxxch601xwwqqhxxxxxaccountHome.getInstance();
      yxxxch601xwwqqhxxxxxaccount.setA0xxukwxbvxxxxxxxxxxaccount("1062");
      yxxxch601xwwqqhxxxxxaccount.setA1xxuzsxbvxxxxxxxxxxdescript("Vehicles");
      yxxxch601xwwqqhxxxxxaccount.setB1xxuwgxbv01xxxxxxxxcategory("A");
      yxxxch601xwwqqhxxxxxaccount.setB2xxuwtxbv02xxxxxxxxtype("D");
      yxxxch601xwwqqhxxxxxaccount.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch601xwwqqhxxxxxaccount.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch601xwwqqhxxxxxaccountHome.persist(client);
      yxxxch601xwwqqhxxxxxaccountHome.clearInstance();
      yxxxch601xwwqqhxxxxxaccount=yxxxch601xwwqqhxxxxxaccountHome.getInstance();
      yxxxch601xwwqqhxxxxxaccount.setA0xxukwxbvxxxxxxxxxxaccount("1070");
      yxxxch601xwwqqhxxxxxaccount.setA1xxuzsxbvxxxxxxxxxxdescript("FIXED ASSETS TOTAL");
      yxxxch601xwwqqhxxxxxaccount.setB1xxuwgxbv01xxxxxxxxcategory("A");
      yxxxch601xwwqqhxxxxxaccount.setB2xxuwtxbv02xxxxxxxxtype("S");
      yxxxch601xwwqqhxxxxxaccount.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch601xwwqqhxxxxxaccount.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch601xwwqqhxxxxxaccountHome.persist(client);


      yxxxch601xwwqqhxxxxxaccountHome.clearInstance();
      yxxxch601xwwqqhxxxxxaccount=yxxxch601xwwqqhxxxxxaccountHome.getInstance();
      yxxxch601xwwqqhxxxxxaccount.setA0xxukwxbvxxxxxxxxxxaccount("2005");
      yxxxch601xwwqqhxxxxxaccount.setA1xxuzsxbvxxxxxxxxxxdescript("Liability");
      yxxxch601xwwqqhxxxxxaccount.setB1xxuwgxbv01xxxxxxxxcategory("L");
      yxxxch601xwwqqhxxxxxaccount.setB2xxuwtxbv02xxxxxxxxtype("D");
      yxxxch601xwwqqhxxxxxaccount.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch601xwwqqhxxxxxaccount.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch601xwwqqhxxxxxaccountHome.persist(client);

      yxxxch601xwwqqhxxxxxaccountHome.clearInstance();
      yxxxch601xwwqqhxxxxxaccount=yxxxch601xwwqqhxxxxxaccountHome.getInstance();
      yxxxch601xwwqqhxxxxxaccount.setA0xxukwxbvxxxxxxxxxxaccount("2020");
      yxxxch601xwwqqhxxxxxaccount.setA1xxuzsxbvxxxxxxxxxxdescript("Liabilities");
      yxxxch601xwwqqhxxxxxaccount.setB1xxuwgxbv01xxxxxxxxcategory("L");
      yxxxch601xwwqqhxxxxxaccount.setB2xxuwtxbv02xxxxxxxxtype("B");
      yxxxch601xwwqqhxxxxxaccount.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch601xwwqqhxxxxxaccount.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch601xwwqqhxxxxxaccountHome.persist(client);
      yxxxch601xwwqqhxxxxxaccountHome.clearInstance();
      yxxxch601xwwqqhxxxxxaccount=yxxxch601xwwqqhxxxxxaccountHome.getInstance();
      yxxxch601xwwqqhxxxxxaccount.setA0xxukwxbvxxxxxxxxxxaccount("2023");
      yxxxch601xwwqqhxxxxxaccount.setA1xxuzsxbvxxxxxxxxxxdescript("Liability");
      yxxxch601xwwqqhxxxxxaccount.setB1xxuwgxbv01xxxxxxxxcategory("L");
      yxxxch601xwwqqhxxxxxaccount.setB2xxuwtxbv02xxxxxxxxtype("D");
      yxxxch601xwwqqhxxxxxaccount.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch601xwwqqhxxxxxaccount.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch601xwwqqhxxxxxaccountHome.persist(client);
      yxxxch601xwwqqhxxxxxaccountHome.clearInstance();
      yxxxch601xwwqqhxxxxxaccount=yxxxch601xwwqqhxxxxxaccountHome.getInstance();
      yxxxch601xwwqqhxxxxxaccount.setA0xxukwxbvxxxxxxxxxxaccount("2040");
      yxxxch601xwwqqhxxxxxaccount.setA1xxuzsxbvxxxxxxxxxxdescript("Tax1 Liability");
      yxxxch601xwwqqhxxxxxaccount.setB1xxuwgxbv01xxxxxxxxcategory("L");
      yxxxch601xwwqqhxxxxxaccount.setB2xxuwtxbv02xxxxxxxxtype("D");
      yxxxch601xwwqqhxxxxxaccount.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch601xwwqqhxxxxxaccount.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch601xwwqqhxxxxxaccountHome.persist(client);
      yxxxch601xwwqqhxxxxxaccountHome.clearInstance();
      yxxxch601xwwqqhxxxxxaccount=yxxxch601xwwqqhxxxxxaccountHome.getInstance();
      yxxxch601xwwqqhxxxxxaccount.setA0xxukwxbvxxxxxxxxxxaccount("2042");
      yxxxch601xwwqqhxxxxxaccount.setA1xxuzsxbvxxxxxxxxxxdescript("Tax2 Liability");
      yxxxch601xwwqqhxxxxxaccount.setB1xxuwgxbv01xxxxxxxxcategory("L");
      yxxxch601xwwqqhxxxxxaccount.setB2xxuwtxbv02xxxxxxxxtype("D");
      yxxxch601xwwqqhxxxxxaccount.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch601xwwqqhxxxxxaccount.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch601xwwqqhxxxxxaccountHome.persist(client);
      yxxxch601xwwqqhxxxxxaccountHome.clearInstance();
      yxxxch601xwwqqhxxxxxaccount=yxxxch601xwwqqhxxxxxaccountHome.getInstance();
      yxxxch601xwwqqhxxxxxaccount.setA0xxukwxbvxxxxxxxxxxaccount("2050");
      yxxxch601xwwqqhxxxxxaccount.setA1xxuzsxbvxxxxxxxxxxdescript("Liability Totals");
      yxxxch601xwwqqhxxxxxaccount.setB1xxuwgxbv01xxxxxxxxcategory("L");
      yxxxch601xwwqqhxxxxxaccount.setB2xxuwtxbv02xxxxxxxxtype("S");
      yxxxch601xwwqqhxxxxxaccount.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch601xwwqqhxxxxxaccount.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch601xwwqqhxxxxxaccountHome.persist(client);




      yxxxch601xwwqqhxxxxxaccountHome.clearInstance();
      yxxxch601xwwqqhxxxxxaccount=yxxxch601xwwqqhxxxxxaccountHome.getInstance();
      yxxxch601xwwqqhxxxxxaccount.setA0xxukwxbvxxxxxxxxxxaccount("3050");
      yxxxch601xwwqqhxxxxxaccount.setA1xxuzsxbvxxxxxxxxxxdescript("Equity");
      yxxxch601xwwqqhxxxxxaccount.setB1xxuwgxbv01xxxxxxxxcategory("QR");
      yxxxch601xwwqqhxxxxxaccount.setB2xxuwtxbv02xxxxxxxxtype("B");
      yxxxch601xwwqqhxxxxxaccount.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch601xwwqqhxxxxxaccount.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch601xwwqqhxxxxxaccountHome.persist(client);
      yxxxch601xwwqqhxxxxxaccountHome.clearInstance();
      yxxxch601xwwqqhxxxxxaccount=yxxxch601xwwqqhxxxxxaccountHome.getInstance();
      yxxxch601xwwqqhxxxxxaccount.setA0xxukwxbvxxxxxxxxxxaccount("3052");
      yxxxch601xwwqqhxxxxxaccount.setA1xxuzsxbvxxxxxxxxxxdescript("Retained Earning");
      yxxxch601xwwqqhxxxxxaccount.setB1xxuwgxbv01xxxxxxxxcategory("QR");
      yxxxch601xwwqqhxxxxxaccount.setB2xxuwtxbv02xxxxxxxxtype("D");
      yxxxch601xwwqqhxxxxxaccount.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch601xwwqqhxxxxxaccount.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch601xwwqqhxxxxxaccountHome.persist(client);

      yxxxch601xwwqqhxxxxxaccountHome.clearInstance();
      yxxxch601xwwqqhxxxxxaccount=yxxxch601xwwqqhxxxxxaccountHome.getInstance();
      yxxxch601xwwqqhxxxxxaccount.setA0xxukwxbvxxxxxxxxxxaccount("3053");
      yxxxch601xwwqqhxxxxxaccount.setA1xxuzsxbvxxxxxxxxxxdescript("Dividend");
      yxxxch601xwwqqhxxxxxaccount.setB1xxuwgxbv01xxxxxxxxcategory("QD");
      yxxxch601xwwqqhxxxxxaccount.setB2xxuwtxbv02xxxxxxxxtype("D");
      yxxxch601xwwqqhxxxxxaccount.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch601xwwqqhxxxxxaccount.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch601xwwqqhxxxxxaccountHome.persist(client);


      yxxxch601xwwqqhxxxxxaccountHome.clearInstance();
      yxxxch601xwwqqhxxxxxaccount=yxxxch601xwwqqhxxxxxaccountHome.getInstance();
      yxxxch601xwwqqhxxxxxaccount.setA0xxukwxbvxxxxxxxxxxaccount("3054");
      yxxxch601xwwqqhxxxxxaccount.setA1xxuzsxbvxxxxxxxxxxdescript("Current Earning");
      yxxxch601xwwqqhxxxxxaccount.setB1xxuwgxbv01xxxxxxxxcategory("QC");
      yxxxch601xwwqqhxxxxxaccount.setB2xxuwtxbv02xxxxxxxxtype("D");
      yxxxch601xwwqqhxxxxxaccount.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch601xwwqqhxxxxxaccount.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch601xwwqqhxxxxxaccountHome.persist(client);
      yxxxch601xwwqqhxxxxxaccountHome.clearInstance();
      yxxxch601xwwqqhxxxxxaccount=yxxxch601xwwqqhxxxxxaccountHome.getInstance();
      yxxxch601xwwqqhxxxxxaccount.setA0xxukwxbvxxxxxxxxxxaccount("3060");
      yxxxch601xwwqqhxxxxxaccount.setA1xxuzsxbvxxxxxxxxxxdescript("Equity Total");
      yxxxch601xwwqqhxxxxxaccount.setB1xxuwgxbv01xxxxxxxxcategory("QC");
      yxxxch601xwwqqhxxxxxaccount.setB2xxuwtxbv02xxxxxxxxtype("S");
      yxxxch601xwwqqhxxxxxaccount.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch601xwwqqhxxxxxaccount.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch601xwwqqhxxxxxaccountHome.persist(client);



      yxxxch601xwwqqhxxxxxaccountHome.clearInstance();
      yxxxch601xwwqqhxxxxxaccount=yxxxch601xwwqqhxxxxxaccountHome.getInstance();
      yxxxch601xwwqqhxxxxxaccount.setA0xxukwxbvxxxxxxxxxxaccount("4010");
      yxxxch601xwwqqhxxxxxaccount.setA1xxuzsxbvxxxxxxxxxxdescript("Sales/Service ");
      yxxxch601xwwqqhxxxxxaccount.setB1xxuwgxbv01xxxxxxxxcategory("I");
      yxxxch601xwwqqhxxxxxaccount.setB2xxuwtxbv02xxxxxxxxtype("B");
      yxxxch601xwwqqhxxxxxaccount.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch601xwwqqhxxxxxaccount.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch601xwwqqhxxxxxaccountHome.persist(client);
      yxxxch601xwwqqhxxxxxaccountHome.clearInstance();
      yxxxch601xwwqqhxxxxxaccount=yxxxch601xwwqqhxxxxxaccountHome.getInstance();
      yxxxch601xwwqqhxxxxxaccount.setA0xxukwxbvxxxxxxxxxxaccount("4012");
      yxxxch601xwwqqhxxxxxaccount.setA1xxuzsxbvxxxxxxxxxxdescript("Sales/Service Income");
      yxxxch601xwwqqhxxxxxaccount.setB1xxuwgxbv01xxxxxxxxcategory("I");
      yxxxch601xwwqqhxxxxxaccount.setB2xxuwtxbv02xxxxxxxxtype("D");
      yxxxch601xwwqqhxxxxxaccount.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch601xwwqqhxxxxxaccount.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch601xwwqqhxxxxxaccountHome.persist(client);
      yxxxch601xwwqqhxxxxxaccountHome.clearInstance();
      yxxxch601xwwqqhxxxxxaccount=yxxxch601xwwqqhxxxxxaccountHome.getInstance();
      yxxxch601xwwqqhxxxxxaccount.setA0xxukwxbvxxxxxxxxxxaccount("4014");
      yxxxch601xwwqqhxxxxxaccount.setA1xxuzsxbvxxxxxxxxxxdescript("Consulting Income");
      yxxxch601xwwqqhxxxxxaccount.setB1xxuwgxbv01xxxxxxxxcategory("I");
      yxxxch601xwwqqhxxxxxaccount.setB2xxuwtxbv02xxxxxxxxtype("D");
      yxxxch601xwwqqhxxxxxaccount.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch601xwwqqhxxxxxaccount.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch601xwwqqhxxxxxaccountHome.persist(client);
      yxxxch601xwwqqhxxxxxaccountHome.clearInstance();
      yxxxch601xwwqqhxxxxxaccount=yxxxch601xwwqqhxxxxxaccountHome.getInstance();
      yxxxch601xwwqqhxxxxxaccount.setA0xxukwxbvxxxxxxxxxxaccount("4020");
      yxxxch601xwwqqhxxxxxaccount.setA1xxuzsxbvxxxxxxxxxxdescript("Delivery Charge Income");
      yxxxch601xwwqqhxxxxxaccount.setB1xxuwgxbv01xxxxxxxxcategory("I");
      yxxxch601xwwqqhxxxxxaccount.setB2xxuwtxbv02xxxxxxxxtype("D");
      yxxxch601xwwqqhxxxxxaccount.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch601xwwqqhxxxxxaccount.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch601xwwqqhxxxxxaccountHome.persist(client);
      yxxxch601xwwqqhxxxxxaccountHome.clearInstance();
      yxxxch601xwwqqhxxxxxaccount=yxxxch601xwwqqhxxxxxaccountHome.getInstance();
      yxxxch601xwwqqhxxxxxaccount.setA0xxukwxbvxxxxxxxxxxaccount("4025");
      yxxxch601xwwqqhxxxxxaccount.setA1xxuzsxbvxxxxxxxxxxdescript("Misc Charge Income");
      yxxxch601xwwqqhxxxxxaccount.setB1xxuwgxbv01xxxxxxxxcategory("I");
      yxxxch601xwwqqhxxxxxaccount.setB2xxuwtxbv02xxxxxxxxtype("D");
      yxxxch601xwwqqhxxxxxaccount.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch601xwwqqhxxxxxaccount.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch601xwwqqhxxxxxaccountHome.persist(client);
      yxxxch601xwwqqhxxxxxaccountHome.clearInstance();
      yxxxch601xwwqqhxxxxxaccount=yxxxch601xwwqqhxxxxxaccountHome.getInstance();
      yxxxch601xwwqqhxxxxxaccount.setA0xxukwxbvxxxxxxxxxxaccount("4030");
      yxxxch601xwwqqhxxxxxaccount.setA1xxuzsxbvxxxxxxxxxxdescript("Sales/Service Total");
      yxxxch601xwwqqhxxxxxaccount.setB1xxuwgxbv01xxxxxxxxcategory("I");
      yxxxch601xwwqqhxxxxxaccount.setB2xxuwtxbv02xxxxxxxxtype("S");
      yxxxch601xwwqqhxxxxxaccount.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch601xwwqqhxxxxxaccount.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch601xwwqqhxxxxxaccountHome.persist(client);


      yxxxch601xwwqqhxxxxxaccountHome.clearInstance();
      yxxxch601xwwqqhxxxxxaccount=yxxxch601xwwqqhxxxxxaccountHome.getInstance();
      yxxxch601xwwqqhxxxxxaccount.setA0xxukwxbvxxxxxxxxxxaccount("5001");
      yxxxch601xwwqqhxxxxxaccount.setA1xxuzsxbvxxxxxxxxxxdescript("Expense");
      yxxxch601xwwqqhxxxxxaccount.setB1xxuwgxbv01xxxxxxxxcategory("E");
      yxxxch601xwwqqhxxxxxaccount.setB2xxuwtxbv02xxxxxxxxtype("B");
      yxxxch601xwwqqhxxxxxaccount.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch601xwwqqhxxxxxaccount.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch601xwwqqhxxxxxaccountHome.persist(client);

      yxxxch601xwwqqhxxxxxaccountHome.clearInstance();
      yxxxch601xwwqqhxxxxxaccount=yxxxch601xwwqqhxxxxxaccountHome.getInstance();
      yxxxch601xwwqqhxxxxxaccount.setA0xxukwxbvxxxxxxxxxxaccount("5005");
      yxxxch601xwwqqhxxxxxaccount.setA1xxuzsxbvxxxxxxxxxxdescript("Sales Cost and Expense");
      yxxxch601xwwqqhxxxxxaccount.setB1xxuwgxbv01xxxxxxxxcategory("E");
      yxxxch601xwwqqhxxxxxaccount.setB2xxuwtxbv02xxxxxxxxtype("D");
      yxxxch601xwwqqhxxxxxaccount.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch601xwwqqhxxxxxaccount.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch601xwwqqhxxxxxaccountHome.persist(client);
      yxxxch601xwwqqhxxxxxaccountHome.clearInstance();
      yxxxch601xwwqqhxxxxxaccount=yxxxch601xwwqqhxxxxxaccountHome.getInstance();
      yxxxch601xwwqqhxxxxxaccount.setA0xxukwxbvxxxxxxxxxxaccount("5007");
      yxxxch601xwwqqhxxxxxaccount.setA1xxuzsxbvxxxxxxxxxxdescript("Insurance Expense");
      yxxxch601xwwqqhxxxxxaccount.setB1xxuwgxbv01xxxxxxxxcategory("E");
      yxxxch601xwwqqhxxxxxaccount.setB2xxuwtxbv02xxxxxxxxtype("D");
      yxxxch601xwwqqhxxxxxaccount.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch601xwwqqhxxxxxaccount.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch601xwwqqhxxxxxaccountHome.persist(client);
      yxxxch601xwwqqhxxxxxaccountHome.clearInstance();
      yxxxch601xwwqqhxxxxxaccount=yxxxch601xwwqqhxxxxxaccountHome.getInstance();
      yxxxch601xwwqqhxxxxxaccount.setA0xxukwxbvxxxxxxxxxxaccount("5009");
      yxxxch601xwwqqhxxxxxaccount.setA1xxuzsxbvxxxxxxxxxxdescript("Travel Expense");
      yxxxch601xwwqqhxxxxxaccount.setB1xxuwgxbv01xxxxxxxxcategory("E");
      yxxxch601xwwqqhxxxxxaccount.setB2xxuwtxbv02xxxxxxxxtype("D");
      yxxxch601xwwqqhxxxxxaccount.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch601xwwqqhxxxxxaccount.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch601xwwqqhxxxxxaccountHome.persist(client);
      yxxxch601xwwqqhxxxxxaccountHome.clearInstance();
      yxxxch601xwwqqhxxxxxaccount=yxxxch601xwwqqhxxxxxaccountHome.getInstance();
      yxxxch601xwwqqhxxxxxaccount.setA0xxukwxbvxxxxxxxxxxaccount("5011");
      yxxxch601xwwqqhxxxxxaccount.setA1xxuzsxbvxxxxxxxxxxdescript("Management Fees");
      yxxxch601xwwqqhxxxxxaccount.setB1xxuwgxbv01xxxxxxxxcategory("E");
      yxxxch601xwwqqhxxxxxaccount.setB2xxuwtxbv02xxxxxxxxtype("D");
      yxxxch601xwwqqhxxxxxaccount.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch601xwwqqhxxxxxaccount.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch601xwwqqhxxxxxaccountHome.persist(client);
      yxxxch601xwwqqhxxxxxaccountHome.clearInstance();
      yxxxch601xwwqqhxxxxxaccount=yxxxch601xwwqqhxxxxxaccountHome.getInstance();
      yxxxch601xwwqqhxxxxxaccount.setA0xxukwxbvxxxxxxxxxxaccount("5013");
      yxxxch601xwwqqhxxxxxaccount.setA1xxuzsxbvxxxxxxxxxxdescript("Accounting Expense");
      yxxxch601xwwqqhxxxxxaccount.setB1xxuwgxbv01xxxxxxxxcategory("E");
      yxxxch601xwwqqhxxxxxaccount.setB2xxuwtxbv02xxxxxxxxtype("D");
      yxxxch601xwwqqhxxxxxaccount.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch601xwwqqhxxxxxaccount.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch601xwwqqhxxxxxaccountHome.persist(client);
      yxxxch601xwwqqhxxxxxaccountHome.clearInstance();
      yxxxch601xwwqqhxxxxxaccount=yxxxch601xwwqqhxxxxxaccountHome.getInstance();
      yxxxch601xwwqqhxxxxxaccount.setA0xxukwxbvxxxxxxxxxxaccount("5015");
      yxxxch601xwwqqhxxxxxaccount.setA1xxuzsxbvxxxxxxxxxxdescript("Banking Expense");
      yxxxch601xwwqqhxxxxxaccount.setB1xxuwgxbv01xxxxxxxxcategory("E");
      yxxxch601xwwqqhxxxxxaccount.setB2xxuwtxbv02xxxxxxxxtype("D");
      yxxxch601xwwqqhxxxxxaccount.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch601xwwqqhxxxxxaccount.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch601xwwqqhxxxxxaccountHome.persist(client);
      yxxxch601xwwqqhxxxxxaccountHome.clearInstance();
      yxxxch601xwwqqhxxxxxaccount=yxxxch601xwwqqhxxxxxaccountHome.getInstance();
      yxxxch601xwwqqhxxxxxaccount.setA0xxukwxbvxxxxxxxxxxaccount("5017");
      yxxxch601xwwqqhxxxxxaccount.setA1xxuzsxbvxxxxxxxxxxdescript("office Expense");
      yxxxch601xwwqqhxxxxxaccount.setB1xxuwgxbv01xxxxxxxxcategory("E");
      yxxxch601xwwqqhxxxxxaccount.setB2xxuwtxbv02xxxxxxxxtype("D");
      yxxxch601xwwqqhxxxxxaccount.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch601xwwqqhxxxxxaccount.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch601xwwqqhxxxxxaccountHome.persist(client);
      yxxxch601xwwqqhxxxxxaccountHome.clearInstance();
      yxxxch601xwwqqhxxxxxaccount=yxxxch601xwwqqhxxxxxaccountHome.getInstance();
      yxxxch601xwwqqhxxxxxaccount.setA0xxukwxbvxxxxxxxxxxaccount("5019");
      yxxxch601xwwqqhxxxxxaccount.setA1xxuzsxbvxxxxxxxxxxdescript("Auto Expense");
      yxxxch601xwwqqhxxxxxaccount.setB1xxuwgxbv01xxxxxxxxcategory("E");
      yxxxch601xwwqqhxxxxxaccount.setB2xxuwtxbv02xxxxxxxxtype("D");
      yxxxch601xwwqqhxxxxxaccount.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch601xwwqqhxxxxxaccount.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch601xwwqqhxxxxxaccountHome.persist(client);
      yxxxch601xwwqqhxxxxxaccountHome.clearInstance();
      yxxxch601xwwqqhxxxxxaccount=yxxxch601xwwqqhxxxxxaccountHome.getInstance();
      yxxxch601xwwqqhxxxxxaccount.setA0xxukwxbvxxxxxxxxxxaccount("5021");
      yxxxch601xwwqqhxxxxxaccount.setA1xxuzsxbvxxxxxxxxxxdescript("Delivery Expense");
      yxxxch601xwwqqhxxxxxaccount.setB1xxuwgxbv01xxxxxxxxcategory("E");
      yxxxch601xwwqqhxxxxxaccount.setB2xxuwtxbv02xxxxxxxxtype("D");
      yxxxch601xwwqqhxxxxxaccount.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch601xwwqqhxxxxxaccount.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch601xwwqqhxxxxxaccountHome.persist(client);
      yxxxch601xwwqqhxxxxxaccountHome.clearInstance();
      yxxxch601xwwqqhxxxxxaccount=yxxxch601xwwqqhxxxxxaccountHome.getInstance();
      yxxxch601xwwqqhxxxxxaccount.setA0xxukwxbvxxxxxxxxxxaccount("5023");
      yxxxch601xwwqqhxxxxxaccount.setA1xxuzsxbvxxxxxxxxxxdescript("Misc Expense");
      yxxxch601xwwqqhxxxxxaccount.setB1xxuwgxbv01xxxxxxxxcategory("E");
      yxxxch601xwwqqhxxxxxaccount.setB2xxuwtxbv02xxxxxxxxtype("D");
      yxxxch601xwwqqhxxxxxaccount.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch601xwwqqhxxxxxaccount.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch601xwwqqhxxxxxaccountHome.persist(client);


	if (yxxxch643xwwqqhxxxxxacintegr == null) {
	    yxxxch643xwwqqhxxxxxacintegr=yxxxch643xwwqqhxxxxxacintegrHome.getInstance();
	}
      accountn="3052";
      //checkAccount uses setId using creator's owner2Code which is not allowed in setId because it is not same as tenant owner2Code
      // under which 3052 was created
      temps=owner2Code;owner2Code=client; checkAccount();owner2Code=temps;
      yxxxch643xwwqqhxxxxxacintegr.setYxxxch601xwwqqhxxxxxaccount(yxxxch601xwwqqhxxxxxaccount);
      yxxxch643xwwqqhxxxxxacintegr.setA2xxukwmbvxxxxxxxxxxmoduleid("GL");
      yxxxch643xwwqqhxxxxxacintegr.setA3xxukw8bvxxxxxxxxxxusagecode("EAR");
      yxxxch643xwwqqhxxxxxacintegr.setA4xxukw9bvxxxxxxxxxxsetsid("DEFAULT");
      yxxxch643xwwqqhxxxxxacintegr.setC1xxuxxxbvxxxxxxxxxxusagedescr("Retained Eearning");
      yxxxch643xwwqqhxxxxxacintegr.setZ3xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch643xwwqqhxxxxxacintegr.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch643xwwqqhxxxxxacintegrHome.persist(client);
      yxxxch643xwwqqhxxxxxacintegrHome.clearInstance();
      yxxxch643xwwqqhxxxxxacintegr=yxxxch643xwwqqhxxxxxacintegrHome.getInstance();

      accountn="3053";
      temps=owner2Code;owner2Code=client; checkAccount();owner2Code=temps;
      yxxxch643xwwqqhxxxxxacintegr.setYxxxch601xwwqqhxxxxxaccount(yxxxch601xwwqqhxxxxxaccount);
      yxxxch643xwwqqhxxxxxacintegr.setA2xxukwmbvxxxxxxxxxxmoduleid("GL");
      yxxxch643xwwqqhxxxxxacintegr.setA3xxukw8bvxxxxxxxxxxusagecode("EAD");
      yxxxch643xwwqqhxxxxxacintegr.setA4xxukw9bvxxxxxxxxxxsetsid("DEFAULT");
      yxxxch643xwwqqhxxxxxacintegr.setC1xxuxxxbvxxxxxxxxxxusagedescr("Dividend");
      yxxxch643xwwqqhxxxxxacintegr.setZ3xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch643xwwqqhxxxxxacintegr.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch643xwwqqhxxxxxacintegrHome.persist(client);
      yxxxch643xwwqqhxxxxxacintegrHome.clearInstance();
      yxxxch643xwwqqhxxxxxacintegr=yxxxch643xwwqqhxxxxxacintegrHome.getInstance();

      accountn="3054";
      temps=owner2Code;owner2Code=client; checkAccount();owner2Code=temps;
      yxxxch643xwwqqhxxxxxacintegr.setYxxxch601xwwqqhxxxxxaccount(yxxxch601xwwqqhxxxxxaccount);
      yxxxch643xwwqqhxxxxxacintegr.setA2xxukwmbvxxxxxxxxxxmoduleid("GL");
      yxxxch643xwwqqhxxxxxacintegr.setA3xxukw8bvxxxxxxxxxxusagecode("EAC");
      yxxxch643xwwqqhxxxxxacintegr.setA4xxukw9bvxxxxxxxxxxsetsid("DEFAULT");
      yxxxch643xwwqqhxxxxxacintegr.setC1xxuxxxbvxxxxxxxxxxusagedescr("Current Eearning");
      yxxxch643xwwqqhxxxxxacintegr.setZ3xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch643xwwqqhxxxxxacintegr.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch643xwwqqhxxxxxacintegrHome.persist(client);
      yxxxch643xwwqqhxxxxxacintegrHome.clearInstance();
      yxxxch643xwwqqhxxxxxacintegr=yxxxch643xwwqqhxxxxxacintegrHome.getInstance();
      accountn="4012";
      temps=owner2Code;owner2Code=client; checkAccount();owner2Code=temps;
      yxxxch643xwwqqhxxxxxacintegr.setYxxxch601xwwqqhxxxxxaccount(yxxxch601xwwqqhxxxxxaccount);
      yxxxch643xwwqqhxxxxxacintegr.setA2xxukwmbvxxxxxxxxxxmoduleid("AS");
      yxxxch643xwwqqhxxxxxacintegr.setA3xxukw8bvxxxxxxxxxxusagecode("CRE");
      yxxxch643xwwqqhxxxxxacintegr.setA4xxukw9bvxxxxxxxxxxsetsid("DEFAULT");
      yxxxch643xwwqqhxxxxxacintegr.setC1xxuxxxbvxxxxxxxxxxusagedescr("Sales Income Account");
      yxxxch643xwwqqhxxxxxacintegr.setZ3xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch643xwwqqhxxxxxacintegr.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch643xwwqqhxxxxxacintegrHome.persist(client);
      yxxxch643xwwqqhxxxxxacintegrHome.clearInstance();
      yxxxch643xwwqqhxxxxxacintegr=yxxxch643xwwqqhxxxxxacintegrHome.getInstance();
      accountn="4014";
      temps=owner2Code;owner2Code=client; checkAccount();owner2Code=temps;
      yxxxch643xwwqqhxxxxxacintegr.setYxxxch601xwwqqhxxxxxaccount(yxxxch601xwwqqhxxxxxaccount);
      yxxxch643xwwqqhxxxxxacintegr.setA2xxukwmbvxxxxxxxxxxmoduleid("AS");
      yxxxch643xwwqqhxxxxxacintegr.setA3xxukw8bvxxxxxxxxxxusagecode("CRE");
      yxxxch643xwwqqhxxxxxacintegr.setA4xxukw9bvxxxxxxxxxxsetsid("CONSULT");
      yxxxch643xwwqqhxxxxxacintegr.setC1xxuxxxbvxxxxxxxxxxusagedescr("onsulting Income Account");
      yxxxch643xwwqqhxxxxxacintegr.setZ3xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch643xwwqqhxxxxxacintegr.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch643xwwqqhxxxxxacintegrHome.persist(client);
      yxxxch643xwwqqhxxxxxacintegrHome.clearInstance();
      yxxxch643xwwqqhxxxxxacintegr=yxxxch643xwwqqhxxxxxacintegrHome.getInstance();
      accountn="5005";
      temps=owner2Code;owner2Code=client; checkAccount();owner2Code=temps;
      yxxxch643xwwqqhxxxxxacintegr.setYxxxch601xwwqqhxxxxxaccount(yxxxch601xwwqqhxxxxxaccount);
      yxxxch643xwwqqhxxxxxacintegr.setA2xxukwmbvxxxxxxxxxxmoduleid("AS");
      yxxxch643xwwqqhxxxxxacintegr.setA3xxukw8bvxxxxxxxxxxusagecode("CEX");
      yxxxch643xwwqqhxxxxxacintegr.setA4xxukw9bvxxxxxxxxxxsetsid("DEFAULT");
      yxxxch643xwwqqhxxxxxacintegr.setC1xxuxxxbvxxxxxxxxxxusagedescr("Sales Cost/Expense Account");
      yxxxch643xwwqqhxxxxxacintegr.setZ3xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch643xwwqqhxxxxxacintegr.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch643xwwqqhxxxxxacintegrHome.persist(client);
      yxxxch643xwwqqhxxxxxacintegrHome.clearInstance();
      yxxxch643xwwqqhxxxxxacintegr=yxxxch643xwwqqhxxxxxacintegrHome.getInstance();
      accountn="5021";
      temps=owner2Code;owner2Code=client; checkAccount();owner2Code=temps;
      yxxxch643xwwqqhxxxxxacintegr.setYxxxch601xwwqqhxxxxxaccount(yxxxch601xwwqqhxxxxxaccount);
      yxxxch643xwwqqhxxxxxacintegr.setA2xxukwmbvxxxxxxxxxxmoduleid("AP");
      yxxxch643xwwqqhxxxxxacintegr.setA3xxukw8bvxxxxxxxxxxusagecode("APV");
      yxxxch643xwwqqhxxxxxacintegr.setA4xxukw9bvxxxxxxxxxxsetsid("DEFAULT");
      yxxxch643xwwqqhxxxxxacintegr.setC1xxuxxxbvxxxxxxxxxxusagedescr("Sales Cost/Expense Account");
      yxxxch643xwwqqhxxxxxacintegr.setZ3xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch643xwwqqhxxxxxacintegr.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch643xwwqqhxxxxxacintegrHome.persist(client);
      yxxxch643xwwqqhxxxxxacintegrHome.clearInstance();
      yxxxch643xwwqqhxxxxxacintegr=yxxxch643xwwqqhxxxxxacintegrHome.getInstance();
      accountn="5023";
      temps=owner2Code;owner2Code=client; checkAccount();owner2Code=temps;
      yxxxch643xwwqqhxxxxxacintegr.setYxxxch601xwwqqhxxxxxaccount(yxxxch601xwwqqhxxxxxaccount);
      yxxxch643xwwqqhxxxxxacintegr.setA2xxukwmbvxxxxxxxxxxmoduleid("AP");
      yxxxch643xwwqqhxxxxxacintegr.setA3xxukw8bvxxxxxxxxxxusagecode("APM");
      yxxxch643xwwqqhxxxxxacintegr.setA4xxukw9bvxxxxxxxxxxsetsid("DEFAULT");
      yxxxch643xwwqqhxxxxxacintegr.setC1xxuxxxbvxxxxxxxxxxusagedescr("Sales Cost/Expense Account");
      yxxxch643xwwqqhxxxxxacintegr.setZ3xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch643xwwqqhxxxxxacintegr.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch643xwwqqhxxxxxacintegrHome.persist(client);



      accountn="1052";
      temps=owner2Code;owner2Code=client; checkAccount();owner2Code=temps;
      yxxxch643xwwqqhxxxxxacintegr.setYxxxch601xwwqqhxxxxxaccount(yxxxch601xwwqqhxxxxxaccount);
      yxxxch643xwwqqhxxxxxacintegr.setA2xxukwmbvxxxxxxxxxxmoduleid("AS");
      yxxxch643xwwqqhxxxxxacintegr.setA3xxukw8bvxxxxxxxxxxusagecode("CAS");
      yxxxch643xwwqqhxxxxxacintegr.setA4xxukw9bvxxxxxxxxxxsetsid("DEFAULT");
      yxxxch643xwwqqhxxxxxacintegr.setC1xxuxxxbvxxxxxxxxxxusagedescr("Receive Inventory Asset A/C");
      yxxxch643xwwqqhxxxxxacintegr.setZ3xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch643xwwqqhxxxxxacintegr.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch643xwwqqhxxxxxacintegrHome.persist(client);
      yxxxch643xwwqqhxxxxxacintegrHome.clearInstance();
      yxxxch643xwwqqhxxxxxacintegr=yxxxch643xwwqqhxxxxxacintegrHome.getInstance();
      accountn="2023";
      temps=owner2Code;owner2Code=client; checkAccount();owner2Code=temps;
      yxxxch643xwwqqhxxxxxacintegr.setYxxxch601xwwqqhxxxxxaccount(yxxxch601xwwqqhxxxxxaccount);
      yxxxch643xwwqqhxxxxxacintegr.setA2xxukwmbvxxxxxxxxxxmoduleid("AS");
      yxxxch643xwwqqhxxxxxacintegr.setA3xxukw8bvxxxxxxxxxxusagecode("IRC");
      yxxxch643xwwqqhxxxxxacintegr.setA4xxukw9bvxxxxxxxxxxsetsid("DEFAULT");
      yxxxch643xwwqqhxxxxxacintegr.setC1xxuxxxbvxxxxxxxxxxusagedescr("Inventory Receipt Clearing A/C");
      yxxxch643xwwqqhxxxxxacintegr.setZ3xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch643xwwqqhxxxxxacintegr.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch643xwwqqhxxxxxacintegrHome.persist(client);
      yxxxch643xwwqqhxxxxxacintegrHome.clearInstance();
      yxxxch643xwwqqhxxxxxacintegr=yxxxch643xwwqqhxxxxxacintegrHome.getInstance();
      accountn="2040";
      temps=owner2Code;owner2Code=client; checkAccount();owner2Code=temps;
      yxxxch643xwwqqhxxxxxacintegr.setYxxxch601xwwqqhxxxxxaccount(yxxxch601xwwqqhxxxxxaccount);
      yxxxch643xwwqqhxxxxxacintegr.setA2xxukwmbvxxxxxxxxxxmoduleid("AS");
      yxxxch643xwwqqhxxxxxacintegr.setA3xxukw8bvxxxxxxxxxxusagecode("TX1");
      yxxxch643xwwqqhxxxxxacintegr.setA4xxukw9bvxxxxxxxxxxsetsid("DEFAULT");
      yxxxch643xwwqqhxxxxxacintegr.setC1xxuxxxbvxxxxxxxxxxusagedescr("tax1 Payable Clearing A/C");
      yxxxch643xwwqqhxxxxxacintegr.setZ3xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch643xwwqqhxxxxxacintegr.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch643xwwqqhxxxxxacintegrHome.persist(client);
      yxxxch643xwwqqhxxxxxacintegrHome.clearInstance();
      yxxxch643xwwqqhxxxxxacintegr=yxxxch643xwwqqhxxxxxacintegrHome.getInstance();
      accountn="2042";
      temps=owner2Code;owner2Code=client; checkAccount();owner2Code=temps;
      yxxxch643xwwqqhxxxxxacintegr.setYxxxch601xwwqqhxxxxxaccount(yxxxch601xwwqqhxxxxxaccount);
      yxxxch643xwwqqhxxxxxacintegr.setA2xxukwmbvxxxxxxxxxxmoduleid("AS");
      yxxxch643xwwqqhxxxxxacintegr.setA3xxukw8bvxxxxxxxxxxusagecode("TX2");
      yxxxch643xwwqqhxxxxxacintegr.setA4xxukw9bvxxxxxxxxxxsetsid("DEFAULT");
      yxxxch643xwwqqhxxxxxacintegr.setC1xxuxxxbvxxxxxxxxxxusagedescr("tax2 Payable Clearing A/C");
      yxxxch643xwwqqhxxxxxacintegr.setZ3xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch643xwwqqhxxxxxacintegr.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch643xwwqqhxxxxxacintegrHome.persist(client);
      yxxxch643xwwqqhxxxxxacintegrHome.clearInstance();
      yxxxch643xwwqqhxxxxxacintegr=yxxxch643xwwqqhxxxxxacintegrHome.getInstance();
      accountn="2042";
      temps=owner2Code;owner2Code=client; checkAccount();owner2Code=temps;
      yxxxch643xwwqqhxxxxxacintegr.setYxxxch601xwwqqhxxxxxaccount(yxxxch601xwwqqhxxxxxaccount);
      yxxxch643xwwqqhxxxxxacintegr.setA2xxukwmbvxxxxxxxxxxmoduleid("AS");
      yxxxch643xwwqqhxxxxxacintegr.setA3xxukw8bvxxxxxxxxxxusagecode("TX3");
      yxxxch643xwwqqhxxxxxacintegr.setA4xxukw9bvxxxxxxxxxxsetsid("DEFAULT");
      yxxxch643xwwqqhxxxxxacintegr.setC1xxuxxxbvxxxxxxxxxxusagedescr("tax3 Payable Clearing A/C");
      yxxxch643xwwqqhxxxxxacintegr.setZ3xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch643xwwqqhxxxxxacintegr.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch643xwwqqhxxxxxacintegrHome.persist(client);
      yxxxch643xwwqqhxxxxxacintegrHome.clearInstance();
      yxxxch643xwwqqhxxxxxacintegr=yxxxch643xwwqqhxxxxxacintegrHome.getInstance();

      accountn="4012";
      temps=owner2Code;owner2Code=client; checkAccount();owner2Code=temps;
      yxxxch643xwwqqhxxxxxacintegr.setYxxxch601xwwqqhxxxxxaccount(yxxxch601xwwqqhxxxxxaccount);
      yxxxch643xwwqqhxxxxxacintegr.setA2xxukwmbvxxxxxxxxxxmoduleid("AS");
      yxxxch643xwwqqhxxxxxacintegr.setA3xxukw8bvxxxxxxxxxxusagecode("CRE");
      yxxxch643xwwqqhxxxxxacintegr.setA4xxukw9bvxxxxxxxxxxsetsid("SERVICE");
      yxxxch643xwwqqhxxxxxacintegr.setC1xxuxxxbvxxxxxxxxxxusagedescr("Service Income Account");
      yxxxch643xwwqqhxxxxxacintegr.setZ3xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch643xwwqqhxxxxxacintegr.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch643xwwqqhxxxxxacintegrHome.persist(client);
      yxxxch643xwwqqhxxxxxacintegrHome.clearInstance();
      yxxxch643xwwqqhxxxxxacintegr=yxxxch643xwwqqhxxxxxacintegrHome.getInstance();
      accountn="5005";
      temps=owner2Code;owner2Code=client; checkAccount();owner2Code=temps;
      yxxxch643xwwqqhxxxxxacintegr.setYxxxch601xwwqqhxxxxxaccount(yxxxch601xwwqqhxxxxxaccount);
      yxxxch643xwwqqhxxxxxacintegr.setA2xxukwmbvxxxxxxxxxxmoduleid("AS");
      yxxxch643xwwqqhxxxxxacintegr.setA3xxukw8bvxxxxxxxxxxusagecode("CEX");
      yxxxch643xwwqqhxxxxxacintegr.setA4xxukw9bvxxxxxxxxxxsetsid("SERVICE");
      yxxxch643xwwqqhxxxxxacintegr.setC1xxuxxxbvxxxxxxxxxxusagedescr("Repair/Parts Cost Account");
      yxxxch643xwwqqhxxxxxacintegr.setZ3xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch643xwwqqhxxxxxacintegr.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch643xwwqqhxxxxxacintegrHome.persist(client);
      yxxxch643xwwqqhxxxxxacintegrHome.clearInstance();
      yxxxch643xwwqqhxxxxxacintegr=yxxxch643xwwqqhxxxxxacintegrHome.getInstance();
      accountn="1054";
      temps=owner2Code;owner2Code=client; checkAccount();owner2Code=temps;
      yxxxch643xwwqqhxxxxxacintegr.setYxxxch601xwwqqhxxxxxaccount(yxxxch601xwwqqhxxxxxaccount);
      yxxxch643xwwqqhxxxxxacintegr.setA2xxukwmbvxxxxxxxxxxmoduleid("AS");
      yxxxch643xwwqqhxxxxxacintegr.setA3xxukw8bvxxxxxxxxxxusagecode("CAS");
      yxxxch643xwwqqhxxxxxacintegr.setA4xxukw9bvxxxxxxxxxxsetsid("SERVICE");
      yxxxch643xwwqqhxxxxxacintegr.setC1xxuxxxbvxxxxxxxxxxusagedescr("Receive Inventory Asset A/C");
      yxxxch643xwwqqhxxxxxacintegr.setZ3xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch643xwwqqhxxxxxacintegr.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch643xwwqqhxxxxxacintegrHome.persist(client);
      yxxxch643xwwqqhxxxxxacintegrHome.clearInstance();
      yxxxch643xwwqqhxxxxxacintegr=yxxxch643xwwqqhxxxxxacintegrHome.getInstance();
      accountn="2005";
      temps=owner2Code;owner2Code=client; checkAccount();owner2Code=temps;
      yxxxch643xwwqqhxxxxxacintegr.setYxxxch601xwwqqhxxxxxaccount(yxxxch601xwwqqhxxxxxaccount);
      yxxxch643xwwqqhxxxxxacintegr.setA2xxukwmbvxxxxxxxxxxmoduleid("AS");
      yxxxch643xwwqqhxxxxxacintegr.setA3xxukw8bvxxxxxxxxxxusagecode("CLI");
      yxxxch643xwwqqhxxxxxacintegr.setA4xxukw9bvxxxxxxxxxxsetsid("SERVICE");
      yxxxch643xwwqqhxxxxxacintegr.setC1xxuxxxbvxxxxxxxxxxusagedescr("Purchase Payable Liability A/C");
      yxxxch643xwwqqhxxxxxacintegr.setZ3xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch643xwwqqhxxxxxacintegr.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch643xwwqqhxxxxxacintegrHome.persist(client);
      yxxxch643xwwqqhxxxxxacintegrHome.clearInstance();
      yxxxch643xwwqqhxxxxxacintegr=yxxxch643xwwqqhxxxxxacintegrHome.getInstance();
      accountn="2040";
      temps=owner2Code;owner2Code=client; checkAccount();owner2Code=temps;
      yxxxch643xwwqqhxxxxxacintegr.setYxxxch601xwwqqhxxxxxaccount(yxxxch601xwwqqhxxxxxaccount);
      yxxxch643xwwqqhxxxxxacintegr.setA2xxukwmbvxxxxxxxxxxmoduleid("AS");
      yxxxch643xwwqqhxxxxxacintegr.setA3xxukw8bvxxxxxxxxxxusagecode("TX1");
      yxxxch643xwwqqhxxxxxacintegr.setA4xxukw9bvxxxxxxxxxxsetsid("SERVICE");
      yxxxch643xwwqqhxxxxxacintegr.setC1xxuxxxbvxxxxxxxxxxusagedescr("tax1 Payable Clearing A/C");
      yxxxch643xwwqqhxxxxxacintegr.setZ3xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch643xwwqqhxxxxxacintegr.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch643xwwqqhxxxxxacintegrHome.persist(client);
      yxxxch643xwwqqhxxxxxacintegrHome.clearInstance();
      yxxxch643xwwqqhxxxxxacintegr=yxxxch643xwwqqhxxxxxacintegrHome.getInstance();
      accountn="2042";
      temps=owner2Code;owner2Code=client; checkAccount();owner2Code=temps;
      yxxxch643xwwqqhxxxxxacintegr.setYxxxch601xwwqqhxxxxxaccount(yxxxch601xwwqqhxxxxxaccount);
      yxxxch643xwwqqhxxxxxacintegr.setA2xxukwmbvxxxxxxxxxxmoduleid("AS");
      yxxxch643xwwqqhxxxxxacintegr.setA3xxukw8bvxxxxxxxxxxusagecode("TX2");
      yxxxch643xwwqqhxxxxxacintegr.setA4xxukw9bvxxxxxxxxxxsetsid("SERVICE");
      yxxxch643xwwqqhxxxxxacintegr.setC1xxuxxxbvxxxxxxxxxxusagedescr("tax2 Payable Clearing A/C");
      yxxxch643xwwqqhxxxxxacintegr.setZ3xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch643xwwqqhxxxxxacintegr.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch643xwwqqhxxxxxacintegrHome.persist(client);
      yxxxch643xwwqqhxxxxxacintegrHome.clearInstance();
      yxxxch643xwwqqhxxxxxacintegr=yxxxch643xwwqqhxxxxxacintegrHome.getInstance();
      accountn="1015";
      temps=owner2Code;owner2Code=client; checkAccount();owner2Code=temps;
      yxxxch643xwwqqhxxxxxacintegr.setYxxxch601xwwqqhxxxxxaccount(yxxxch601xwwqqhxxxxxaccount);
      yxxxch643xwwqqhxxxxxacintegr.setA2xxukwmbvxxxxxxxxxxmoduleid("IC");
      yxxxch643xwwqqhxxxxxacintegr.setA3xxukw8bvxxxxxxxxxxusagecode("IRC");
      yxxxch643xwwqqhxxxxxacintegr.setA4xxukw9bvxxxxxxxxxxsetsid("DEFAULT");
      yxxxch643xwwqqhxxxxxacintegr.setC1xxuxxxbvxxxxxxxxxxusagedescr("Inventory Asset A/C");
      yxxxch643xwwqqhxxxxxacintegr.setZ3xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch643xwwqqhxxxxxacintegr.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch643xwwqqhxxxxxacintegrHome.persist(client);
      yxxxch643xwwqqhxxxxxacintegrHome.clearInstance();
      yxxxch643xwwqqhxxxxxacintegr=yxxxch643xwwqqhxxxxxacintegrHome.getInstance();
      accountn="1020";
      temps=owner2Code;owner2Code=client; checkAccount();owner2Code=temps;
      yxxxch643xwwqqhxxxxxacintegr.setYxxxch601xwwqqhxxxxxaccount(yxxxch601xwwqqhxxxxxaccount);
      yxxxch643xwwqqhxxxxxacintegr.setA2xxukwmbvxxxxxxxxxxmoduleid("AR");
      yxxxch643xwwqqhxxxxxacintegr.setA3xxukw8bvxxxxxxxxxxusagecode("ARR");
      yxxxch643xwwqqhxxxxxacintegr.setA4xxukw9bvxxxxxxxxxxsetsid("DEFAULT");
      yxxxch643xwwqqhxxxxxacintegr.setC1xxuxxxbvxxxxxxxxxxusagedescr("Receivable Asset control");
      yxxxch643xwwqqhxxxxxacintegr.setZ3xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch643xwwqqhxxxxxacintegr.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch643xwwqqhxxxxxacintegrHome.persist(client);
      yxxxch643xwwqqhxxxxxacintegrHome.clearInstance();
      yxxxch643xwwqqhxxxxxacintegr=yxxxch643xwwqqhxxxxxacintegrHome.getInstance();
      accountn="4025";
      temps=owner2Code;owner2Code=client; checkAccount();owner2Code=temps;
      yxxxch643xwwqqhxxxxxacintegr.setYxxxch601xwwqqhxxxxxaccount(yxxxch601xwwqqhxxxxxaccount);
      yxxxch643xwwqqhxxxxxacintegr.setA2xxukwmbvxxxxxxxxxxmoduleid("AR");
      yxxxch643xwwqqhxxxxxacintegr.setA3xxukw8bvxxxxxxxxxxusagecode("ARM");
      yxxxch643xwwqqhxxxxxacintegr.setA4xxukw9bvxxxxxxxxxxsetsid("DEFAULT");
      yxxxch643xwwqqhxxxxxacintegr.setC1xxuxxxbvxxxxxxxxxxusagedescr("Misc Charge Income");
      yxxxch643xwwqqhxxxxxacintegr.setZ3xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch643xwwqqhxxxxxacintegr.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch643xwwqqhxxxxxacintegrHome.persist(client);
      yxxxch643xwwqqhxxxxxacintegrHome.clearInstance();
      yxxxch643xwwqqhxxxxxacintegr=yxxxch643xwwqqhxxxxxacintegrHome.getInstance();
      accountn="4020";
      temps=owner2Code;owner2Code=client; checkAccount();owner2Code=temps;
      yxxxch643xwwqqhxxxxxacintegr.setYxxxch601xwwqqhxxxxxaccount(yxxxch601xwwqqhxxxxxaccount);
      yxxxch643xwwqqhxxxxxacintegr.setA2xxukwmbvxxxxxxxxxxmoduleid("AR");
      yxxxch643xwwqqhxxxxxacintegr.setA3xxukw8bvxxxxxxxxxxusagecode("ARV");
      yxxxch643xwwqqhxxxxxacintegr.setA4xxukw9bvxxxxxxxxxxsetsid("DEFAULT");
      yxxxch643xwwqqhxxxxxacintegr.setC1xxuxxxbvxxxxxxxxxxusagedescr("Deliv Charge Income");
      yxxxch643xwwqqhxxxxxacintegr.setZ3xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch643xwwqqhxxxxxacintegr.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch643xwwqqhxxxxxacintegrHome.persist(client);
      yxxxch643xwwqqhxxxxxacintegrHome.clearInstance();
      yxxxch643xwwqqhxxxxxacintegr=yxxxch643xwwqqhxxxxxacintegrHome.getInstance();
      accountn="1005";
      temps=owner2Code;owner2Code=client; checkAccount();owner2Code=temps;
      yxxxch643xwwqqhxxxxxacintegr.setYxxxch601xwwqqhxxxxxaccount(yxxxch601xwwqqhxxxxxaccount);
      yxxxch643xwwqqhxxxxxacintegr.setA2xxukwmbvxxxxxxxxxxmoduleid("AR");
      yxxxch643xwwqqhxxxxxacintegr.setA3xxukw8bvxxxxxxxxxxusagecode("ARB");
      yxxxch643xwwqqhxxxxxacintegr.setA4xxukw9bvxxxxxxxxxxsetsid("DEFAULT");
      yxxxch643xwwqqhxxxxxacintegr.setC1xxuxxxbvxxxxxxxxxxusagedescr("Cash/Bank Receipt Account");
      yxxxch643xwwqqhxxxxxacintegr.setZ3xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch643xwwqqhxxxxxacintegr.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch643xwwqqhxxxxxacintegrHome.persist(client);
      yxxxch643xwwqqhxxxxxacintegrHome.clearInstance();
      yxxxch643xwwqqhxxxxxacintegr=yxxxch643xwwqqhxxxxxacintegrHome.getInstance();
      accountn="1022";
      temps=owner2Code;owner2Code=client; checkAccount();owner2Code=temps;
      yxxxch643xwwqqhxxxxxacintegr.setYxxxch601xwwqqhxxxxxaccount(yxxxch601xwwqqhxxxxxaccount);
      yxxxch643xwwqqhxxxxxacintegr.setA2xxukwmbvxxxxxxxxxxmoduleid("AP");
      yxxxch643xwwqqhxxxxxacintegr.setA3xxukw8bvxxxxxxxxxxusagecode("APA");
      yxxxch643xwwqqhxxxxxacintegr.setA4xxukw9bvxxxxxxxxxxsetsid("DEFAULT");
      yxxxch643xwwqqhxxxxxacintegr.setC1xxuxxxbvxxxxxxxxxxusagedescr("Deposits Paid Asset Account ");
      yxxxch643xwwqqhxxxxxacintegr.setZ3xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch643xwwqqhxxxxxacintegr.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch643xwwqqhxxxxxacintegrHome.persist(client);
      yxxxch643xwwqqhxxxxxacintegrHome.clearInstance();
      yxxxch643xwwqqhxxxxxacintegr=yxxxch643xwwqqhxxxxxacintegrHome.getInstance();
      accountn="1005";
      temps=owner2Code;owner2Code=client; checkAccount();owner2Code=temps;
      yxxxch643xwwqqhxxxxxacintegr.setYxxxch601xwwqqhxxxxxaccount(yxxxch601xwwqqhxxxxxaccount);
      yxxxch643xwwqqhxxxxxacintegr.setA2xxukwmbvxxxxxxxxxxmoduleid("AP");
      yxxxch643xwwqqhxxxxxacintegr.setA3xxukw8bvxxxxxxxxxxusagecode("APB");
      yxxxch643xwwqqhxxxxxacintegr.setA4xxukw9bvxxxxxxxxxxsetsid("DEFAULT");
      yxxxch643xwwqqhxxxxxacintegr.setC1xxuxxxbvxxxxxxxxxxusagedescr("Cash/Bank Payment Account");
      yxxxch643xwwqqhxxxxxacintegr.setZ3xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch643xwwqqhxxxxxacintegr.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch643xwwqqhxxxxxacintegrHome.persist(client);
      yxxxch643xwwqqhxxxxxacintegrHome.clearInstance();
      yxxxch643xwwqqhxxxxxacintegr=yxxxch643xwwqqhxxxxxacintegrHome.getInstance();
      accountn="2005";
      temps=owner2Code;owner2Code=client; checkAccount();owner2Code=temps;
      yxxxch643xwwqqhxxxxxacintegr.setYxxxch601xwwqqhxxxxxaccount(yxxxch601xwwqqhxxxxxaccount);
      yxxxch643xwwqqhxxxxxacintegr.setA2xxukwmbvxxxxxxxxxxmoduleid("AP");
      yxxxch643xwwqqhxxxxxacintegr.setA3xxukw8bvxxxxxxxxxxusagecode("APP");
      yxxxch643xwwqqhxxxxxacintegr.setA4xxukw9bvxxxxxxxxxxsetsid("DEFAULT");
      yxxxch643xwwqqhxxxxxacintegr.setC1xxuxxxbvxxxxxxxxxxusagedescr("A/C Payable Control Account");
      yxxxch643xwwqqhxxxxxacintegr.setZ3xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch643xwwqqhxxxxxacintegr.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch643xwwqqhxxxxxacintegrHome.persist(client);

      yxxxch643xwwqqhxxxxxacintegrHome.clearInstance();
      yxxxch643xwwqqhxxxxxacintegr=yxxxch643xwwqqhxxxxxacintegrHome.getInstance();
      accountn="5005";
      temps=owner2Code;owner2Code=client; checkAccount();owner2Code=temps;
      yxxxch643xwwqqhxxxxxacintegr.setYxxxch601xwwqqhxxxxxaccount(yxxxch601xwwqqhxxxxxaccount);
      yxxxch643xwwqqhxxxxxacintegr.setA2xxukwmbvxxxxxxxxxxmoduleid("AP");
      yxxxch643xwwqqhxxxxxacintegr.setA3xxukw8bvxxxxxxxxxxusagecode("APM");
      yxxxch643xwwqqhxxxxxacintegr.setA4xxukw9bvxxxxxxxxxxsetsid("DEFAULT");
      yxxxch643xwwqqhxxxxxacintegr.setC1xxuxxxbvxxxxxxxxxxusagedescr("Misc Charge Expns control account");
      yxxxch643xwwqqhxxxxxacintegr.setZ3xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch643xwwqqhxxxxxacintegr.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch643xwwqqhxxxxxacintegrHome.persist(client);
      yxxxch643xwwqqhxxxxxacintegrHome.clearInstance();
      yxxxch643xwwqqhxxxxxacintegr=yxxxch643xwwqqhxxxxxacintegrHome.getInstance();
      accountn="5005";
      temps=owner2Code;owner2Code=client; checkAccount();owner2Code=temps;
      yxxxch643xwwqqhxxxxxacintegr.setYxxxch601xwwqqhxxxxxaccount(yxxxch601xwwqqhxxxxxaccount);
      yxxxch643xwwqqhxxxxxacintegr.setA2xxukwmbvxxxxxxxxxxmoduleid("AY");
      yxxxch643xwwqqhxxxxxacintegr.setA3xxukw8bvxxxxxxxxxxusagecode("SAL");
      yxxxch643xwwqqhxxxxxacintegr.setA4xxukw9bvxxxxxxxxxxsetsid("DEFAULT");
      yxxxch643xwwqqhxxxxxacintegr.setC1xxuxxxbvxxxxxxxxxxusagedescr("Salary Expense Account");
      yxxxch643xwwqqhxxxxxacintegr.setZ3xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch643xwwqqhxxxxxacintegr.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch643xwwqqhxxxxxacintegrHome.persist(client);

	if (yxxxch621xwwqqhxxxxxacperiod == null) {
	    yxxxch621xwwqqhxxxxxacperiod=yxxxch621xwwqqhxxxxxacperiodHome.getInstance();
	}
// jay remove hardcoded values and use current cal date and logic similar to authentication to set dynamic
// calculated values. use a field in registration to set fiscal year end month ie dec or july etc (no may be confusing at registration)
// rather set default fiscal yr ending in dec but give option to change in yearend menue
	//already defined private Calendar calendar = Calendar.getInstance();
	String currcaldates = calendar.getTime().toString().substring(0, 10);
	String currbusdates = calendar.getTime().toString().substring(0, 10);
	String currlocaldate = calendar.getTime().toString().substring(0, 10);
	Date toDay = calendar.getTime();
	//public SimpleDateFormat s = new SimpleDateFormat("yyyy-MM-dd");
	String toDays = s.format(calendar.getTime()).toString();
     calendar.set(Calendar.HOUR_OF_DAY, 0);
     calendar.set(Calendar.MINUTE, 0);
     calendar.set(Calendar.SECOND, 0);
     calendar.set(Calendar.MILLISECOND, 0);
     currbusdate = calendar.getTime();

try   {
      yxxxch621xwwqqhxxxxxacperiod.setA0xxukwpbv47xxxxxxxxrowid("01");
      Integer monthIndex=new Integer(calendar.get(Calendar.MONTH)+1);
      yxxxch621xwwqqhxxxxxacperiod.setA1xxuxwpbv47xxxxxxxxcurrperiod(""+monthIndex);
      yxxxch621xwwqqhxxxxxacperiod.setB1xxuxzsbvxxxxxxxxxxdescript("Period "+monthIndex);
      // set dates below the same, at login time authenticator will recalculate the dates correctly
      yxxxch621xwwqqhxxxxxacperiod.setB2xxdwerbvxxxxxxxxxxcurrbusdate(currbusdate);
      yxxxch621xwwqqhxxxxxacperiod.setB3xxdwerbvxxxxxxxxxxcurrcaldate(currbusdate);
      yxxxch621xwwqqhxxxxxacperiod.setB4xxdwerbvxxxxxxxxxxcurrlocaldate(currbusdate);
      yxxxch621xwwqqhxxxxxacperiod.setZ3xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch621xwwqqhxxxxxacperiod.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch621xwwqqhxxxxxacperiodHome.persist(client);

	if (yxxxuq632xwwqqhxxxxxperioddates == null) {
	    yxxxuq632xwwqqhxxxxxperioddates=yxxxuq632xwwqqhxxxxxperioddatesHome.getInstance();
	}
      // new logic done, assume f year same as calendar yr
 
      int pe=15;
      calendar = Calendar.getInstance();// initialize calendar to avoid wrong dates
      for (int i=1;i<pe;i++){
      yxxxuq632xwwqqhxxxxxperioddates.setA0xxukwpbv47xxxxxxxxperiod(String.format("%02d",i));
      yxxxuq632xwwqqhxxxxxperioddates.setB1xxuszsbvxxxxxxxxxxdescript("Period "+String.format("%02d",i));
      if(i>12){
       if(i==13){
        calendar.add(Calendar.YEAR, 1);
        // once calendar is rolled i 14 will also pick up new value 
       }
       calendar.set(Calendar.MONTH, i-13);
       calendar.set(Calendar.HOUR_OF_DAY, 0);
       calendar.set(Calendar.MINUTE, 0);
       calendar.set(Calendar.SECOND, 0);
       calendar.set(Calendar.MILLISECOND, 0);
      }else{
       calendar.set(Calendar.MONTH, i-1);
       calendar.set(Calendar.HOUR_OF_DAY, 0);
       calendar.set(Calendar.MINUTE, 0);
       calendar.set(Calendar.SECOND, 0);
       calendar.set(Calendar.MILLISECOND, 0);
      }
      calendar.set(Calendar.DATE,calendar.getActualMinimum(Calendar.DAY_OF_MONTH));
      yxxxuq632xwwqqhxxxxxperioddates.setB2xxdwsrbvxxxxxxxxxxstartdate(calendar.getTime());
      calendar.set(Calendar.DATE,calendar.getActualMaximum(Calendar.DAY_OF_MONTH));
      yxxxuq632xwwqqhxxxxxperioddates.setB3xxdwerbvxxxxxxxxxxenddate(calendar.getTime());
      yxxxuq632xwwqqhxxxxxperioddates.setB4xxew1rbvxxxxxxxxxxstartofweek(1);
      yxxxuq632xwwqqhxxxxxperioddates.setB5xxewbrbvxxxxxxxxxxstartofbweek(1);
      yxxxuq632xwwqqhxxxxxperioddates.setB6xxewfrbvxxxxxxxxxxendofbweek(5);
      yxxxuq632xwwqqhxxxxxperioddates.setZ3xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxuq632xwwqqhxxxxxperioddates.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxuq632xwwqqhxxxxxperioddatesHome.persist(client);
      yxxxuq632xwwqqhxxxxxperioddatesHome.clearInstance();
      yxxxuq632xwwqqhxxxxxperioddates=yxxxuq632xwwqqhxxxxxperioddatesHome.getInstance();

      }

} catch (Exception e) {
			log.severe("Error parsing string to date"+ e);
      FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                                     FacesMessage.SEVERITY_INFO,bundle.getString("parsing")+ " "+bundle.getString("string")+ " "+bundle.getString("to")+", "+bundle.getString("date")+ " "+bundle.getString("error")+ " "+e.getMessage(),""));
}

     // type CS -customer shipment, prodtype - production P Test T, stepname SES Shipment Express Small size or SAM Shipment Standard Medium
     // The actual value needs to be manually calculated based on size/weight category and maintained in rate table
	//if (yxxxuq591xwwqqhxxxxxrate1f == null) {
	    yxxxuq591xwwqqhxxxxxrate1fHome.clearInstance();// do not reuse existing, it changes owner2 
	    yxxxuq591xwwqqhxxxxxrate1f=yxxxuq591xwwqqhxxxxxrate1fHome.getInstance();
	//}
     try   {
      yxxxuq591xwwqqhxxxxxrate1f.setA0xxukxxbvxxxxxxxxxxusertype("CS");
      yxxxuq591xwwqqhxxxxxrate1f.setB1xxuxxrbvxxxxxxxxxxprodtype("P");
      yxxxuq591xwwqqhxxxxxrate1f.setB2xxuxxrbv51xxxxxxxxstepname("ES");
      yxxxuq591xwwqqhxxxxxrate1f.setB4xxcxxrbvxxxxxxxxxxvalue(new BigDecimal("5.90"));
      yxxxuq591xwwqqhxxxxxrate1f.setZ4xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxuq591xwwqqhxxxxxrate1f.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxuq591xwwqqhxxxxxrate1fHome.persist(client);
      yxxxuq591xwwqqhxxxxxrate1fHome.clearInstance();
      yxxxuq591xwwqqhxxxxxrate1f=yxxxuq591xwwqqhxxxxxrate1fHome.getInstance();
      yxxxuq591xwwqqhxxxxxrate1f.setA0xxukxxbvxxxxxxxxxxusertype("CS");
      yxxxuq591xwwqqhxxxxxrate1f.setB1xxuxxrbvxxxxxxxxxxprodtype("P");
      yxxxuq591xwwqqhxxxxxrate1f.setB2xxuxxrbv51xxxxxxxxstepname("EM");
      yxxxuq591xwwqqhxxxxxrate1f.setB4xxcxxrbvxxxxxxxxxxvalue(new BigDecimal("8.90"));
      yxxxuq591xwwqqhxxxxxrate1f.setZ4xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxuq591xwwqqhxxxxxrate1f.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxuq591xwwqqhxxxxxrate1fHome.persist(client);
      yxxxuq591xwwqqhxxxxxrate1fHome.clearInstance();
      yxxxuq591xwwqqhxxxxxrate1f=yxxxuq591xwwqqhxxxxxrate1fHome.getInstance();
      yxxxuq591xwwqqhxxxxxrate1f.setA0xxukxxbvxxxxxxxxxxusertype("CS");
      yxxxuq591xwwqqhxxxxxrate1f.setB1xxuxxrbvxxxxxxxxxxprodtype("P");
      yxxxuq591xwwqqhxxxxxrate1f.setB2xxuxxrbv51xxxxxxxxstepname("EL");
      yxxxuq591xwwqqhxxxxxrate1f.setB4xxcxxrbvxxxxxxxxxxvalue(new BigDecimal("11.90"));
      yxxxuq591xwwqqhxxxxxrate1f.setZ4xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxuq591xwwqqhxxxxxrate1f.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxuq591xwwqqhxxxxxrate1fHome.persist(client);

      yxxxuq591xwwqqhxxxxxrate1fHome.clearInstance();
      yxxxuq591xwwqqhxxxxxrate1f=yxxxuq591xwwqqhxxxxxrate1fHome.getInstance();
      yxxxuq591xwwqqhxxxxxrate1f.setA0xxukxxbvxxxxxxxxxxusertype("CS");
      yxxxuq591xwwqqhxxxxxrate1f.setB1xxuxxrbvxxxxxxxxxxprodtype("P");
      yxxxuq591xwwqqhxxxxxrate1f.setB2xxuxxrbv51xxxxxxxxstepname("SS");
      yxxxuq591xwwqqhxxxxxrate1f.setB4xxcxxrbvxxxxxxxxxxvalue(new BigDecimal("1.90"));
      yxxxuq591xwwqqhxxxxxrate1f.setZ4xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxuq591xwwqqhxxxxxrate1f.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxuq591xwwqqhxxxxxrate1fHome.persist(client);
      yxxxuq591xwwqqhxxxxxrate1fHome.clearInstance();
      yxxxuq591xwwqqhxxxxxrate1f=yxxxuq591xwwqqhxxxxxrate1fHome.getInstance();
      yxxxuq591xwwqqhxxxxxrate1f.setA0xxukxxbvxxxxxxxxxxusertype("CS");
      yxxxuq591xwwqqhxxxxxrate1f.setB1xxuxxrbvxxxxxxxxxxprodtype("P");
      yxxxuq591xwwqqhxxxxxrate1f.setB2xxuxxrbv51xxxxxxxxstepname("SM");
      yxxxuq591xwwqqhxxxxxrate1f.setB4xxcxxrbvxxxxxxxxxxvalue(new BigDecimal("3.90"));
      yxxxuq591xwwqqhxxxxxrate1f.setZ4xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxuq591xwwqqhxxxxxrate1f.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxuq591xwwqqhxxxxxrate1fHome.persist(client);
      yxxxuq591xwwqqhxxxxxrate1fHome.clearInstance();
      yxxxuq591xwwqqhxxxxxrate1f=yxxxuq591xwwqqhxxxxxrate1fHome.getInstance();
      yxxxuq591xwwqqhxxxxxrate1f.setA0xxukxxbvxxxxxxxxxxusertype("CS");
      yxxxuq591xwwqqhxxxxxrate1f.setB1xxuxxrbvxxxxxxxxxxprodtype("P");
      yxxxuq591xwwqqhxxxxxrate1f.setB2xxuxxrbv51xxxxxxxxstepname("SL");
      yxxxuq591xwwqqhxxxxxrate1f.setB4xxcxxrbvxxxxxxxxxxvalue(new BigDecimal("4.90"));
      yxxxuq591xwwqqhxxxxxrate1f.setZ4xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxuq591xwwqqhxxxxxrate1f.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxuq591xwwqqhxxxxxrate1fHome.persist(client);
      yxxxuq591xwwqqhxxxxxrate1fHome.clearInstance();
      yxxxuq591xwwqqhxxxxxrate1f=yxxxuq591xwwqqhxxxxxrate1fHome.getInstance();
      yxxxuq591xwwqqhxxxxxrate1f.setA0xxukxxbvxxxxxxxxxxusertype("CS");
      yxxxuq591xwwqqhxxxxxrate1f.setB1xxuxxrbvxxxxxxxxxxprodtype("P");
      yxxxuq591xwwqqhxxxxxrate1f.setB2xxuxxrbv51xxxxxxxxstepname("OL");
      yxxxuq591xwwqqhxxxxxrate1f.setB4xxcxxrbvxxxxxxxxxxvalue(new BigDecimal("6.0"));
      yxxxuq591xwwqqhxxxxxrate1f.setZ4xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxuq591xwwqqhxxxxxrate1f.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxuq591xwwqqhxxxxxrate1fHome.persist(client);
      yxxxuq591xwwqqhxxxxxrate1fHome.clearInstance();
      yxxxuq591xwwqqhxxxxxrate1f=yxxxuq591xwwqqhxxxxxrate1fHome.getInstance();
      yxxxuq591xwwqqhxxxxxrate1f.setA0xxukxxbvxxxxxxxxxxusertype("CS");
      yxxxuq591xwwqqhxxxxxrate1f.setB1xxuxxrbvxxxxxxxxxxprodtype("P");
      yxxxuq591xwwqqhxxxxxrate1f.setB2xxuxxrbv51xxxxxxxxstepname("PS");
      yxxxuq591xwwqqhxxxxxrate1f.setB4xxcxxrbvxxxxxxxxxxvalue(new BigDecimal("-1.90"));
      yxxxuq591xwwqqhxxxxxrate1f.setZ4xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxuq591xwwqqhxxxxxrate1f.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxuq591xwwqqhxxxxxrate1fHome.persist(client);
      yxxxuq591xwwqqhxxxxxrate1fHome.clearInstance();
      yxxxuq591xwwqqhxxxxxrate1f=yxxxuq591xwwqqhxxxxxrate1fHome.getInstance();
      yxxxuq591xwwqqhxxxxxrate1f.setA0xxukxxbvxxxxxxxxxxusertype("CS");
      yxxxuq591xwwqqhxxxxxrate1f.setB1xxuxxrbvxxxxxxxxxxprodtype("P");
      yxxxuq591xwwqqhxxxxxrate1f.setB2xxuxxrbv51xxxxxxxxstepname("CS");//COD small
      yxxxuq591xwwqqhxxxxxrate1f.setB4xxcxxrbvxxxxxxxxxxvalue(new BigDecimal("10.00"));
      yxxxuq591xwwqqhxxxxxrate1f.setZ4xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxuq591xwwqqhxxxxxrate1f.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxuq591xwwqqhxxxxxrate1fHome.persist(client);

      yxxxuq591xwwqqhxxxxxrate1fHome.clearInstance();
      yxxxuq591xwwqqhxxxxxrate1f=yxxxuq591xwwqqhxxxxxrate1fHome.getInstance();
      yxxxuq591xwwqqhxxxxxrate1f.setA0xxukxxbvxxxxxxxxxxusertype("CS");
      yxxxuq591xwwqqhxxxxxrate1f.setB1xxuxxrbvxxxxxxxxxxprodtype("P");
      yxxxuq591xwwqqhxxxxxrate1f.setB2xxuxxrbv51xxxxxxxxstepname("PM");
      yxxxuq591xwwqqhxxxxxrate1f.setB4xxcxxrbvxxxxxxxxxxvalue(new BigDecimal("-3.90"));
      yxxxuq591xwwqqhxxxxxrate1f.setZ4xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxuq591xwwqqhxxxxxrate1f.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxuq591xwwqqhxxxxxrate1fHome.persist(client);
      yxxxuq591xwwqqhxxxxxrate1fHome.clearInstance();
      yxxxuq591xwwqqhxxxxxrate1f=yxxxuq591xwwqqhxxxxxrate1fHome.getInstance();
      yxxxuq591xwwqqhxxxxxrate1f.setA0xxukxxbvxxxxxxxxxxusertype("CS");
      yxxxuq591xwwqqhxxxxxrate1f.setB1xxuxxrbvxxxxxxxxxxprodtype("P");
      yxxxuq591xwwqqhxxxxxrate1f.setB2xxuxxrbv51xxxxxxxxstepname("CM");//COD Medium
      yxxxuq591xwwqqhxxxxxrate1f.setB4xxcxxrbvxxxxxxxxxxvalue(new BigDecimal("10.00"));
      yxxxuq591xwwqqhxxxxxrate1f.setZ4xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxuq591xwwqqhxxxxxrate1f.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxuq591xwwqqhxxxxxrate1fHome.persist(client);

      yxxxuq591xwwqqhxxxxxrate1fHome.clearInstance();
      yxxxuq591xwwqqhxxxxxrate1f=yxxxuq591xwwqqhxxxxxrate1fHome.getInstance();
      yxxxuq591xwwqqhxxxxxrate1f.setA0xxukxxbvxxxxxxxxxxusertype("CS");
      yxxxuq591xwwqqhxxxxxrate1f.setB1xxuxxrbvxxxxxxxxxxprodtype("P");
      yxxxuq591xwwqqhxxxxxrate1f.setB2xxuxxrbv51xxxxxxxxstepname("PL");
      yxxxuq591xwwqqhxxxxxrate1f.setB4xxcxxrbvxxxxxxxxxxvalue(new BigDecimal("-4.90"));
      yxxxuq591xwwqqhxxxxxrate1f.setZ4xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxuq591xwwqqhxxxxxrate1f.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxuq591xwwqqhxxxxxrate1fHome.persist(client);
      yxxxuq591xwwqqhxxxxxrate1fHome.clearInstance();
      yxxxuq591xwwqqhxxxxxrate1f=yxxxuq591xwwqqhxxxxxrate1fHome.getInstance();
      yxxxuq591xwwqqhxxxxxrate1f.setA0xxukxxbvxxxxxxxxxxusertype("CS");
      yxxxuq591xwwqqhxxxxxrate1f.setB1xxuxxrbvxxxxxxxxxxprodtype("P");
      yxxxuq591xwwqqhxxxxxrate1f.setB2xxuxxrbv51xxxxxxxxstepname("CL");//COD Large
      yxxxuq591xwwqqhxxxxxrate1f.setB4xxcxxrbvxxxxxxxxxxvalue(new BigDecimal("10.00"));
      yxxxuq591xwwqqhxxxxxrate1f.setZ4xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxuq591xwwqqhxxxxxrate1f.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxuq591xwwqqhxxxxxrate1fHome.persist(client);

      yxxxuq591xwwqqhxxxxxrate1fHome.clearInstance();
      } catch (Exception e) {
	log.severe("Error persisting rate1f"+ e);
      FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
        FacesMessage.SEVERITY_INFO,bundle.getString("rate")+ " "+bundle.getString("table")+ " "+bundle.getString("initialization")+" "+bundle.getString("failed")+ " "+e.getMessage(),""));
      }

     // truefalse table (if entry exists for an entity) can be used for reports to indicate a field should be printed or not
     // instance show00x has default values as true, so we need to set only false here(see !!!)
     // dg demographics me quantity  a1 ad hoc 1 a2 ad hoc 2 a3 ad hoc 3 fi financial used by transactions
     // !!!! if table does not exist then some default values for showxxxx are used based on dg,me prefix
     // and and a table is created for future use/modification
     // add logic in gentiltlexx never to show owner2 column
	if (yxxxch5a1xhhxxhxxxxxtruefalse == null) {
	    yxxxch5a1xhhxxhxxxxxtruefalse=yxxxch5a1xhhxxhxxxxxtruefalseHome.getInstance();
	}
     try   {
      yxxxch5a1xhhxxhxxxxxtruefalse.setA0xxukrdbvxxxxxxxxxxtablename("address");
      yxxxch5a1xhhxxhxxxxxtruefalse.setA1xxuxxxbvxxxxxxxxxxqualifier("dg");
      yxxxch5a1xhhxxhxxxxxtruefalse.setA1xxyxxxbvxxxxxxxxxxshow001(false);
      yxxxch5a1xhhxxhxxxxxtruefalse.setA1xxyxxxbvxxxxxxxxxxshow005(false);
      yxxxch5a1xhhxxhxxxxxtruefalse.setA1xxyxxxbvxxxxxxxxxxshow011(false);
      yxxxch5a1xhhxxhxxxxxtruefalse.setA1xxyxxxbvxxxxxxxxxxshow012(false);
      yxxxch5a1xhhxxhxxxxxtruefalse.setZ3xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch5a1xhhxxhxxxxxtruefalse.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch5a1xhhxxhxxxxxtruefalse.setA1xxyxxxbvxxxxxxxxxxshow014(true);
      yxxxch5a1xhhxxhxxxxxtruefalse.setA1xxyxxxbvxxxxxxxxxxshow015(false);
      yxxxch5a1xhhxxhxxxxxtruefalse.setA1xxyxxxbvxxxxxxxxxxshow016(false);
      yxxxch5a1xhhxxhxxxxxtruefalse.setA1xxyxxxbvxxxxxxxxxxshow017(false);
      yxxxch5a1xhhxxhxxxxxtruefalseHome.persist(client);
      yxxxch5a1xhhxxhxxxxxtruefalseHome.clearInstance();
//me
      yxxxch5a1xhhxxhxxxxxtruefalse=yxxxch5a1xhhxxhxxxxxtruefalseHome.getInstance();
      yxxxch5a1xhhxxhxxxxxtruefalse.setA0xxukrdbvxxxxxxxxxxtablename("address");
      yxxxch5a1xhhxxhxxxxxtruefalse.setA1xxuxxxbvxxxxxxxxxxqualifier("me");
      yxxxch5a1xhhxxhxxxxxtruefalse.setA1xxyxxxbvxxxxxxxxxxshow004(false);
      yxxxch5a1xhhxxhxxxxxtruefalse.setA1xxyxxxbvxxxxxxxxxxshow005(false);
      yxxxch5a1xhhxxhxxxxxtruefalse.setA1xxyxxxbvxxxxxxxxxxshow006(false);
      yxxxch5a1xhhxxhxxxxxtruefalse.setA1xxyxxxbvxxxxxxxxxxshow007(false);
      yxxxch5a1xhhxxhxxxxxtruefalse.setA1xxyxxxbvxxxxxxxxxxshow008(false);
      yxxxch5a1xhhxxhxxxxxtruefalse.setA1xxyxxxbvxxxxxxxxxxshow009(false);
      yxxxch5a1xhhxxhxxxxxtruefalse.setA1xxyxxxbvxxxxxxxxxxshow014(false);
      yxxxch5a1xhhxxhxxxxxtruefalse.setA1xxyxxxbvxxxxxxxxxxshow015(false);
      yxxxch5a1xhhxxhxxxxxtruefalse.setZ3xxutoxlhxxxxxxxxxxowner(ownerCode);
      yxxxch5a1xhhxxhxxxxxtruefalse.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      yxxxch5a1xhhxxhxxxxxtruefalseHome.persist(client);
      yxxxch5a1xhhxxhxxxxxtruefalseHome.clearInstance();


      } catch (Exception e) {
	log.severe("Error persisting truefalse "+ e);
      FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
       FacesMessage.SEVERITY_INFO,bundle.getString("report")+ " "+bundle.getString("setup")+ " "+bundle.getString("initialize")+ " "+bundle.getString("failed")+" "+e.getMessage(),""));
       bcontinue=false;
       return;

      }

      //
      // was reusing existing item from raaspi
      fpxxfq1a5xwwqqhxxxxxitemHome.clearInstance();
	//if (fpxxfq1a5xwwqqhxxxxxitem == null) {
	    fpxxfq1a5xwwqqhxxxxxitem=fpxxfq1a5xwwqqhxxxxxitemHome.getInstance();
	//}

        Fpxxfq1a5xwwqqhxxxxxitem fpxxfq1a5xwwqqhxxxxxitemP=null;//save parent   
     try   {
      fpxxfq1a5xwwqqhxxxxxitem.setA0xxukixbxxxxxxxxxxxmatcode("Adjustment delivery cost");//created if done via app 
      fpxxfq1a5xwwqqhxxxxxitem.setB1xxuszsbvxxxxxxxxxxdescript("Adjust delivery cost using plus/minus quantity");
      fpxxfq1a5xwwqqhxxxxxitem.setB8fbzpxxbvxxxxxxxxxxselprice(BigDecimal.ONE);
      fpxxfq1a5xwwqqhxxxxxitem.setC6xxusxrbv16xxxxxxxxtype("AD-D");
      fpxxfq1a5xwwqqhxxxxxitem.setZexxutoxlhxxxxxxxxxxowner(ownerCode);
      fpxxfq1a5xwwqqhxxxxxitem.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      fpxxfq1a5xwwqqhxxxxxitemHome.persist(client);
      fpxxfq1a5xwwqqhxxxxxitemHome.clearInstance();

      fpxxfq1a5xwwqqhxxxxxitem=fpxxfq1a5xwwqqhxxxxxitemHome.getInstance();
      fpxxfq1a5xwwqqhxxxxxitem.setA0xxukixbxxxxxxxxxxxmatcode("Adjustment Misc cost");
      fpxxfq1a5xwwqqhxxxxxitem.setB1xxuszsbvxxxxxxxxxxdescript("Adjust using plus/minus quantity");
      fpxxfq1a5xwwqqhxxxxxitem.setB8fbzpxxbvxxxxxxxxxxselprice(BigDecimal.ONE);
      fpxxfq1a5xwwqqhxxxxxitem.setC6xxusxrbv16xxxxxxxxtype("AD-M");
      fpxxfq1a5xwwqqhxxxxxitem.setZexxutoxlhxxxxxxxxxxowner(ownerCode);
      fpxxfq1a5xwwqqhxxxxxitem.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      fpxxfq1a5xwwqqhxxxxxitemHome.persist(client);
      fpxxfq1a5xwwqqhxxxxxitemHome.clearInstance();

      fpxxfq1a5xwwqqhxxxxxitem=fpxxfq1a5xwwqqhxxxxxitemHome.getInstance();
      fpxxfq1a5xwwqqhxxxxxitem.setA0xxukixbxxxxxxxxxxxmatcode("Blogs");
      fpxxfq1a5xwwqqhxxxxxitem.setB1xxuszsbvxxxxxxxxxxdescript("Blogs Album");
      fpxxfq1a5xwwqqhxxxxxitem.setC6xxusxrbv16xxxxxxxxtype("BI-L1");
      fpxxfq1a5xwwqqhxxxxxitem.setZexxutoxlhxxxxxxxxxxowner(ownerCode);
      fpxxfq1a5xwwqqhxxxxxitem.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      fpxxfq1a5xwwqqhxxxxxitemP=fpxxfq1a5xwwqqhxxxxxitem;
      fpxxfq1a5xwwqqhxxxxxitemHome.persist(client);
      fpxxfq1a5xwwqqhxxxxxitemHome.clearInstance();

      fpxxfq1a5xwwqqhxxxxxitem=fpxxfq1a5xwwqqhxxxxxitemHome.getInstance();
      fpxxfq1a5xwwqqhxxxxxitem.setA0xxukixbxxxxxxxxxxxmatcode("Blog");
      fpxxfq1a5xwwqqhxxxxxitem.setB1xxuszsbvxxxxxxxxxxdescript("Welcome blog");
      fpxxfq1a5xwwqqhxxxxxitem.setC6xxusxrbv16xxxxxxxxtype("BI-D");
      fpxxfq1a5xwwqqhxxxxxitem.setFpxxfq1a5xwwqqhxxxxxitem(fpxxfq1a5xwwqqhxxxxxitemP);
      fpxxfq1a5xwwqqhxxxxxitem.setZexxutoxlhxxxxxxxxxxowner(ownerCode);
      fpxxfq1a5xwwqqhxxxxxitem.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      fpxxfq1a5xwwqqhxxxxxitemP=fpxxfq1a5xwwqqhxxxxxitem;
      fpxxfq1a5xwwqqhxxxxxitemHome.persist(client);
      fpxxfq1a5xwwqqhxxxxxitemHome.clearInstance();

      fpxxfq1a5xwwqqhxxxxxitem=fpxxfq1a5xwwqqhxxxxxitemHome.getInstance();
      fpxxfq1a5xwwqqhxxxxxitem.setA0xxukixbxxxxxxxxxxxmatcode("Photos");
      fpxxfq1a5xwwqqhxxxxxitem.setB1xxuszsbvxxxxxxxxxxdescript("Photos Album");
      fpxxfq1a5xwwqqhxxxxxitem.setC6xxusxrbv16xxxxxxxxtype("PI-L1");
      fpxxfq1a5xwwqqhxxxxxitem.setZexxutoxlhxxxxxxxxxxowner(ownerCode);
      fpxxfq1a5xwwqqhxxxxxitem.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      fpxxfq1a5xwwqqhxxxxxitemP=fpxxfq1a5xwwqqhxxxxxitem;
      fpxxfq1a5xwwqqhxxxxxitemHome.persist(client);
      fpxxfq1a5xwwqqhxxxxxitemHome.clearInstance();

      fpxxfq1a5xwwqqhxxxxxitem=fpxxfq1a5xwwqqhxxxxxitemHome.getInstance();
      fpxxfq1a5xwwqqhxxxxxitem.setA0xxukixbxxxxxxxxxxxmatcode("Photo");
      fpxxfq1a5xwwqqhxxxxxitem.setB1xxuszsbvxxxxxxxxxxdescript("Welcome photo");
      fpxxfq1a5xwwqqhxxxxxitem.setC6xxusxrbv16xxxxxxxxtype("PI-D");//no blob image will put default
      fpxxfq1a5xwwqqhxxxxxitem.setFpxxfq1a5xwwqqhxxxxxitem(fpxxfq1a5xwwqqhxxxxxitemP);
      fpxxfq1a5xwwqqhxxxxxitem.setZexxutoxlhxxxxxxxxxxowner(ownerCode);
      fpxxfq1a5xwwqqhxxxxxitem.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      fpxxfq1a5xwwqqhxxxxxitemP=fpxxfq1a5xwwqqhxxxxxitem;
      fpxxfq1a5xwwqqhxxxxxitemHome.persist(client);
      fpxxfq1a5xwwqqhxxxxxitemHome.clearInstance();


      fpxxfq1a5xwwqqhxxxxxitem=fpxxfq1a5xwwqqhxxxxxitemHome.getInstance();
      fpxxfq1a5xwwqqhxxxxxitem.setA0xxukixbxxxxxxxxxxxmatcode("Shopping Items");
      fpxxfq1a5xwwqqhxxxxxitem.setB1xxuszsbvxxxxxxxxxxdescript("Shopping Items Category");
      fpxxfq1a5xwwqqhxxxxxitem.setC6xxusxrbv16xxxxxxxxtype("SI-L1");
      fpxxfq1a5xwwqqhxxxxxitem.setZexxutoxlhxxxxxxxxxxowner(ownerCode);
      fpxxfq1a5xwwqqhxxxxxitem.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      fpxxfq1a5xwwqqhxxxxxitemP=fpxxfq1a5xwwqqhxxxxxitem;
      fpxxfq1a5xwwqqhxxxxxitemHome.persist(client);
      fpxxfq1a5xwwqqhxxxxxitemHome.clearInstance();

      fpxxfq1a5xwwqqhxxxxxitem=fpxxfq1a5xwwqqhxxxxxitemHome.getInstance();
      fpxxfq1a5xwwqqhxxxxxitem.setA0xxukixbxxxxxxxxxxxmatcode("Item");
      fpxxfq1a5xwwqqhxxxxxitem.setB1xxuszsbvxxxxxxxxxxdescript("Item Coming soon");
      fpxxfq1a5xwwqqhxxxxxitem.setC6xxusxrbv16xxxxxxxxtype("SI-D");
      fpxxfq1a5xwwqqhxxxxxitem.setB6fbzicxbvxxxxxxxxxxcost(new BigDecimal("9.0"));
      fpxxfq1a5xwwqqhxxxxxitem.setB8fbzpxxbvxxxxxxxxxxselprice(new BigDecimal("10.0"));
      fpxxfq1a5xwwqqhxxxxxitem.setFpxxfq1a5xwwqqhxxxxxitem(fpxxfq1a5xwwqqhxxxxxitemP);
      fpxxfq1a5xwwqqhxxxxxitem.setZexxutoxlhxxxxxxxxxxowner(ownerCode);
      fpxxfq1a5xwwqqhxxxxxitem.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      fpxxfq1a5xwwqqhxxxxxitemHome.persist(client);
      fpxxfq1a5xwwqqhxxxxxitemHome.clearInstance();

      fpxxfq1a5xwwqqhxxxxxitem=fpxxfq1a5xwwqqhxxxxxitemHome.getInstance();
      fpxxfq1a5xwwqqhxxxxxitem.setA0xxukixbxxxxxxxxxxxmatcode("service");
      fpxxfq1a5xwwqqhxxxxxitem.setB1xxuszsbvxxxxxxxxxxdescript("Service-hourly");
      fpxxfq1a5xwwqqhxxxxxitem.setC6xxusxrbv16xxxxxxxxtype("SI-D");
      fpxxfq1a5xwwqqhxxxxxitem.setB8fbzpxxbvxxxxxxxxxxselprice(new BigDecimal("65.0"));
      fpxxfq1a5xwwqqhxxxxxitem.setFpxxfq1a5xwwqqhxxxxxitem(fpxxfq1a5xwwqqhxxxxxitemP);
      fpxxfq1a5xwwqqhxxxxxitem.setZexxutoxlhxxxxxxxxxxowner(ownerCode);
      fpxxfq1a5xwwqqhxxxxxitem.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      fpxxfq1a5xwwqqhxxxxxitemP=fpxxfq1a5xwwqqhxxxxxitem;
      fpxxfq1a5xwwqqhxxxxxitemHome.persist(client);
      fpxxfq1a5xwwqqhxxxxxitemHome.clearInstance();


     } catch (Exception e) {
      log.severe("Error persisting item "+ e);
      FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
        FacesMessage.SEVERITY_INFO,bundle.getString("item")+ " "+bundle.getString("setup")+ " "+bundle.getString("initialize")+ " "+bundle.getString("failed")+" "+e.getMessage(),""));
       bcontinue=false;
       return;

      }
      //for item restock
       jxxxuq300xwwqqhxxxxxvendorHome.clearInstance();
       jxxxuq300xwwqqhxxxxxvendor=jxxxuq300xwwqqhxxxxxvendorHome.getInstance();
     try   {
      jxxxuq300xwwqqhxxxxxvendor.setA0xxukxxbvxxxxxxxxxxvendor("vendor");//created if done via app 
      jxxxuq300xwwqqhxxxxxvendor.setY0xxuzsxbvxxxxxxxxxxdescript("Vendor/Supplier/Shipper");
      jxxxuq300xwwqqhxxxxxvendor.setB3xxuslnbvxxxxxxxxxxlastname("Contact last name");
      jxxxuq300xwwqqhxxxxxvendor.setB4xxu2fnbvxxxxxxxxxxfirstname("First name");
      jxxxuq300xwwqqhxxxxxvendor.setD1xxu3cnbvxxxxxxxxxxvendorascompanyname("Company name");
      jxxxuq300xwwqqhxxxxxvendor.setZhxxutoxlhxxxxxxxxxxowner(ownerCode);
      jxxxuq300xwwqqhxxxxxvendor.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      jxxxuq300xwwqqhxxxxxvendorHome.persist(client);
      jxxxuq300xwwqqhxxxxxvendorHome.clearInstance();

      jxxxuq300xwwqqhxxxxxvendor=jxxxuq300xwwqqhxxxxxvendorHome.getInstance();
      jxxxuq300xwwqqhxxxxxvendor.setA0xxukxxbvxxxxxxxxxxvendor("forPickUp");//created if done via app 
      jxxxuq300xwwqqhxxxxxvendor.setY0xxuzsxbvxxxxxxxxxxdescript("Pickup Vendor/Supplier/Shipper for Internal Use ");
      jxxxuq300xwwqqhxxxxxvendor.setB3xxuslnbvxxxxxxxxxxlastname("Contact last name");
      jxxxuq300xwwqqhxxxxxvendor.setB4xxu2fnbvxxxxxxxxxxfirstname("First name");
      jxxxuq300xwwqqhxxxxxvendor.setD1xxu3cnbvxxxxxxxxxxvendorascompanyname("For Pickup/Company name");
      jxxxuq300xwwqqhxxxxxvendor.setZhxxutoxlhxxxxxxxxxxowner(ownerCode);
      jxxxuq300xwwqqhxxxxxvendor.setZzxxu2oxxhxxxxxxxxxxowner2(client);
      jxxxuq300xwwqqhxxxxxvendorHome.persist(client);
      jxxxuq300xwwqqhxxxxxvendorHome.clearInstance();

      } catch (Exception e) {
      log.severe("Error persisting vendor "+ e);
      FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
        FacesMessage.SEVERITY_INFO,bundle.getString("vendor")+ " "+bundle.getString("setup")+ " "+bundle.getString("initialize")+ " "+bundle.getString("failed")+" "+e.getMessage(),""));
       bcontinue=false;
       return;

      }



      FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
       FacesMessage.SEVERITY_INFO,bundle.getString("setup")+ " "+bundle.getString("for")+ " "+client+" "+bundle.getString("now")+" "+bundle.getString("done"),""));

      bcontinue=true;
      return;
     }

	@Transactional
	public void setupPassword() {
        try {
	    this.resetPassword = PasswordSupport.tempPassword();
            this.instance.setC6xxuxuoivxxxxxxxxxxoldpw(resetPassword);
            this.instance.setZ1xxzzfxhhxxxxxxxxxxstatusfl(mopen);
            this.instance.setC7xxfxxxivxxxxxxxxxxtemporarypassword(true);
            this.instance.setZ1xxzzfxhhxxxxxxxxxxstatusfl(mpartial); 
	    this.instance.setC4xxuxupivxxxxxxxxxxcurrpw(PasswordSupport.hash(this.resetPassword));
	    this.instance.setC8xxuxxxbvxxxxxxxxxxpasswordhash(PasswordSupport.getHashNoon() );
	    this.instance.setZ2xxcztxlxxxxxxxxxxxstatusfldt(calendar.getTime());
            calendare.add(Calendar.HOUR, 24);
            this.instance.setC5xxcxxxbvxxxxxxxxxxexpiry(calendare.getTime() );
            this.instance.setZ1xxzzfxhhxxxxxxxxxxstatusfl(mactive);
            //FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
            //                         FacesMessage.SEVERITY_INFO,bundle.getString("temporary")+ " "+bundle.getString("password")+ " "+this.resetPassword,""));
         } catch (Exception e) {
	   log.severe("Error setupPassword"+ e);
           FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
            FacesMessage.SEVERITY_INFO,bundle.getString("setup")+ " "+bundle.getString("password")+ " "+bundle.getString("error")+ " "+e.getMessage(),""));
         }

      return;


    }

       public int getStength(String password){
        //total score of password
        int iPasswordScore = 0;
        
        if( password.length() < 4 )
            return 0;
        else if( password.length() >= 8 )
            iPasswordScore += 2;
        else 
            iPasswordScore += 1;
        
        //if it contains one digit, add 2 to total score
        if( password.matches("(?=.*[0-9]).*") )
            iPasswordScore += 2;
        
        //if it contains one lower case letter, add 2 to total score
        if( password.matches("(?=.*[a-z]).*") )
            iPasswordScore += 2;
        
        //if it contains one upper case letter, add 2 to total score
        if( password.matches("(?=.*[A-Z]).*") )
            iPasswordScore += 2;    
        
        //if it contains one special character, add 2 to total score
        if( password.matches("(?=.*[~!@#$%^&*()_-]).*") )
            iPasswordScore += 2;
        
        return iPasswordScore;
       }

        //invoked by Home.xhtml
	public void changePassword() {
		log.info("changing password #0 "+ customIdentity.getUsername()+", "+owner2Code);
                // send email
                //Emailsend("/password_change_info.xhtml");
                //Emailsend("/password_reset_info.xhtml");

		Yxxxuh566xwwqqwxxxxxuser user = (Yxxxuh566xwwqqwxxxxxuser) entityManager
				.createQuery(
						"select cc from Yxxxuh566xwwqqwxxxxxuser cc where cc.a0xxukuxbvxxxxxxxxxxid = :username and cc.zzxxu2oxxhxxxxxxxxxxowner2 = :owner2 order by cc.a0xxuobxbxxxxxxxxxxxsid asc")
				.setParameter("username", customIdentity.getUsername())
				.setParameter("owner2", owner2Code).getSingleResult();
		if (user.getC4xxuxupivxxxxxxxxxxcurrpw().equals("ssoPW")) {
                 FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                  FacesMessage.SEVERITY_ERROR,bundle.getString("sso")+" "+bundle.getString("password")+" "+bundle.getString("cannot")+" "+bundle.getString("be")+" "+bundle.getString("changed")+" "+bundle.getString("here"),""));

                 FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                  FacesMessage.SEVERITY_ERROR,bundle.getString("try")+" "+bundle.getString("original")+" "+bundle.getString("signon")+" "+bundle.getString("site")+"- "+user.getC6xxuxuoivxxxxxxxxxxoldpw(),""));

   		 return;
                } 
		if (user.getC4xxuxupivxxxxxxxxxxcurrpw().equals("dummyfbPW")) {
                 FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                  FacesMessage.SEVERITY_ERROR,bundle.getString("facebook")+"/ "+bundle.getString("google")+" "+bundle.getString("password")+" "+bundle.getString("cannot")+" "+bundle.getString("be")+" "+bundle.getString("changed")+" "+bundle.getString("here"),""));

                 FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                  FacesMessage.SEVERITY_ERROR,bundle.getString("try")+" "+bundle.getString("facebook")+"/ "+bundle.getString("google")+" "+bundle.getString("site"),""));

   		 return;
                } 

		sid = user.getA0xxuobxbxxxxxxxxxxxsid();
		if (this.getResetPassword().equals(verify)) {
                 // pw validation and stength checker atleast 4 chrs
                 int score=getStength(verify);
                 if(score ==0){
                  FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                   FacesMessage.SEVERITY_ERROR,bundle.getString("Password")+" "+bundle.getString("minimum")+" "+bundle.getString("length")+" "+bundle.getString("four")+", "+bundle.getString("recommend")+" "+bundle.getString("eight")+" "+bundle.getString("or")+" "+bundle.getString("more"),""));
                  return;                 
                 }
 
                 // clear home to avoid detached entity
                 yxxxuh566xwwqqwxxxxxuserHome.clearInstance();
                 yxxxuh566xwwqqwxxxxxuserHome.setId(sid);
                 user=yxxxuh566xwwqqwxxxxxuserHome.getDefinedInstance();
                  user.setC4xxuxupivxxxxxxxxxxcurrpw(PasswordSupport.hash(verify) );
                  user.setC8xxuxxxbvxxxxxxxxxxpasswordhash(PasswordSupport.getHashNoon() );
                  user.setZ2xxcztxlxxxxxxxxxxxstatusfldt(calendar.getTime());
                 user.setC7xxfxxxivxxxxxxxxxxtemporarypassword(false);
                 user.setC5xxcxxxbvxxxxxxxxxxexpiry(null);
                 inChangePassword=true;
                 inCreateUser=false;
                 yxxxuh566xwwqqwxxxxxuserHome.persist();
                 FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                  FacesMessage.SEVERITY_INFO," ",""));
                 FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                  FacesMessage.SEVERITY_INFO,bundle.getString("password")+" "+bundle.getString("updated")+" "+bundle.getString("and")+" "+bundle.getString("in")+" "+bundle.getString("effect")+", "+bundle.getString("use")+" "+bundle.getString("Done")+" "+bundle.getString("to")+" "+bundle.getString("close"),""));
                 if(score <= 3){
                  FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                   FacesMessage.SEVERITY_ERROR,bundle.getString("Password")+" "+bundle.getString("strength")+" "+bundle.getString("Poor")+", "+bundle.getString("use")+" "+bundle.getString("long")+" "+bundle.getString("password")+" "+bundle.getString("with")+" "+bundle.getString("digits")+", "+bundle.getString("lower")+" "+bundle.getString("uppercase")+" "+bundle.getString("special")+" "+bundle.getString("characters")+" "+bundle.getString("and")+" "+bundle.getString("change")+" "+bundle.getString("periodically"),""));
                 }
                 if(score > 3 && score <= 7){
                  FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                   FacesMessage.SEVERITY_ERROR,bundle.getString("Password")+" "+bundle.getString("strength")+" "+bundle.getString("Medium")+", "+bundle.getString("use")+" "+bundle.getString("long")+" "+bundle.getString("password")+" "+bundle.getString("with")+" "+bundle.getString("digits")+", "+bundle.getString("lower")+" "+bundle.getString("uppercase")+" "+bundle.getString("special")+" "+bundle.getString("characters")+" "+bundle.getString("and")+" "+bundle.getString("change")+" "+bundle.getString("periodically"),""));
                 }
                 if(score >7){
                  FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                   FacesMessage.SEVERITY_ERROR,bundle.getString("Password")+" "+bundle.getString("strength")+" "+bundle.getString("Good")+", "+bundle.getString("use")+" "+bundle.getString("long")+" "+bundle.getString("password")+" "+bundle.getString("with")+" "+bundle.getString("digits")+", "+bundle.getString("lower")+" "+bundle.getString("uppercase")+" "+bundle.getString("special")+" "+bundle.getString("characters")+" "+bundle.getString("and")+" "+bundle.getString("change")+" "+bundle.getString("periodically"),""));
                 }

                 this.credentials.setPassword(this.getResetPassword());
 		 changed = true;
                 this.setResetPassword(null);
		} else {
                 FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                  FacesMessage.SEVERITY_ERROR,bundle.getString("verify")+", "+bundle.getString("new")+" "+bundle.getString("and")+" "+bundle.getString("retyped")+" "+bundle.getString("values")+" "+bundle.getString("not")+" "+bundle.getString("equal"),""));

		 revertUser();
		 verify = null;
		}
	}

	public boolean isChanged() {
		return changed;
	}

	private void revertUser() {
		yxxxuh566xwwqqwxxxxxuserHome.setYxxxuh566xwwqqwxxxxxuserA0xxuobxbxxxxxxxxxxxsid(sid);
		user = yxxxuh566xwwqqwxxxxxuserHome.getDefinedInstance();

	}
	public String getVerify() {
		return verify;
	}
	public void setVerify(String verify) {
		this.verify = verify;
	}
/*  not used replaced by array of array availableItems
    private static final String[] EE = { "", "Retail Bakery","Clothing","Shoes","Beauty Products","Health Foods","Others" };
    private static final String[] EF = { "", "Industrial Products", "Consumer","Wholesale","Clothing","Others" };
    private static final String[] EL = { "", "Pathology","Medica Imaging","Others"};
    private static final String[] OA = { "", "College Alumni","School Alumni","Community Organization","Events Organizer","Others" };
    private static final String[] OC = { "", "Community Club","Photography","Others" };
    private static final String[] SC = { "", "IT Consulting","Financial Consulting","Others" };
    private static final String[] SA = { "", "Insurance Agency","Service for a fee","Maid Service ","Others" };
    private static final String[] FS = { "", "Community ","Family","Others" };
    private static final String[] FB = { "", "Software","Consumer Products","Others" };
    private String currentItem = "";
    private String currentType = "";
    private List<SelectItem> firstList = new ArrayList<SelectItem>();
    private List<SelectItem> secondList = new ArrayList<SelectItem>();

 
        SelectItem itemj = new SelectItem("", "");
 
  {      firstList.add(itemj);
        itemj = new SelectItem("ee", "Business Ecommerce");
        firstList.add(itemj);
        itemj = new SelectItem("ef", "Manufacturing ERP");
        firstList.add(itemj);
        itemj = new SelectItem("el", "Lab Environment");
        firstList.add(itemj);
        itemj = new SelectItem("oa", "Association/Organization");
        firstList.add(itemj);
        itemj = new SelectItem("oc", "Association/Club");
        firstList.add(itemj);
        itemj = new SelectItem("sc", "Service Consulting");
        firstList.add(itemj);
        itemj = new SelectItem("sa", "Service Agency");
        firstList.add(itemj);
        itemj = new SelectItem("fs", "Users Forum Pictures/News");
        firstList.add(itemj);
        itemj = new SelectItem("fb", "Users Forum Issues/Bugs");
        firstList.add(itemj);
 
        for (int i = 0; i < EE.length; i++) {
            itemj = new SelectItem(EE[i]);
        }
*/

//  used by register.xhtml, curly bracket means static method invoked at bean start. list of selectItem group
    private List<SelectItem> availableItems = new ArrayList<SelectItem>();
  {
    SelectItemGroup group1 = new SelectItemGroup("Business Ecommerce");
    group1.setSelectItems(new SelectItem[] {
        new SelectItem("eege", "Generic Business"),
        new SelectItem("eerb", "Retail Bakery"),
        new SelectItem("eecl", "Clothing"),
        new SelectItem("eesh", "Shoes"),
        new SelectItem("eebp", "Beauty Products"),
        new SelectItem("eehf", "Health Foods"),
        new SelectItem("eest", "Shopify Backoffice AddOn"),
        new SelectItem("eeot", "Business-Others")
    });

    availableItems.add(group1);

    SelectItemGroup group2 = new SelectItemGroup("Manufacturing ERP");
    group2.setSelectItems(new SelectItem[] {
        new SelectItem("efge", "Generic Manufacturing"),
        new SelectItem("efip", "Industrial Products"),
        new SelectItem("efco", "Consumer"),
        new SelectItem("efwh", "Wholesale"),
        new SelectItem("efcl", "Clothing"),
        new SelectItem("efot", "Manufacturing-Others")
    });
    availableItems.add(group2);
    SelectItemGroup group3 = new SelectItemGroup("Lab Environment");
    group3.setSelectItems(new SelectItem[] {
        new SelectItem("elge", "Generic Lab"),
        new SelectItem("elpa", "Pathology"),
        new SelectItem("elmi", "Medical Imaging"),
        new SelectItem("elot", "Lab-Others")
    });
    availableItems.add(group3);
    SelectItemGroup group4 = new SelectItemGroup("Association/Organization");
    group4.setSelectItems(new SelectItem[] {
        new SelectItem("oage", "Generic Association"),
        new SelectItem("oaca", "College Alumni"),
        new SelectItem("oasa", "School Alumni"),
        new SelectItem("oaco", "Community Organization"),
        new SelectItem("oaeo", "Events Organizer"),
        new SelectItem("oaot", "Organization-Others")
    });
    availableItems.add(group4);
    SelectItemGroup group5 = new SelectItemGroup("Association/Club");
    group5.setSelectItems(new SelectItem[] {
        new SelectItem("ocge", "Generic Club"),
        new SelectItem("occc", "Community Club"),
        new SelectItem("ocph", "Photography"),
        new SelectItem("ocsp", "Sports"),
        new SelectItem("oche", "Health"),
        new SelectItem("ocot", "Club-Others")
    });
    availableItems.add(group5);
    SelectItemGroup group6 = new SelectItemGroup("Service Consulting");
    group6.setSelectItems(new SelectItem[] {
        new SelectItem("scge", "Generic Consulting"),
        new SelectItem("scic", "IT Consulting"),
        new SelectItem("scfc", "Financial Consulting"),
        new SelectItem("scot", "Consulting-Others")
    });
    availableItems.add(group6);
    SelectItemGroup group7 = new SelectItemGroup("Service Agency");
    group7.setSelectItems(new SelectItem[] {
        new SelectItem("sage", "Generic Agency"),
        new SelectItem("sacs", "Cleaning Services"),
        new SelectItem("saia", "Insurance Agency"),
        new SelectItem("salc", "Learning Center"),
        new SelectItem("sasf", "Service for a fee"),
        new SelectItem("sams", "Maid Service"),
        new SelectItem("sals", "Landscaping Service"),
        new SelectItem("sars", "Renovation Service"),
        new SelectItem("saot", "Agency-Others")
    });
    availableItems.add(group7);
    SelectItemGroup group8 = new SelectItemGroup("Users Forum Pictures/News");
    group8.setSelectItems(new SelectItem[] {
        new SelectItem("fsge", "Generic News Forum"),
        new SelectItem("fsco", "Community"),
        new SelectItem("fsfa", "Family"),
        new SelectItem("fsot", "Forum-Others")
    });
    availableItems.add(group8);
    SelectItemGroup group9 = new SelectItemGroup("Users Forum Issues/Bugs");
    group9.setSelectItems(new SelectItem[] {
        new SelectItem("fbge", "Generic Users Forum"),
        new SelectItem("fbso", "Software"),
        new SelectItem("fbcp", "Consumer Products"),
        new SelectItem("fbot", "Issues-Others")
    });
    availableItems.add(group9);


  }

    // client field proddesc is from shopping item description, not exact prod and subprod breakdown
    public int getProductGroupIndex(String p){
        int i=0;
        if(p.length()>2){
         p=p.substring(0,2);
        }
        switch(p){
         case "ee":
                 i=0;
                 break;
         case "ef":
                 i=1;
                 break;

         case "el":
                 i=2;
                 break;
         case "oa":
                 i=3;
                 break;
         case "oc":
                 i=4;
                 break;
         case "sc":
                 i=5;
                 break;
         case "sa":
                 i=6;
                 break;
         case "fs":
                 i=7;
                 break;
         case "fb":
                 i=8;
                 break;
        }//switch 
        //use the avaliableItems array inedex for a group/product to get group selectItems 
        //avaliableItems[i].selectItems for subproduct options for a group
        return i;
    }
  
    public String getProductLabel(String ps) {
        String prodNSub="";
        if(ps == null || ps.isEmpty()){
         yxxxch522xhhxxhxxxxxclient = yxxxch522xhhxxhxxxxxclientList.getKeyToEntity("01");
         prodNSub=yxxxch522xhhxxhxxxxxclient.getG2xxuxpclvxxxxxxxxxxprodcode();
        }else{
         prodNSub=ps;
        }
        String p=prodNSub.substring(0,2);
        //String s=prodNSub.substring(2,4);
        int i=getProductGroupIndex(p);
        String hh=this.getAvailableItems().get(i).getLabel();
        for(SelectItem item : this.getAvailableItems()){
         if (item instanceof SelectItemGroup) {
          SelectItem subitems[]=((SelectItemGroup)item).getSelectItems();
          if ((subitems != null) && (subitems.length > 0)) {
           for(SelectItem subitem : subitems){
            if(subitem.getValue().equals(prodNSub) ){
             prodNSub=subitem.getLabel();
             break;
            }
           }
          }
         }
        }     
        return prodNSub;     
    }

   public boolean saveProductNSubProduct(String newprodCode) {
    try{
     Yxxxch522xhhxxhxxxxxclient client = yxxxch522xhhxxhxxxxxclientList.getKeyToEntity("01"); 
     if(client == null){
	    log.severe("Error getting null client record for "+owner2Code);
            FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
             FacesMessage.SEVERITY_ERROR,bundle.getString("error")+ " "+bundle.getString("getting")+ " "+bundle.getString("setup")+ " "+bundle.getString("record"),""));
            return false;  
     }
     client.setG2xxuxpclvxxxxxxxxxxprodcode(newprodCode);
     yxxxch522xhhxxhxxxxxclientHome.clearInstance();
     yxxxch522xhhxxhxxxxxclientHome.setInstance(client);
     yxxxch522xhhxxhxxxxxclientHome.superUpdate();
     FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
      FacesMessage.SEVERITY_ERROR,bundle.getString("Changed")+ " "+bundle.getString("to")+ " "+getProductLabel(newprodCode)+", "+bundle.getString("may")+" "+bundle.getString("use")+" "+bundle.getString("setups")+ "/ "+bundle.getString("page")+ " "+bundle.getString("customization")+ "/ "+bundle.getString("edit")+ " "+bundle.getString("options")+ " "+bundle.getString("for")+ " "+bundle.getString("using")+ " "+bundle.getString("prebuilt")+ " "+bundle.getString("themes"),""));

     return true;    
    } catch (Exception e) {
	    log.severe("Error saving new prodcode"+ e);
            FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
             FacesMessage.SEVERITY_ERROR,bundle.getString("error")+ " "+bundle.getString("saving")+ " "+bundle.getString("new")+ " "+bundle.getString("product")+ " "+bundle.getString("code")+ " - "+e.getMessage(),""));
            return false;  
    }

   } 


/* 
    public List<SelectItem> getFirstList() {
        return firstList;
    }
 
    public List<SelectItem> getSecondList() {
        return secondList;
    }
*/
    public List<SelectItem> getAvailableItems() {
        return availableItems;
    }

    public List<SelectItem> setAvailableItems(int group) {
        if(group == 1){
    availableItems = new ArrayList<SelectItem>();

    SelectItemGroup group1 = new SelectItemGroup("Business Ecommerce");
    group1.setSelectItems(new SelectItem[] {
        new SelectItem("eege", "Generic Business"),
        new SelectItem("eerb", "Retail Bakery"),
        new SelectItem("eecl", "Clothing"),
        new SelectItem("eesh", "Shoes"),
        new SelectItem("eebp", "Beauty Products"),
        new SelectItem("eehf", "Health Foods"),
        new SelectItem("eest", "Shopify Backoffice AddOn"),
        new SelectItem("eeot", "Business-Others")
    });

    availableItems.add(group1);


        }

        if(group == 2){
    availableItems = new ArrayList<SelectItem>();
    SelectItemGroup group2 = new SelectItemGroup("Manufacturing ERP");
    group2.setSelectItems(new SelectItem[] {
        new SelectItem("efge", "Generic Manufacturing"),
        new SelectItem("efip", "Industrial Products"),
        new SelectItem("efco", "Consumer"),
        new SelectItem("efwh", "Wholesale"),
        new SelectItem("efcl", "Clothing"),
        new SelectItem("efot", "Manufacturing-Others")
    });
    availableItems.add(group2);

        }

        if(group == 3){
    availableItems = new ArrayList<SelectItem>();
    SelectItemGroup group3 = new SelectItemGroup("Lab Environment");
    group3.setSelectItems(new SelectItem[] {
        new SelectItem("elge", "Generic Lab"),
        new SelectItem("elpa", "Pathology"),
        new SelectItem("elmi", "Medical Imaging"),
        new SelectItem("elot", "Lab-Others")
    });
    availableItems.add(group3);

        }

        if(group == 45){
    availableItems = new ArrayList<SelectItem>();
    SelectItemGroup group4 = new SelectItemGroup("Association/Organization");
    group4.setSelectItems(new SelectItem[] {
        new SelectItem("oage", "Generic Association"),
        new SelectItem("oaca", "College Alumni"),
        new SelectItem("oasa", "School Alumni"),
        new SelectItem("oaco", "Community Organization"),
        new SelectItem("oaeo", "Events Organizer"),
        new SelectItem("oaot", "Organization-Others")
    });
    availableItems.add(group4);
    SelectItemGroup group5 = new SelectItemGroup("Association/Club");
    group5.setSelectItems(new SelectItem[] {
        new SelectItem("ocge", "Generic Club"),
        new SelectItem("occc", "Community Club"),
        new SelectItem("ocph", "Photography"),
        new SelectItem("ocsp", "Sports"),
        new SelectItem("oche", "Health"),
        new SelectItem("ocot", "Club-Others")
    });
    availableItems.add(group5);

        }
        
        if(group == 67){
    availableItems = new ArrayList<SelectItem>();
    SelectItemGroup group6 = new SelectItemGroup("Service Consulting");
    group6.setSelectItems(new SelectItem[] {
        new SelectItem("scge", "Generic Consulting"),
        new SelectItem("scic", "IT Consulting"),
        new SelectItem("scfc", "Financial Consulting"),
        new SelectItem("scot", "Consulting-Others")
    });
    availableItems.add(group6);
    SelectItemGroup group7 = new SelectItemGroup("Service Agency");
    group7.setSelectItems(new SelectItem[] {
        new SelectItem("sage", "Generic Agency"),
        new SelectItem("sacs", "Cleaning Services"),
        new SelectItem("saia", "Insurance Agency"),
        new SelectItem("salc", "Learning Center"),
        new SelectItem("sasf", "Service for a fee"),
        new SelectItem("sams", "Maid Service"),
        new SelectItem("sals", "Landscaping Service"),
        new SelectItem("sars", "Renovation Service"),
        new SelectItem("saot", "Agency-Others")
    });
    availableItems.add(group7);
        }

        if(group == 89){
    availableItems = new ArrayList<SelectItem>();
    SelectItemGroup group8 = new SelectItemGroup("Users Forum Pictures/News");
    group8.setSelectItems(new SelectItem[] {
        new SelectItem("fsge", "Generic News Forum"),
        new SelectItem("fsco", "Community"),
        new SelectItem("fsfa", "Family"),
        new SelectItem("fsot", "Forum-Others")
    });
    availableItems.add(group8);
    SelectItemGroup group9 = new SelectItemGroup("Users Forum Issues/Bugs");
    group9.setSelectItems(new SelectItem[] {
        new SelectItem("fbge", "Generic Users Forum"),
        new SelectItem("fbso", "Software"),
        new SelectItem("fbcp", "Consumer Products"),
        new SelectItem("fbot", "Issues-Others")
    });
    availableItems.add(group9);
        }

        return availableItems;
    }


/* 
    public static String[] getEE() {
        return EE;
    }
 
    public static String[] getEF() {
        return EF;
    }
 
    public void valueChanged(ValueChangeEvent event) {
        secondList.clear();
        if (null != event.getNewValue()) {
            String[] currentItems=EE;
            if (((String) event.getNewValue()).equals("ee")) {
                currentItems = EE;
            } else {
                if (((String) event.getNewValue()).equals("ef")){
                 currentItems = EF;
                } else {
                 if (((String) event.getNewValue()).equals("el")){
                  currentItems = EL;
                 } else {
                  if (((String) event.getNewValue()).equals("oa")){
                   currentItems = OA;
                  } else {
                   if (((String) event.getNewValue()).equals("oc")){
                    currentItems = OC;
                   } else {
                    if (((String) event.getNewValue()).equals("sc")){
                     currentItems = SC;
                    } else {
                     if (((String) event.getNewValue()).equals("sa")){
                      currentItems = SA;
                     } else {
                      if (((String) event.getNewValue()).equals("fs")){
                       currentItems = FS;
                      } else {
                       if (((String) event.getNewValue()).equals("fb")){
                        currentItems = FB;
                       } else {
                        currentItems = EE;
                       }
                      }
                     }
                    }
                   }
                  }
                 }
                }
            }
 
            for (int i = 0; i < currentItems.length; i++) {
                SelectItem itemj = new SelectItem(currentItems[i]);
 
                secondList.add(itemj);
            }
        }
    }
 
    public String getCurrentType() {
        return currentType;
    }
 
    public void setCurrentType(String currentType) {
        this.currentType = currentType;
    }
 
    public String getCurrentItem() {
        return currentItem;
    }
 
    public void setCurrentItem(String currentItem) {
        this.currentItem = currentItem;
    }
*/

    /**
     * After a user is authenticated using Facebook Connect, authenticate with
     * Seam.
     */
    private String fbUid;
    private String fbEmail;
    private String fbName;
    private String fbFirst_Name;
    private String fbLast_Name;
    private String fbGender;
    private String demo="n";

    public String getFbUid() {
        return fbUid;
    }
    public void setFbUid(String fbUid) {
        this.fbUid = fbUid;
    }

    public String getFbEmail() {
        return fbEmail;
    }
    public void setFbEmail(String fbEmail) {
        this.fbEmail = fbEmail;
    }
     public String getFbName() {
        return fbName;
    }
    public void setFbName(String fbName) {
        this.fbName = fbName;
    }
     public String getFbFirst_Name() {
        return fbFirst_Name;
    }
    public void setFbFirst_Name(String fbFirst_Name) {
        this.fbFirst_Name = fbFirst_Name;
    }

    public String getFbLast_Name() {
        return fbLast_Name;
    }
    public void setFbLast_Name(String fbLast_Name) {
        this.fbLast_Name = fbLast_Name;
    }

    public String getFbGender() {
        return fbGender;
    }
    public void setFbGender(String fbGender) {
        this.fbGender = fbGender;
    }

    public String getDemo() {
        return demo;
    }
    public void setDemo(String demo) {
        this.demo = demo;
    }

    public boolean getInCreateUser() {
        return inCreateUser;
    }
    public void setInCreateUser(boolean inCreateUser) {
        this.inCreateUser = inCreateUser;
    }
    /*
      allow social media demo sigin without activation since cannot impersonate
    */
    public Boolean chekIfDemo(){
     if(owner2Code.equals("mybusinessp") || owner2Code.equals("myorgp") || owner2Code.equals("mycustommade")){     
      demo="y";//demo y means in onfbLogin UH will be used instead of VH 
      return true;
     }else{
      demo="n";//demo y means in onfbLogin UH will be used instead of VH 
      return false;
     }     

    }

    /***
    * comes from sociallogin.xhtml via jsfunction action for any Social login including FbLogin
    * This method is not invoked unless client side fb/google authentication works
    * socialLogin page is under raaspi site and redirected to from login.xhtml via h:outputLink with  
    * parameter 'for' holding from owner2 value ie the site it came from
    * hmac needed ?  
    */
    public String onSocialLogin() {
        //should not come here unless javascript social authentication completed but parameters can be null
        // post param null unless socialLogin page has toolbar calling methods
        // not needed, reuse existing req = (HttpServletRequest) FacesContext.getCurrentInstance()
        //                 .getExternalContext().getRequest();
        String fromUrl=req.getParameter("fromUrl");
        String forSite=req.getParameter("for");
        //ignore if raaspi is using raaspi to authenticate 2nd time
        if(owner2Code.contains(masterSiteCode) && (fromUrl == null || forSite == null)){
          log.severe("Error ,raaspi socialLogin fromUrl and for value "+fromUrl+", "+forSite);
         return null;
        }
        try{
         if(fromUrl == null || forSite == null){//should not happen but 
          log.severe("Error ,socialLogin owner2Code ,fromUrl and for value "+owner2Code+", "+fromUrl+", "+forSite);
          FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
           FacesMessage.SEVERITY_INFO,bundle.getString("Parameter") +" "+bundle.getString("missing")+", "+bundle.getString("close")+" "+bundle.getString("and")+" "+bundle.getString("try")+" "+bundle.getString("again"),""));
           externalContext.redirect(fromUrl);//back to calling site using fromUrl
         }
         //Below code runs in Raaspi site
         owner2Code=forSite;
         String uid = FacesContext.getCurrentInstance().getExternalContext().getRequestParameterMap().get("uid");
         String email = FacesContext.getCurrentInstance().getExternalContext().getRequestParameterMap().get("email");
         //String uid = getFbUid();
         //String email = getFbEmail();  
         String fromUrlS="";
          log.severe("Ok ,socialLogin owner2Code ,fromUrl and for value and uid "+owner2Code+", "+fromUrl+", "+forSite+" ,"+uid);

         if (uid != null ) {//means autnticated by social login
          agreedToTermsOfUse=true;// avoid demosignup if social login
          agreedToTermsOfUsefb=true;//avoid signup 
          Yxxxuh566xwwqqwxxxxxuser user = findByFacebookUID(uid);
          if (user != null) {
                //loginFacebookUser(user); return and invoke onSocialAuthenticated/userLogin from original site
          
          } else {
                user = registerFacebookUser(uid, email);//create user record and assign user Role and Level
                //loginFacebookUser(user);// allow U/H if demo site. return and invoke onSocialAuthenticated/userLogin from original site
          }
          FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
           FacesMessage.SEVERITY_INFO,bundle.getString("Welcome") +" "+getFbName()+"/"+getFbUid(),""));
          //pass from fromsite client sid+6;
          String userKey=user.getA0xxukuxbvxxxxxxxxxxid();
          String userOtherId=user.getC1xxuxxxbvxxxxxxxxxxotherid();
          //String social=""+yxxxch522xhhxxhxxxxxclientList.getKeyToEntity("01",owner2Code).getA0xxuobxbxxxxxxxxxxxsid()+6;
          String social= java.util.UUID.randomUUID().toString();
          user.setC4xxuxupivxxxxxxxxxxcurrpw("dummyfbPW");//
          user.setC6xxuxuoivxxxxxxxxxxoldpw(social);
          this.clearInstance();
          this.setInstance(user);
          superUpdate();
          //can come here from login or from demosoignup
          fromUrlS=fromUrl;
          fromUrlS=fromUrlS.replace("login","socialLogin");
          fromUrlS=fromUrlS.replace("demosignup","socialLogin");
          externalContext.redirect(fromUrlS+"?social="+social+"&"+"userKey="+userKey+"&"+"userOtherId="+userOtherId);//back to calling site using fromUrl
         }else{
          //log
          log.severe("Error ,fb uid null email "+ email);
         }
        }catch (Exception exc) {
            try {
             log.severe("Error fb login exception "+ exc.getMessage());
                //org.jboss.seam.transaction.Transaction.instance().setRollbackOnly();
            } catch (Exception ignore) {
            }
        }
        return null;
    }
    public String onSocialAuthenticated() {
        Map<String,String> params = 
        FacesContext.getCurrentInstance().getExternalContext().getRequestParameterMap();
        String social=params.get("social"); 
        String userKey=params.get("userKey"); 
        user=yxxxuh566xwwqqwxxxxxuserList.getKeyToEntity(userKey);
        String socialO=user.getC6xxuxuoivxxxxxxxxxxoldpw();
        if(!social.equals(socialO)){//following msg wont appear because of redirect
         FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
          FacesMessage.SEVERITY_INFO,bundle.getString("Authentication") +" "+bundle.getString("mismatch")+", "+bundle.getString("please")+" "+bundle.getString("Cancel")+", "+" "+bundle.getString("then")+" "+bundle.getString("try")+" "+bundle.getString("again"),""));
         return "home.xhtml?faces-redirect=true";
        }
        loginFacebookUser(user);
        return "home.xhtml?faces-redirect=true";
    }



    /**
     * called by above onFbLogin method but following should use from site records not Raaspi site data
     * where proxy socialLogin runs 
     * Updates the user information stored in our database with the data from
     * Facebook. jay look into updating if changed
     */
    protected void loginFacebookUser(Yxxxuh566xwwqqwxxxxxuser user) {
     //setOption16 in customIdentity to pass fb loginId to authenticate
     // option16 regular use is for itemTyle and value is loaded from option table
     // jay add logic to update user info if new info comes from fb
     try{
      fbUid=user.getA0xxukuxbvxxxxxxxxxxid();//registerFac.method saved Uid as userKey
      customIdentity.setOption16(fbUid);
      customIdentity.setUserSid(-1);
      //Identity.instance().acceptExternallyAuthenticatedPrincipal(new FacebookPrincipal(fbUid)); bypasses authenticate including roles
      identity.login();
      ///login calls autenticate authenticator.authenticate();
      // increase session time out to 40 mts 40*60 secs from standard 10 mts 10*60 secs
      //if attack comes every sec then max session 500 will be reached in 8 mts but in another
      // 2 mts oldest will be removed. The IP/user agent should prevent it. We may make 500 to 700
      //look into standard as 5*60 and check url if invoice.cart or checkout then 10*60 
      if(identity.isLoggedIn()){
       session.setMaxInactiveInterval(2400);//40 mts
      }

     } catch (Exception e) {
     } 
    }


    /**
     * Registers a new user on-the-fly after authenticating with Facebook for
     * the first time.
     * setup values and then call existing doSignup()
     */
    protected Yxxxuh566xwwqqwxxxxxuser registerFacebookUser(String uid, String email) {
        user = new Yxxxuh566xwwqqwxxxxxuser();
        if(fbEmail == null){
         user.setA0xxukuxbvxxxxxxxxxxid(fbUid);//we need to get email from paypal/square etc or explicitly ask in checkout time
         user.setC1xxuxxxbvxxxxxxxxxxotherid(fbName);//and save in customer record
        }else{
         user.setA0xxukuxbvxxxxxxxxxxid(fbUid);
         user.setC1xxuxxxbvxxxxxxxxxxotherid(fbEmail);
         user.setC9xxuxxxbvxxxxxxxxxxactivationkey(fbName);
        }
        user.setZ5xxutoxlhxxxxxxxxxxowner(ownerCode);
        user.setZzxxu2oxxhxxxxxxxxxxowner2(owner2Code);
        user.setZ2xxcztxlxxxxxxxxxxxstatusfldt(Calendar.getInstance().getTime());
        user.setZ1xxzzfxhhxxxxxxxxxxstatusfl(mopen);//

        // use the folloing 2 and if null use fbName for customer
        // doSignup will put logon id address as key since we are not getting any info from fb
        if(fbFirst_Name == null){
         this.setA0xxukuxbvxxxxxxxxxxid2(fbName.substring(fbName.length()-1));
        }else{
         this.setA0xxukuxbvxxxxxxxxxxid2(fbFirst_Name);
        } 
        if(fbLast_Name == null){
         this.setClientName(fbName);
        }else{
         this.setClientName(fbLast_Name);
        } 
  
        this.setClientEmail(fbEmail);
        Long now = System.currentTimeMillis();

        this.doSignup();
        return user;
    }

    /**
     * After the user logs out of their Facebook session, logout of the Seam
     * session.
     */
    public String onFbLogout() {
        //Contexts.getSessionContext().remove("currentUser");
        //Identity.instance().logout();
        return "";
    }

    /**
     * Lookup a User by their Facebook UID
     */
    protected Yxxxuh566xwwqqwxxxxxuser findByFacebookUID(String uid) {
        Query q = entityManager.createQuery("select u from Yxxxuh566xwwqqwxxxxxuser u where u.a0xxukuxbvxxxxxxxxxxid=:uid and u.zzxxu2oxxhxxxxxxxxxxowner2 = :owner2 order by cc.a0xxuobxbxxxxxxxxxxxsid asc");
        q.setParameter("uid", uid).setParameter("owner2", owner2Code);
        Yxxxuh566xwwqqwxxxxxuser user = null;
        try {
            user = (Yxxxuh566xwwqqwxxxxxuser) q.getSingleResult();
        } catch (javax.persistence.NoResultException nre) {
            // safe to ignore!
        }
        return user;
    }

//end of userHome














	public String getOwner2Code() {
		return owner2Code;
	}

	public void setOwner2Code(String owner2Code) {
                if(this.owner2Code.equals(masterSiteCode)){
		 this.owner2Code = owner2Code;//allow change for POS, only if the site is raaspi
                }
	}


/**
*  cartpersist can be used where detail items are iterated over as in shopping cart or back office order processing for one or more items
*  this method is called for one item at a time
*  it has 3 flavours- o if a new item is added, u if existing item is removed , c if some change like qty for any of the items
*  o a new item is added
*    Po null means say a new order as well
*    Po not null means a new item for say an existing order
*  u existing item removed from say order
*  c change existing item from say order or invoice ...
*   call update
*    updatecdetailsetValues
*    showrunt recalcultes and updates variables
*    persistrunt copies the variable values into instance property values
*    superdotupdate to persist
*see R3RestClient SyncDataOrders 
*
*/
    Integer currentDetailLine=0;

    public String cartpersist(Integer cpoId,String cposts,Integer currentCount, BigDecimal quantity) {
       return "persisted";
    }








    public EntityManager getEntityManager()
    {
        //return emf.createEntityManager();
        return entityManager;
    }


    public String createValueExpression(String st){
     return st;
    }
    
    public void setId(Integer id){
      this.id=id;
    }
    public Integer getId(){
     //if(id==null){
      //id=0;// avoid null exception in edit viewparam, null is needed if new entity
     //}
     return id;
    }
    public Yxxxuh566xwwqqwxxxxxuser getInstance(){
        if (instance == null) {
            if (id == null) {
                return createInstance();
            }
            else {
                instance=entityManager.find(Yxxxuh566xwwqqwxxxxxuser.class,id);
                return instance;
            }
        }
        else {
            return instance;
        }
   }

   /**
    * Set/change the entity being managed.
    */
   public void setInstance(Yxxxuh566xwwqqwxxxxxuser instance)
   {
      ///setDirty(this.instance, instance);
      this.instance = instance;
   }
   /**
    * Clear the managed entity (and id), allowing the {@link EntityHome} to be
    * reused.
    */
   public void clearInstance()
   {
      setInstance(null);
      setId(null);
   }
   /**
    * Load the instance if the id is defined otherwise create a new instance
    * <br />
    * Utility method called by {@link #getInstance()} to load the instance from 
    * the Persistence Context if the id is defined. Otherwise a new instance is 
    * created.
    * 
    * @see "#find()"
    * @see "#createInstance() at top of this source"
    */
   protected void initInstance()
   {
      if ( isIdDefined() )
      {
         if ( !isTransactionMarkedRollback() )
         {
            //we cache the instance so that it does not "disappear"
            //after remove() is called on the instance
            //is this really a Good Idea??
            //setInstance( find() );
            setInstance(null);
         }
      }
      else
      {
         setInstance( createInstance() );
      }
   }
   public boolean isTransactionMarkedRollback(){
    return false;
   }
   /**
    * Flush any changes made to the managed entity instance to the underlying
    * database. 
    * <br />
    * If the update is successful, a log message is printed, a 
    * {@link javax.faces.application.FacesMessage} is added and a transaction 
    * success event raised.
    * 
    * @see "Home#updatedMessage()"
    * @see "Home#raiseAfterTransactionSuccessEvent()"
    * 
    * @return "updated" if the update is successful
    */
   @Transactional
   public String superdotupdate()
   {
      ///joinTransaction();
      ///getEntityManager().flush();
      ///updatedMessage();
      ///raiseAfterTransactionSuccessEvent();
           // if SH or EH then log changes (except editlog changes) to Xxxxch82bxhhhhhxxxxxeditlog  
           if(customIdentity.hasRole("SH") ||customIdentity.hasRole("EH")){
            xxxxch82bxhhhhhxxxxxeditlogHome.clearInstance();
            xxxxch82bxhhhhhxxxxxeditlog=xxxxch82bxhhhhhxxxxxeditlogHome.getInstance();
            xxxxch82bxhhhhhxxxxxeditlog.setA0xxukxxbvxxxxxxxxxxdatabasenm("User");
            xxxxch82bxhhhhhxxxxxeditlog.setZ1xxzxxrbvxxxxxxxxxxrecordno(this.instance.getA0xxuobxbxxxxxxxxxxxsid());
            xxxxch82bxhhhhhxxxxxeditlog.setZexxcxxrlxxxxxxxxxxxnewdate(Calendar.getInstance().getTime());
            xxxxch82bxhhhhhxxxxxeditlogHome.superdotupdate();
            FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
             FacesMessage.SEVERITY_WARN,bundle.getString("User")+" "+bundle.getString("updated")+" "+bundle.getString("and")+", "+bundle.getString("logged")+" "+bundle.getString("in")+" "+bundle.getString("editlog"),""));
            FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
             FacesMessage.SEVERITY_WARN,bundle.getString("Remember")+", "+bundle.getString("journal")+" "+bundle.getString("entries")+" "+bundle.getString("created")+", "+bundle.getString("need")+" "+bundle.getString("to")+" "+bundle.getString("be")+" "+bundle.getString("deleted"),""));
           }
      this.instance=entityManager.merge(this.instance);
      ///id=this.instance.getA0xxuobxbxxxxxxxxxxxsid();
      /// why ? jpa merge should be ok entityManager.persist(this.instance);
      return "updated";
   }

   /**
    * Persist unmanaged entity instance to the underlying database. 
    * If the persist is successful, a log message is printed, a 
    * {@link javax.faces.application.FacesMessage } is added and a transaction 
    * success event raised.
    * 
    * @see "Home#createdMessage()"
    * @see "Home#raiseAfterTransactionSuccessEvent()"
    * 
    * @return "persisted" if the persist is successful
    */
   @Transactional
   public String superdotpersist()
   {
      ///getEntityManager().persist( getInstance() );
      ///getEntityManager().flush();
      ///assignId( PersistenceProvider.instance().getId( getInstance(), getEntityManager() ) );
      ///createdMessage();
      ///raiseAfterTransactionSuccessEvent();
      //added sanitize if clob data
      //duplicatexxxExists should be called, as needed, before calling this method to avoid duplicate keys     
      entityManager.persist(this.instance);
      id=this.instance.getA0xxuobxbxxxxxxxxxxxsid();
      return "persisted";
   }
   
   /**
    * Remove managed entity instance from the Persistence Context and the 
    * underlying database.
    * If the remove is successful, a log message is printed, a 
    * {@link javax.faces.application.FacesMessage} is added and a transaction 
    * success event raised.
    * 
    * @see "Home#deletedMessage()"
    * @see "Home#raiseAfterTransactionSuccessEvent()"
    * 
    * @return "removed" if the remove is successful
    */
   @Transactional
   public String superdotremove()
   {
      ///getEntityManager().remove( getInstance() );
      ///getEntityManager().flush();
      ///deletedMessage();
      ///raiseAfterTransactionSuccessEvent();
     try{
      this.instance=entityManager.merge(this.instance);
      id=this.instance.getA0xxuobxbxxxxxxxxxxxsid();
      entityManager.remove(this.instance);
      // to catch runtime integrity violation exception, flush does immediate remove
      entityManager.flush();
      id=null;
     } catch ( Exception e){
          FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(
                                     FacesMessage.SEVERITY_INFO,bundle.getString("delete")+" "+ bundle.getString("error")+" "+e.getMessage(),""));
           bcontinue=false;
           return null;
     }

      return "removed";
   }
   /**
    * Returns true if the entity instance is managed
    */
   @Transactional
   public boolean isManaged()
   {
     /// return getInstance()!=null && 
     ///       getEntityManager().contains( getInstance() );
     return id != null;
   }

   /**
    * Invokes this action method via f:viewaction entry on a page, replaces seam pages.xml action 
    * called by web pages like login.xhtml, checkout, unsc etc, which in turns are invoked via activation link entries
    * in emails .
    * there is a takeAction method in r3cart bean(shopping cart ) to take care of checkout.xhtml viewAction
    * viewId is checked to pick the submethod and request parameters are  used to call appropriate action method. 
    * no method parameter but url parameters are used 
    * no exception caught here .
    * 
    * @return "null" 
    */
   public String takeAction(){
    // all pages invoke this method and there can be error pages when rq can be null
    if(req==null){
     return null;
    }

    String viewId = facesContext.getViewRoot().getViewId();
    if (viewId.contains("login.") || viewId.contains("home.")){
     if (req.getParameter("act") != null ){
      yxxxuh566xwwqqwxxxxxuserHome.doActivate(req.getParameter("act"));
     }
     if (!viewId.contains("socialLogin.") && req.getParameter("social") != null ){
      String userKey=req.getParameter("userKey");
      //yxxxuh566xwwqqwxxxxxuserHome.onSocialAuthenticated(userKey);
      //make it optional via commandbutton in socialLogin invoking onSocialAuthenticated
      //button is rendered if userKey not Empty
     }
    }
    if (viewId.contains("imail.")){
     if (req.getParameter("imail") != null ){
      yxxxuh566xwwqqwxxxxxuserHome.doImail(req.getParameter("imail"));
     }
    }
    //doUnsc will check type, fetch record and update
    if (viewId.contains("unsc.")){
     if (req.getParameter("unsc") != null ){
      yxxxuh566xwwqqwxxxxxuserHome.doUnsc(req.getParameter("keyCode"),Integer.parseInt(req.getParameter("unsc")),Integer.parseInt(req.getParameter("type")));
     }
    }

/*
    if (viewId.contains("shoauthverify.")){
     if (req.getParameter("hmac") != null ){
      r3RestClient.shoauthverify(req.getParameter("code"),req.getParameter("hmac"),req.getParameter("shop"),req.getParameter("state"),req.getParameter("timestamp"));
     }
    }
    if (viewId.contains("shwebhook.")){
     if (req.getParameter("hmac") != null ){
      r3RestClient.shoauthverify(req.getParameter("code"),req.getParameter("hmac"),req.getParameter("shop"),req.getParameter("state"),req.getParameter("timestamp"));
     }
*/
     return null;
    }



   
    /**
    * The following method puts restrictions on bean access on top of menu render protection or url entered outside menue
    * @param none
    * @return none or error page
    * @exception none
    * @see 
    *  added logic to allow public schedule as calendar
    */ 
   public String restrict(){

    if (!identity.isLoggedIn()) {
     return "error.xhtml?faces-redirect=true";
    }
    String r2=customIdentity.getRestrict2();//forces to refresh hibernate query cache, usefl for debug
    String a1=customIdentity.getAllow1();
    String viewId = facesContext.getViewRoot().getViewId();
    // jay add logic to make sure these are not null and saved as lower case in useredit
    if (!customIdentity.getRestrict2().isEmpty() && customIdentity.getRestrict2().equals("all")){
     if ((!customIdentity.getAllow1().isEmpty() && viewId.contains(customIdentity.getAllow1())) 
          || (!customIdentity.getAllow2().isEmpty() && viewId.contains(customIdentity.getAllow2())) || 
          (!customIdentity.getAllow3().isEmpty() && viewId.contains(customIdentity.getAllow3())) ){
          return null;
         }else{
          return "error.xhtml?faces-redirect=true";
         }
    }
    if ((!customIdentity.getRestrict2().isEmpty() && viewId.contains(customIdentity.getRestrict2()))
          || (!customIdentity.getRestrict3().isEmpty() && viewId.contains(customIdentity.getRestrict3())) ){
          return "error.xhtml?faces-redirect=true";
    }
    // admin
    if ((viewId.contains("userList") || viewId.contains("userEdit")) && customIdentity.hasRole("IH")){
     return null;
    } 
    if (viewId.contains("SqlAdmin")){
     if (customIdentity.hasRole("UH")){
      if ( (viewId.contains("SqlAdmin.") && customIdentity.isMasterSite()) || viewId.contains("SqlAdmin-") ){
      /* if ((viewId.contains("SqlAdmin.") && ((req.getServerName().contains("raaspi.com") && !req.getServerName().contains(".raaspi.com") && !req.getServerName().contains(".lraaspi.com"))
                  || req.getServerName().contains(masterSiteCode)
                  ||  (req.getServerName().contains("www.raaspi.com") ||  req.getServerName().contains("raaspi.lraaspi.com")))) || viewId.contains("SqlAdmin-")){
      */   
    return null;
      }else{
       return "error.xhtml?faces-redirect=true";
      }
     }else{
      return "error.xhtml?faces-redirect=true";
     }
    }
    //quikfix later change clobdataentity name to use f instead of u
    if (viewId.contains("clobdataEdit") || viewId.contains("homeThemePreview")){
     if ((req.getServerName().startsWith("myflow") || req.getServerName().contains(masterSiteCode)) && (customIdentity.hasRole("PH") 
         || customIdentity.hasRole("UH") || customIdentity.hasRole("UQ"))) {
         return null;
     }else{
      if ((customIdentity.getProduct().equals("f") && customIdentity.getSubProduct().equals("s")) && (customIdentity.hasRole("PH") 
        || customIdentity.hasRole("VH") || customIdentity.hasRole("UH") || customIdentity.hasRole("UQ"))) {
         return null;
      }else{
        if ( customIdentity.hasRole("UH") || customIdentity.hasRole("UQ") ) {
         return null;
        }
      }
     }
     return "error.xhtml?faces-redirect=true";
    }
    // check for xxxedit. to avoid checking for editEasy
    // allow PH to delete/edit but own records, existing logic checks for own records unless UH
    if (viewId.contains("blobdataEdit.") ){
      if ((customIdentity.getProduct().equals("f") && customIdentity.getSubProduct().equals("s")) && (customIdentity.hasRole("PH") 
         || customIdentity.hasRole("VH") || customIdentity.hasRole("UH") || customIdentity.hasRole("UQ"))) {
         return null;
      }else{
        if ( customIdentity.hasRole("UH") || customIdentity.hasRole("UQ") || customIdentity.hasRole("PH")) {
         return null;
        }
      }
     return "error.xhtml?faces-redirect=true";
    }


    if (viewId.contains("blobdataEditEasy") ){
     //test for raaspi site, EditEasy does not allow edit/delete only in above edit 
     // check if master site, a subdomain serverName can also include master site name 
     if( customIdentity.isMasterSite() 
           && (customIdentity.hasRole("PH") || customIdentity.hasRole("UH") || customIdentity.hasRole("UQ")) ) {
         return null;
     }
     return "error.xhtml?faces-redirect=true";
    }
    // this overides menue Role/level only if url is directly typed in, since menue will not show if role/level wrong

    if ((!customIdentity.getAllow1().isEmpty() && viewId.contains(customIdentity.getAllow1())) 
          || (!customIdentity.getAllow2().isEmpty() && viewId.contains(customIdentity.getAllow2())) || 
          (!customIdentity.getAllow3().isEmpty() && viewId.contains(customIdentity.getAllow3())) ){
          return null;
    }
    // this overides menue Role/level only if url is directly typed in, since menue will not show if role/level wrong

    if ((!customIdentity.getAllow1().isEmpty() && viewId.contains(customIdentity.getAllow1())) 
          || (!customIdentity.getAllow2().isEmpty() && viewId.contains(customIdentity.getAllow2())) || 
          (!customIdentity.getAllow3().isEmpty() && viewId.contains(customIdentity.getAllow3())) ){
          return null;
    }

    //this checks menue rules to render or not
                             if(!((customIdentity.hasRole("UH") ) )){
                              return "error.xhtml?faces-redirect=true";
                             }else{
                              return null;
                             }
   }

/*
 childpojo for onetoManyCollection ie Forign Table's Entity: com.rcomputer.genapp.model.Yxxxch575xwwqqhxxxxxuserprofl
*/

    public List<Yxxxch575xwwqqhxxxxxuserprofl> getYxxxch575xwwqqhxxxxxuserprofls() {
        return getInstance() == null ? 
            null : new ArrayList<Yxxxch575xwwqqhxxxxxuserprofl>( getInstance().getYxxxch575xwwqqhxxxxxuserprofls() );
    }

}




